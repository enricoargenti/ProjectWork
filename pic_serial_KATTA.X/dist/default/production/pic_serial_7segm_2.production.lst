

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Jun 06 16:51:46 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35     0000                     
    36                           ; Version 2.40
    37                           ; Generated 17/11/2021 GMT
    38                           ; 
    39                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F877A Definitions
    69                           ; 
    70                           ; SFR Addresses
    71     0000                     	;# 
    72     0001                     	;# 
    73     0002                     	;# 
    74     0003                     	;# 
    75     0004                     	;# 
    76     0005                     	;# 
    77     0006                     	;# 
    78     0007                     	;# 
    79     0008                     	;# 
    80     0009                     	;# 
    81     000A                     	;# 
    82     000B                     	;# 
    83     000C                     	;# 
    84     000D                     	;# 
    85     000E                     	;# 
    86     000E                     	;# 
    87     000F                     	;# 
    88     0010                     	;# 
    89     0011                     	;# 
    90     0012                     	;# 
    91     0013                     	;# 
    92     0014                     	;# 
    93     0015                     	;# 
    94     0015                     	;# 
    95     0016                     	;# 
    96     0017                     	;# 
    97     0018                     	;# 
    98     0019                     	;# 
    99     001A                     	;# 
   100     001B                     	;# 
   101     001B                     	;# 
   102     001C                     	;# 
   103     001D                     	;# 
   104     001E                     	;# 
   105     001F                     	;# 
   106     0081                     	;# 
   107     0085                     	;# 
   108     0086                     	;# 
   109     0087                     	;# 
   110     0088                     	;# 
   111     0089                     	;# 
   112     008C                     	;# 
   113     008D                     	;# 
   114     008E                     	;# 
   115     0091                     	;# 
   116     0092                     	;# 
   117     0093                     	;# 
   118     0094                     	;# 
   119     0098                     	;# 
   120     0099                     	;# 
   121     009C                     	;# 
   122     009D                     	;# 
   123     009E                     	;# 
   124     009F                     	;# 
   125     010C                     	;# 
   126     010D                     	;# 
   127     010E                     	;# 
   128     010F                     	;# 
   129     018C                     	;# 
   130     018D                     	;# 
   131     0000                     	;# 
   132     0001                     	;# 
   133     0002                     	;# 
   134     0003                     	;# 
   135     0004                     	;# 
   136     0005                     	;# 
   137     0006                     	;# 
   138     0007                     	;# 
   139     0008                     	;# 
   140     0009                     	;# 
   141     000A                     	;# 
   142     000B                     	;# 
   143     000C                     	;# 
   144     000D                     	;# 
   145     000E                     	;# 
   146     000E                     	;# 
   147     000F                     	;# 
   148     0010                     	;# 
   149     0011                     	;# 
   150     0012                     	;# 
   151     0013                     	;# 
   152     0014                     	;# 
   153     0015                     	;# 
   154     0015                     	;# 
   155     0016                     	;# 
   156     0017                     	;# 
   157     0018                     	;# 
   158     0019                     	;# 
   159     001A                     	;# 
   160     001B                     	;# 
   161     001B                     	;# 
   162     001C                     	;# 
   163     001D                     	;# 
   164     001E                     	;# 
   165     001F                     	;# 
   166     0081                     	;# 
   167     0085                     	;# 
   168     0086                     	;# 
   169     0087                     	;# 
   170     0088                     	;# 
   171     0089                     	;# 
   172     008C                     	;# 
   173     008D                     	;# 
   174     008E                     	;# 
   175     0091                     	;# 
   176     0092                     	;# 
   177     0093                     	;# 
   178     0094                     	;# 
   179     0098                     	;# 
   180     0099                     	;# 
   181     009C                     	;# 
   182     009D                     	;# 
   183     009E                     	;# 
   184     009F                     	;# 
   185     010C                     	;# 
   186     010D                     	;# 
   187     010E                     	;# 
   188     010F                     	;# 
   189     018C                     	;# 
   190     018D                     	;# 
   191                           
   192                           	psect	idataBANK0
   193     00A9                     __pidataBANK0:
   194                           
   195                           ;initializer for _randx
   196     00A9  3401               	retlw	1
   197     00AA  3400               	retlw	0
   198     00AB  3400               	retlw	0
   199     00AC  3400               	retlw	0
   200                           
   201                           ;initializer for _countdown
   202     00AD  343C               	retlw	60
   203                           
   204                           	psect	strings
   205     0003                     __pstrings:
   206     0003                     stringtab:
   207     0003                     __stringtab:
   208                           
   209                           ;	String table - string pointers are 1 byte each
   210     0003  1BFF               	btfsc	btemp+1,7
   211     0004  280D               	ljmp	stringcode
   212     0005  1383               	bcf	3,7
   213     0006  187F               	btfsc	btemp+1,0
   214     0007  1783               	bsf	3,7
   215     0008  0800               	movf	0,w
   216     0009  0A84               	incf	4,f
   217     000A  1903               	skipnz
   218     000B  0AFF               	incf	btemp+1,f
   219     000C  0008               	return
   220     000D                     stringcode:
   221     000D                     stringdir:
   222     000D  3000               	movlw	high stringdir
   223     000E  008A               	movwf	10
   224     000F  0804               	movf	4,w
   225     0010  0A84               	incf	4,f
   226     0011  0782               	addwf	2,f
   227     0012                     __stringbase:
   228     0012  3400               	retlw	0
   229     0013                     __end_of__stringtab:
   230     0013                     _keys:
   231     0013  3423               	retlw	35
   232     0014  3437               	retlw	55
   233     0015  3434               	retlw	52
   234     0016  3431               	retlw	49
   235     0017  342A               	retlw	42
   236     0018  3438               	retlw	56
   237     0019  3435               	retlw	53
   238     001A  3432               	retlw	50
   239     001B  3430               	retlw	48
   240     001C  3439               	retlw	57
   241     001D  3436               	retlw	54
   242     001E  3433               	retlw	51
   243     001F                     __end_of_keys:
   244     001F                     _rowMask:
   245     001F  3401               	retlw	1
   246     0020  3402               	retlw	2
   247     0021  3404               	retlw	4
   248     0022  3408               	retlw	8
   249     0023                     __end_of_rowMask:
   250     0023                     _colMask:
   251     0023  34FE               	retlw	254
   252     0024  34FD               	retlw	253
   253     0025  34FB               	retlw	251
   254     0026                     __end_of_colMask:
   255     0006                     _PORTB	set	6
   256     0001                     _TMR0	set	1
   257     0008                     _PORTD	set	8
   258     0009                     _PORTEbits	set	9
   259     001A                     _RCREG	set	26
   260     0019                     _TXREG	set	25
   261     005D                     _TMR0IE	set	93
   262     005A                     _TMR0IF	set	90
   263     0065                     _RCIF	set	101
   264     0064                     _TXIF	set	100
   265     0039                     _RC1	set	57
   266     0038                     _RC0	set	56
   267     00C4                     _CREN	set	196
   268     00C7                     _SPEN	set	199
   269     0089                     _TRISEbits	set	137
   270     0099                     _SPBRG	set	153
   271     0089                     _TRISE	set	137
   272     0088                     _TRISD	set	136
   273     0087                     _TRISC	set	135
   274     0086                     _TRISB	set	134
   275     0085                     _TRISA	set	133
   276     0408                     _PS0	set	1032
   277     0409                     _PS1	set	1033
   278     040A                     _PS2	set	1034
   279     040B                     _PSA	set	1035
   280     040D                     _T0CS	set	1037
   281     04C5                     _TXEN	set	1221
   282     04C4                     _SYNC	set	1220
   283     04C2                     _BRGH	set	1218
   284     043F                     _TRISC7	set	1087
   285     043E                     _TRISC6	set	1086
   286     0026                     STR_8:
   287     0026  3443               	retlw	67	;'C'
   288     0027  346F               	retlw	111	;'o'
   289     0028  3464               	retlw	100	;'d'
   290     0029  3469               	retlw	105	;'i'
   291     002A  3463               	retlw	99	;'c'
   292     002B  3465               	retlw	101	;'e'
   293     002C  3420               	retlw	32	;' '
   294     002D  3453               	retlw	83	;'S'
   295     002E  3463               	retlw	99	;'c'
   296     002F  3461               	retlw	97	;'a'
   297     0030  3464               	retlw	100	;'d'
   298     0031  3475               	retlw	117	;'u'
   299     0032  3474               	retlw	116	;'t'
   300     0033  346F               	retlw	111	;'o'
   301     0034  3400               	retlw	0
   302     0035                     STR_6:
   303     0035  3441               	retlw	65	;'A'
   304     0036  3474               	retlw	116	;'t'
   305     0037  3474               	retlw	116	;'t'
   306     0038  3465               	retlw	101	;'e'
   307     0039  346E               	retlw	110	;'n'
   308     003A  3464               	retlw	100	;'d'
   309     003B  3465               	retlw	101	;'e'
   310     003C  3472               	retlw	114	;'r'
   311     003D  3465               	retlw	101	;'e'
   312     003E  342E               	retlw	46	;'.'
   313     003F  342E               	retlw	46	;'.'
   314     0040  342E               	retlw	46	;'.'
   315     0041  342E               	retlw	46	;'.'
   316     0042  3400               	retlw	0
   317     0043                     STR_5:
   318     0043  3441               	retlw	65	;'A'
   319     0044  3474               	retlw	116	;'t'
   320     0045  3474               	retlw	116	;'t'
   321     0046  3465               	retlw	101	;'e'
   322     0047  346E               	retlw	110	;'n'
   323     0048  3464               	retlw	100	;'d'
   324     0049  3465               	retlw	101	;'e'
   325     004A  3472               	retlw	114	;'r'
   326     004B  3465               	retlw	101	;'e'
   327     004C  342E               	retlw	46	;'.'
   328     004D  342E               	retlw	46	;'.'
   329     004E  342E               	retlw	46	;'.'
   330     004F  3400               	retlw	0
   331     0050                     STR_4:
   332     0050  3441               	retlw	65	;'A'
   333     0051  3474               	retlw	116	;'t'
   334     0052  3474               	retlw	116	;'t'
   335     0053  3465               	retlw	101	;'e'
   336     0054  346E               	retlw	110	;'n'
   337     0055  3464               	retlw	100	;'d'
   338     0056  3465               	retlw	101	;'e'
   339     0057  3472               	retlw	114	;'r'
   340     0058  3465               	retlw	101	;'e'
   341     0059  342E               	retlw	46	;'.'
   342     005A  342E               	retlw	46	;'.'
   343     005B  3400               	retlw	0
   344     005C                     STR_3:
   345     005C  3441               	retlw	65	;'A'
   346     005D  3474               	retlw	116	;'t'
   347     005E  3474               	retlw	116	;'t'
   348     005F  3465               	retlw	101	;'e'
   349     0060  346E               	retlw	110	;'n'
   350     0061  3464               	retlw	100	;'d'
   351     0062  3465               	retlw	101	;'e'
   352     0063  3472               	retlw	114	;'r'
   353     0064  3465               	retlw	101	;'e'
   354     0065  342E               	retlw	46	;'.'
   355     0066  3400               	retlw	0
   356     0067                     STR_2:
   357     0067  3441               	retlw	65	;'A'
   358     0068  3474               	retlw	116	;'t'
   359     0069  3474               	retlw	116	;'t'
   360     006A  3465               	retlw	101	;'e'
   361     006B  346E               	retlw	110	;'n'
   362     006C  3464               	retlw	100	;'d'
   363     006D  3465               	retlw	101	;'e'
   364     006E  3472               	retlw	114	;'r'
   365     006F  3465               	retlw	101	;'e'
   366     0070  3400               	retlw	0
   367     0071                     STR_7:
   368     0071  3452               	retlw	82	;'R'
   369     0072  3469               	retlw	105	;'i'
   370     0073  3463               	retlw	99	;'c'
   371     0074  3465               	retlw	101	;'e'
   372     0075  3476               	retlw	118	;'v'
   373     0076  3475               	retlw	117	;'u'
   374     0077  3474               	retlw	116	;'t'
   375     0078  346F               	retlw	111	;'o'
   376     0079  3400               	retlw	0
   377     007A                     STR_1:
   378     007A  3450               	retlw	80	;'P'
   379     007B  3472               	retlw	114	;'r'
   380     007C  3465               	retlw	101	;'e'
   381     007D  346D               	retlw	109	;'m'
   382     007E  3469               	retlw	105	;'i'
   383     007F  3420               	retlw	32	;' '
   384     0080  342A               	retlw	42	;'*'
   385     0081  3400               	retlw	0
   386                           
   387                           	psect	cinit
   388     07CA                     start_initialization:	
   389                           ; #config settings
   390                           
   391     07CA                     __initialization:
   392                           
   393                           ; Initialize objects allocated to BANK0
   394     07CA  120A  118A  20A9  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   395     07CF  00DB               	movwf	__pdataBANK0& (0+127)
   396     07D0  120A  118A  20AA  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   397     07D5  00DC               	movwf	(__pdataBANK0+1)& (0+127)
   398     07D6  120A  118A  20AB  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   399     07DB  00DD               	movwf	(__pdataBANK0+2)& (0+127)
   400     07DC  120A  118A  20AC  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   401     07E1  00DE               	movwf	(__pdataBANK0+3)& (0+127)
   402     07E2  120A  118A  20AD  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   403     07E7  00DF               	movwf	(__pdataBANK0+4)& (0+127)
   404                           
   405                           ; Clear objects allocated to BANK1
   406     07E8  1383               	bcf	3,7	;select IRP bank0
   407     07E9  30A0               	movlw	low __pbssBANK1
   408     07EA  0084               	movwf	4
   409     07EB  30B0               	movlw	low (__pbssBANK1+16)
   410     07EC  120A  118A  20AE  120A  118A  	fcall	clear_ram0
   411                           
   412                           ; Clear objects allocated to BANK0
   413     07F1  3020               	movlw	low __pbssBANK0
   414     07F2  0084               	movwf	4
   415     07F3  3040               	movlw	low (__pbssBANK0+32)
   416     07F4  120A  118A  20AE  120A  118A  	fcall	clear_ram0
   417                           
   418                           ; Clear objects allocated to BITBANK0
   419     07F9  01E0               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   420                           
   421                           ; Clear objects allocated to COMMON
   422     07FA  01FC               	clrf	__pbssCOMMON& (0+127)
   423     07FB  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   424     07FC                     end_of_initialization:	
   425                           ;End of C runtime variable initialization code
   426                           
   427     07FC                     __end_of__initialization:
   428     07FC  0183               	clrf	3
   429     07FD  120A  118A  2C68   	ljmp	_main	;jump to C main() function
   430                           
   431                           	psect	bssCOMMON
   432     007C                     __pbssCOMMON:
   433     007C                     _num2:
   434     007C                     	ds	1
   435     007D                     _num1:
   436     007D                     	ds	1
   437                           
   438                           	psect	bitbssBANK0
   439     0300                     __pbitbssBANK0:
   440     0300                     _old_btn:
   441     0300                     	ds	1
   442                           
   443                           	psect	bssBANK0
   444     0020                     __pbssBANK0:
   445     0020                     _data:
   446     0020                     	ds	6
   447     0026                     _codice:
   448     0026                     	ds	6
   449     002C                     _index:
   450     002C                     	ds	2
   451     002E                     _flag:
   452     002E                     	ds	2
   453     0030                     _stringPosition:
   454     0030                     	ds	2
   455     0032                     _received:
   456     0032                     	ds	1
   457     0033                     _restart:
   458     0033                     	ds	1
   459     0034                     _old_stato:
   460     0034                     	ds	1
   461     0035                     _stato:
   462     0035                     	ds	1
   463     0036                     _rowScan:
   464     0036                     	ds	1
   465     0037                     _colScan:
   466     0037                     	ds	1
   467     0038                     _keyok:
   468     0038                     	ds	1
   469     0039                     _keypressed:
   470     0039                     	ds	1
   471     003A                     _num5:
   472     003A                     	ds	1
   473     003B                     _num4:
   474     003B                     	ds	1
   475     003C                     _num3:
   476     003C                     	ds	1
   477     003D                     _print_countdown:
   478     003D                     	ds	3
   479                           
   480                           	psect	dataBANK0
   481     005B                     __pdataBANK0:
   482     005B                     _randx:
   483     005B                     	ds	4
   484     005F                     _countdown:
   485     005F                     	ds	1
   486                           
   487                           	psect	bssBANK1
   488     00A0                     __pbssBANK1:
   489     00A0                     _stringa:
   490     00A0                     	ds	16
   491                           
   492                           	psect	clrtext
   493     00AE                     clear_ram0:	
   494                           ;	Called with FSR containing the base address, and
   495                           ;	W with the last address+1
   496                           
   497     00AE  0064               	clrwdt	;clear the watchdog before getting into this loop
   498     00AF                     clrloop0:
   499     00AF  0180               	clrf	0	;clear RAM location pointed to by FSR
   500     00B0  0A84               	incf	4,f	;increment pointer
   501     00B1  0604               	xorwf	4,w	;XOR with final address
   502     00B2  1903               	btfsc	3,2	;have we reached the end yet?
   503     00B3  3400               	retlw	0	;all done for this memory range, return
   504     00B4  0604               	xorwf	4,w	;XOR again to restore value
   505     00B5  28AF               	goto	clrloop0	;do the next byte
   506                           
   507                           	psect	cstackCOMMON
   508     0070                     __pcstackCOMMON:
   509     0070                     ?_UART_Init:
   510     0070                     ??_UART_Init:	
   511                           ; 1 bytes @ 0x0
   512                           
   513     0070                     ?_initLCD:	
   514                           ; 1 bytes @ 0x0
   515                           
   516     0070                     ?_Timer0_Init:	
   517                           ; 1 bytes @ 0x0
   518                           
   519     0070                     ??_Timer0_Init:	
   520                           ; 1 bytes @ 0x0
   521                           
   522     0070                     ?_lcdSend:	
   523                           ; 1 bytes @ 0x0
   524                           
   525     0070                     ?_RS485_TxEnable:	
   526                           ; 1 bytes @ 0x0
   527                           
   528     0070                     ??_RS485_TxEnable:	
   529                           ; 1 bytes @ 0x0
   530                           
   531     0070                     ?_UART_Write:	
   532                           ; 1 bytes @ 0x0
   533                           
   534     0070                     ??_UART_Write:	
   535                           ; 1 bytes @ 0x0
   536                           
   537     0070                     ?_GenerateRandomNumber:	
   538                           ; 1 bytes @ 0x0
   539                           
   540     0070                     ??_GenerateRandomNumber:	
   541                           ; 1 bytes @ 0x0
   542                           
   543     0070                     ?_KeyPadReader:	
   544                           ; 1 bytes @ 0x0
   545                           
   546     0070                     ??_KeyPadReader:	
   547                           ; 1 bytes @ 0x0
   548                           
   549     0070                     ?_RS485_RxEnable:	
   550                           ; 1 bytes @ 0x0
   551                           
   552     0070                     ??_RS485_RxEnable:	
   553                           ; 1 bytes @ 0x0
   554                           
   555     0070                     ?_UART_Read:	
   556                           ; 1 bytes @ 0x0
   557                           
   558     0070                     ?_main:	
   559                           ; 1 bytes @ 0x0
   560                           
   561     0070                     ?___wmul:	
   562                           ; 1 bytes @ 0x0
   563                           
   564     0070                     ?___awmod:	
   565                           ; 2 bytes @ 0x0
   566                           
   567     0070                     UART_Write@data:	
   568                           ; 2 bytes @ 0x0
   569                           
   570     0070                     lcdSend@tipo:	
   571                           ; 1 bytes @ 0x0
   572                           
   573     0070                     GenerateRandomNumber@randomNum:	
   574                           ; 1 bytes @ 0x0
   575                           
   576     0070                     ___wmul@multiplier:	
   577                           ; 1 bytes @ 0x0
   578                           
   579     0070                     ___awmod@divisor:	
   580                           ; 2 bytes @ 0x0
   581                           
   582                           
   583                           ; 2 bytes @ 0x0
   584     0070                     	ds	1
   585     0071                     ??_lcdSend:
   586                           
   587                           ; 1 bytes @ 0x1
   588     0071                     	ds	1
   589     0072                     ___wmul@multiplicand:
   590     0072                     ___awmod@dividend:	
   591                           ; 2 bytes @ 0x2
   592                           
   593                           
   594                           ; 2 bytes @ 0x2
   595     0072                     	ds	1
   596     0073                     lcdSend@dato:
   597                           
   598                           ; 1 bytes @ 0x3
   599     0073                     	ds	1
   600     0074                     ??_initLCD:
   601     0074                     ?_lcdPrint:	
   602                           ; 1 bytes @ 0x4
   603                           
   604     0074                     ??___wmul:	
   605                           ; 1 bytes @ 0x4
   606                           
   607     0074                     ??___awmod:	
   608                           ; 1 bytes @ 0x4
   609                           
   610     0074                     lcdPrint@str:	
   611                           ; 1 bytes @ 0x4
   612                           
   613     0074                     ___wmul@product:	
   614                           ; 2 bytes @ 0x4
   615                           
   616                           
   617                           ; 2 bytes @ 0x4
   618     0074                     	ds	1
   619     0075                     ___awmod@counter:
   620                           
   621                           ; 1 bytes @ 0x5
   622     0075                     	ds	1
   623     0076                     ??_lcdPrint:
   624     0076                     ?_potenza:	
   625                           ; 1 bytes @ 0x6
   626                           
   627     0076                     potenza@e:	
   628                           ; 2 bytes @ 0x6
   629                           
   630     0076                     ___awmod@sign:	
   631                           ; 1 bytes @ 0x6
   632                           
   633                           
   634                           ; 1 bytes @ 0x6
   635     0076                     	ds	2
   636     0078                     ??_potenza:
   637                           
   638                           ; 1 bytes @ 0x8
   639     0078                     	ds	1
   640     0079                     lcdPrint@n:
   641                           
   642                           ; 2 bytes @ 0x9
   643     0079                     	ds	1
   644     007A                     ??___awdiv:
   645                           
   646                           ; 1 bytes @ 0xA
   647     007A                     	ds	1
   648     007B                     ??_intToString:
   649                           
   650                           ; 1 bytes @ 0xB
   651     007B                     	ds	1
   652                           
   653                           	psect	cstackBANK0
   654     0040                     __pcstackBANK0:
   655     0040                     potenza@b:
   656                           
   657                           ; 1 bytes @ 0x0
   658     0040                     	ds	1
   659     0041                     potenza@i:
   660                           
   661                           ; 2 bytes @ 0x1
   662     0041                     	ds	2
   663     0043                     potenza@n:
   664                           
   665                           ; 2 bytes @ 0x3
   666     0043                     	ds	2
   667     0045                     ?___awdiv:
   668     0045                     ___awdiv@divisor:	
   669                           ; 2 bytes @ 0x5
   670                           
   671                           
   672                           ; 2 bytes @ 0x5
   673     0045                     	ds	2
   674     0047                     ___awdiv@dividend:
   675                           
   676                           ; 2 bytes @ 0x7
   677     0047                     	ds	2
   678     0049                     ___awdiv@counter:
   679                           
   680                           ; 1 bytes @ 0x9
   681     0049                     	ds	1
   682     004A                     ___awdiv@sign:
   683                           
   684                           ; 1 bytes @ 0xA
   685     004A                     	ds	1
   686     004B                     ___awdiv@quotient:
   687                           
   688                           ; 2 bytes @ 0xB
   689     004B                     	ds	2
   690     004D                     ?_intToString:
   691     004D                     intToString@n:	
   692                           ; 1 bytes @ 0xD
   693                           
   694                           
   695                           ; 2 bytes @ 0xD
   696     004D                     	ds	2
   697     004F                     intToString@str:
   698                           
   699                           ; 1 bytes @ 0xF
   700     004F                     	ds	1
   701     0050                     intToString@t:
   702                           
   703                           ; 2 bytes @ 0x10
   704     0050                     	ds	2
   705     0052                     intToString@cifre:
   706                           
   707                           ; 1 bytes @ 0x12
   708     0052                     	ds	1
   709     0053                     intToString@i:
   710                           
   711                           ; 2 bytes @ 0x13
   712     0053                     	ds	2
   713     0055                     ??_UART_Read:
   714                           
   715                           ; 1 bytes @ 0x15
   716     0055                     	ds	3
   717     0058                     ??_main:
   718                           
   719                           ; 1 bytes @ 0x18
   720     0058                     	ds	3
   721                           
   722                           	psect	maintext
   723     0468                     __pmaintext:	
   724 ;;
   725 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   726 ;;
   727 ;; *************** function _main *****************
   728 ;; Defined at:
   729 ;;		line 100 in file "main.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;		None
   732 ;; Auto vars:     Size  Location     Type
   733 ;;		None
   734 ;; Return value:  Size  Location     Type
   735 ;;                  1    wreg      void 
   736 ;; Registers used:
   737 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   738 ;; Tracked objects:
   739 ;;		On entry : B00/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   743 ;;      Params:         0       0       0       0       0
   744 ;;      Locals:         0       0       0       0       0
   745 ;;      Temps:          0       3       0       0       0
   746 ;;      Totals:         0       3       0       0       0
   747 ;;Total ram usage:        3 bytes
   748 ;; Hardware stack levels required when called: 4
   749 ;; This function calls:
   750 ;;		_GenerateRandomNumber
   751 ;;		_KeyPadReader
   752 ;;		_RS485_RxEnable
   753 ;;		_RS485_TxEnable
   754 ;;		_Timer0_Init
   755 ;;		_UART_Init
   756 ;;		_UART_Read
   757 ;;		_UART_Write
   758 ;;		_initLCD
   759 ;;		_lcdPrint
   760 ;;		_lcdSend
   761 ;; This function is called by:
   762 ;;		Startup code after reset
   763 ;; This function uses a non-reentrant model
   764 ;;
   765                           
   766     0468                     _main:	
   767                           ;psect for function _main
   768                           
   769     0468                     l1721:	
   770                           ;incstack = 0
   771                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   772                           
   773                           
   774                           ;main.c: 102:     TRISA=0x00;
   775     0468  1683               	bsf	3,5	;RP0=1, select bank1
   776     0469  1303               	bcf	3,6	;RP1=0, select bank1
   777     046A  0185               	clrf	5	;volatile
   778                           
   779                           ;main.c: 103:  TRISB=0x00;
   780     046B  0186               	clrf	6	;volatile
   781                           
   782                           ;main.c: 104:  TRISC=0x00;
   783     046C  0187               	clrf	7	;volatile
   784                           
   785                           ;main.c: 105:  TRISD=0x00;
   786     046D  0188               	clrf	8	;volatile
   787                           
   788                           ;main.c: 106:     TRISE=0X00;
   789     046E  0189               	clrf	9	;volatile
   790     046F                     l1723:
   791                           
   792                           ;main.c: 107:     UART_Init();
   793     046F  120A  118A  20D8  120A  118A  	fcall	_UART_Init
   794     0474                     l1725:
   795                           
   796                           ;main.c: 108:     initLCD();
   797     0474  120A  118A  2211  120A  118A  	fcall	_initLCD
   798     0479                     l1727:
   799                           
   800                           ;main.c: 109:     Timer0_Init();
   801     0479  120A  118A  20CB  120A  118A  	fcall	_Timer0_Init
   802     047E                     l1729:
   803                           
   804                           ;main.c: 111:     {;main.c: 112:         lcdSend(0x01, 0);
   805     047E  01F0               	clrf	lcdSend@tipo
   806     047F  3001               	movlw	1
   807     0480  120A  118A  210F  120A  118A  	fcall	_lcdSend
   808     0485                     l1731:
   809                           
   810                           ;main.c: 113:         lcdPrint("Premi *");
   811     0485  3068               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   812     0486  00F4               	movwf	lcdPrint@str
   813     0487  3080               	movlw	128
   814     0488  00F5               	movwf	lcdPrint@str+1
   815     0489  120A  118A  2174  120A  118A  	fcall	_lcdPrint
   816     048E                     l1733:
   817                           
   818                           ;main.c: 114:         RS485_TxEnable();
   819     048E  120A  118A  20A4  120A  118A  	fcall	_RS485_TxEnable
   820     0493                     l1735:
   821                           
   822                           ;main.c: 115:         UART_Write('P');
   823     0493  3050               	movlw	80
   824     0494  120A  118A  20B6  120A  118A  	fcall	_UART_Write
   825     0499                     l1737:
   826                           
   827                           ;main.c: 116:         UART_Write('r');
   828     0499  3072               	movlw	114
   829     049A  120A  118A  20B6  120A  118A  	fcall	_UART_Write
   830     049F                     l1739:
   831                           
   832                           ;main.c: 117:         UART_Write('e');
   833     049F  3065               	movlw	101
   834     04A0  120A  118A  20B6  120A  118A  	fcall	_UART_Write
   835     04A5                     l1741:
   836                           
   837                           ;main.c: 118:         UART_Write('m');
   838     04A5  306D               	movlw	109
   839     04A6  120A  118A  20B6  120A  118A  	fcall	_UART_Write
   840     04AB                     l1743:
   841                           
   842                           ;main.c: 119:         UART_Write('i');
   843     04AB  3069               	movlw	105
   844     04AC  120A  118A  20B6  120A  118A  	fcall	_UART_Write
   845     04B1                     l1745:
   846                           
   847                           ;main.c: 120:         UART_Write(' ');
   848     04B1  3020               	movlw	32
   849     04B2  120A  118A  20B6  120A  118A  	fcall	_UART_Write
   850     04B7                     l1747:
   851                           
   852                           ;main.c: 121:         UART_Write('*');
   853     04B7  302A               	movlw	42
   854     04B8  120A  118A  20B6  120A  118A  	fcall	_UART_Write
   855     04BD                     l1749:
   856                           
   857                           ;main.c: 122:         UART_Write('\r');
   858     04BD  300D               	movlw	13
   859     04BE  120A  118A  20B6  120A  118A  	fcall	_UART_Write
   860     04C3                     l1751:
   861                           
   862                           ;main.c: 123:         UART_Write('\n');
   863     04C3  300A               	movlw	10
   864     04C4  120A  118A  20B6  120A  118A  	fcall	_UART_Write
   865     04C9                     l1753:
   866                           
   867                           ;main.c: 124:         _delay((unsigned long)((50)*(20000000/4000.0)));
   868     04C9  3002               	movlw	2
   869     04CA  1283               	bcf	3,5	;RP0=0, select bank0
   870     04CB  1303               	bcf	3,6	;RP1=0, select bank0
   871     04CC  00DA               	movwf	??_main+2
   872     04CD  3045               	movlw	69
   873     04CE  00D9               	movwf	??_main+1
   874     04CF  30A9               	movlw	169
   875     04D0  00D8               	movwf	??_main
   876     04D1                     u2027:
   877     04D1  0BD8               	decfsz	??_main,f
   878     04D2  2CD1               	goto	u2027
   879     04D3  0BD9               	decfsz	??_main+1,f
   880     04D4  2CD1               	goto	u2027
   881     04D5  0BDA               	decfsz	??_main+2,f
   882     04D6  2CD1               	goto	u2027
   883     04D7                     l1755:
   884                           
   885                           ;main.c: 125:         num1 = GenerateRandomNumber();
   886     04D7  120A  118A  20C0  120A  118A  	fcall	_GenerateRandomNumber
   887     04DC  00FD               	movwf	_num1
   888     04DD                     l1757:
   889                           
   890                           ;main.c: 126:         _delay((unsigned long)((50)*(20000000/4000.0)));
   891     04DD  3002               	movlw	2
   892     04DE  1283               	bcf	3,5	;RP0=0, select bank0
   893     04DF  1303               	bcf	3,6	;RP1=0, select bank0
   894     04E0  00DA               	movwf	??_main+2
   895     04E1  3045               	movlw	69
   896     04E2  00D9               	movwf	??_main+1
   897     04E3  30A9               	movlw	169
   898     04E4  00D8               	movwf	??_main
   899     04E5                     u2037:
   900     04E5  0BD8               	decfsz	??_main,f
   901     04E6  2CE5               	goto	u2037
   902     04E7  0BD9               	decfsz	??_main+1,f
   903     04E8  2CE5               	goto	u2037
   904     04E9  0BDA               	decfsz	??_main+2,f
   905     04EA  2CE5               	goto	u2037
   906     04EB                     l1759:
   907                           
   908                           ;main.c: 127:         num2 = GenerateRandomNumber();
   909     04EB  120A  118A  20C0  120A  118A  	fcall	_GenerateRandomNumber
   910     04F0  00FC               	movwf	_num2
   911     04F1                     l1761:
   912                           
   913                           ;main.c: 128:         _delay((unsigned long)((50)*(20000000/4000.0)));
   914     04F1  3002               	movlw	2
   915     04F2  1283               	bcf	3,5	;RP0=0, select bank0
   916     04F3  1303               	bcf	3,6	;RP1=0, select bank0
   917     04F4  00DA               	movwf	??_main+2
   918     04F5  3045               	movlw	69
   919     04F6  00D9               	movwf	??_main+1
   920     04F7  30A9               	movlw	169
   921     04F8  00D8               	movwf	??_main
   922     04F9                     u2047:
   923     04F9  0BD8               	decfsz	??_main,f
   924     04FA  2CF9               	goto	u2047
   925     04FB  0BD9               	decfsz	??_main+1,f
   926     04FC  2CF9               	goto	u2047
   927     04FD  0BDA               	decfsz	??_main+2,f
   928     04FE  2CF9               	goto	u2047
   929     04FF                     l1763:
   930                           
   931                           ;main.c: 129:         num3 = GenerateRandomNumber();
   932     04FF  120A  118A  20C0  120A  118A  	fcall	_GenerateRandomNumber
   933     0504  1283               	bcf	3,5	;RP0=0, select bank0
   934     0505  1303               	bcf	3,6	;RP1=0, select bank0
   935     0506  00BC               	movwf	_num3
   936     0507                     l1765:
   937                           
   938                           ;main.c: 130:         _delay((unsigned long)((50)*(20000000/4000.0)));
   939     0507  3002               	movlw	2
   940     0508  1283               	bcf	3,5	;RP0=0, select bank0
   941     0509  1303               	bcf	3,6	;RP1=0, select bank0
   942     050A  00DA               	movwf	??_main+2
   943     050B  3045               	movlw	69
   944     050C  00D9               	movwf	??_main+1
   945     050D  30A9               	movlw	169
   946     050E  00D8               	movwf	??_main
   947     050F                     u2057:
   948     050F  0BD8               	decfsz	??_main,f
   949     0510  2D0F               	goto	u2057
   950     0511  0BD9               	decfsz	??_main+1,f
   951     0512  2D0F               	goto	u2057
   952     0513  0BDA               	decfsz	??_main+2,f
   953     0514  2D0F               	goto	u2057
   954     0515                     l1767:
   955                           
   956                           ;main.c: 131:         num4 = GenerateRandomNumber();
   957     0515  120A  118A  20C0  120A  118A  	fcall	_GenerateRandomNumber
   958     051A  1283               	bcf	3,5	;RP0=0, select bank0
   959     051B  1303               	bcf	3,6	;RP1=0, select bank0
   960     051C  00BB               	movwf	_num4
   961     051D                     l1769:
   962                           
   963                           ;main.c: 132:         _delay((unsigned long)((50)*(20000000/4000.0)));
   964     051D  3002               	movlw	2
   965     051E  1283               	bcf	3,5	;RP0=0, select bank0
   966     051F  1303               	bcf	3,6	;RP1=0, select bank0
   967     0520  00DA               	movwf	??_main+2
   968     0521  3045               	movlw	69
   969     0522  00D9               	movwf	??_main+1
   970     0523  30A9               	movlw	169
   971     0524  00D8               	movwf	??_main
   972     0525                     u2067:
   973     0525  0BD8               	decfsz	??_main,f
   974     0526  2D25               	goto	u2067
   975     0527  0BD9               	decfsz	??_main+1,f
   976     0528  2D25               	goto	u2067
   977     0529  0BDA               	decfsz	??_main+2,f
   978     052A  2D25               	goto	u2067
   979     052B                     l1771:
   980                           
   981                           ;main.c: 133:         num5 = GenerateRandomNumber();
   982     052B  120A  118A  20C0  120A  118A  	fcall	_GenerateRandomNumber
   983     0530  1283               	bcf	3,5	;RP0=0, select bank0
   984     0531  1303               	bcf	3,6	;RP1=0, select bank0
   985     0532  00BA               	movwf	_num5
   986     0533                     l1773:
   987                           
   988                           ;main.c: 134:         _delay((unsigned long)((50)*(20000000/4000.0)));
   989     0533  3002               	movlw	2
   990     0534  1283               	bcf	3,5	;RP0=0, select bank0
   991     0535  1303               	bcf	3,6	;RP1=0, select bank0
   992     0536  00DA               	movwf	??_main+2
   993     0537  3045               	movlw	69
   994     0538  00D9               	movwf	??_main+1
   995     0539  30A9               	movlw	169
   996     053A  00D8               	movwf	??_main
   997     053B                     u2077:
   998     053B  0BD8               	decfsz	??_main,f
   999     053C  2D3B               	goto	u2077
  1000     053D  0BD9               	decfsz	??_main+1,f
  1001     053E  2D3B               	goto	u2077
  1002     053F  0BDA               	decfsz	??_main+2,f
  1003     0540  2D3B               	goto	u2077
  1004                           
  1005                           ;main.c: 135:         while (codice[0] == '\0')
  1006     0541  2D57               	goto	l1781
  1007     0542                     l1775:
  1008                           
  1009                           ;main.c: 136:         {;main.c: 137:             KeyPadReader();
  1010     0542  120A  118A  22D4  120A  118A  	fcall	_KeyPadReader
  1011     0547                     l1777:
  1012                           
  1013                           ;main.c: 138:             if (keys[keypressed] == '*'){
  1014     0547  1283               	bcf	3,5	;RP0=0, select bank0
  1015     0548  1303               	bcf	3,6	;RP1=0, select bank0
  1016     0549  0839               	movf	_keypressed,w
  1017     054A  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  1018     054B  0084               	movwf	4
  1019     054C  120A  118A  200D  120A  118A  	fcall	stringdir
  1020     0551  3A2A               	xorlw	42
  1021     0552  1D03               	skipz
  1022     0553  2D55               	goto	u1421
  1023     0554  2D56               	goto	u1420
  1024     0555                     u1421:
  1025     0555  2D57               	goto	l1781
  1026     0556                     u1420:
  1027     0556  2D5E               	goto	l1783
  1028     0557                     l1781:
  1029                           
  1030                           ;main.c: 135:         while (codice[0] == '\0')
  1031     0557  1283               	bcf	3,5	;RP0=0, select bank0
  1032     0558  1303               	bcf	3,6	;RP1=0, select bank0
  1033     0559  0826               	movf	_codice,w
  1034     055A  1903               	btfsc	3,2
  1035     055B  2D5D               	goto	u1431
  1036     055C  2D5E               	goto	u1430
  1037     055D                     u1431:
  1038     055D  2D42               	goto	l1775
  1039     055E                     u1430:
  1040     055E                     l1783:
  1041                           
  1042                           ;main.c: 144:             lcdSend(0x01, 0);
  1043     055E  01F0               	clrf	lcdSend@tipo
  1044     055F  3001               	movlw	1
  1045     0560  120A  118A  210F  120A  118A  	fcall	_lcdSend
  1046     0565                     l1785:
  1047                           
  1048                           ;main.c: 145:             lcdPrint("Attendere");
  1049     0565  3055               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1050     0566  00F4               	movwf	lcdPrint@str
  1051     0567  3080               	movlw	128
  1052     0568  00F5               	movwf	lcdPrint@str+1
  1053     0569  120A  118A  2174  120A  118A  	fcall	_lcdPrint
  1054     056E                     l1787:
  1055                           
  1056                           ;main.c: 146:             RS485_TxEnable();
  1057     056E  120A  118A  20A4  120A  118A  	fcall	_RS485_TxEnable
  1058                           
  1059                           ;main.c: 147:             while(num1 != 0x30 && num1 != 0x31 && num1 != 0x32 && num1 != 
      +                          0x33 &&
  1060     0573  2D88               	goto	l1793
  1061     0574                     l1789:
  1062                           
  1063                           ;main.c: 149:                   num1 != 0x38 && num1 != 0x39){;main.c: 150:             
      +                          num1 = GenerateRandomNumber();
  1064     0574  120A  118A  20C0  120A  118A  	fcall	_GenerateRandomNumber
  1065     0579  00FD               	movwf	_num1
  1066     057A                     l1791:
  1067                           
  1068                           ;main.c: 151:             _delay((unsigned long)((50)*(20000000/4000.0)));
  1069     057A  3002               	movlw	2
  1070     057B  1283               	bcf	3,5	;RP0=0, select bank0
  1071     057C  1303               	bcf	3,6	;RP1=0, select bank0
  1072     057D  00DA               	movwf	??_main+2
  1073     057E  3045               	movlw	69
  1074     057F  00D9               	movwf	??_main+1
  1075     0580  30A9               	movlw	169
  1076     0581  00D8               	movwf	??_main
  1077     0582                     u2087:
  1078     0582  0BD8               	decfsz	??_main,f
  1079     0583  2D82               	goto	u2087
  1080     0584  0BD9               	decfsz	??_main+1,f
  1081     0585  2D82               	goto	u2087
  1082     0586  0BDA               	decfsz	??_main+2,f
  1083     0587  2D82               	goto	u2087
  1084     0588                     l1793:
  1085                           
  1086                           ;main.c: 147:             while(num1 != 0x30 && num1 != 0x31 && num1 != 0x32 && num1 != 
      +                          0x33 &&
  1087     0588  3030               	movlw	48
  1088     0589  067D               	xorwf	_num1,w
  1089     058A  1903               	btfsc	3,2
  1090     058B  2D8D               	goto	u1441
  1091     058C  2D8E               	goto	u1440
  1092     058D                     u1441:
  1093     058D  2DC4               	goto	l1813
  1094     058E                     u1440:
  1095     058E                     l1795:
  1096     058E  3031               	movlw	49
  1097     058F  067D               	xorwf	_num1,w
  1098     0590  1903               	btfsc	3,2
  1099     0591  2D93               	goto	u1451
  1100     0592  2D94               	goto	u1450
  1101     0593                     u1451:
  1102     0593  2DC4               	goto	l1813
  1103     0594                     u1450:
  1104     0594                     l1797:
  1105     0594  3032               	movlw	50
  1106     0595  067D               	xorwf	_num1,w
  1107     0596  1903               	btfsc	3,2
  1108     0597  2D99               	goto	u1461
  1109     0598  2D9A               	goto	u1460
  1110     0599                     u1461:
  1111     0599  2DC4               	goto	l1813
  1112     059A                     u1460:
  1113     059A                     l1799:
  1114     059A  3033               	movlw	51
  1115     059B  067D               	xorwf	_num1,w
  1116     059C  1903               	btfsc	3,2
  1117     059D  2D9F               	goto	u1471
  1118     059E  2DA0               	goto	u1470
  1119     059F                     u1471:
  1120     059F  2DC4               	goto	l1813
  1121     05A0                     u1470:
  1122     05A0                     l1801:
  1123     05A0  3034               	movlw	52
  1124     05A1  067D               	xorwf	_num1,w
  1125     05A2  1903               	btfsc	3,2
  1126     05A3  2DA5               	goto	u1481
  1127     05A4  2DA6               	goto	u1480
  1128     05A5                     u1481:
  1129     05A5  2DC4               	goto	l1813
  1130     05A6                     u1480:
  1131     05A6                     l1803:
  1132     05A6  3035               	movlw	53
  1133     05A7  067D               	xorwf	_num1,w
  1134     05A8  1903               	btfsc	3,2
  1135     05A9  2DAB               	goto	u1491
  1136     05AA  2DAC               	goto	u1490
  1137     05AB                     u1491:
  1138     05AB  2DC4               	goto	l1813
  1139     05AC                     u1490:
  1140     05AC                     l1805:
  1141     05AC  3036               	movlw	54
  1142     05AD  067D               	xorwf	_num1,w
  1143     05AE  1903               	btfsc	3,2
  1144     05AF  2DB1               	goto	u1501
  1145     05B0  2DB2               	goto	u1500
  1146     05B1                     u1501:
  1147     05B1  2DC4               	goto	l1813
  1148     05B2                     u1500:
  1149     05B2                     l1807:
  1150     05B2  3037               	movlw	55
  1151     05B3  067D               	xorwf	_num1,w
  1152     05B4  1903               	btfsc	3,2
  1153     05B5  2DB7               	goto	u1511
  1154     05B6  2DB8               	goto	u1510
  1155     05B7                     u1511:
  1156     05B7  2DC4               	goto	l1813
  1157     05B8                     u1510:
  1158     05B8                     l1809:
  1159     05B8  3038               	movlw	56
  1160     05B9  067D               	xorwf	_num1,w
  1161     05BA  1903               	btfsc	3,2
  1162     05BB  2DBD               	goto	u1521
  1163     05BC  2DBE               	goto	u1520
  1164     05BD                     u1521:
  1165     05BD  2DC4               	goto	l1813
  1166     05BE                     u1520:
  1167     05BE                     l1811:
  1168     05BE  3039               	movlw	57
  1169     05BF  067D               	xorwf	_num1,w
  1170     05C0  1D03               	btfss	3,2
  1171     05C1  2DC3               	goto	u1531
  1172     05C2  2DC4               	goto	u1530
  1173     05C3                     u1531:
  1174     05C3  2D74               	goto	l1789
  1175     05C4                     u1530:
  1176     05C4                     l1813:
  1177                           
  1178                           ;main.c: 154:             lcdSend(0x01, 0);
  1179     05C4  01F0               	clrf	lcdSend@tipo
  1180     05C5  3001               	movlw	1
  1181     05C6  120A  118A  210F  120A  118A  	fcall	_lcdSend
  1182     05CB                     l1815:
  1183                           
  1184                           ;main.c: 155:             lcdPrint("Attendere.");
  1185     05CB  304A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1186     05CC  00F4               	movwf	lcdPrint@str
  1187     05CD  3080               	movlw	128
  1188     05CE  00F5               	movwf	lcdPrint@str+1
  1189     05CF  120A  118A  2174  120A  118A  	fcall	_lcdPrint
  1190                           
  1191                           ;main.c: 156:             while(num2 != 0x30 && num2 != 0x31 && num2 != 0x32 && num2 != 
      +                          0x33 &&
  1192     05D4  2DE9               	goto	l1821
  1193     05D5                     l1817:
  1194                           
  1195                           ;main.c: 158:                   num2 != 0x38 && num2 != 0x39){;main.c: 159:             
      +                          num2 = GenerateRandomNumber();
  1196     05D5  120A  118A  20C0  120A  118A  	fcall	_GenerateRandomNumber
  1197     05DA  00FC               	movwf	_num2
  1198     05DB                     l1819:
  1199                           
  1200                           ;main.c: 160:             _delay((unsigned long)((50)*(20000000/4000.0)));
  1201     05DB  3002               	movlw	2
  1202     05DC  1283               	bcf	3,5	;RP0=0, select bank0
  1203     05DD  1303               	bcf	3,6	;RP1=0, select bank0
  1204     05DE  00DA               	movwf	??_main+2
  1205     05DF  3045               	movlw	69
  1206     05E0  00D9               	movwf	??_main+1
  1207     05E1  30A9               	movlw	169
  1208     05E2  00D8               	movwf	??_main
  1209     05E3                     u2097:
  1210     05E3  0BD8               	decfsz	??_main,f
  1211     05E4  2DE3               	goto	u2097
  1212     05E5  0BD9               	decfsz	??_main+1,f
  1213     05E6  2DE3               	goto	u2097
  1214     05E7  0BDA               	decfsz	??_main+2,f
  1215     05E8  2DE3               	goto	u2097
  1216     05E9                     l1821:
  1217                           
  1218                           ;main.c: 156:             while(num2 != 0x30 && num2 != 0x31 && num2 != 0x32 && num2 != 
      +                          0x33 &&
  1219     05E9  3030               	movlw	48
  1220     05EA  067C               	xorwf	_num2,w
  1221     05EB  1903               	btfsc	3,2
  1222     05EC  2DEE               	goto	u1541
  1223     05ED  2DEF               	goto	u1540
  1224     05EE                     u1541:
  1225     05EE  2E25               	goto	l1841
  1226     05EF                     u1540:
  1227     05EF                     l1823:
  1228     05EF  3031               	movlw	49
  1229     05F0  067C               	xorwf	_num2,w
  1230     05F1  1903               	btfsc	3,2
  1231     05F2  2DF4               	goto	u1551
  1232     05F3  2DF5               	goto	u1550
  1233     05F4                     u1551:
  1234     05F4  2E25               	goto	l1841
  1235     05F5                     u1550:
  1236     05F5                     l1825:
  1237     05F5  3032               	movlw	50
  1238     05F6  067C               	xorwf	_num2,w
  1239     05F7  1903               	btfsc	3,2
  1240     05F8  2DFA               	goto	u1561
  1241     05F9  2DFB               	goto	u1560
  1242     05FA                     u1561:
  1243     05FA  2E25               	goto	l1841
  1244     05FB                     u1560:
  1245     05FB                     l1827:
  1246     05FB  3033               	movlw	51
  1247     05FC  067C               	xorwf	_num2,w
  1248     05FD  1903               	btfsc	3,2
  1249     05FE  2E00               	goto	u1571
  1250     05FF  2E01               	goto	u1570
  1251     0600                     u1571:
  1252     0600  2E25               	goto	l1841
  1253     0601                     u1570:
  1254     0601                     l1829:
  1255     0601  3034               	movlw	52
  1256     0602  067C               	xorwf	_num2,w
  1257     0603  1903               	btfsc	3,2
  1258     0604  2E06               	goto	u1581
  1259     0605  2E07               	goto	u1580
  1260     0606                     u1581:
  1261     0606  2E25               	goto	l1841
  1262     0607                     u1580:
  1263     0607                     l1831:
  1264     0607  3035               	movlw	53
  1265     0608  067C               	xorwf	_num2,w
  1266     0609  1903               	btfsc	3,2
  1267     060A  2E0C               	goto	u1591
  1268     060B  2E0D               	goto	u1590
  1269     060C                     u1591:
  1270     060C  2E25               	goto	l1841
  1271     060D                     u1590:
  1272     060D                     l1833:
  1273     060D  3036               	movlw	54
  1274     060E  067C               	xorwf	_num2,w
  1275     060F  1903               	btfsc	3,2
  1276     0610  2E12               	goto	u1601
  1277     0611  2E13               	goto	u1600
  1278     0612                     u1601:
  1279     0612  2E25               	goto	l1841
  1280     0613                     u1600:
  1281     0613                     l1835:
  1282     0613  3037               	movlw	55
  1283     0614  067C               	xorwf	_num2,w
  1284     0615  1903               	btfsc	3,2
  1285     0616  2E18               	goto	u1611
  1286     0617  2E19               	goto	u1610
  1287     0618                     u1611:
  1288     0618  2E25               	goto	l1841
  1289     0619                     u1610:
  1290     0619                     l1837:
  1291     0619  3038               	movlw	56
  1292     061A  067C               	xorwf	_num2,w
  1293     061B  1903               	btfsc	3,2
  1294     061C  2E1E               	goto	u1621
  1295     061D  2E1F               	goto	u1620
  1296     061E                     u1621:
  1297     061E  2E25               	goto	l1841
  1298     061F                     u1620:
  1299     061F                     l1839:
  1300     061F  3039               	movlw	57
  1301     0620  067C               	xorwf	_num2,w
  1302     0621  1D03               	btfss	3,2
  1303     0622  2E24               	goto	u1631
  1304     0623  2E25               	goto	u1630
  1305     0624                     u1631:
  1306     0624  2DD5               	goto	l1817
  1307     0625                     u1630:
  1308     0625                     l1841:
  1309                           
  1310                           ;main.c: 163:             lcdSend(0x01, 0);
  1311     0625  01F0               	clrf	lcdSend@tipo
  1312     0626  3001               	movlw	1
  1313     0627  120A  118A  210F  120A  118A  	fcall	_lcdSend
  1314     062C                     l1843:
  1315                           
  1316                           ;main.c: 164:             lcdPrint("Attendere..");
  1317     062C  303E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1318     062D  00F4               	movwf	lcdPrint@str
  1319     062E  3080               	movlw	128
  1320     062F  00F5               	movwf	lcdPrint@str+1
  1321     0630  120A  118A  2174  120A  118A  	fcall	_lcdPrint
  1322                           
  1323                           ;main.c: 165:             while(num3 != 0x30 && num3 != 0x33 && num3 != 0x32 && num3 != 
      +                          0x33 &&
  1324     0635  2E4C               	goto	l1849
  1325     0636                     l1845:
  1326                           
  1327                           ;main.c: 167:                   num3 != 0x38 && num3 != 0x39){;main.c: 168:             
      +                          num3 = GenerateRandomNumber();
  1328     0636  120A  118A  20C0  120A  118A  	fcall	_GenerateRandomNumber
  1329     063B  1283               	bcf	3,5	;RP0=0, select bank0
  1330     063C  1303               	bcf	3,6	;RP1=0, select bank0
  1331     063D  00BC               	movwf	_num3
  1332     063E                     l1847:
  1333                           
  1334                           ;main.c: 169:             _delay((unsigned long)((50)*(20000000/4000.0)));
  1335     063E  3002               	movlw	2
  1336     063F  1283               	bcf	3,5	;RP0=0, select bank0
  1337     0640  1303               	bcf	3,6	;RP1=0, select bank0
  1338     0641  00DA               	movwf	??_main+2
  1339     0642  3045               	movlw	69
  1340     0643  00D9               	movwf	??_main+1
  1341     0644  30A9               	movlw	169
  1342     0645  00D8               	movwf	??_main
  1343     0646                     u2107:
  1344     0646  0BD8               	decfsz	??_main,f
  1345     0647  2E46               	goto	u2107
  1346     0648  0BD9               	decfsz	??_main+1,f
  1347     0649  2E46               	goto	u2107
  1348     064A  0BDA               	decfsz	??_main+2,f
  1349     064B  2E46               	goto	u2107
  1350     064C                     l1849:
  1351                           
  1352                           ;main.c: 165:             while(num3 != 0x30 && num3 != 0x33 && num3 != 0x32 && num3 != 
      +                          0x33 &&
  1353     064C  3030               	movlw	48
  1354     064D  1283               	bcf	3,5	;RP0=0, select bank0
  1355     064E  1303               	bcf	3,6	;RP1=0, select bank0
  1356     064F  063C               	xorwf	_num3,w
  1357     0650  1903               	btfsc	3,2
  1358     0651  2E53               	goto	u1641
  1359     0652  2E54               	goto	u1640
  1360     0653                     u1641:
  1361     0653  2E8A               	goto	l1869
  1362     0654                     u1640:
  1363     0654                     l1851:
  1364     0654  3033               	movlw	51
  1365     0655  063C               	xorwf	_num3,w
  1366     0656  1903               	btfsc	3,2
  1367     0657  2E59               	goto	u1651
  1368     0658  2E5A               	goto	u1650
  1369     0659                     u1651:
  1370     0659  2E8A               	goto	l1869
  1371     065A                     u1650:
  1372     065A                     l1853:
  1373     065A  3032               	movlw	50
  1374     065B  063C               	xorwf	_num3,w
  1375     065C  1903               	btfsc	3,2
  1376     065D  2E5F               	goto	u1661
  1377     065E  2E60               	goto	u1660
  1378     065F                     u1661:
  1379     065F  2E8A               	goto	l1869
  1380     0660                     u1660:
  1381     0660                     l1855:
  1382     0660  3033               	movlw	51
  1383     0661  063C               	xorwf	_num3,w
  1384     0662  1903               	btfsc	3,2
  1385     0663  2E65               	goto	u1671
  1386     0664  2E66               	goto	u1670
  1387     0665                     u1671:
  1388     0665  2E8A               	goto	l1869
  1389     0666                     u1670:
  1390     0666                     l1857:
  1391     0666  3034               	movlw	52
  1392     0667  063C               	xorwf	_num3,w
  1393     0668  1903               	btfsc	3,2
  1394     0669  2E6B               	goto	u1681
  1395     066A  2E6C               	goto	u1680
  1396     066B                     u1681:
  1397     066B  2E8A               	goto	l1869
  1398     066C                     u1680:
  1399     066C                     l1859:
  1400     066C  3035               	movlw	53
  1401     066D  063C               	xorwf	_num3,w
  1402     066E  1903               	btfsc	3,2
  1403     066F  2E71               	goto	u1691
  1404     0670  2E72               	goto	u1690
  1405     0671                     u1691:
  1406     0671  2E8A               	goto	l1869
  1407     0672                     u1690:
  1408     0672                     l1861:
  1409     0672  3036               	movlw	54
  1410     0673  063C               	xorwf	_num3,w
  1411     0674  1903               	btfsc	3,2
  1412     0675  2E77               	goto	u1701
  1413     0676  2E78               	goto	u1700
  1414     0677                     u1701:
  1415     0677  2E8A               	goto	l1869
  1416     0678                     u1700:
  1417     0678                     l1863:
  1418     0678  3037               	movlw	55
  1419     0679  063C               	xorwf	_num3,w
  1420     067A  1903               	btfsc	3,2
  1421     067B  2E7D               	goto	u1711
  1422     067C  2E7E               	goto	u1710
  1423     067D                     u1711:
  1424     067D  2E8A               	goto	l1869
  1425     067E                     u1710:
  1426     067E                     l1865:
  1427     067E  3038               	movlw	56
  1428     067F  063C               	xorwf	_num3,w
  1429     0680  1903               	btfsc	3,2
  1430     0681  2E83               	goto	u1721
  1431     0682  2E84               	goto	u1720
  1432     0683                     u1721:
  1433     0683  2E8A               	goto	l1869
  1434     0684                     u1720:
  1435     0684                     l1867:
  1436     0684  3039               	movlw	57
  1437     0685  063C               	xorwf	_num3,w
  1438     0686  1D03               	btfss	3,2
  1439     0687  2E89               	goto	u1731
  1440     0688  2E8A               	goto	u1730
  1441     0689                     u1731:
  1442     0689  2E36               	goto	l1845
  1443     068A                     u1730:
  1444     068A                     l1869:
  1445                           
  1446                           ;main.c: 172:             lcdSend(0x01, 0);
  1447     068A  01F0               	clrf	lcdSend@tipo
  1448     068B  3001               	movlw	1
  1449     068C  120A  118A  210F  120A  118A  	fcall	_lcdSend
  1450     0691                     l1871:
  1451                           
  1452                           ;main.c: 173:             lcdPrint("Attendere...");
  1453     0691  3031               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1454     0692  00F4               	movwf	lcdPrint@str
  1455     0693  3080               	movlw	128
  1456     0694  00F5               	movwf	lcdPrint@str+1
  1457     0695  120A  118A  2174  120A  118A  	fcall	_lcdPrint
  1458                           
  1459                           ;main.c: 174:             while(num4 != 0x30 && num4 != 0x34 && num4 != 0x32 && num4 != 
      +                          0x33 &&
  1460     069A  2EB1               	goto	l1877
  1461     069B                     l1873:
  1462                           
  1463                           ;main.c: 176:                   num4 != 0x38 && num4 != 0x39){;main.c: 177:             
      +                          num4 = GenerateRandomNumber();
  1464     069B  120A  118A  20C0  120A  118A  	fcall	_GenerateRandomNumber
  1465     06A0  1283               	bcf	3,5	;RP0=0, select bank0
  1466     06A1  1303               	bcf	3,6	;RP1=0, select bank0
  1467     06A2  00BB               	movwf	_num4
  1468     06A3                     l1875:
  1469                           
  1470                           ;main.c: 178:             _delay((unsigned long)((50)*(20000000/4000.0)));
  1471     06A3  3002               	movlw	2
  1472     06A4  1283               	bcf	3,5	;RP0=0, select bank0
  1473     06A5  1303               	bcf	3,6	;RP1=0, select bank0
  1474     06A6  00DA               	movwf	??_main+2
  1475     06A7  3045               	movlw	69
  1476     06A8  00D9               	movwf	??_main+1
  1477     06A9  30A9               	movlw	169
  1478     06AA  00D8               	movwf	??_main
  1479     06AB                     u2117:
  1480     06AB  0BD8               	decfsz	??_main,f
  1481     06AC  2EAB               	goto	u2117
  1482     06AD  0BD9               	decfsz	??_main+1,f
  1483     06AE  2EAB               	goto	u2117
  1484     06AF  0BDA               	decfsz	??_main+2,f
  1485     06B0  2EAB               	goto	u2117
  1486     06B1                     l1877:
  1487                           
  1488                           ;main.c: 174:             while(num4 != 0x30 && num4 != 0x34 && num4 != 0x32 && num4 != 
      +                          0x33 &&
  1489     06B1  3030               	movlw	48
  1490     06B2  1283               	bcf	3,5	;RP0=0, select bank0
  1491     06B3  1303               	bcf	3,6	;RP1=0, select bank0
  1492     06B4  063B               	xorwf	_num4,w
  1493     06B5  1903               	btfsc	3,2
  1494     06B6  2EB8               	goto	u1741
  1495     06B7  2EB9               	goto	u1740
  1496     06B8                     u1741:
  1497     06B8  2EEF               	goto	l1897
  1498     06B9                     u1740:
  1499     06B9                     l1879:
  1500     06B9  3034               	movlw	52
  1501     06BA  063B               	xorwf	_num4,w
  1502     06BB  1903               	btfsc	3,2
  1503     06BC  2EBE               	goto	u1751
  1504     06BD  2EBF               	goto	u1750
  1505     06BE                     u1751:
  1506     06BE  2EEF               	goto	l1897
  1507     06BF                     u1750:
  1508     06BF                     l1881:
  1509     06BF  3032               	movlw	50
  1510     06C0  063B               	xorwf	_num4,w
  1511     06C1  1903               	btfsc	3,2
  1512     06C2  2EC4               	goto	u1761
  1513     06C3  2EC5               	goto	u1760
  1514     06C4                     u1761:
  1515     06C4  2EEF               	goto	l1897
  1516     06C5                     u1760:
  1517     06C5                     l1883:
  1518     06C5  3033               	movlw	51
  1519     06C6  063B               	xorwf	_num4,w
  1520     06C7  1903               	btfsc	3,2
  1521     06C8  2ECA               	goto	u1771
  1522     06C9  2ECB               	goto	u1770
  1523     06CA                     u1771:
  1524     06CA  2EEF               	goto	l1897
  1525     06CB                     u1770:
  1526     06CB                     l1885:
  1527     06CB  3034               	movlw	52
  1528     06CC  063B               	xorwf	_num4,w
  1529     06CD  1903               	btfsc	3,2
  1530     06CE  2ED0               	goto	u1781
  1531     06CF  2ED1               	goto	u1780
  1532     06D0                     u1781:
  1533     06D0  2EEF               	goto	l1897
  1534     06D1                     u1780:
  1535     06D1                     l1887:
  1536     06D1  3035               	movlw	53
  1537     06D2  063B               	xorwf	_num4,w
  1538     06D3  1903               	btfsc	3,2
  1539     06D4  2ED6               	goto	u1791
  1540     06D5  2ED7               	goto	u1790
  1541     06D6                     u1791:
  1542     06D6  2EEF               	goto	l1897
  1543     06D7                     u1790:
  1544     06D7                     l1889:
  1545     06D7  3036               	movlw	54
  1546     06D8  063B               	xorwf	_num4,w
  1547     06D9  1903               	btfsc	3,2
  1548     06DA  2EDC               	goto	u1801
  1549     06DB  2EDD               	goto	u1800
  1550     06DC                     u1801:
  1551     06DC  2EEF               	goto	l1897
  1552     06DD                     u1800:
  1553     06DD                     l1891:
  1554     06DD  3037               	movlw	55
  1555     06DE  063B               	xorwf	_num4,w
  1556     06DF  1903               	btfsc	3,2
  1557     06E0  2EE2               	goto	u1811
  1558     06E1  2EE3               	goto	u1810
  1559     06E2                     u1811:
  1560     06E2  2EEF               	goto	l1897
  1561     06E3                     u1810:
  1562     06E3                     l1893:
  1563     06E3  3038               	movlw	56
  1564     06E4  063B               	xorwf	_num4,w
  1565     06E5  1903               	btfsc	3,2
  1566     06E6  2EE8               	goto	u1821
  1567     06E7  2EE9               	goto	u1820
  1568     06E8                     u1821:
  1569     06E8  2EEF               	goto	l1897
  1570     06E9                     u1820:
  1571     06E9                     l1895:
  1572     06E9  3039               	movlw	57
  1573     06EA  063B               	xorwf	_num4,w
  1574     06EB  1D03               	btfss	3,2
  1575     06EC  2EEE               	goto	u1831
  1576     06ED  2EEF               	goto	u1830
  1577     06EE                     u1831:
  1578     06EE  2E9B               	goto	l1873
  1579     06EF                     u1830:
  1580     06EF                     l1897:
  1581                           
  1582                           ;main.c: 181:             lcdSend(0x01, 0);
  1583     06EF  01F0               	clrf	lcdSend@tipo
  1584     06F0  3001               	movlw	1
  1585     06F1  120A  118A  210F  120A  118A  	fcall	_lcdSend
  1586     06F6                     l1899:
  1587                           
  1588                           ;main.c: 182:             lcdPrint("Attendere....");
  1589     06F6  3023               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1590     06F7  00F4               	movwf	lcdPrint@str
  1591     06F8  3080               	movlw	128
  1592     06F9  00F5               	movwf	lcdPrint@str+1
  1593     06FA  120A  118A  2174  120A  118A  	fcall	_lcdPrint
  1594                           
  1595                           ;main.c: 183:             while(num5 != 0x30 && num5 != 0x35 && num5 != 0x32 && num5 != 
      +                          0x33 &&
  1596     06FF  2F16               	goto	l1905
  1597     0700                     l1901:
  1598                           
  1599                           ;main.c: 185:                   num5 != 0x38 && num5 != 0x39){;main.c: 186:             
      +                          num5 = GenerateRandomNumber();
  1600     0700  120A  118A  20C0  120A  118A  	fcall	_GenerateRandomNumber
  1601     0705  1283               	bcf	3,5	;RP0=0, select bank0
  1602     0706  1303               	bcf	3,6	;RP1=0, select bank0
  1603     0707  00BA               	movwf	_num5
  1604     0708                     l1903:
  1605                           
  1606                           ;main.c: 187:             _delay((unsigned long)((50)*(20000000/4000.0)));
  1607     0708  3002               	movlw	2
  1608     0709  1283               	bcf	3,5	;RP0=0, select bank0
  1609     070A  1303               	bcf	3,6	;RP1=0, select bank0
  1610     070B  00DA               	movwf	??_main+2
  1611     070C  3045               	movlw	69
  1612     070D  00D9               	movwf	??_main+1
  1613     070E  30A9               	movlw	169
  1614     070F  00D8               	movwf	??_main
  1615     0710                     u2127:
  1616     0710  0BD8               	decfsz	??_main,f
  1617     0711  2F10               	goto	u2127
  1618     0712  0BD9               	decfsz	??_main+1,f
  1619     0713  2F10               	goto	u2127
  1620     0714  0BDA               	decfsz	??_main+2,f
  1621     0715  2F10               	goto	u2127
  1622     0716                     l1905:
  1623                           
  1624                           ;main.c: 183:             while(num5 != 0x30 && num5 != 0x35 && num5 != 0x32 && num5 != 
      +                          0x33 &&
  1625     0716  3030               	movlw	48
  1626     0717  1283               	bcf	3,5	;RP0=0, select bank0
  1627     0718  1303               	bcf	3,6	;RP1=0, select bank0
  1628     0719  063A               	xorwf	_num5,w
  1629     071A  1903               	btfsc	3,2
  1630     071B  2F1D               	goto	u1841
  1631     071C  2F1E               	goto	u1840
  1632     071D                     u1841:
  1633     071D  2F54               	goto	l1925
  1634     071E                     u1840:
  1635     071E                     l1907:
  1636     071E  3035               	movlw	53
  1637     071F  063A               	xorwf	_num5,w
  1638     0720  1903               	btfsc	3,2
  1639     0721  2F23               	goto	u1851
  1640     0722  2F24               	goto	u1850
  1641     0723                     u1851:
  1642     0723  2F54               	goto	l1925
  1643     0724                     u1850:
  1644     0724                     l1909:
  1645     0724  3032               	movlw	50
  1646     0725  063A               	xorwf	_num5,w
  1647     0726  1903               	btfsc	3,2
  1648     0727  2F29               	goto	u1861
  1649     0728  2F2A               	goto	u1860
  1650     0729                     u1861:
  1651     0729  2F54               	goto	l1925
  1652     072A                     u1860:
  1653     072A                     l1911:
  1654     072A  3033               	movlw	51
  1655     072B  063A               	xorwf	_num5,w
  1656     072C  1903               	btfsc	3,2
  1657     072D  2F2F               	goto	u1871
  1658     072E  2F30               	goto	u1870
  1659     072F                     u1871:
  1660     072F  2F54               	goto	l1925
  1661     0730                     u1870:
  1662     0730                     l1913:
  1663     0730  3034               	movlw	52
  1664     0731  063A               	xorwf	_num5,w
  1665     0732  1903               	btfsc	3,2
  1666     0733  2F35               	goto	u1881
  1667     0734  2F36               	goto	u1880
  1668     0735                     u1881:
  1669     0735  2F54               	goto	l1925
  1670     0736                     u1880:
  1671     0736                     l1915:
  1672     0736  3035               	movlw	53
  1673     0737  063A               	xorwf	_num5,w
  1674     0738  1903               	btfsc	3,2
  1675     0739  2F3B               	goto	u1891
  1676     073A  2F3C               	goto	u1890
  1677     073B                     u1891:
  1678     073B  2F54               	goto	l1925
  1679     073C                     u1890:
  1680     073C                     l1917:
  1681     073C  3036               	movlw	54
  1682     073D  063A               	xorwf	_num5,w
  1683     073E  1903               	btfsc	3,2
  1684     073F  2F41               	goto	u1901
  1685     0740  2F42               	goto	u1900
  1686     0741                     u1901:
  1687     0741  2F54               	goto	l1925
  1688     0742                     u1900:
  1689     0742                     l1919:
  1690     0742  3037               	movlw	55
  1691     0743  063A               	xorwf	_num5,w
  1692     0744  1903               	btfsc	3,2
  1693     0745  2F47               	goto	u1911
  1694     0746  2F48               	goto	u1910
  1695     0747                     u1911:
  1696     0747  2F54               	goto	l1925
  1697     0748                     u1910:
  1698     0748                     l1921:
  1699     0748  3038               	movlw	56
  1700     0749  063A               	xorwf	_num5,w
  1701     074A  1903               	btfsc	3,2
  1702     074B  2F4D               	goto	u1921
  1703     074C  2F4E               	goto	u1920
  1704     074D                     u1921:
  1705     074D  2F54               	goto	l1925
  1706     074E                     u1920:
  1707     074E                     l1923:
  1708     074E  3039               	movlw	57
  1709     074F  063A               	xorwf	_num5,w
  1710     0750  1D03               	btfss	3,2
  1711     0751  2F53               	goto	u1931
  1712     0752  2F54               	goto	u1930
  1713     0753                     u1931:
  1714     0753  2F00               	goto	l1901
  1715     0754                     u1930:
  1716     0754                     l1925:
  1717                           
  1718                           ;main.c: 189:             UART_Write(num1);
  1719     0754  087D               	movf	_num1,w
  1720     0755  120A  118A  20B6  120A  118A  	fcall	_UART_Write
  1721                           
  1722                           ;main.c: 190:             UART_Write(num2);
  1723     075A  087C               	movf	_num2,w
  1724     075B  120A  118A  20B6  120A  118A  	fcall	_UART_Write
  1725                           
  1726                           ;main.c: 191:             UART_Write(num3);
  1727     0760  1283               	bcf	3,5	;RP0=0, select bank0
  1728     0761  1303               	bcf	3,6	;RP1=0, select bank0
  1729     0762  083C               	movf	_num3,w
  1730     0763  120A  118A  20B6  120A  118A  	fcall	_UART_Write
  1731                           
  1732                           ;main.c: 192:             UART_Write(num4);
  1733     0768  1283               	bcf	3,5	;RP0=0, select bank0
  1734     0769  1303               	bcf	3,6	;RP1=0, select bank0
  1735     076A  083B               	movf	_num4,w
  1736     076B  120A  118A  20B6  120A  118A  	fcall	_UART_Write
  1737                           
  1738                           ;main.c: 193:             UART_Write(num5);
  1739     0770  1283               	bcf	3,5	;RP0=0, select bank0
  1740     0771  1303               	bcf	3,6	;RP1=0, select bank0
  1741     0772  083A               	movf	_num5,w
  1742     0773  120A  118A  20B6  120A  118A  	fcall	_UART_Write
  1743                           
  1744                           ;main.c: 194:             UART_Write('\r');
  1745     0778  300D               	movlw	13
  1746     0779  120A  118A  20B6  120A  118A  	fcall	_UART_Write
  1747                           
  1748                           ;main.c: 195:             UART_Write('\n');
  1749     077E  300A               	movlw	10
  1750     077F  120A  118A  20B6  120A  118A  	fcall	_UART_Write
  1751                           
  1752                           ;main.c: 196:             lcdSend(0x01, 0);
  1753     0784  01F0               	clrf	lcdSend@tipo
  1754     0785  3001               	movlw	1
  1755     0786  120A  118A  210F  120A  118A  	fcall	_lcdSend
  1756                           
  1757                           ;main.c: 197:             lcdSend(num1, 1);
  1758     078B  01F0               	clrf	lcdSend@tipo
  1759     078C  0AF0               	incf	lcdSend@tipo,f
  1760     078D  087D               	movf	_num1,w
  1761     078E  120A  118A  210F  120A  118A  	fcall	_lcdSend
  1762                           
  1763                           ;main.c: 198:             lcdSend(num2, 1);
  1764     0793  01F0               	clrf	lcdSend@tipo
  1765     0794  0AF0               	incf	lcdSend@tipo,f
  1766     0795  087C               	movf	_num2,w
  1767     0796  120A  118A  210F  120A  118A  	fcall	_lcdSend
  1768                           
  1769                           ;main.c: 199:             lcdSend(num3, 1);
  1770     079B  01F0               	clrf	lcdSend@tipo
  1771     079C  0AF0               	incf	lcdSend@tipo,f
  1772     079D  1283               	bcf	3,5	;RP0=0, select bank0
  1773     079E  1303               	bcf	3,6	;RP1=0, select bank0
  1774     079F  083C               	movf	_num3,w
  1775     07A0  120A  118A  210F  120A  118A  	fcall	_lcdSend
  1776                           
  1777                           ;main.c: 200:             lcdSend(num4, 1);
  1778     07A5  01F0               	clrf	lcdSend@tipo
  1779     07A6  0AF0               	incf	lcdSend@tipo,f
  1780     07A7  1283               	bcf	3,5	;RP0=0, select bank0
  1781     07A8  1303               	bcf	3,6	;RP1=0, select bank0
  1782     07A9  083B               	movf	_num4,w
  1783     07AA  120A  118A  210F  120A  118A  	fcall	_lcdSend
  1784                           
  1785                           ;main.c: 201:             lcdSend(num5, 1);
  1786     07AF  01F0               	clrf	lcdSend@tipo
  1787     07B0  0AF0               	incf	lcdSend@tipo,f
  1788     07B1  1283               	bcf	3,5	;RP0=0, select bank0
  1789     07B2  1303               	bcf	3,6	;RP1=0, select bank0
  1790     07B3  083A               	movf	_num5,w
  1791     07B4  120A  118A  210F  120A  118A  	fcall	_lcdSend
  1792     07B9                     l1927:
  1793                           
  1794                           ;main.c: 202:             keypressed = 0;
  1795     07B9  1283               	bcf	3,5	;RP0=0, select bank0
  1796     07BA  1303               	bcf	3,6	;RP1=0, select bank0
  1797     07BB  01B9               	clrf	_keypressed
  1798     07BC                     l1929:
  1799                           
  1800                           ;main.c: 203:             RS485_RxEnable();
  1801     07BC  120A  118A  209F  120A  118A  	fcall	_RS485_RxEnable
  1802     07C1                     l1931:
  1803                           
  1804                           ;main.c: 204:             UART_Read();
  1805     07C1  120A  118A  23DE  120A  118A  	fcall	_UART_Read
  1806     07C6  2C7E               	goto	l1729
  1807     07C7  120A  118A  2800   	ljmp	start
  1808     07CA                     __end_of_main:
  1809                           
  1810                           	psect	text1
  1811     0211                     __ptext1:	
  1812 ;; *************** function _initLCD *****************
  1813 ;; Defined at:
  1814 ;;		line 270 in file "main.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;		None
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;		None
  1819 ;; Return value:  Size  Location     Type
  1820 ;;                  1    wreg      void 
  1821 ;; Registers used:
  1822 ;;		wreg, status,2, status,0, pclath, cstack
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1828 ;;      Params:         0       0       0       0       0
  1829 ;;      Locals:         0       0       0       0       0
  1830 ;;      Temps:          2       0       0       0       0
  1831 ;;      Totals:         2       0       0       0       0
  1832 ;;Total ram usage:        2 bytes
  1833 ;; Hardware stack levels used: 1
  1834 ;; Hardware stack levels required when called: 1
  1835 ;; This function calls:
  1836 ;;		_lcdSend
  1837 ;; This function is called by:
  1838 ;;		_main
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842     0211                     _initLCD:	
  1843                           ;psect for function _initLCD
  1844                           
  1845     0211                     l1581:	
  1846                           ;incstack = 0
  1847                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  1848                           
  1849                           
  1850                           ;main.c: 271:     PORTEbits.RE2 = 0;
  1851     0211  1283               	bcf	3,5	;RP0=0, select bank0
  1852     0212  1303               	bcf	3,6	;RP1=0, select bank0
  1853     0213  1109               	bcf	9,2	;volatile
  1854                           
  1855                           ;main.c: 272:     PORTEbits.RE1 = 0;
  1856     0214  1089               	bcf	9,1	;volatile
  1857     0215                     l1583:
  1858                           
  1859                           ;main.c: 273:     _delay((unsigned long)((20)*(20000000/4000.0)));
  1860     0215  3082               	movlw	130
  1861     0216  00F5               	movwf	??_initLCD+1
  1862     0217  30DD               	movlw	221
  1863     0218  00F4               	movwf	??_initLCD
  1864     0219                     u2137:
  1865     0219  0BF4               	decfsz	??_initLCD,f
  1866     021A  2A19               	goto	u2137
  1867     021B  0BF5               	decfsz	??_initLCD+1,f
  1868     021C  2A19               	goto	u2137
  1869     021D  2A1E               	nop2
  1870     021E                     l1585:
  1871                           
  1872                           ;main.c: 274:     PORTEbits.RE1 = 1;
  1873     021E  1283               	bcf	3,5	;RP0=0, select bank0
  1874     021F  1303               	bcf	3,6	;RP1=0, select bank0
  1875     0220  1489               	bsf	9,1	;volatile
  1876     0221                     l1587:
  1877                           
  1878                           ;main.c: 275:     lcdSend(0x38, 0);
  1879     0221  01F0               	clrf	lcdSend@tipo
  1880     0222  3038               	movlw	56
  1881     0223  120A  118A  210F  120A  118A  	fcall	_lcdSend
  1882     0228                     l1589:
  1883                           
  1884                           ;main.c: 276:     _delay((unsigned long)((5)*(20000000/4000.0)));
  1885     0228  3021               	movlw	33
  1886     0229  00F5               	movwf	??_initLCD+1
  1887     022A  3076               	movlw	118
  1888     022B  00F4               	movwf	??_initLCD
  1889     022C                     u2147:
  1890     022C  0BF4               	decfsz	??_initLCD,f
  1891     022D  2A2C               	goto	u2147
  1892     022E  0BF5               	decfsz	??_initLCD+1,f
  1893     022F  2A2C               	goto	u2147
  1894     0230  0000               	nop
  1895                           
  1896                           ;main.c: 277:     lcdSend(0x38, 0);
  1897     0231  01F0               	clrf	lcdSend@tipo
  1898     0232  3038               	movlw	56
  1899     0233  120A  118A  210F  120A  118A  	fcall	_lcdSend
  1900     0238                     l1591:
  1901                           
  1902                           ;main.c: 278:     _delay((unsigned long)((1)*(20000000/4000.0)));
  1903     0238  3007               	movlw	7
  1904     0239  00F5               	movwf	??_initLCD+1
  1905     023A  307D               	movlw	125
  1906     023B  00F4               	movwf	??_initLCD
  1907     023C                     u2157:
  1908     023C  0BF4               	decfsz	??_initLCD,f
  1909     023D  2A3C               	goto	u2157
  1910     023E  0BF5               	decfsz	??_initLCD+1,f
  1911     023F  2A3C               	goto	u2157
  1912     0240                     l1593:
  1913                           
  1914                           ;main.c: 279:     lcdSend(0x38, 0);
  1915     0240  01F0               	clrf	lcdSend@tipo
  1916     0241  3038               	movlw	56
  1917     0242  120A  118A  210F  120A  118A  	fcall	_lcdSend
  1918     0247                     l1595:
  1919                           
  1920                           ;main.c: 280:     lcdSend(0x08, 0);
  1921     0247  01F0               	clrf	lcdSend@tipo
  1922     0248  3008               	movlw	8
  1923     0249  120A  118A  210F  120A  118A  	fcall	_lcdSend
  1924     024E                     l1597:
  1925                           
  1926                           ;main.c: 281:     lcdSend(0x0F, 0);
  1927     024E  01F0               	clrf	lcdSend@tipo
  1928     024F  300F               	movlw	15
  1929     0250  120A  118A  210F  120A  118A  	fcall	_lcdSend
  1930     0255                     l1599:
  1931                           
  1932                           ;main.c: 282:     lcdSend(0x01, 0);
  1933     0255  01F0               	clrf	lcdSend@tipo
  1934     0256  3001               	movlw	1
  1935     0257  120A  118A  210F  120A  118A  	fcall	_lcdSend
  1936     025C                     l1601:
  1937                           
  1938                           ;main.c: 283:     lcdSend(0x0C, 0);
  1939     025C  01F0               	clrf	lcdSend@tipo
  1940     025D  300C               	movlw	12
  1941     025E  120A  118A  210F  120A  118A  	fcall	_lcdSend
  1942     0263                     l1603:
  1943                           
  1944                           ;main.c: 284:     lcdSend(0x80, 0);
  1945     0263  01F0               	clrf	lcdSend@tipo
  1946     0264  3080               	movlw	128
  1947     0265  120A  118A  210F  120A  118A  	fcall	_lcdSend
  1948     026A                     l203:
  1949     026A  0008               	return
  1950     026B                     __end_of_initLCD:
  1951                           
  1952                           	psect	text2
  1953     00B6                     __ptext2:	
  1954 ;; *************** function _UART_Write *****************
  1955 ;; Defined at:
  1956 ;;		line 237 in file "main.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;  data            1    wreg     unsigned char 
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;  data            1    0[COMMON] unsigned char 
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  1    wreg      void 
  1963 ;; Registers used:
  1964 ;;		wreg
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1970 ;;      Params:         0       0       0       0       0
  1971 ;;      Locals:         1       0       0       0       0
  1972 ;;      Temps:          0       0       0       0       0
  1973 ;;      Totals:         1       0       0       0       0
  1974 ;;Total ram usage:        1 bytes
  1975 ;; Hardware stack levels used: 1
  1976 ;; This function calls:
  1977 ;;		Nothing
  1978 ;; This function is called by:
  1979 ;;		_main
  1980 ;; This function uses a non-reentrant model
  1981 ;;
  1982                           
  1983     00B6                     _UART_Write:	
  1984                           ;psect for function _UART_Write
  1985                           
  1986                           
  1987                           ;incstack = 0
  1988                           ; Regs used in _UART_Write: [wreg]
  1989                           ;UART_Write@data stored from wreg
  1990     00B6  00F0               	movwf	UART_Write@data
  1991     00B7                     l1615:
  1992     00B7                     l189:	
  1993                           ;main.c: 238:     while (!TXIF)
  1994                           
  1995                           
  1996                           ;main.c: 238:     while (!TXIF)
  1997     00B7  1283               	bcf	3,5	;RP0=0, select bank0
  1998     00B8  1303               	bcf	3,6	;RP1=0, select bank0
  1999     00B9  1E0C               	btfss	12,4	;volatile
  2000     00BA  28BC               	goto	u1281
  2001     00BB  28BD               	goto	u1280
  2002     00BC                     u1281:
  2003     00BC  28B7               	goto	l189
  2004     00BD                     u1280:
  2005     00BD                     l1617:
  2006                           
  2007                           ;main.c: 240:     TXREG = data;
  2008     00BD  0870               	movf	UART_Write@data,w
  2009     00BE  0099               	movwf	25	;volatile
  2010     00BF                     l192:
  2011     00BF  0008               	return
  2012     00C0                     __end_of_UART_Write:
  2013                           
  2014                           	psect	text3
  2015     03DE                     __ptext3:	
  2016 ;; *************** function _UART_Read *****************
  2017 ;; Defined at:
  2018 ;;		line 243 in file "main.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;		None
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;		None
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  1    wreg      unsigned char 
  2025 ;; Registers used:
  2026 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2032 ;;      Params:         0       0       0       0       0
  2033 ;;      Locals:         0       0       0       0       0
  2034 ;;      Temps:          0       3       0       0       0
  2035 ;;      Totals:         0       3       0       0       0
  2036 ;;Total ram usage:        3 bytes
  2037 ;; Hardware stack levels used: 1
  2038 ;; Hardware stack levels required when called: 3
  2039 ;; This function calls:
  2040 ;;		_intToString
  2041 ;;		_lcdPrint
  2042 ;;		_lcdSend
  2043 ;; This function is called by:
  2044 ;;		_main
  2045 ;; This function uses a non-reentrant model
  2046 ;;
  2047                           
  2048     03DE                     _UART_Read:	
  2049                           ;psect for function _UART_Read
  2050                           
  2051     03DE                     l1683:	
  2052                           ;incstack = 0
  2053                           ; Regs used in _UART_Read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2054                           
  2055                           
  2056                           ;main.c: 244:     while (countdown != 0){
  2057     03DE  2C3C               	goto	l1709
  2058     03DF                     l196:
  2059                           
  2060                           ;main.c: 245:         if (!RCIF){
  2061     03DF  1A8C               	btfsc	12,5	;volatile
  2062     03E0  2BE2               	goto	u1401
  2063     03E1  2BE3               	goto	u1400
  2064     03E2                     u1401:
  2065     03E2  2C14               	goto	l1695
  2066     03E3                     u1400:
  2067     03E3                     l1685:
  2068                           
  2069                           ;main.c: 246:             intToString(countdown, print_countdown);
  2070     03E3  085F               	movf	_countdown,w
  2071     03E4  00D5               	movwf	??_UART_Read
  2072     03E5  01D6               	clrf	??_UART_Read+1
  2073     03E6  0855               	movf	??_UART_Read,w
  2074     03E7  00CD               	movwf	intToString@n
  2075     03E8  0856               	movf	??_UART_Read+1,w
  2076     03E9  00CE               	movwf	intToString@n+1
  2077     03EA  303D               	movlw	(low (_print_countdown| 0))& (0+255)
  2078     03EB  00CF               	movwf	intToString@str
  2079     03EC  120A  118A  2359  120A  118A  	fcall	_intToString
  2080     03F1                     l1687:
  2081                           
  2082                           ;main.c: 247:             lcdSend(0xC0, 0);
  2083     03F1  01F0               	clrf	lcdSend@tipo
  2084     03F2  30C0               	movlw	192
  2085     03F3  120A  118A  210F  120A  118A  	fcall	_lcdSend
  2086     03F8                     l1689:
  2087                           
  2088                           ;main.c: 248:             lcdPrint(print_countdown);
  2089     03F8  303D               	movlw	(low (_print_countdown| 0))& (0+255)
  2090     03F9  00F4               	movwf	lcdPrint@str
  2091     03FA  3000               	movlw	0
  2092     03FB  00F5               	movwf	lcdPrint@str+1
  2093     03FC  120A  118A  2174  120A  118A  	fcall	_lcdPrint
  2094     0401                     l1691:
  2095                           
  2096                           ;main.c: 249:             countdown --;
  2097     0401  3001               	movlw	1
  2098     0402  1283               	bcf	3,5	;RP0=0, select bank0
  2099     0403  1303               	bcf	3,6	;RP1=0, select bank0
  2100     0404  02DF               	subwf	_countdown,f
  2101     0405                     l1693:
  2102                           
  2103                           ;main.c: 250:             _delay((unsigned long)((200)*(20000000/4000.0)));
  2104     0405  3006               	movlw	6
  2105     0406  1283               	bcf	3,5	;RP0=0, select bank0
  2106     0407  1303               	bcf	3,6	;RP1=0, select bank0
  2107     0408  00D7               	movwf	??_UART_Read+2
  2108     0409  3013               	movlw	19
  2109     040A  00D6               	movwf	??_UART_Read+1
  2110     040B  30AD               	movlw	173
  2111     040C  00D5               	movwf	??_UART_Read
  2112     040D                     u2167:
  2113     040D  0BD5               	decfsz	??_UART_Read,f
  2114     040E  2C0D               	goto	u2167
  2115     040F  0BD6               	decfsz	??_UART_Read+1,f
  2116     0410  2C0D               	goto	u2167
  2117     0411  0BD7               	decfsz	??_UART_Read+2,f
  2118     0412  2C0D               	goto	u2167
  2119                           
  2120                           ;main.c: 251:         }
  2121     0413  2C3C               	goto	l1709
  2122     0414                     l1695:
  2123                           
  2124                           ;main.c: 253:             lcdSend(0x01, 0);
  2125     0414  01F0               	clrf	lcdSend@tipo
  2126     0415  3001               	movlw	1
  2127     0416  120A  118A  210F  120A  118A  	fcall	_lcdSend
  2128     041B                     l1697:
  2129                           
  2130                           ;main.c: 254:             lcdPrint("Ricevuto");
  2131     041B  305F               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2132     041C  00F4               	movwf	lcdPrint@str
  2133     041D  3080               	movlw	128
  2134     041E  00F5               	movwf	lcdPrint@str+1
  2135     041F  120A  118A  2174  120A  118A  	fcall	_lcdPrint
  2136     0424                     l1699:
  2137                           
  2138                           ;main.c: 255:             RCIF = 0;
  2139     0424  1283               	bcf	3,5	;RP0=0, select bank0
  2140     0425  1303               	bcf	3,6	;RP1=0, select bank0
  2141     0426  128C               	bcf	12,5	;volatile
  2142     0427                     l1701:
  2143                           
  2144                           ;main.c: 256:             countdown = 60;
  2145     0427  303C               	movlw	60
  2146     0428  00DF               	movwf	_countdown
  2147     0429                     l1703:
  2148                           
  2149                           ;main.c: 257:             _delay((unsigned long)((1000)*(20000000/4000.0)));
  2150     0429  301A               	movlw	26
  2151     042A  1283               	bcf	3,5	;RP0=0, select bank0
  2152     042B  1303               	bcf	3,6	;RP1=0, select bank0
  2153     042C  00D7               	movwf	??_UART_Read+2
  2154     042D  305E               	movlw	94
  2155     042E  00D6               	movwf	??_UART_Read+1
  2156     042F  306D               	movlw	109
  2157     0430  00D5               	movwf	??_UART_Read
  2158     0431                     u2177:
  2159     0431  0BD5               	decfsz	??_UART_Read,f
  2160     0432  2C31               	goto	u2177
  2161     0433  0BD6               	decfsz	??_UART_Read+1,f
  2162     0434  2C31               	goto	u2177
  2163     0435  0BD7               	decfsz	??_UART_Read+2,f
  2164     0436  2C31               	goto	u2177
  2165     0437  2C38               	nop2
  2166     0438                     l1705:
  2167                           
  2168                           ;main.c: 258:             return RCREG;;	Return value of _UART_Read is never used
  2169     0438  1283               	bcf	3,5	;RP0=0, select bank0
  2170     0439  1303               	bcf	3,6	;RP1=0, select bank0
  2171     043A  081A               	movf	26,w	;volatile
  2172     043B  2C67               	goto	l199
  2173     043C                     l1709:
  2174                           
  2175                           ;main.c: 244:     while (countdown != 0){
  2176     043C  1283               	bcf	3,5	;RP0=0, select bank0
  2177     043D  1303               	bcf	3,6	;RP1=0, select bank0
  2178     043E  085F               	movf	_countdown,w
  2179     043F  1D03               	btfss	3,2
  2180     0440  2C42               	goto	u1411
  2181     0441  2C43               	goto	u1410
  2182     0442                     u1411:
  2183     0442  2BDF               	goto	l196
  2184     0443                     u1410:
  2185     0443                     l1711:
  2186                           
  2187                           ;main.c: 261:     lcdSend(0x01, 0);
  2188     0443  01F0               	clrf	lcdSend@tipo
  2189     0444  3001               	movlw	1
  2190     0445  120A  118A  210F  120A  118A  	fcall	_lcdSend
  2191     044A                     l1713:
  2192                           
  2193                           ;main.c: 262:     lcdPrint("Codice Scaduto");
  2194     044A  3014               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2195     044B  00F4               	movwf	lcdPrint@str
  2196     044C  3080               	movlw	128
  2197     044D  00F5               	movwf	lcdPrint@str+1
  2198     044E  120A  118A  2174  120A  118A  	fcall	_lcdPrint
  2199     0453                     l1715:
  2200                           
  2201                           ;main.c: 263:     RCIF = 0;
  2202     0453  1283               	bcf	3,5	;RP0=0, select bank0
  2203     0454  1303               	bcf	3,6	;RP1=0, select bank0
  2204     0455  128C               	bcf	12,5	;volatile
  2205     0456                     l1717:
  2206                           
  2207                           ;main.c: 264:     countdown = 60;
  2208     0456  303C               	movlw	60
  2209     0457  00DF               	movwf	_countdown
  2210     0458                     l1719:
  2211                           
  2212                           ;main.c: 265:     _delay((unsigned long)((1000)*(20000000/4000.0)));
  2213     0458  301A               	movlw	26
  2214     0459  1283               	bcf	3,5	;RP0=0, select bank0
  2215     045A  1303               	bcf	3,6	;RP1=0, select bank0
  2216     045B  00D7               	movwf	??_UART_Read+2
  2217     045C  305E               	movlw	94
  2218     045D  00D6               	movwf	??_UART_Read+1
  2219     045E  306D               	movlw	109
  2220     045F  00D5               	movwf	??_UART_Read
  2221     0460                     u2187:
  2222     0460  0BD5               	decfsz	??_UART_Read,f
  2223     0461  2C60               	goto	u2187
  2224     0462  0BD6               	decfsz	??_UART_Read+1,f
  2225     0463  2C60               	goto	u2187
  2226     0464  0BD7               	decfsz	??_UART_Read+2,f
  2227     0465  2C60               	goto	u2187
  2228     0466  2C67               	nop2
  2229     0467                     l199:
  2230     0467  0008               	return
  2231     0468                     __end_of_UART_Read:
  2232                           
  2233                           	psect	text4
  2234     0174                     __ptext4:	
  2235 ;; *************** function _lcdPrint *****************
  2236 ;; Defined at:
  2237 ;;		line 308 in file "main.c"
  2238 ;; Parameters:    Size  Location     Type
  2239 ;;  str             2    4[COMMON] PTR unsigned char 
  2240 ;;		 -> STR_8(15), STR_7(9), print_countdown(3), STR_6(14), 
  2241 ;;		 -> STR_5(13), STR_4(12), STR_3(11), STR_2(10), 
  2242 ;;		 -> STR_1(8), 
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;  n               2    9[COMMON] int 
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  1    wreg      void 
  2247 ;; Registers used:
  2248 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2254 ;;      Params:         2       0       0       0       0
  2255 ;;      Locals:         2       0       0       0       0
  2256 ;;      Temps:          3       0       0       0       0
  2257 ;;      Totals:         7       0       0       0       0
  2258 ;;Total ram usage:        7 bytes
  2259 ;; Hardware stack levels used: 1
  2260 ;; Hardware stack levels required when called: 1
  2261 ;; This function calls:
  2262 ;;		_lcdSend
  2263 ;; This function is called by:
  2264 ;;		_main
  2265 ;;		_UART_Read
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269     0174                     _lcdPrint:	
  2270                           ;psect for function _lcdPrint
  2271                           
  2272     0174                     l1539:	
  2273                           ;incstack = 0
  2274                           ; Regs used in _lcdPrint: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2275                           
  2276                           
  2277                           ;main.c: 309:     int n = 0;
  2278     0174  01F9               	clrf	lcdPrint@n
  2279     0175  01FA               	clrf	lcdPrint@n+1
  2280                           
  2281                           ;main.c: 310:     while (str[n] != '\0') {
  2282     0176  299B               	goto	l1545
  2283     0177                     l1541:
  2284                           
  2285                           ;main.c: 311:         lcdSend(str[n++], 1);
  2286     0177  01F0               	clrf	lcdSend@tipo
  2287     0178  0AF0               	incf	lcdSend@tipo,f
  2288     0179  0879               	movf	lcdPrint@n,w
  2289     017A  0774               	addwf	lcdPrint@str,w
  2290     017B  00F7               	movwf	??_lcdPrint+1
  2291     017C  0875               	movf	lcdPrint@str+1,w
  2292     017D  00F6               	movwf	??_lcdPrint
  2293     017E  1803               	skipnc
  2294     017F  0AF6               	incf	??_lcdPrint,f
  2295     0180  1FF9               	btfss	lcdPrint@n,7
  2296     0181  2983               	goto	u1230
  2297     0182  03F6               	decf	??_lcdPrint,f
  2298     0183                     u1230:
  2299     0183  0876               	movf	??_lcdPrint,w
  2300     0184  00F8               	movwf	??_lcdPrint+2
  2301     0185  0878               	movf	??_lcdPrint+2,w
  2302     0186  1283               	bcf	3,5	;RP0=0, select bank0
  2303     0187  1303               	bcf	3,6	;RP1=0, select bank0
  2304     0188  00FF               	movwf	btemp+1
  2305     0189  0877               	movf	??_lcdPrint+1,w
  2306     018A  0084               	movwf	4
  2307     018B  120A  118A  2003  120A  118A  	fcall	stringtab
  2308     0190  120A  118A  210F  120A  118A  	fcall	_lcdSend
  2309     0195                     l1543:
  2310     0195  3001               	movlw	1
  2311     0196  07F9               	addwf	lcdPrint@n,f
  2312     0197  1803               	skipnc
  2313     0198  0AFA               	incf	lcdPrint@n+1,f
  2314     0199  3000               	movlw	0
  2315     019A  07FA               	addwf	lcdPrint@n+1,f
  2316     019B                     l1545:
  2317                           
  2318                           ;main.c: 310:     while (str[n] != '\0') {
  2319     019B  0879               	movf	lcdPrint@n,w
  2320     019C  0774               	addwf	lcdPrint@str,w
  2321     019D  00F7               	movwf	??_lcdPrint+1
  2322     019E  0875               	movf	lcdPrint@str+1,w
  2323     019F  00F6               	movwf	??_lcdPrint
  2324     01A0  1803               	skipnc
  2325     01A1  0AF6               	incf	??_lcdPrint,f
  2326     01A2  1FF9               	btfss	lcdPrint@n,7
  2327     01A3  29A5               	goto	u1240
  2328     01A4  03F6               	decf	??_lcdPrint,f
  2329     01A5                     u1240:
  2330     01A5  0876               	movf	??_lcdPrint,w
  2331     01A6  00F8               	movwf	??_lcdPrint+2
  2332     01A7  0878               	movf	??_lcdPrint+2,w
  2333     01A8  1283               	bcf	3,5	;RP0=0, select bank0
  2334     01A9  1303               	bcf	3,6	;RP1=0, select bank0
  2335     01AA  00FF               	movwf	btemp+1
  2336     01AB  0877               	movf	??_lcdPrint+1,w
  2337     01AC  0084               	movwf	4
  2338     01AD  120A  118A  2003  120A  118A  	fcall	stringtab
  2339     01B2  3A00               	xorlw	0
  2340     01B3  1D03               	skipz
  2341     01B4  29B6               	goto	u1251
  2342     01B5  29B7               	goto	u1250
  2343     01B6                     u1251:
  2344     01B6  2977               	goto	l1541
  2345     01B7                     u1250:
  2346     01B7                     l212:
  2347     01B7  0008               	return
  2348     01B8                     __end_of_lcdPrint:
  2349                           
  2350                           	psect	text5
  2351     010F                     __ptext5:	
  2352 ;; *************** function _lcdSend *****************
  2353 ;; Defined at:
  2354 ;;		line 287 in file "main.c"
  2355 ;; Parameters:    Size  Location     Type
  2356 ;;  dato            1    wreg     unsigned char 
  2357 ;;  tipo            1    0[COMMON] unsigned char 
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;  dato            1    3[COMMON] unsigned char 
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  1    wreg      void 
  2362 ;; Registers used:
  2363 ;;		wreg, status,2, status,0
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2369 ;;      Params:         1       0       0       0       0
  2370 ;;      Locals:         1       0       0       0       0
  2371 ;;      Temps:          2       0       0       0       0
  2372 ;;      Totals:         4       0       0       0       0
  2373 ;;Total ram usage:        4 bytes
  2374 ;; Hardware stack levels used: 1
  2375 ;; This function calls:
  2376 ;;		Nothing
  2377 ;; This function is called by:
  2378 ;;		_main
  2379 ;;		_UART_Read
  2380 ;;		_initLCD
  2381 ;;		_lcdPrint
  2382 ;;		_KeyPressed
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386     010F                     _lcdSend:	
  2387                           ;psect for function _lcdSend
  2388                           
  2389                           
  2390                           ;incstack = 0
  2391                           ; Regs used in _lcdSend: [wreg+status,2+status,0]
  2392                           ;lcdSend@dato stored from wreg
  2393     010F  00F3               	movwf	lcdSend@dato
  2394     0110                     l1423:
  2395                           
  2396                           ;main.c: 291:     TRISD = 0x00;
  2397     0110  1683               	bsf	3,5	;RP0=1, select bank1
  2398     0111  1303               	bcf	3,6	;RP1=0, select bank1
  2399     0112  0188               	clrf	8	;volatile
  2400     0113                     l1425:
  2401                           
  2402                           ;main.c: 292:     TRISEbits.TRISE1 = 0;
  2403     0113  1089               	bcf	9,1	;volatile
  2404     0114                     l1427:
  2405                           
  2406                           ;main.c: 293:     TRISEbits.TRISE2 = 0;
  2407     0114  1109               	bcf	9,2	;volatile
  2408     0115                     l1429:
  2409                           
  2410                           ;main.c: 298:     PORTEbits.RE1 = 1;
  2411     0115  1283               	bcf	3,5	;RP0=0, select bank0
  2412     0116  1303               	bcf	3,6	;RP1=0, select bank0
  2413     0117  1489               	bsf	9,1	;volatile
  2414     0118                     l1431:
  2415                           
  2416                           ;main.c: 300:     PORTD = dato;
  2417     0118  0873               	movf	lcdSend@dato,w
  2418     0119  0088               	movwf	8	;volatile
  2419     011A                     l1433:
  2420                           
  2421                           ;main.c: 301:     PORTEbits.RE2 = tipo;
  2422     011A  0C70               	rrf	lcdSend@tipo,w
  2423     011B  1C03               	skipc
  2424     011C  1109               	bcf	9,2	;volatile
  2425     011D  1803               	skipnc
  2426     011E  1509               	bsf	9,2	;volatile
  2427     011F                     l1435:
  2428                           
  2429                           ;main.c: 302:     _delay((unsigned long)((3)*(20000000/4000.0)));
  2430     011F  3014               	movlw	20
  2431     0120  00F2               	movwf	??_lcdSend+1
  2432     0121  3079               	movlw	121
  2433     0122  00F1               	movwf	??_lcdSend
  2434     0123                     u2197:
  2435     0123  0BF1               	decfsz	??_lcdSend,f
  2436     0124  2923               	goto	u2197
  2437     0125  0BF2               	decfsz	??_lcdSend+1,f
  2438     0126  2923               	goto	u2197
  2439     0127  2928               	nop2
  2440     0128                     l1437:
  2441                           
  2442                           ;main.c: 303:     PORTEbits.RE1 = 0;
  2443     0128  1283               	bcf	3,5	;RP0=0, select bank0
  2444     0129  1303               	bcf	3,6	;RP1=0, select bank0
  2445     012A  1089               	bcf	9,1	;volatile
  2446     012B                     l1439:
  2447                           
  2448                           ;main.c: 304:     _delay((unsigned long)((3)*(20000000/4000.0)));
  2449     012B  3014               	movlw	20
  2450     012C  00F2               	movwf	??_lcdSend+1
  2451     012D  3079               	movlw	121
  2452     012E  00F1               	movwf	??_lcdSend
  2453     012F                     u2207:
  2454     012F  0BF1               	decfsz	??_lcdSend,f
  2455     0130  292F               	goto	u2207
  2456     0131  0BF2               	decfsz	??_lcdSend+1,f
  2457     0132  292F               	goto	u2207
  2458     0133  2934               	nop2
  2459     0134                     l1441:
  2460                           
  2461                           ;main.c: 305:     PORTEbits.RE1 = 1;
  2462     0134  1283               	bcf	3,5	;RP0=0, select bank0
  2463     0135  1303               	bcf	3,6	;RP1=0, select bank0
  2464     0136  1489               	bsf	9,1	;volatile
  2465     0137                     l206:
  2466     0137  0008               	return
  2467     0138                     __end_of_lcdSend:
  2468                           
  2469                           	psect	text6
  2470     0359                     __ptext6:	
  2471 ;; *************** function _intToString *****************
  2472 ;; Defined at:
  2473 ;;		line 434 in file "main.c"
  2474 ;; Parameters:    Size  Location     Type
  2475 ;;  n               2   13[BANK0 ] int 
  2476 ;;  str             1   15[BANK0 ] PTR unsigned char 
  2477 ;;		 -> print_countdown(3), 
  2478 ;; Auto vars:     Size  Location     Type
  2479 ;;  t               2   16[BANK0 ] int 
  2480 ;;  i               2   19[BANK0 ] int 
  2481 ;;  cifre           1   18[BANK0 ] unsigned char 
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  1    wreg      void 
  2484 ;; Registers used:
  2485 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2491 ;;      Params:         0       3       0       0       0
  2492 ;;      Locals:         0       5       0       0       0
  2493 ;;      Temps:          1       0       0       0       0
  2494 ;;      Totals:         1       8       0       0       0
  2495 ;;Total ram usage:        9 bytes
  2496 ;; Hardware stack levels used: 1
  2497 ;; Hardware stack levels required when called: 2
  2498 ;; This function calls:
  2499 ;;		___awdiv
  2500 ;;		___awmod
  2501 ;;		_potenza
  2502 ;; This function is called by:
  2503 ;;		_UART_Read
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507     0359                     _intToString:	
  2508                           ;psect for function _intToString
  2509                           
  2510     0359                     l1547:	
  2511                           ;incstack = 0
  2512                           ; Regs used in _intToString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2513                           
  2514                           
  2515                           ;main.c: 437:     char cifre = 1;
  2516     0359  1283               	bcf	3,5	;RP0=0, select bank0
  2517     035A  1303               	bcf	3,6	;RP1=0, select bank0
  2518     035B  01D2               	clrf	intToString@cifre
  2519     035C  0AD2               	incf	intToString@cifre,f
  2520     035D                     l1549:
  2521                           
  2522                           ;main.c: 440:     while (n / potenza(10, cifre)) cifre++;
  2523     035D  2B62               	goto	l1553
  2524     035E                     l1551:
  2525     035E  3001               	movlw	1
  2526     035F  00FB               	movwf	??_intToString
  2527     0360  087B               	movf	??_intToString,w
  2528     0361  07D2               	addwf	intToString@cifre,f
  2529     0362                     l1553:
  2530     0362  0852               	movf	intToString@cifre,w
  2531     0363  00F6               	movwf	potenza@e
  2532     0364  300A               	movlw	10
  2533     0365  120A  118A  2138  120A  118A  	fcall	_potenza
  2534     036A  0877               	movf	?_potenza+1,w
  2535     036B  1283               	bcf	3,5	;RP0=0, select bank0
  2536     036C  1303               	bcf	3,6	;RP1=0, select bank0
  2537     036D  00C6               	movwf	___awdiv@divisor+1
  2538     036E  0876               	movf	?_potenza,w
  2539     036F  00C5               	movwf	___awdiv@divisor
  2540     0370  084E               	movf	intToString@n+1,w
  2541     0371  00C8               	movwf	___awdiv@dividend+1
  2542     0372  084D               	movf	intToString@n,w
  2543     0373  00C7               	movwf	___awdiv@dividend
  2544     0374  120A  118A  226B  120A  118A  	fcall	___awdiv
  2545     0379  1283               	bcf	3,5	;RP0=0, select bank0
  2546     037A  1303               	bcf	3,6	;RP1=0, select bank0
  2547     037B  0845               	movf	?___awdiv,w
  2548     037C  0446               	iorwf	?___awdiv+1,w
  2549     037D  1D03               	btfss	3,2
  2550     037E  2B80               	goto	u1261
  2551     037F  2B81               	goto	u1260
  2552     0380                     u1261:
  2553     0380  2B5E               	goto	l1551
  2554     0381                     u1260:
  2555     0381                     l1555:
  2556                           
  2557                           ;main.c: 442:     for (i = 0; i < cifre; i++) {
  2558     0381  01D3               	clrf	intToString@i
  2559     0382  01D4               	clrf	intToString@i+1
  2560     0383  2BC7               	goto	l1565
  2561     0384                     l1557:
  2562                           
  2563                           ;main.c: 443:         int t = potenza(10, cifre - 1 - i);
  2564     0384  1283               	bcf	3,5	;RP0=0, select bank0
  2565     0385  1303               	bcf	3,6	;RP1=0, select bank0
  2566     0386  0853               	movf	intToString@i,w
  2567     0387  0252               	subwf	intToString@cifre,w
  2568     0388  3EFF               	addlw	255
  2569     0389  00F6               	movwf	potenza@e
  2570     038A  300A               	movlw	10
  2571     038B  120A  118A  2138  120A  118A  	fcall	_potenza
  2572     0390  0877               	movf	?_potenza+1,w
  2573     0391  1283               	bcf	3,5	;RP0=0, select bank0
  2574     0392  1303               	bcf	3,6	;RP1=0, select bank0
  2575     0393  00D1               	movwf	intToString@t+1
  2576     0394  0876               	movf	?_potenza,w
  2577     0395  00D0               	movwf	intToString@t
  2578     0396                     l1559:
  2579                           
  2580                           ;main.c: 444:         str[i] = '0' + (char) (n / t);
  2581     0396  0853               	movf	intToString@i,w
  2582     0397  074F               	addwf	intToString@str,w
  2583     0398  00FB               	movwf	??_intToString
  2584     0399  087B               	movf	??_intToString,w
  2585     039A  0084               	movwf	4
  2586     039B  0851               	movf	intToString@t+1,w
  2587     039C  00C6               	movwf	___awdiv@divisor+1
  2588     039D  0850               	movf	intToString@t,w
  2589     039E  00C5               	movwf	___awdiv@divisor
  2590     039F  084E               	movf	intToString@n+1,w
  2591     03A0  00C8               	movwf	___awdiv@dividend+1
  2592     03A1  084D               	movf	intToString@n,w
  2593     03A2  00C7               	movwf	___awdiv@dividend
  2594     03A3  120A  118A  226B  120A  118A  	fcall	___awdiv
  2595     03A8  1283               	bcf	3,5	;RP0=0, select bank0
  2596     03A9  1303               	bcf	3,6	;RP1=0, select bank0
  2597     03AA  0845               	movf	?___awdiv,w
  2598     03AB  3E30               	addlw	48
  2599     03AC  1383               	bcf	3,7	;select IRP bank0
  2600     03AD  0080               	movwf	0
  2601     03AE                     l1561:
  2602                           
  2603                           ;main.c: 445:         n = n % t;
  2604     03AE  0851               	movf	intToString@t+1,w
  2605     03AF  00F1               	movwf	___awmod@divisor+1
  2606     03B0  0850               	movf	intToString@t,w
  2607     03B1  00F0               	movwf	___awmod@divisor
  2608     03B2  084E               	movf	intToString@n+1,w
  2609     03B3  00F3               	movwf	___awmod@dividend+1
  2610     03B4  084D               	movf	intToString@n,w
  2611     03B5  00F2               	movwf	___awmod@dividend
  2612     03B6  120A  118A  21B8  120A  118A  	fcall	___awmod
  2613     03BB  0871               	movf	?___awmod+1,w
  2614     03BC  1283               	bcf	3,5	;RP0=0, select bank0
  2615     03BD  1303               	bcf	3,6	;RP1=0, select bank0
  2616     03BE  00CE               	movwf	intToString@n+1
  2617     03BF  0870               	movf	?___awmod,w
  2618     03C0  00CD               	movwf	intToString@n
  2619     03C1                     l1563:
  2620                           
  2621                           ;main.c: 446:     }
  2622     03C1  3001               	movlw	1
  2623     03C2  07D3               	addwf	intToString@i,f
  2624     03C3  1803               	skipnc
  2625     03C4  0AD4               	incf	intToString@i+1,f
  2626     03C5  3000               	movlw	0
  2627     03C6  07D4               	addwf	intToString@i+1,f
  2628     03C7                     l1565:
  2629     03C7  0854               	movf	intToString@i+1,w
  2630     03C8  3A80               	xorlw	128
  2631     03C9  00FB               	movwf	??_intToString
  2632     03CA  3080               	movlw	128
  2633     03CB  027B               	subwf	??_intToString,w
  2634     03CC  1D03               	skipz
  2635     03CD  2BD0               	goto	u1275
  2636     03CE  0852               	movf	intToString@cifre,w
  2637     03CF  0253               	subwf	intToString@i,w
  2638     03D0                     u1275:
  2639     03D0  1C03               	skipc
  2640     03D1  2BD3               	goto	u1271
  2641     03D2  2BD4               	goto	u1270
  2642     03D3                     u1271:
  2643     03D3  2B84               	goto	l1557
  2644     03D4                     u1270:
  2645     03D4                     l1567:
  2646                           
  2647                           ;main.c: 448:     str[i] = '\0';
  2648     03D4  1283               	bcf	3,5	;RP0=0, select bank0
  2649     03D5  1303               	bcf	3,6	;RP1=0, select bank0
  2650     03D6  0853               	movf	intToString@i,w
  2651     03D7  074F               	addwf	intToString@str,w
  2652     03D8  00FB               	movwf	??_intToString
  2653     03D9  087B               	movf	??_intToString,w
  2654     03DA  0084               	movwf	4
  2655     03DB  1383               	bcf	3,7	;select IRP bank0
  2656     03DC  0180               	clrf	0
  2657     03DD                     l257:
  2658     03DD  0008               	return
  2659     03DE                     __end_of_intToString:
  2660                           
  2661                           	psect	text7
  2662     0138                     __ptext7:	
  2663 ;; *************** function _potenza *****************
  2664 ;; Defined at:
  2665 ;;		line 426 in file "main.c"
  2666 ;; Parameters:    Size  Location     Type
  2667 ;;  b               1    wreg     unsigned char 
  2668 ;;  e               1    6[COMMON] unsigned char 
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;  b               1    0[BANK0 ] unsigned char 
  2671 ;;  i               2    1[BANK0 ] int 
  2672 ;;  n               2    3[BANK0 ] int 
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  2    6[COMMON] int 
  2675 ;; Registers used:
  2676 ;;		wreg, status,2, status,0, pclath, cstack
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2682 ;;      Params:         2       0       0       0       0
  2683 ;;      Locals:         0       5       0       0       0
  2684 ;;      Temps:          2       0       0       0       0
  2685 ;;      Totals:         4       5       0       0       0
  2686 ;;Total ram usage:        9 bytes
  2687 ;; Hardware stack levels used: 1
  2688 ;; Hardware stack levels required when called: 1
  2689 ;; This function calls:
  2690 ;;		___wmul
  2691 ;; This function is called by:
  2692 ;;		_intToString
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           
  2696     0138                     _potenza:	
  2697                           ;psect for function _potenza
  2698                           
  2699                           
  2700                           ;incstack = 0
  2701                           ; Regs used in _potenza: [wreg+status,2+status,0+pclath+cstack]
  2702                           ;potenza@b stored from wreg
  2703     0138  1283               	bcf	3,5	;RP0=0, select bank0
  2704     0139  1303               	bcf	3,6	;RP1=0, select bank0
  2705     013A  00C0               	movwf	potenza@b
  2706     013B                     l1443:
  2707                           
  2708                           ;main.c: 427:     int n = 1;
  2709     013B  3001               	movlw	1
  2710     013C  00C3               	movwf	potenza@n
  2711     013D  3000               	movlw	0
  2712     013E  00C4               	movwf	potenza@n+1
  2713     013F                     l1445:
  2714                           
  2715                           ;main.c: 428:     for (int i = 0; i < e; i++) {
  2716     013F  01C1               	clrf	potenza@i
  2717     0140  01C2               	clrf	potenza@i+1
  2718     0141  2960               	goto	l1451
  2719     0142                     l1447:
  2720                           
  2721                           ;main.c: 429:         n = n * b;
  2722     0142  1283               	bcf	3,5	;RP0=0, select bank0
  2723     0143  1303               	bcf	3,6	;RP1=0, select bank0
  2724     0144  0840               	movf	potenza@b,w
  2725     0145  00F8               	movwf	??_potenza
  2726     0146  01F9               	clrf	??_potenza+1
  2727     0147  0878               	movf	??_potenza,w
  2728     0148  00F0               	movwf	___wmul@multiplier
  2729     0149  0879               	movf	??_potenza+1,w
  2730     014A  00F1               	movwf	___wmul@multiplier+1
  2731     014B  0844               	movf	potenza@n+1,w
  2732     014C  00F3               	movwf	___wmul@multiplicand+1
  2733     014D  0843               	movf	potenza@n,w
  2734     014E  00F2               	movwf	___wmul@multiplicand
  2735     014F  120A  118A  20EA  120A  118A  	fcall	___wmul
  2736     0154  0871               	movf	?___wmul+1,w
  2737     0155  1283               	bcf	3,5	;RP0=0, select bank0
  2738     0156  1303               	bcf	3,6	;RP1=0, select bank0
  2739     0157  00C4               	movwf	potenza@n+1
  2740     0158  0870               	movf	?___wmul,w
  2741     0159  00C3               	movwf	potenza@n
  2742     015A                     l1449:
  2743                           
  2744                           ;main.c: 430:     }
  2745     015A  3001               	movlw	1
  2746     015B  07C1               	addwf	potenza@i,f
  2747     015C  1803               	skipnc
  2748     015D  0AC2               	incf	potenza@i+1,f
  2749     015E  3000               	movlw	0
  2750     015F  07C2               	addwf	potenza@i+1,f
  2751     0160                     l1451:
  2752     0160  0842               	movf	potenza@i+1,w
  2753     0161  3A80               	xorlw	128
  2754     0162  00F8               	movwf	??_potenza
  2755     0163  3080               	movlw	128
  2756     0164  0278               	subwf	??_potenza,w
  2757     0165  1D03               	skipz
  2758     0166  2969               	goto	u1035
  2759     0167  0876               	movf	potenza@e,w
  2760     0168  0241               	subwf	potenza@i,w
  2761     0169                     u1035:
  2762     0169  1C03               	skipc
  2763     016A  296C               	goto	u1031
  2764     016B  296D               	goto	u1030
  2765     016C                     u1031:
  2766     016C  2942               	goto	l1447
  2767     016D                     u1030:
  2768     016D                     l1453:
  2769                           
  2770                           ;main.c: 431:     return n;
  2771     016D  1283               	bcf	3,5	;RP0=0, select bank0
  2772     016E  1303               	bcf	3,6	;RP1=0, select bank0
  2773     016F  0844               	movf	potenza@n+1,w
  2774     0170  00F7               	movwf	?_potenza+1
  2775     0171  0843               	movf	potenza@n,w
  2776     0172  00F6               	movwf	?_potenza
  2777     0173                     l248:
  2778     0173  0008               	return
  2779     0174                     __end_of_potenza:
  2780                           
  2781                           	psect	text8
  2782     00EA                     __ptext8:	
  2783 ;; *************** function ___wmul *****************
  2784 ;; Defined at:
  2785 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;  multiplier      2    0[COMMON] unsigned int 
  2788 ;;  multiplicand    2    2[COMMON] unsigned int 
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;  product         2    4[COMMON] unsigned int 
  2791 ;; Return value:  Size  Location     Type
  2792 ;;                  2    0[COMMON] unsigned int 
  2793 ;; Registers used:
  2794 ;;		wreg, status,2, status,0
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2800 ;;      Params:         4       0       0       0       0
  2801 ;;      Locals:         2       0       0       0       0
  2802 ;;      Temps:          0       0       0       0       0
  2803 ;;      Totals:         6       0       0       0       0
  2804 ;;Total ram usage:        6 bytes
  2805 ;; Hardware stack levels used: 1
  2806 ;; This function calls:
  2807 ;;		Nothing
  2808 ;; This function is called by:
  2809 ;;		_potenza
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           
  2813     00EA                     ___wmul:	
  2814                           ;psect for function ___wmul
  2815                           
  2816     00EA                     l1409:	
  2817                           ;incstack = 0
  2818                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2819                           
  2820     00EA  01F4               	clrf	___wmul@product
  2821     00EB  01F5               	clrf	___wmul@product+1
  2822     00EC                     l1411:
  2823     00EC  1C70               	btfss	___wmul@multiplier,0
  2824     00ED  28EF               	goto	u991
  2825     00EE  28F0               	goto	u990
  2826     00EF                     u991:
  2827     00EF  28F6               	goto	l343
  2828     00F0                     u990:
  2829     00F0                     l1413:
  2830     00F0  0872               	movf	___wmul@multiplicand,w
  2831     00F1  07F4               	addwf	___wmul@product,f
  2832     00F2  1803               	skipnc
  2833     00F3  0AF5               	incf	___wmul@product+1,f
  2834     00F4  0873               	movf	___wmul@multiplicand+1,w
  2835     00F5  07F5               	addwf	___wmul@product+1,f
  2836     00F6                     l343:
  2837     00F6  3001               	movlw	1
  2838     00F7                     u1005:
  2839     00F7  1003               	clrc
  2840     00F8  0DF2               	rlf	___wmul@multiplicand,f
  2841     00F9  0DF3               	rlf	___wmul@multiplicand+1,f
  2842     00FA  3EFF               	addlw	-1
  2843     00FB  1D03               	skipz
  2844     00FC  28F7               	goto	u1005
  2845     00FD                     l1415:
  2846     00FD  3001               	movlw	1
  2847     00FE                     u1015:
  2848     00FE  1003               	clrc
  2849     00FF  0CF1               	rrf	___wmul@multiplier+1,f
  2850     0100  0CF0               	rrf	___wmul@multiplier,f
  2851     0101  3EFF               	addlw	-1
  2852     0102  1D03               	skipz
  2853     0103  28FE               	goto	u1015
  2854     0104                     l1417:
  2855     0104  0870               	movf	___wmul@multiplier,w
  2856     0105  0471               	iorwf	___wmul@multiplier+1,w
  2857     0106  1D03               	btfss	3,2
  2858     0107  2909               	goto	u1021
  2859     0108  290A               	goto	u1020
  2860     0109                     u1021:
  2861     0109  28EC               	goto	l1411
  2862     010A                     u1020:
  2863     010A                     l1419:
  2864     010A  0875               	movf	___wmul@product+1,w
  2865     010B  00F1               	movwf	?___wmul+1
  2866     010C  0874               	movf	___wmul@product,w
  2867     010D  00F0               	movwf	?___wmul
  2868     010E                     l345:
  2869     010E  0008               	return
  2870     010F                     __end_of___wmul:
  2871                           
  2872                           	psect	text9
  2873     01B8                     __ptext9:	
  2874 ;; *************** function ___awmod *****************
  2875 ;; Defined at:
  2876 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  2877 ;; Parameters:    Size  Location     Type
  2878 ;;  divisor         2    0[COMMON] int 
  2879 ;;  dividend        2    2[COMMON] int 
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;  sign            1    6[COMMON] unsigned char 
  2882 ;;  counter         1    5[COMMON] unsigned char 
  2883 ;; Return value:  Size  Location     Type
  2884 ;;                  2    0[COMMON] int 
  2885 ;; Registers used:
  2886 ;;		wreg, status,2, status,0
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2892 ;;      Params:         4       0       0       0       0
  2893 ;;      Locals:         2       0       0       0       0
  2894 ;;      Temps:          1       0       0       0       0
  2895 ;;      Totals:         7       0       0       0       0
  2896 ;;Total ram usage:        7 bytes
  2897 ;; Hardware stack levels used: 1
  2898 ;; This function calls:
  2899 ;;		Nothing
  2900 ;; This function is called by:
  2901 ;;		_intToString
  2902 ;;		_KeyPressed
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905                           
  2906     01B8                     ___awmod:	
  2907                           ;psect for function ___awmod
  2908                           
  2909     01B8                     l1501:	
  2910                           ;incstack = 0
  2911                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2912                           
  2913     01B8  01F6               	clrf	___awmod@sign
  2914     01B9                     l1503:
  2915     01B9  1FF3               	btfss	___awmod@dividend+1,7
  2916     01BA  29BC               	goto	u1141
  2917     01BB  29BD               	goto	u1140
  2918     01BC                     u1141:
  2919     01BC  29C4               	goto	l1509
  2920     01BD                     u1140:
  2921     01BD                     l1505:
  2922     01BD  09F2               	comf	___awmod@dividend,f
  2923     01BE  09F3               	comf	___awmod@dividend+1,f
  2924     01BF  0AF2               	incf	___awmod@dividend,f
  2925     01C0  1903               	skipnz
  2926     01C1  0AF3               	incf	___awmod@dividend+1,f
  2927     01C2                     l1507:
  2928     01C2  01F6               	clrf	___awmod@sign
  2929     01C3  0AF6               	incf	___awmod@sign,f
  2930     01C4                     l1509:
  2931     01C4  1FF1               	btfss	___awmod@divisor+1,7
  2932     01C5  29C7               	goto	u1151
  2933     01C6  29C8               	goto	u1150
  2934     01C7                     u1151:
  2935     01C7  29CD               	goto	l1513
  2936     01C8                     u1150:
  2937     01C8                     l1511:
  2938     01C8  09F0               	comf	___awmod@divisor,f
  2939     01C9  09F1               	comf	___awmod@divisor+1,f
  2940     01CA  0AF0               	incf	___awmod@divisor,f
  2941     01CB  1903               	skipnz
  2942     01CC  0AF1               	incf	___awmod@divisor+1,f
  2943     01CD                     l1513:
  2944     01CD  0870               	movf	___awmod@divisor,w
  2945     01CE  0471               	iorwf	___awmod@divisor+1,w
  2946     01CF  1903               	btfsc	3,2
  2947     01D0  29D2               	goto	u1161
  2948     01D1  29D3               	goto	u1160
  2949     01D2                     u1161:
  2950     01D2  2A02               	goto	l1531
  2951     01D3                     u1160:
  2952     01D3                     l1515:
  2953     01D3  01F5               	clrf	___awmod@counter
  2954     01D4  0AF5               	incf	___awmod@counter,f
  2955     01D5  29E1               	goto	l1521
  2956     01D6                     l1517:
  2957     01D6  3001               	movlw	1
  2958     01D7                     u1175:
  2959     01D7  1003               	clrc
  2960     01D8  0DF0               	rlf	___awmod@divisor,f
  2961     01D9  0DF1               	rlf	___awmod@divisor+1,f
  2962     01DA  3EFF               	addlw	-1
  2963     01DB  1D03               	skipz
  2964     01DC  29D7               	goto	u1175
  2965     01DD                     l1519:
  2966     01DD  3001               	movlw	1
  2967     01DE  00F4               	movwf	??___awmod
  2968     01DF  0874               	movf	??___awmod,w
  2969     01E0  07F5               	addwf	___awmod@counter,f
  2970     01E1                     l1521:
  2971     01E1  1FF1               	btfss	___awmod@divisor+1,7
  2972     01E2  29E4               	goto	u1181
  2973     01E3  29E5               	goto	u1180
  2974     01E4                     u1181:
  2975     01E4  29D6               	goto	l1517
  2976     01E5                     u1180:
  2977     01E5                     l1523:
  2978     01E5  0871               	movf	___awmod@divisor+1,w
  2979     01E6  0273               	subwf	___awmod@dividend+1,w
  2980     01E7  1D03               	skipz
  2981     01E8  29EB               	goto	u1195
  2982     01E9  0870               	movf	___awmod@divisor,w
  2983     01EA  0272               	subwf	___awmod@dividend,w
  2984     01EB                     u1195:
  2985     01EB  1C03               	skipc
  2986     01EC  29EE               	goto	u1191
  2987     01ED  29EF               	goto	u1190
  2988     01EE                     u1191:
  2989     01EE  29F5               	goto	l1527
  2990     01EF                     u1190:
  2991     01EF                     l1525:
  2992     01EF  0870               	movf	___awmod@divisor,w
  2993     01F0  02F2               	subwf	___awmod@dividend,f
  2994     01F1  0871               	movf	___awmod@divisor+1,w
  2995     01F2  1C03               	skipc
  2996     01F3  03F3               	decf	___awmod@dividend+1,f
  2997     01F4  02F3               	subwf	___awmod@dividend+1,f
  2998     01F5                     l1527:
  2999     01F5  3001               	movlw	1
  3000     01F6                     u1205:
  3001     01F6  1003               	clrc
  3002     01F7  0CF1               	rrf	___awmod@divisor+1,f
  3003     01F8  0CF0               	rrf	___awmod@divisor,f
  3004     01F9  3EFF               	addlw	-1
  3005     01FA  1D03               	skipz
  3006     01FB  29F6               	goto	u1205
  3007     01FC                     l1529:
  3008     01FC  3001               	movlw	1
  3009     01FD  02F5               	subwf	___awmod@counter,f
  3010     01FE  1D03               	btfss	3,2
  3011     01FF  2A01               	goto	u1211
  3012     0200  2A02               	goto	u1210
  3013     0201                     u1211:
  3014     0201  29E5               	goto	l1523
  3015     0202                     u1210:
  3016     0202                     l1531:
  3017     0202  0876               	movf	___awmod@sign,w
  3018     0203  1903               	btfsc	3,2
  3019     0204  2A06               	goto	u1221
  3020     0205  2A07               	goto	u1220
  3021     0206                     u1221:
  3022     0206  2A0C               	goto	l1535
  3023     0207                     u1220:
  3024     0207                     l1533:
  3025     0207  09F2               	comf	___awmod@dividend,f
  3026     0208  09F3               	comf	___awmod@dividend+1,f
  3027     0209  0AF2               	incf	___awmod@dividend,f
  3028     020A  1903               	skipnz
  3029     020B  0AF3               	incf	___awmod@dividend+1,f
  3030     020C                     l1535:
  3031     020C  0873               	movf	___awmod@dividend+1,w
  3032     020D  00F1               	movwf	?___awmod+1
  3033     020E  0872               	movf	___awmod@dividend,w
  3034     020F  00F0               	movwf	?___awmod
  3035     0210                     l509:
  3036     0210  0008               	return
  3037     0211                     __end_of___awmod:
  3038                           
  3039                           	psect	text10
  3040     026B                     __ptext10:	
  3041 ;; *************** function ___awdiv *****************
  3042 ;; Defined at:
  3043 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;  divisor         2    5[BANK0 ] int 
  3046 ;;  dividend        2    7[BANK0 ] int 
  3047 ;; Auto vars:     Size  Location     Type
  3048 ;;  quotient        2   11[BANK0 ] int 
  3049 ;;  sign            1   10[BANK0 ] unsigned char 
  3050 ;;  counter         1    9[BANK0 ] unsigned char 
  3051 ;; Return value:  Size  Location     Type
  3052 ;;                  2    5[BANK0 ] int 
  3053 ;; Registers used:
  3054 ;;		wreg, status,2, status,0
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/0
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3060 ;;      Params:         0       4       0       0       0
  3061 ;;      Locals:         0       4       0       0       0
  3062 ;;      Temps:          1       0       0       0       0
  3063 ;;      Totals:         1       8       0       0       0
  3064 ;;Total ram usage:        9 bytes
  3065 ;; Hardware stack levels used: 1
  3066 ;; This function calls:
  3067 ;;		Nothing
  3068 ;; This function is called by:
  3069 ;;		_intToString
  3070 ;; This function uses a non-reentrant model
  3071 ;;
  3072                           
  3073     026B                     ___awdiv:	
  3074                           ;psect for function ___awdiv
  3075                           
  3076     026B                     l1457:	
  3077                           ;incstack = 0
  3078                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3079                           
  3080     026B  1283               	bcf	3,5	;RP0=0, select bank0
  3081     026C  1303               	bcf	3,6	;RP1=0, select bank0
  3082     026D  01CA               	clrf	___awdiv@sign
  3083     026E                     l1459:
  3084     026E  1FC6               	btfss	___awdiv@divisor+1,7
  3085     026F  2A71               	goto	u1041
  3086     0270  2A72               	goto	u1040
  3087     0271                     u1041:
  3088     0271  2A79               	goto	l1465
  3089     0272                     u1040:
  3090     0272                     l1461:
  3091     0272  09C5               	comf	___awdiv@divisor,f
  3092     0273  09C6               	comf	___awdiv@divisor+1,f
  3093     0274  0AC5               	incf	___awdiv@divisor,f
  3094     0275  1903               	skipnz
  3095     0276  0AC6               	incf	___awdiv@divisor+1,f
  3096     0277                     l1463:
  3097     0277  01CA               	clrf	___awdiv@sign
  3098     0278  0ACA               	incf	___awdiv@sign,f
  3099     0279                     l1465:
  3100     0279  1FC8               	btfss	___awdiv@dividend+1,7
  3101     027A  2A7C               	goto	u1051
  3102     027B  2A7D               	goto	u1050
  3103     027C                     u1051:
  3104     027C  2A86               	goto	l1471
  3105     027D                     u1050:
  3106     027D                     l1467:
  3107     027D  09C7               	comf	___awdiv@dividend,f
  3108     027E  09C8               	comf	___awdiv@dividend+1,f
  3109     027F  0AC7               	incf	___awdiv@dividend,f
  3110     0280  1903               	skipnz
  3111     0281  0AC8               	incf	___awdiv@dividend+1,f
  3112     0282                     l1469:
  3113     0282  3001               	movlw	1
  3114     0283  00FA               	movwf	??___awdiv
  3115     0284  087A               	movf	??___awdiv,w
  3116     0285  06CA               	xorwf	___awdiv@sign,f
  3117     0286                     l1471:
  3118     0286  01CB               	clrf	___awdiv@quotient
  3119     0287  01CC               	clrf	___awdiv@quotient+1
  3120     0288                     l1473:
  3121     0288  0845               	movf	___awdiv@divisor,w
  3122     0289  0446               	iorwf	___awdiv@divisor+1,w
  3123     028A  1903               	btfsc	3,2
  3124     028B  2A8D               	goto	u1061
  3125     028C  2A8E               	goto	u1060
  3126     028D                     u1061:
  3127     028D  2AC5               	goto	l1493
  3128     028E                     u1060:
  3129     028E                     l1475:
  3130     028E  01C9               	clrf	___awdiv@counter
  3131     028F  0AC9               	incf	___awdiv@counter,f
  3132     0290  2A9C               	goto	l1481
  3133     0291                     l1477:
  3134     0291  3001               	movlw	1
  3135     0292                     u1075:
  3136     0292  1003               	clrc
  3137     0293  0DC5               	rlf	___awdiv@divisor,f
  3138     0294  0DC6               	rlf	___awdiv@divisor+1,f
  3139     0295  3EFF               	addlw	-1
  3140     0296  1D03               	skipz
  3141     0297  2A92               	goto	u1075
  3142     0298                     l1479:
  3143     0298  3001               	movlw	1
  3144     0299  00FA               	movwf	??___awdiv
  3145     029A  087A               	movf	??___awdiv,w
  3146     029B  07C9               	addwf	___awdiv@counter,f
  3147     029C                     l1481:
  3148     029C  1FC6               	btfss	___awdiv@divisor+1,7
  3149     029D  2A9F               	goto	u1081
  3150     029E  2AA0               	goto	u1080
  3151     029F                     u1081:
  3152     029F  2A91               	goto	l1477
  3153     02A0                     u1080:
  3154     02A0                     l1483:
  3155     02A0  3001               	movlw	1
  3156     02A1                     u1095:
  3157     02A1  1003               	clrc
  3158     02A2  0DCB               	rlf	___awdiv@quotient,f
  3159     02A3  0DCC               	rlf	___awdiv@quotient+1,f
  3160     02A4  3EFF               	addlw	-1
  3161     02A5  1D03               	skipz
  3162     02A6  2AA1               	goto	u1095
  3163     02A7  0846               	movf	___awdiv@divisor+1,w
  3164     02A8  0248               	subwf	___awdiv@dividend+1,w
  3165     02A9  1D03               	skipz
  3166     02AA  2AAD               	goto	u1105
  3167     02AB  0845               	movf	___awdiv@divisor,w
  3168     02AC  0247               	subwf	___awdiv@dividend,w
  3169     02AD                     u1105:
  3170     02AD  1C03               	skipc
  3171     02AE  2AB0               	goto	u1101
  3172     02AF  2AB1               	goto	u1100
  3173     02B0                     u1101:
  3174     02B0  2AB8               	goto	l1489
  3175     02B1                     u1100:
  3176     02B1                     l1485:
  3177     02B1  0845               	movf	___awdiv@divisor,w
  3178     02B2  02C7               	subwf	___awdiv@dividend,f
  3179     02B3  0846               	movf	___awdiv@divisor+1,w
  3180     02B4  1C03               	skipc
  3181     02B5  03C8               	decf	___awdiv@dividend+1,f
  3182     02B6  02C8               	subwf	___awdiv@dividend+1,f
  3183     02B7                     l1487:
  3184     02B7  144B               	bsf	___awdiv@quotient,0
  3185     02B8                     l1489:
  3186     02B8  3001               	movlw	1
  3187     02B9                     u1115:
  3188     02B9  1003               	clrc
  3189     02BA  0CC6               	rrf	___awdiv@divisor+1,f
  3190     02BB  0CC5               	rrf	___awdiv@divisor,f
  3191     02BC  3EFF               	addlw	-1
  3192     02BD  1D03               	skipz
  3193     02BE  2AB9               	goto	u1115
  3194     02BF                     l1491:
  3195     02BF  3001               	movlw	1
  3196     02C0  02C9               	subwf	___awdiv@counter,f
  3197     02C1  1D03               	btfss	3,2
  3198     02C2  2AC4               	goto	u1121
  3199     02C3  2AC5               	goto	u1120
  3200     02C4                     u1121:
  3201     02C4  2AA0               	goto	l1483
  3202     02C5                     u1120:
  3203     02C5                     l1493:
  3204     02C5  084A               	movf	___awdiv@sign,w
  3205     02C6  1903               	btfsc	3,2
  3206     02C7  2AC9               	goto	u1131
  3207     02C8  2ACA               	goto	u1130
  3208     02C9                     u1131:
  3209     02C9  2ACF               	goto	l1497
  3210     02CA                     u1130:
  3211     02CA                     l1495:
  3212     02CA  09CB               	comf	___awdiv@quotient,f
  3213     02CB  09CC               	comf	___awdiv@quotient+1,f
  3214     02CC  0ACB               	incf	___awdiv@quotient,f
  3215     02CD  1903               	skipnz
  3216     02CE  0ACC               	incf	___awdiv@quotient+1,f
  3217     02CF                     l1497:
  3218     02CF  084C               	movf	___awdiv@quotient+1,w
  3219     02D0  00C6               	movwf	?___awdiv+1
  3220     02D1  084B               	movf	___awdiv@quotient,w
  3221     02D2  00C5               	movwf	?___awdiv
  3222     02D3                     l496:
  3223     02D3  0008               	return
  3224     02D4                     __end_of___awdiv:
  3225                           
  3226                           	psect	text11
  3227     00D8                     __ptext11:	
  3228 ;; *************** function _UART_Init *****************
  3229 ;; Defined at:
  3230 ;;		line 209 in file "main.c"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;		None
  3233 ;; Auto vars:     Size  Location     Type
  3234 ;;		None
  3235 ;; Return value:  Size  Location     Type
  3236 ;;                  1    wreg      void 
  3237 ;; Registers used:
  3238 ;;		wreg
  3239 ;; Tracked objects:
  3240 ;;		On entry : 0/0
  3241 ;;		On exit  : 0/0
  3242 ;;		Unchanged: 0/0
  3243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3244 ;;      Params:         0       0       0       0       0
  3245 ;;      Locals:         0       0       0       0       0
  3246 ;;      Temps:          0       0       0       0       0
  3247 ;;      Totals:         0       0       0       0       0
  3248 ;;Total ram usage:        0 bytes
  3249 ;; Hardware stack levels used: 1
  3250 ;; This function calls:
  3251 ;;		Nothing
  3252 ;; This function is called by:
  3253 ;;		_main
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257     00D8                     _UART_Init:	
  3258                           ;psect for function _UART_Init
  3259                           
  3260     00D8                     l1569:	
  3261                           ;incstack = 0
  3262                           ; Regs used in _UART_Init: [wreg]
  3263                           
  3264                           
  3265                           ;main.c: 211:     TRISC6 = 0;
  3266     00D8  1683               	bsf	3,5	;RP0=1, select bank1
  3267     00D9  1303               	bcf	3,6	;RP1=0, select bank1
  3268     00DA  1307               	bcf	7,6	;volatile
  3269                           
  3270                           ;main.c: 212:     TRISC7 = 1;
  3271     00DB  1787               	bsf	7,7	;volatile
  3272                           
  3273                           ;main.c: 215:     BRGH = 1;
  3274     00DC  1518               	bsf	24,2	;volatile
  3275     00DD                     l1571:
  3276                           
  3277                           ;main.c: 216:     SPBRG = 51;
  3278     00DD  3033               	movlw	51
  3279     00DE  0099               	movwf	25	;volatile
  3280     00DF                     l1573:
  3281                           
  3282                           ;main.c: 219:     SYNC = 0;
  3283     00DF  1218               	bcf	24,4	;volatile
  3284     00E0                     l1575:
  3285                           
  3286                           ;main.c: 220:     SPEN = 1;
  3287     00E0  1283               	bcf	3,5	;RP0=0, select bank0
  3288     00E1  1303               	bcf	3,6	;RP1=0, select bank0
  3289     00E2  1798               	bsf	24,7	;volatile
  3290     00E3                     l1577:
  3291                           
  3292                           ;main.c: 223:     TXEN = 1;
  3293     00E3  1683               	bsf	3,5	;RP0=1, select bank1
  3294     00E4  1303               	bcf	3,6	;RP1=0, select bank1
  3295     00E5  1698               	bsf	24,5	;volatile
  3296     00E6                     l1579:
  3297                           
  3298                           ;main.c: 224:     CREN = 1;
  3299     00E6  1283               	bcf	3,5	;RP0=0, select bank0
  3300     00E7  1303               	bcf	3,6	;RP1=0, select bank0
  3301     00E8  1618               	bsf	24,4	;volatile
  3302     00E9                     l180:
  3303     00E9  0008               	return
  3304     00EA                     __end_of_UART_Init:
  3305                           
  3306                           	psect	text12
  3307     00CB                     __ptext12:	
  3308 ;; *************** function _Timer0_Init *****************
  3309 ;; Defined at:
  3310 ;;		line 315 in file "main.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;		None
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;		None
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  1    wreg      void 
  3317 ;; Registers used:
  3318 ;;		status,2
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3324 ;;      Params:         0       0       0       0       0
  3325 ;;      Locals:         0       0       0       0       0
  3326 ;;      Temps:          0       0       0       0       0
  3327 ;;      Totals:         0       0       0       0       0
  3328 ;;Total ram usage:        0 bytes
  3329 ;; Hardware stack levels used: 1
  3330 ;; This function calls:
  3331 ;;		Nothing
  3332 ;; This function is called by:
  3333 ;;		_main
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337     00CB                     _Timer0_Init:	
  3338                           ;psect for function _Timer0_Init
  3339                           
  3340     00CB                     l1605:	
  3341                           ;incstack = 0
  3342                           ; Regs used in _Timer0_Init: [status,2]
  3343                           
  3344                           
  3345                           ;main.c: 317:     T0CS = 0;
  3346     00CB  1683               	bsf	3,5	;RP0=1, select bank1
  3347     00CC  1303               	bcf	3,6	;RP1=0, select bank1
  3348     00CD  1281               	bcf	1,5	;volatile
  3349                           
  3350                           ;main.c: 318:     PSA = 0;
  3351     00CE  1181               	bcf	1,3	;volatile
  3352                           
  3353                           ;main.c: 319:     PS2 = 1;
  3354     00CF  1501               	bsf	1,2	;volatile
  3355                           
  3356                           ;main.c: 320:     PS1 = 1;
  3357     00D0  1481               	bsf	1,1	;volatile
  3358                           
  3359                           ;main.c: 321:     PS0 = 1;
  3360     00D1  1401               	bsf	1,0	;volatile
  3361     00D2                     l1607:
  3362                           
  3363                           ;main.c: 324:     TMR0 = 0;
  3364     00D2  1283               	bcf	3,5	;RP0=0, select bank0
  3365     00D3  1303               	bcf	3,6	;RP1=0, select bank0
  3366     00D4  0181               	clrf	1	;volatile
  3367     00D5                     l1609:
  3368                           
  3369                           ;main.c: 325:     TMR0IF = 0;
  3370     00D5  110B               	bcf	11,2	;volatile
  3371     00D6                     l1611:
  3372                           
  3373                           ;main.c: 326:     TMR0IE = 0;
  3374     00D6  128B               	bcf	11,5	;volatile
  3375     00D7                     l215:
  3376     00D7  0008               	return
  3377     00D8                     __end_of_Timer0_Init:
  3378                           
  3379                           	psect	text13
  3380     00A4                     __ptext13:	
  3381 ;; *************** function _RS485_TxEnable *****************
  3382 ;; Defined at:
  3383 ;;		line 227 in file "main.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;		None
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;		None
  3388 ;; Return value:  Size  Location     Type
  3389 ;;                  1    wreg      void 
  3390 ;; Registers used:
  3391 ;;		None
  3392 ;; Tracked objects:
  3393 ;;		On entry : 0/0
  3394 ;;		On exit  : 0/0
  3395 ;;		Unchanged: 0/0
  3396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3397 ;;      Params:         0       0       0       0       0
  3398 ;;      Locals:         0       0       0       0       0
  3399 ;;      Temps:          0       0       0       0       0
  3400 ;;      Totals:         0       0       0       0       0
  3401 ;;Total ram usage:        0 bytes
  3402 ;; Hardware stack levels used: 1
  3403 ;; This function calls:
  3404 ;;		Nothing
  3405 ;; This function is called by:
  3406 ;;		_main
  3407 ;; This function uses a non-reentrant model
  3408 ;;
  3409                           
  3410     00A4                     _RS485_TxEnable:	
  3411                           ;psect for function _RS485_TxEnable
  3412                           
  3413     00A4                     l1613:	
  3414                           ;incstack = 0
  3415                           ; Regs used in _RS485_TxEnable: []
  3416                           
  3417                           
  3418                           ;main.c: 228:     RC0 = 1;
  3419     00A4  1283               	bcf	3,5	;RP0=0, select bank0
  3420     00A5  1303               	bcf	3,6	;RP1=0, select bank0
  3421     00A6  1407               	bsf	7,0	;volatile
  3422                           
  3423                           ;main.c: 229:     RC1 = 0;
  3424     00A7  1087               	bcf	7,1	;volatile
  3425     00A8                     l183:
  3426     00A8  0008               	return
  3427     00A9                     __end_of_RS485_TxEnable:
  3428                           
  3429                           	psect	text14
  3430     009F                     __ptext14:	
  3431 ;; *************** function _RS485_RxEnable *****************
  3432 ;; Defined at:
  3433 ;;		line 232 in file "main.c"
  3434 ;; Parameters:    Size  Location     Type
  3435 ;;		None
  3436 ;; Auto vars:     Size  Location     Type
  3437 ;;		None
  3438 ;; Return value:  Size  Location     Type
  3439 ;;                  1    wreg      void 
  3440 ;; Registers used:
  3441 ;;		None
  3442 ;; Tracked objects:
  3443 ;;		On entry : 0/0
  3444 ;;		On exit  : 0/0
  3445 ;;		Unchanged: 0/0
  3446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3447 ;;      Params:         0       0       0       0       0
  3448 ;;      Locals:         0       0       0       0       0
  3449 ;;      Temps:          0       0       0       0       0
  3450 ;;      Totals:         0       0       0       0       0
  3451 ;;Total ram usage:        0 bytes
  3452 ;; Hardware stack levels used: 1
  3453 ;; This function calls:
  3454 ;;		Nothing
  3455 ;; This function is called by:
  3456 ;;		_main
  3457 ;; This function uses a non-reentrant model
  3458 ;;
  3459                           
  3460     009F                     _RS485_RxEnable:	
  3461                           ;psect for function _RS485_RxEnable
  3462                           
  3463     009F                     l1681:	
  3464                           ;incstack = 0
  3465                           ; Regs used in _RS485_RxEnable: []
  3466                           
  3467                           
  3468                           ;main.c: 233:     RC0 = 0;
  3469     009F  1283               	bcf	3,5	;RP0=0, select bank0
  3470     00A0  1303               	bcf	3,6	;RP1=0, select bank0
  3471     00A1  1007               	bcf	7,0	;volatile
  3472                           
  3473                           ;main.c: 234:     RC1 = 1;
  3474     00A2  1487               	bsf	7,1	;volatile
  3475     00A3                     l186:
  3476     00A3  0008               	return
  3477     00A4                     __end_of_RS485_RxEnable:
  3478                           
  3479                           	psect	text15
  3480     02D4                     __ptext15:	
  3481 ;; *************** function _KeyPadReader *****************
  3482 ;; Defined at:
  3483 ;;		line 343 in file "main.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;		None
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;		None
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  1    wreg      unsigned char 
  3490 ;; Registers used:
  3491 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3497 ;;      Params:         0       0       0       0       0
  3498 ;;      Locals:         0       0       0       0       0
  3499 ;;      Temps:          2       0       0       0       0
  3500 ;;      Totals:         2       0       0       0       0
  3501 ;;Total ram usage:        2 bytes
  3502 ;; Hardware stack levels used: 2
  3503 ;; This function calls:
  3504 ;;		Nothing
  3505 ;; This function is called by:
  3506 ;;		_main
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510     02D4                     _KeyPadReader:	
  3511                           ;psect for function _KeyPadReader
  3512                           
  3513     02D4                     l1627:	
  3514                           ;incstack = 0
  3515                           ; Regs used in _KeyPadReader: [wreg-fsr0h+status,2+status,0+pclath]
  3516                           
  3517                           
  3518                           ;main.c: 344:     TRISD |= 0x0F;
  3519     02D4  300F               	movlw	15
  3520     02D5  00F0               	movwf	??_KeyPadReader
  3521     02D6  0870               	movf	??_KeyPadReader,w
  3522     02D7  1683               	bsf	3,5	;RP0=1, select bank1
  3523     02D8  1303               	bcf	3,6	;RP1=0, select bank1
  3524     02D9  0488               	iorwf	8,f	;volatile
  3525     02DA                     l1629:
  3526                           
  3527                           ;main.c: 347:     for (colScan = 0; colScan < 3; colScan++) {
  3528     02DA  1283               	bcf	3,5	;RP0=0, select bank0
  3529     02DB  1303               	bcf	3,6	;RP1=0, select bank0
  3530     02DC  01B7               	clrf	_colScan
  3531     02DD                     l1635:
  3532                           
  3533                           ;main.c: 348:         PORTB = PORTB | 0x07;
  3534     02DD  0806               	movf	6,w	;volatile
  3535     02DE  3807               	iorlw	7
  3536     02DF  0086               	movwf	6	;volatile
  3537     02E0                     l1637:
  3538                           
  3539                           ;main.c: 349:         PORTB &= colMask[colScan];
  3540     02E0  0837               	movf	_colScan,w
  3541     02E1  3E11               	addlw	low ((_colMask-__stringbase)| (0+32768))
  3542     02E2  0084               	movwf	4
  3543     02E3  120A  118A  200D  120A  118A  	fcall	stringdir
  3544     02E8  00F0               	movwf	??_KeyPadReader
  3545     02E9  0870               	movf	??_KeyPadReader,w
  3546     02EA  0586               	andwf	6,f	;volatile
  3547     02EB                     l1639:
  3548                           
  3549                           ;main.c: 352:         for (rowScan = 0; rowScan < 4; rowScan++) {
  3550     02EB  01B6               	clrf	_rowScan
  3551     02EC                     l1645:
  3552                           
  3553                           ;main.c: 353:             if (!(PORTD & rowMask[rowScan]) && (old_btn)) {
  3554     02EC  0836               	movf	_rowScan,w
  3555     02ED  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  3556     02EE  0084               	movwf	4
  3557     02EF  120A  118A  200D  120A  118A  	fcall	stringdir
  3558     02F4  0508               	andwf	8,w	;volatile
  3559     02F5  1D03               	btfss	3,2
  3560     02F6  2AF8               	goto	u1301
  3561     02F7  2AF9               	goto	u1300
  3562     02F8                     u1301:
  3563     02F8  2B02               	goto	l1653
  3564     02F9                     u1300:
  3565     02F9                     l1647:
  3566     02F9  1C60               	btfss	_old_btn/(0+8),_old_btn& (0+7)
  3567     02FA  2AFC               	goto	u1311
  3568     02FB  2AFD               	goto	u1310
  3569     02FC                     u1311:
  3570     02FC  2B02               	goto	l1653
  3571     02FD                     u1310:
  3572     02FD                     l1649:
  3573                           
  3574                           ;main.c: 354:                 old_btn = 0;
  3575     02FD  1060               	bcf	_old_btn/(0+8),_old_btn& (0+7)
  3576     02FE                     l1651:
  3577                           
  3578                           ;main.c: 355:                 stato++;
  3579     02FE  3001               	movlw	1
  3580     02FF  00F0               	movwf	??_KeyPadReader
  3581     0300  0870               	movf	??_KeyPadReader,w
  3582     0301  07B5               	addwf	_stato,f
  3583     0302                     l1653:
  3584                           
  3585                           ;main.c: 357:             if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  3586     0302  0836               	movf	_rowScan,w
  3587     0303  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  3588     0304  0084               	movwf	4
  3589     0305  120A  118A  200D  120A  118A  	fcall	stringdir
  3590     030A  0508               	andwf	8,w	;volatile
  3591     030B  1903               	btfsc	3,2
  3592     030C  2B0E               	goto	u1321
  3593     030D  2B0F               	goto	u1320
  3594     030E                     u1321:
  3595     030E  2B30               	goto	l1665
  3596     030F                     u1320:
  3597     030F                     l1655:
  3598     030F  1860               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  3599     0310  2B12               	goto	u1331
  3600     0311  2B13               	goto	u1330
  3601     0312                     u1331:
  3602     0312  2B30               	goto	l1665
  3603     0313                     u1330:
  3604     0313                     l1657:
  3605                           
  3606                           ;main.c: 358:                 _delay((unsigned long)((10)*(20000000/4000.0)));
  3607     0313  3041               	movlw	65
  3608     0314  00F1               	movwf	??_KeyPadReader+1
  3609     0315  30EE               	movlw	238
  3610     0316  00F0               	movwf	??_KeyPadReader
  3611     0317                     u2217:
  3612     0317  0BF0               	decfsz	??_KeyPadReader,f
  3613     0318  2B17               	goto	u2217
  3614     0319  0BF1               	decfsz	??_KeyPadReader+1,f
  3615     031A  2B17               	goto	u2217
  3616     031B  0000               	nop
  3617     031C                     l1659:
  3618                           
  3619                           ;main.c: 359:                 if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  3620     031C  1283               	bcf	3,5	;RP0=0, select bank0
  3621     031D  1303               	bcf	3,6	;RP1=0, select bank0
  3622     031E  0836               	movf	_rowScan,w
  3623     031F  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  3624     0320  0084               	movwf	4
  3625     0321  120A  118A  200D  120A  118A  	fcall	stringdir
  3626     0326  0508               	andwf	8,w	;volatile
  3627     0327  1903               	btfsc	3,2
  3628     0328  2B2A               	goto	u1341
  3629     0329  2B2B               	goto	u1340
  3630     032A                     u1341:
  3631     032A  2B30               	goto	l1665
  3632     032B                     u1340:
  3633     032B                     l1661:
  3634     032B  1860               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  3635     032C  2B2E               	goto	u1351
  3636     032D  2B2F               	goto	u1350
  3637     032E                     u1351:
  3638     032E  2B30               	goto	l1665
  3639     032F                     u1350:
  3640     032F                     l1663:
  3641                           
  3642                           ;main.c: 360:                     old_btn = 1;
  3643     032F  1460               	bsf	_old_btn/(0+8),_old_btn& (0+7)
  3644     0330                     l1665:
  3645                           
  3646                           ;main.c: 363:             if (stato != old_stato) {
  3647     0330  0835               	movf	_stato,w
  3648     0331  0634               	xorwf	_old_stato,w
  3649     0332  1903               	skipnz
  3650     0333  2B35               	goto	u1361
  3651     0334  2B36               	goto	u1360
  3652     0335                     u1361:
  3653     0335  2B44               	goto	l1673
  3654     0336                     u1360:
  3655     0336                     l1667:
  3656                           
  3657                           ;main.c: 364:                 keypressed = rowScan + (4 * colScan);
  3658     0336  0837               	movf	_colScan,w
  3659     0337  00F0               	movwf	??_KeyPadReader
  3660     0338  3002               	movlw	2
  3661     0339                     u1375:
  3662     0339  1003               	clrc
  3663     033A  0DF0               	rlf	??_KeyPadReader,f
  3664     033B  3EFF               	addlw	-1
  3665     033C  1D03               	skipz
  3666     033D  2B39               	goto	u1375
  3667     033E  0836               	movf	_rowScan,w
  3668     033F  0770               	addwf	??_KeyPadReader,w
  3669     0340  00B9               	movwf	_keypressed
  3670     0341                     l1669:
  3671                           
  3672                           ;main.c: 367:                 old_stato = stato;
  3673     0341  0835               	movf	_stato,w
  3674     0342  00B4               	movwf	_old_stato
  3675     0343  2B58               	goto	l232
  3676     0344                     l1673:
  3677                           
  3678                           ;main.c: 371:         }
  3679     0344  3001               	movlw	1
  3680     0345  00F0               	movwf	??_KeyPadReader
  3681     0346  0870               	movf	??_KeyPadReader,w
  3682     0347  07B6               	addwf	_rowScan,f
  3683     0348                     l1675:
  3684     0348  3004               	movlw	4
  3685     0349  0236               	subwf	_rowScan,w
  3686     034A  1C03               	skipc
  3687     034B  2B4D               	goto	u1381
  3688     034C  2B4E               	goto	u1380
  3689     034D                     u1381:
  3690     034D  2AEC               	goto	l1645
  3691     034E                     u1380:
  3692     034E                     l1677:
  3693                           
  3694                           ;main.c: 373:     }
  3695     034E  3001               	movlw	1
  3696     034F  00F0               	movwf	??_KeyPadReader
  3697     0350  0870               	movf	??_KeyPadReader,w
  3698     0351  07B7               	addwf	_colScan,f
  3699     0352                     l1679:
  3700     0352  3003               	movlw	3
  3701     0353  0237               	subwf	_colScan,w
  3702     0354  1C03               	skipc
  3703     0355  2B57               	goto	u1391
  3704     0356  2B58               	goto	u1390
  3705     0357                     u1391:
  3706     0357  2ADD               	goto	l1635
  3707     0358                     u1390:
  3708     0358                     l232:
  3709     0358  0008               	return
  3710     0359                     __end_of_KeyPadReader:
  3711                           
  3712                           	psect	text16
  3713     00C0                     __ptext16:	
  3714 ;; *************** function _GenerateRandomNumber *****************
  3715 ;; Defined at:
  3716 ;;		line 329 in file "main.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;		None
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;  randomNum       1    0[COMMON] unsigned char 
  3721 ;; Return value:  Size  Location     Type
  3722 ;;                  1    wreg      unsigned char 
  3723 ;; Registers used:
  3724 ;;		wreg
  3725 ;; Tracked objects:
  3726 ;;		On entry : 0/0
  3727 ;;		On exit  : 0/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3730 ;;      Params:         0       0       0       0       0
  3731 ;;      Locals:         1       0       0       0       0
  3732 ;;      Temps:          0       0       0       0       0
  3733 ;;      Totals:         1       0       0       0       0
  3734 ;;Total ram usage:        1 bytes
  3735 ;; Hardware stack levels used: 1
  3736 ;; This function calls:
  3737 ;;		Nothing
  3738 ;; This function is called by:
  3739 ;;		_main
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           
  3743     00C0                     _GenerateRandomNumber:	
  3744                           ;psect for function _GenerateRandomNumber
  3745                           
  3746     00C0                     l1619:	
  3747                           ;incstack = 0
  3748                           ; Regs used in _GenerateRandomNumber: [wreg]
  3749                           
  3750     00C0                     l218:	
  3751                           ;main.c: 331:     while (!TMR0IF)
  3752                           
  3753                           
  3754                           ;main.c: 331:     while (!TMR0IF)
  3755     00C0  1D0B               	btfss	11,2	;volatile
  3756     00C1  28C3               	goto	u1291
  3757     00C2  28C4               	goto	u1290
  3758     00C3                     u1291:
  3759     00C3  28C0               	goto	l218
  3760     00C4                     u1290:
  3761     00C4                     l1621:
  3762                           
  3763                           ;main.c: 335:     unsigned char randomNum = TMR0;
  3764     00C4  1283               	bcf	3,5	;RP0=0, select bank0
  3765     00C5  1303               	bcf	3,6	;RP1=0, select bank0
  3766     00C6  0801               	movf	1,w	;volatile
  3767     00C7  00F0               	movwf	GenerateRandomNumber@randomNum
  3768     00C8                     l1623:
  3769                           
  3770                           ;main.c: 338:     TMR0IF = 0;
  3771     00C8  110B               	bcf	11,2	;volatile
  3772                           
  3773                           ;main.c: 340:     return randomNum;
  3774     00C9  0870               	movf	GenerateRandomNumber@randomNum,w
  3775     00CA                     l221:
  3776     00CA  0008               	return
  3777     00CB                     __end_of_GenerateRandomNumber:
  3778     007E                     btemp	set	126	;btemp
  3779     007E                     wtemp0	set	126
  3780                           
  3781                           	psect	idloc
  3782                           
  3783                           ;Config register IDLOC0 @ 0x2000
  3784                           ;	unspecified, using default values
  3785     2000                     	org	8192
  3786     2000  3FFF               	dw	16383
  3787                           
  3788                           ;Config register IDLOC1 @ 0x2001
  3789                           ;	unspecified, using default values
  3790     2001                     	org	8193
  3791     2001  3FFF               	dw	16383
  3792                           
  3793                           ;Config register IDLOC2 @ 0x2002
  3794                           ;	unspecified, using default values
  3795     2002                     	org	8194
  3796     2002  3FFF               	dw	16383
  3797                           
  3798                           ;Config register IDLOC3 @ 0x2003
  3799                           ;	unspecified, using default values
  3800     2003                     	org	8195
  3801     2003  3FFF               	dw	16383
  3802                           
  3803                           	psect	config
  3804                           
  3805                           ;Config register CONFIG @ 0x2007
  3806                           ;	Oscillator Selection bits
  3807                           ;	FOSC = HS, HS oscillator
  3808                           ;	Watchdog Timer Enable bit
  3809                           ;	WDTE = OFF, WDT disabled
  3810                           ;	Power-up Timer Enable bit
  3811                           ;	PWRTE = OFF, PWRT disabled
  3812                           ;	Brown-out Reset Enable bit
  3813                           ;	BOREN = OFF, BOR disabled
  3814                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3815                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3816                           ;	Data EEPROM Memory Code Protection bit
  3817                           ;	CPD = OFF, Data EEPROM code protection off
  3818                           ;	Flash Program Memory Write Enable bits
  3819                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3820                           ;	In-Circuit Debugger Mode bit
  3821                           ;	DEBUG = 0x1, unprogrammed default
  3822                           ;	Flash Program Memory Code Protection bit
  3823                           ;	CP = OFF, Code protection off
  3824     2007                     	org	8199
  3825     2007  3F3A               	dw	16186

Data Sizes:
    Strings     92
    Constant    19
    Data        5
    BSS         50
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     27      65
    BANK1            80      0      16
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    intToString@str	PTR unsigned char  size(1) Largest target is 3
		 -> print_countdown(BANK0[3]), 

    lcdPrint@str	PTR unsigned char  size(2) Largest target is 15
		 -> STR_8(CODE[15]), STR_7(CODE[9]), print_countdown(BANK0[3]), STR_6(CODE[14]), 
		 -> STR_5(CODE[13]), STR_4(CODE[12]), STR_3(CODE[11]), STR_2(CODE[10]), 
		 -> STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    _initLCD->_lcdSend
    _UART_Read->_intToString
    _lcdPrint->_lcdSend
    _intToString->___awdiv
    _potenza->___wmul
    ___awdiv->_potenza

Critical Paths under _main in BANK0

    _main->_UART_Read
    _UART_Read->_intToString
    _intToString->___awdiv
    ___awdiv->_potenza

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   13494
                                             24 BANK0      3     3      0
               _GenerateRandomNumber
                       _KeyPadReader
                     _RS485_RxEnable
                     _RS485_TxEnable
                        _Timer0_Init
                          _UART_Init
                          _UART_Read
                         _UART_Write
                            _initLCD
                           _lcdPrint
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0    1944
                                              4 COMMON     2     2      0
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Read                                            3     3      0    6843
                                             21 BANK0      3     3      0
                        _intToString
                           _lcdPrint
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _lcdPrint                                             7     5      2    2718
                                              4 COMMON     7     5      2
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _lcdSend                                              4     3      1    1944
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _intToString                                          9     6      3    2181
                                             11 COMMON     1     1      0
                                             13 BANK0      8     5      3
                            ___awdiv
                            ___awmod
                            _potenza
 ---------------------------------------------------------------------------------
 (3) _potenza                                              9     7      2     510
                                              6 COMMON     4     2      2
                                              0 BANK0      5     5      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     604
                                             10 COMMON     1     1      0
                                              5 BANK0      8     4      4
                            _potenza (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RS485_TxEnable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RS485_RxEnable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _KeyPadReader                                         2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _GenerateRandomNumber                                 1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GenerateRandomNumber
   _KeyPadReader
   _RS485_RxEnable
   _RS485_TxEnable
   _Timer0_Init
   _UART_Init
   _UART_Read
     _intToString
       ___awdiv
         _potenza (ARG)
           ___wmul
       ___awmod
       _potenza
     _lcdPrint
       _lcdSend
     _lcdSend
   _UART_Write
   _initLCD
     _lcdSend
   _lcdPrint
   _lcdSend

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      10       7       20.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1B      41       5       81.2%
BITBANK0            50      0       1       4        1.2%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5F      12        0.0%
ABS                  0      0      5F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Jun 06 16:51:46 2023

                            pc 0002                   ___awdiv@sign 004A                             fsr 0004  
          ___wmul@multiplicand 0072                            l203 026A                            l212 01B7  
                          l221 00CA                            l206 0137                            l215 00D7  
                          l232 0358                            l218 00C0                            l180 00E9  
                          l183 00A8                            l343 00F6                            l248 0173  
                          l192 00BF                            l345 010E                            l257 03DD  
                          l186 00A3                            l196 03DF                            l509 0210  
                          l189 00B7                            l199 0467                            l496 02D3  
                          _RC0 0038                            _RC1 0039                            _PS0 0408  
                          _PS1 0409                            _PS2 040A                            _PSA 040B  
                          u990 00F0                            u991 00EF                            fsr0 0004  
                          indf 0000                   ___awmod@sign 0076                           l1411 00EC  
                         l1501 01B8                           l1413 00F0                           l1511 01C8  
                         l1503 01B9                           l1415 00FD                           l1431 0118  
                         l1423 0110                           l1521 01E1                           l1513 01CD  
                         l1505 01BD                           l1417 0104                           l1409 00EA  
                         l1441 0134                           l1433 011A                           l1425 0113  
                         l1601 025C                           l1611 00D6                           l1523 01E5  
                         l1515 01D3                           l1531 0202                           l1507 01C2  
                         l1419 010A                           l1451 0160                           l1443 013B  
                         l1435 011F                           l1427 0114                           l1603 0263  
                         l1621 00C4                           l1613 00A4                           l1605 00CB  
                         l1461 0272                           l1533 0207                           l1525 01EF  
                         l1517 01D6                           l1509 01C4                           l1453 016D  
                         l1445 013F                           l1437 0128                           l1429 0115  
                         l1541 0177                           l1701 0427                           l1623 00C8  
                         l1607 00D2                           l1471 0286                           l1463 0277  
                         l1535 020C                           l1527 01F5                           l1519 01DD  
                         l1447 0142                           l1551 035E                           l1439 012B  
                         l1543 0195                           l1711 0443                           l1703 0429  
                         l1615 00B7                           l1609 00D5                           l1481 029C  
                         l1473 0288                           l1465 0279                           l1457 026B  
                         l1529 01FC                           l1449 015A                           l1561 03AE  
                         l1553 0362                           l1545 019B                           l1713 044A  
                         l1705 0438                           l1617 00BD                           l1801 05A0  
                         l1721 0468                           l1619 00C0                           l1651 02FE  
                         l1635 02DD                           l1627 02D4                           l1571 00DD  
                         l1491 02BF                           l1483 02A0                           l1475 028E  
                         l1467 027D                           l1459 026E                           l1563 03C1  
                         l1555 0381                           l1547 0359                           l1539 0174  
                         l1715 0453                           l1811 05BE                           l1803 05A6  
                         l1731 0485                           l1723 046F                           l1661 032B  
                         l1653 0302                           l1645 02EC                           l1637 02E0  
                         l1629 02DA                           l1573 00DF                           l1485 02B1  
                         l1477 0291                           l1493 02C5                           l1469 0282  
                         l1557 0384                           l1565 03C7                           l1549 035D  
                         l1717 0456                           l1709 043C                           l1581 0211  
                         l1901 0700                           l1821 05E9                           l1805 05AC  
                         l1813 05C4                           l1741 04A5                           l1733 048E  
                         l1725 0474                           l1663 032F                           l1655 030F  
                         l1647 02F9                           l1639 02EB                           l1575 00E0  
                         l1495 02CA                           l1487 02B7                           l1479 0298  
                         l1567 03D4                           l1559 0396                           l1719 0458  
                         l1591 0238                           l1583 0215                           l1911 072A  
                         l1903 0708                           l1831 0607                           l1823 05EF  
                         l1815 05CB                           l1807 05B2                           l1751 04C3  
                         l1743 04AB                           l1735 0493                           l1727 0479  
                         l1673 0344                           l1657 0313                           l1665 0330  
                         l1649 02FD                           l1681 009F                           l1577 00E3  
                         l1569 00D8                           l1497 02CF                           l1489 02B8  
                         l1593 0240                           l1585 021E                           l1921 0748  
                         l1913 0730                           l1905 0716                           l1833 060D  
                         l1825 05F5                           l1841 0625                           l1817 05D5  
                         l1809 05B8                           l1761 04F1                           l1753 04C9  
                         l1745 04B1                           l1737 0499                           l1729 047E  
                         l1675 0348                           l1667 0336                           l1659 031C  
                         l1579 00E6                           l1691 0401                           l1683 03DE  
                         l1595 0247                           l1587 0221                           l1931 07C1  
                         l1923 074E                           l1915 0736                           l1907 071E  
                         l1851 0654                           l1843 062C                           l1835 0613  
                         l1827 05FB                           l1819 05DB                           l1771 052B  
                         l1763 04FF                           l1755 04D7                           l1747 04B7  
                         l1739 049F                           l1677 034E                           l1669 0341  
                         l1693 0405                           l1685 03E3                           l1597 024E  
                         l1589 0228                           l1917 073C                           l1909 0724  
                         l1925 0754                           l1861 0672                           l1853 065A  
                         l1845 0636                           l1837 0619                           l1829 0601  
                         l1781 0557                           l1773 0533                           l1765 0507  
                         l1757 04DD                           l1749 04BD                           l1679 0352  
                         l1687 03F1                           l1695 0414                           l1599 0255  
                         l1927 07B9                           l1919 0742                           l1871 0691  
                         l1863 0678                           l1855 0660                           l1847 063E  
                         l1839 061F                           l1791 057A                           l1783 055E  
                         l1775 0542                           l1767 0515                           l1759 04EB  
                         l1697 041B                           l1689 03F8                           l1929 07BC  
                         l1881 06BF                           l1873 069B                           l1865 067E  
                         l1857 0666                           l1849 064C                           l1793 0588  
                         l1785 0565                           l1777 0547                           l1769 051D  
                         l1699 0424                           l1891 06DD                           l1883 06C5  
                         l1875 06A3                           l1867 0684                           l1859 066C  
                         l1795 058E                           l1787 056E                           l1893 06E3  
                         l1885 06CB                           l1877 06B1                           l1869 068A  
                         l1797 0594                           l1789 0574                           l1895 06E9  
                         l1887 06D1                           l1879 06B9                           l1799 059A  
                         l1889 06D7                           l1897 06EF                           l1899 06F6  
                         STR_1 007A                           STR_2 0067                           STR_3 005C  
                         STR_4 0050                           STR_5 0043                           STR_6 0035  
                         STR_7 0071                           STR_8 0026                           _BRGH 04C2  
                         _CREN 00C4                           _T0CS 040D                           u1100 02B1  
                         u1020 010A                           u1101 02B0                           u1021 0109  
                         u1005 00F7                           u1030 016D                           u1015 00FE  
                         u1031 016C                           u1120 02C5                           u1040 0272  
                         u1121 02C4                           u1105 02AD                           u1041 0271  
                         u1130 02CA                           u1050 027D                           u1210 0202  
                         u1131 02C9                           u1115 02B9                           u1051 027C  
                         u1211 0201                           u1035 0169                           u1300 02F9  
                         u1060 028E                           u1220 0207                           u1140 01BD  
                         u1301 02F8                           u1061 028D                           u1221 0206  
                         u1205 01F6                           u1141 01BC                           u1310 02FD  
                         u1150 01C8                           u1230 0183                           u1311 02FC  
                         u1151 01C7                           u1320 030F                           u1080 02A0  
                         u1160 01D3                           u1240 01A5                           u1400 03E3  
                         u1321 030E                           u1081 029F                           u1161 01D2  
                         u1401 03E2                           u1330 0313                           u1250 01B7  
                         u1410 0443                           u1331 0312                           u1075 0292  
                         u1251 01B6                           u1411 0442                           u2107 0646  
                         u2027 04D1                           u1340 032B                           u1180 01E5  
                         u1260 0381                           u1500 05B2                           u1420 0556  
                         u1341 032A                           u1181 01E4                           u1261 0380  
                         u2117 06AB                           u1501 05B1                           u1421 0555  
                         u2037 04E5                           u1350 032F                           u1190 01EF  
                         u1270 03D4                           u1510 05B8                           u1430 055E  
                         u1351 032E                           u1095 02A1                           u1191 01EE  
                         u1175 01D7                           u1271 03D3                           u2207 012F  
                         u2127 0710                           u1511 05B7                           u1431 055D  
                         u2047 04F9                           u1360 0336                           u1280 00BD  
                         u1600 0613                           u1520 05BE                           u1440 058E  
                         u1361 0335                           u2217 0317                           u1281 00BC  
                         u2137 0219                           u1601 0612                           u1521 05BD  
                         u1441 058D                           u2057 050F                           u1290 00C4  
                         u1610 0619                           u1530 05C4                           u1450 0594  
                         u1291 00C3                           u1195 01EB                           u1275 03D0  
                         u2147 022C                           u1611 0618                           u1531 05C3  
                         u1451 0593                           u2067 0525                           u1380 034E  
                         u1700 0678                           u1620 061F                           u1540 05EF  
                         u1460 059A                           u1381 034D                           u2157 023C  
                         u1701 0677                           u1621 061E                           u1541 05EE  
                         u1461 0599                           u2077 053B                           u1390 0358  
                         u1710 067E                           u1630 0625                           u1550 05F5  
                         u1470 05A0                           u1391 0357                           u1375 0339  
                         u2167 040D                           u1711 067D                           u1631 0624  
                         u1551 05F4                           u1471 059F                           u2087 0582  
                         u1800 06DD                           u1720 0684                           u1640 0654  
                         u1560 05FB                           u1480 05A6                           u2177 0431  
                         u1801 06DC                           u1721 0683                           u1641 0653  
                         u1561 05FA                           u2097 05E3                           u1481 05A5  
                         u1810 06E3                           u1730 068A                           u1650 065A  
                         u1570 0601                           u1490 05AC                           u2187 0460  
                         u1811 06E2                           u1731 0689                           u1651 0659  
                         u1571 0600                           u1491 05AB                           u1900 0742  
                         u1820 06E9                           u1740 06B9                           u1660 0660  
                         u1580 0607                           u2197 0123                           u1901 0741  
                         u1821 06E8                           u1741 06B8                           u1661 065F  
                         u1581 0606                           u1910 0748                           u1830 06EF  
                         u1750 06BF                           u1670 0666                           u1590 060D  
                         u1911 0747                           u1831 06EE                           u1751 06BE  
                         u1671 0665                           u1591 060C                           u1920 074E  
                         u1840 071E                           u1760 06C5                           u1680 066C  
                         u1921 074D                           u1841 071D                           u1761 06C4  
                         u1681 066B                           u1930 0754                           u1850 0724  
                         u1770 06CB                           u1690 0672                           u1931 0753  
                         u1851 0723                           u1771 06CA                           u1691 0671  
                         u1860 072A                           u1780 06D1                           u1861 0729  
                         u1781 06D0                           u1870 0730                           u1790 06D7  
                         u1871 072F                           u1791 06D6                           u1880 0736  
                         u1881 0735                           u1890 073C                           u1891 073B  
                         _RCIF 0065                 ??_KeyPadReader 0070                           _TMR0 0001  
                         _SPEN 00C7                           _TXEN 04C5                           _TXIF 0064  
                         _SYNC 04C4                           _data 0020                           _flag 002E  
                         _main 0468                           _num1 007D                           _num2 007C  
                         _num3 003C                           _keys 0013                           _num4 003B  
                         _num5 003A                           btemp 007E                           start 0000  
                 ?_intToString 004D                          ?_main 0070                __end_of___awdiv 02D4  
              __end_of___awmod 0211                ___awdiv@divisor 0045                ___awdiv@counter 0049  
                        _RCREG 001A                          _SPBRG 0099                          _PORTB 0006  
                        _PORTD 0008                          _TRISA 0085                          _TRISB 0086  
                        _TRISC 0087                          _TRISD 0088                          _TRISE 0089  
                        _TXREG 0019                __end_of_colMask 0026                __end_of_lcdSend 0138  
                  ?_UART_Write 0070                __end_of_initLCD 026B                          _index 002C  
                        _keyok 0038                          _randx 005B                          _stato 0035  
                        pclath 000A                __end_of_rowMask 0023                __end_of_potenza 0174  
                        status 0003                          wtemp0 007E   __end_of_GenerateRandomNumber 00CB  
              __initialization 07CA                   __end_of_main 07CA                   __end_of_keys 001F  
                       ??_main 0058               ___awdiv@dividend 0047                         _TMR0IE 005D  
                       _TMR0IF 005A                         _TRISC6 043E                         _TRISC7 043F  
                ??_Timer0_Init 0070               __end_of_lcdPrint 01B8              __end_of_UART_Init 00EA  
            __end_of_UART_Read 0468                         ___wmul 00EA                      ??___awdiv 007A  
                    ??___awmod 0074                         _codice 0026               ___awdiv@quotient 004B  
              ___awmod@divisor 0070           __end_of_KeyPadReader 0359                ___awmod@counter 0075  
                    ??_lcdSend 0071                      ??_initLCD 0074                      ??_potenza 0078  
      __end_of__initialization 07FC               intToString@cifre 0052                 __pcstackCOMMON 0070  
                 __pidataBANK0 00A9            __end_of_Timer0_Init 00D8           _GenerateRandomNumber 00C0  
                   __pbssBANK0 0020                     __pbssBANK1 00A0                     __pmaintext 0468  
                      ?___wmul 0070          ?_GenerateRandomNumber 0070                   ??_UART_Write 0070  
                    ?_lcdPrint 0074                     __stringtab 0003                   intToString@i 0053  
                 intToString@n 004D                   intToString@t 0050                    _Timer0_Init 00CB  
               _RS485_RxEnable 009F                        ___awdiv 026B                        ___awmod 01B8  
           __end_of_UART_Write 00C0                 _RS485_TxEnable 00A4                        _colMask 0023  
                      _colScan 0037                        _lcdSend 010F                        __ptext1 0211  
                      __ptext2 00B6                        __ptext3 03DE                        __ptext4 0174  
                      __ptext5 010F                        __ptext6 0359                        __ptext7 0138  
                      __ptext8 00EA                        __ptext9 01B8                        _initLCD 0211  
                      _old_btn 0300               ___awmod@dividend 0072                     _keypressed 0039  
                      _restart 0033                        _rowMask 001F                        _rowScan 0036  
                      _potenza 0138                     ??_lcdPrint 0076                        clrloop0 00AF  
                      _stringa 00A0           end_of_initialization 07FC                   _KeyPadReader 02D4  
       __end_of_RS485_RxEnable 00A4         __end_of_RS485_TxEnable 00A9                      _UART_Init 00D8  
                    _UART_Read 03DE                      _PORTEbits 0009                 UART_Write@data 0070  
       ??_GenerateRandomNumber 0070                      _TRISEbits 0089                ?_RS485_RxEnable 0070  
              ?_RS485_TxEnable 0070                 __end_of___wmul 010F                     ?_UART_Init 0070  
                   ?_UART_Read 0070                  __pbitbssBANK0 0300            start_initialization 07CA  
GenerateRandomNumber@randomNum 0070                 _stringPosition 0030                 intToString@str 004F  
                     ??___wmul 0074                    __pdataBANK0 005B                  ??_intToString 007B  
                  __pbssCOMMON 007C                      ___latbits 0002                  __pcstackBANK0 0040  
                 ?_Timer0_Init 0070                       ?___awdiv 0045                       ?___awmod 0070  
                  ??_UART_Init 0070                    ??_UART_Read 0055                      __pstrings 0003  
                     ?_lcdSend 0070                       ?_initLCD 0070            __end_of_intToString 03DE  
                    _countdown 005F                       ?_potenza 0076                      _old_stato 0034  
               ___wmul@product 0074                      clear_ram0 00AE                _print_countdown 003D  
                    lcdPrint@n 0079                    __stringbase 0012              ___wmul@multiplier 0070  
             ??_RS485_RxEnable 0070               ??_RS485_TxEnable 0070                    _intToString 0359  
           __end_of__stringtab 0013                       __ptext10 026B                       __ptext11 00D8  
                     __ptext12 00CB                       __ptext13 00A4                       __ptext14 009F  
                     __ptext15 02D4                       __ptext16 00C0                       _lcdPrint 0174  
                     _received 0032                      stringcode 000D                       potenza@b 0040  
                     potenza@e 0076                       potenza@i 0041                       potenza@n 0043  
                  lcdSend@dato 0073                    lcdSend@tipo 0070                       stringdir 000D  
                     stringtab 0003                     _UART_Write 00B6                    lcdPrint@str 0074  
                ?_KeyPadReader 0070  
