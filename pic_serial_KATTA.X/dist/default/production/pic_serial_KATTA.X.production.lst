

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Jun 13 11:09:30 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37     0000                     
    38                           ; Version 2.40
    39                           ; Generated 17/11/2021 GMT
    40                           ; 
    41                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F877A Definitions
    71                           ; 
    72                           ; SFR Addresses
    73     0000                     	;# 
    74     0001                     	;# 
    75     0002                     	;# 
    76     0003                     	;# 
    77     0004                     	;# 
    78     0005                     	;# 
    79     0006                     	;# 
    80     0007                     	;# 
    81     0008                     	;# 
    82     0009                     	;# 
    83     000A                     	;# 
    84     000B                     	;# 
    85     000C                     	;# 
    86     000D                     	;# 
    87     000E                     	;# 
    88     000E                     	;# 
    89     000F                     	;# 
    90     0010                     	;# 
    91     0011                     	;# 
    92     0012                     	;# 
    93     0013                     	;# 
    94     0014                     	;# 
    95     0015                     	;# 
    96     0015                     	;# 
    97     0016                     	;# 
    98     0017                     	;# 
    99     0018                     	;# 
   100     0019                     	;# 
   101     001A                     	;# 
   102     001B                     	;# 
   103     001B                     	;# 
   104     001C                     	;# 
   105     001D                     	;# 
   106     001E                     	;# 
   107     001F                     	;# 
   108     0081                     	;# 
   109     0085                     	;# 
   110     0086                     	;# 
   111     0087                     	;# 
   112     0088                     	;# 
   113     0089                     	;# 
   114     008C                     	;# 
   115     008D                     	;# 
   116     008E                     	;# 
   117     0091                     	;# 
   118     0092                     	;# 
   119     0093                     	;# 
   120     0094                     	;# 
   121     0098                     	;# 
   122     0099                     	;# 
   123     009C                     	;# 
   124     009D                     	;# 
   125     009E                     	;# 
   126     009F                     	;# 
   127     010C                     	;# 
   128     010D                     	;# 
   129     010E                     	;# 
   130     010F                     	;# 
   131     018C                     	;# 
   132     018D                     	;# 
   133     0000                     	;# 
   134     0001                     	;# 
   135     0002                     	;# 
   136     0003                     	;# 
   137     0004                     	;# 
   138     0005                     	;# 
   139     0006                     	;# 
   140     0007                     	;# 
   141     0008                     	;# 
   142     0009                     	;# 
   143     000A                     	;# 
   144     000B                     	;# 
   145     000C                     	;# 
   146     000D                     	;# 
   147     000E                     	;# 
   148     000E                     	;# 
   149     000F                     	;# 
   150     0010                     	;# 
   151     0011                     	;# 
   152     0012                     	;# 
   153     0013                     	;# 
   154     0014                     	;# 
   155     0015                     	;# 
   156     0015                     	;# 
   157     0016                     	;# 
   158     0017                     	;# 
   159     0018                     	;# 
   160     0019                     	;# 
   161     001A                     	;# 
   162     001B                     	;# 
   163     001B                     	;# 
   164     001C                     	;# 
   165     001D                     	;# 
   166     001E                     	;# 
   167     001F                     	;# 
   168     0081                     	;# 
   169     0085                     	;# 
   170     0086                     	;# 
   171     0087                     	;# 
   172     0088                     	;# 
   173     0089                     	;# 
   174     008C                     	;# 
   175     008D                     	;# 
   176     008E                     	;# 
   177     0091                     	;# 
   178     0092                     	;# 
   179     0093                     	;# 
   180     0094                     	;# 
   181     0098                     	;# 
   182     0099                     	;# 
   183     009C                     	;# 
   184     009D                     	;# 
   185     009E                     	;# 
   186     009F                     	;# 
   187     010C                     	;# 
   188     010D                     	;# 
   189     010E                     	;# 
   190     010F                     	;# 
   191     018C                     	;# 
   192     018D                     	;# 
   193                           
   194                           	psect	idataBANK0
   195     07D7                     __pidataBANK0:
   196                           
   197                           ;initializer for _randx
   198     07D7  3401               	retlw	1
   199     07D8  3400               	retlw	0
   200     07D9  3400               	retlw	0
   201     07DA  3400               	retlw	0
   202                           
   203                           ;initializer for _countdown
   204     07DB  343C               	retlw	60
   205                           
   206                           	psect	strings
   207     0500                     __pstrings:
   208     0500                     stringtab:
   209     0500                     __stringtab:
   210                           
   211                           ;	String table - string pointers are 1 byte each
   212     0500  1BFF               	btfsc	btemp+1,7
   213     0501  2D0A               	ljmp	stringcode
   214     0502  1383               	bcf	3,7
   215     0503  187F               	btfsc	btemp+1,0
   216     0504  1783               	bsf	3,7
   217     0505  0800               	movf	0,w
   218     0506  0A84               	incf	4,f
   219     0507  1903               	skipnz
   220     0508  0AFF               	incf	btemp+1,f
   221     0509  0008               	return
   222     050A                     stringcode:
   223     050A                     stringdir:
   224     050A  3005               	movlw	high stringdir
   225     050B  008A               	movwf	10
   226     050C  0804               	movf	4,w
   227     050D  0A84               	incf	4,f
   228     050E  0782               	addwf	2,f
   229     050F                     __stringbase:
   230     050F  3400               	retlw	0
   231     0510                     __end_of__stringtab:
   232     0510                     _keys:
   233     0510  3423               	retlw	35
   234     0511  3437               	retlw	55
   235     0512  3434               	retlw	52
   236     0513  3431               	retlw	49
   237     0514  342A               	retlw	42
   238     0515  3438               	retlw	56
   239     0516  3435               	retlw	53
   240     0517  3432               	retlw	50
   241     0518  3430               	retlw	48
   242     0519  3439               	retlw	57
   243     051A  3436               	retlw	54
   244     051B  3433               	retlw	51
   245     051C                     __end_of_keys:
   246     051C                     _rowMask:
   247     051C  3401               	retlw	1
   248     051D  3402               	retlw	2
   249     051E  3404               	retlw	4
   250     051F  3408               	retlw	8
   251     0520                     __end_of_rowMask:
   252     0520                     _colMask:
   253     0520  34FE               	retlw	254
   254     0521  34FD               	retlw	253
   255     0522  34FB               	retlw	251
   256     0523                     __end_of_colMask:
   257     0006                     _PORTB	set	6
   258     0001                     _TMR0	set	1
   259     0008                     _PORTD	set	8
   260     0009                     _PORTEbits	set	9
   261     001A                     _RCREG	set	26
   262     0019                     _TXREG	set	25
   263     005F                     _GIE	set	95
   264     005D                     _TMR0IE	set	93
   265     005A                     _TMR0IF	set	90
   266     0065                     _RCIF	set	101
   267     0064                     _TXIF	set	100
   268     0039                     _RC1	set	57
   269     0038                     _RC0	set	56
   270     00C4                     _CREN	set	196
   271     00C7                     _SPEN	set	199
   272     0089                     _TRISEbits	set	137
   273     0099                     _SPBRG	set	153
   274     0089                     _TRISE	set	137
   275     0088                     _TRISD	set	136
   276     0087                     _TRISC	set	135
   277     0086                     _TRISB	set	134
   278     0085                     _TRISA	set	133
   279     0408                     _PS0	set	1032
   280     0409                     _PS1	set	1033
   281     040A                     _PS2	set	1034
   282     040B                     _PSA	set	1035
   283     040D                     _T0CS	set	1037
   284     04C5                     _TXEN	set	1221
   285     04C4                     _SYNC	set	1220
   286     04C2                     _BRGH	set	1218
   287     043F                     _TRISC7	set	1087
   288     043E                     _TRISC6	set	1086
   289     0523                     STR_8:
   290     0523  3443               	retlw	67	;'C'
   291     0524  346F               	retlw	111	;'o'
   292     0525  3464               	retlw	100	;'d'
   293     0526  3469               	retlw	105	;'i'
   294     0527  3463               	retlw	99	;'c'
   295     0528  3465               	retlw	101	;'e'
   296     0529  3420               	retlw	32	;' '
   297     052A  3453               	retlw	83	;'S'
   298     052B  3463               	retlw	99	;'c'
   299     052C  3461               	retlw	97	;'a'
   300     052D  3464               	retlw	100	;'d'
   301     052E  3475               	retlw	117	;'u'
   302     052F  3474               	retlw	116	;'t'
   303     0530  346F               	retlw	111	;'o'
   304     0531  3400               	retlw	0
   305     0532                     STR_6:
   306     0532  3441               	retlw	65	;'A'
   307     0533  3474               	retlw	116	;'t'
   308     0534  3474               	retlw	116	;'t'
   309     0535  3465               	retlw	101	;'e'
   310     0536  346E               	retlw	110	;'n'
   311     0537  3464               	retlw	100	;'d'
   312     0538  3465               	retlw	101	;'e'
   313     0539  3472               	retlw	114	;'r'
   314     053A  3465               	retlw	101	;'e'
   315     053B  342E               	retlw	46	;'.'
   316     053C  342E               	retlw	46	;'.'
   317     053D  342E               	retlw	46	;'.'
   318     053E  342E               	retlw	46	;'.'
   319     053F  3400               	retlw	0
   320     0540                     STR_5:
   321     0540  3441               	retlw	65	;'A'
   322     0541  3474               	retlw	116	;'t'
   323     0542  3474               	retlw	116	;'t'
   324     0543  3465               	retlw	101	;'e'
   325     0544  346E               	retlw	110	;'n'
   326     0545  3464               	retlw	100	;'d'
   327     0546  3465               	retlw	101	;'e'
   328     0547  3472               	retlw	114	;'r'
   329     0548  3465               	retlw	101	;'e'
   330     0549  342E               	retlw	46	;'.'
   331     054A  342E               	retlw	46	;'.'
   332     054B  342E               	retlw	46	;'.'
   333     054C  3400               	retlw	0
   334     054D                     STR_4:
   335     054D  3441               	retlw	65	;'A'
   336     054E  3474               	retlw	116	;'t'
   337     054F  3474               	retlw	116	;'t'
   338     0550  3465               	retlw	101	;'e'
   339     0551  346E               	retlw	110	;'n'
   340     0552  3464               	retlw	100	;'d'
   341     0553  3465               	retlw	101	;'e'
   342     0554  3472               	retlw	114	;'r'
   343     0555  3465               	retlw	101	;'e'
   344     0556  342E               	retlw	46	;'.'
   345     0557  342E               	retlw	46	;'.'
   346     0558  3400               	retlw	0
   347     0559                     STR_3:
   348     0559  3441               	retlw	65	;'A'
   349     055A  3474               	retlw	116	;'t'
   350     055B  3474               	retlw	116	;'t'
   351     055C  3465               	retlw	101	;'e'
   352     055D  346E               	retlw	110	;'n'
   353     055E  3464               	retlw	100	;'d'
   354     055F  3465               	retlw	101	;'e'
   355     0560  3472               	retlw	114	;'r'
   356     0561  3465               	retlw	101	;'e'
   357     0562  342E               	retlw	46	;'.'
   358     0563  3400               	retlw	0
   359     0564                     STR_2:
   360     0564  3441               	retlw	65	;'A'
   361     0565  3474               	retlw	116	;'t'
   362     0566  3474               	retlw	116	;'t'
   363     0567  3465               	retlw	101	;'e'
   364     0568  346E               	retlw	110	;'n'
   365     0569  3464               	retlw	100	;'d'
   366     056A  3465               	retlw	101	;'e'
   367     056B  3472               	retlw	114	;'r'
   368     056C  3465               	retlw	101	;'e'
   369     056D  3400               	retlw	0
   370     056E                     STR_7:
   371     056E  3452               	retlw	82	;'R'
   372     056F  3469               	retlw	105	;'i'
   373     0570  3463               	retlw	99	;'c'
   374     0571  3465               	retlw	101	;'e'
   375     0572  3476               	retlw	118	;'v'
   376     0573  3475               	retlw	117	;'u'
   377     0574  3474               	retlw	116	;'t'
   378     0575  346F               	retlw	111	;'o'
   379     0576  3400               	retlw	0
   380     0577                     STR_1:
   381     0577  3450               	retlw	80	;'P'
   382     0578  3472               	retlw	114	;'r'
   383     0579  3465               	retlw	101	;'e'
   384     057A  346D               	retlw	109	;'m'
   385     057B  3469               	retlw	105	;'i'
   386     057C  3420               	retlw	32	;' '
   387     057D  342A               	retlw	42	;'*'
   388     057E  3400               	retlw	0
   389                           
   390                           	psect	cinit
   391     000F                     start_initialization:	
   392                           ; #config settings
   393                           
   394     000F                     __initialization:
   395                           
   396                           ; Initialize objects allocated to BANK0
   397     000F  120A  118A  27D7  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   398     0014  00DF               	movwf	__pdataBANK0& (0+127)
   399     0015  120A  118A  27D8  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   400     001A  00E0               	movwf	(__pdataBANK0+1)& (0+127)
   401     001B  120A  118A  27D9  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   402     0020  00E1               	movwf	(__pdataBANK0+2)& (0+127)
   403     0021  120A  118A  27DA  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   404     0026  00E2               	movwf	(__pdataBANK0+3)& (0+127)
   405     0027  120A  118A  27DB  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   406     002C  00E3               	movwf	(__pdataBANK0+4)& (0+127)
   407                           
   408                           ; Clear objects allocated to BANK1
   409     002D  1383               	bcf	3,7	;select IRP bank0
   410     002E  30A0               	movlw	low __pbssBANK1
   411     002F  0084               	movwf	4
   412     0030  30B0               	movlw	low (__pbssBANK1+16)
   413     0031  120A  118A  27CF  120A  118A  	fcall	clear_ram0
   414                           
   415                           ; Clear objects allocated to BANK0
   416     0036  3020               	movlw	low __pbssBANK0
   417     0037  0084               	movwf	4
   418     0038  3043               	movlw	low (__pbssBANK0+35)
   419     0039  120A  118A  27CF  120A  118A  	fcall	clear_ram0
   420                           
   421                           ; Clear objects allocated to BITBANK0
   422     003E  01E4               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   423                           
   424                           ; Clear objects allocated to COMMON
   425     003F  01FA               	clrf	__pbssCOMMON& (0+127)
   426     0040  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   427     0041                     end_of_initialization:	
   428                           ;End of C runtime variable initialization code
   429                           
   430     0041                     __end_of__initialization:
   431     0041  0183               	clrf	3
   432     0042  120A  118A  2845   	ljmp	_main	;jump to C main() function
   433                           
   434                           	psect	bssCOMMON
   435     007A                     __pbssCOMMON:
   436     007A                     _num2:
   437     007A                     	ds	1
   438     007B                     _num1:
   439     007B                     	ds	1
   440                           
   441                           	psect	bitbssBANK0
   442     0320                     __pbitbssBANK0:
   443     0320                     _old_btn:
   444     0320                     	ds	1
   445                           
   446                           	psect	bssBANK0
   447     0020                     __pbssBANK0:
   448     0020                     _data:
   449     0020                     	ds	6
   450     0026                     _codice:
   451     0026                     	ds	6
   452     002C                     _count:
   453     002C                     	ds	2
   454     002E                     _index:
   455     002E                     	ds	2
   456     0030                     _flag:
   457     0030                     	ds	2
   458     0032                     _stringPosition:
   459     0032                     	ds	2
   460     0034                     _randomNum:
   461     0034                     	ds	1
   462     0035                     _received:
   463     0035                     	ds	1
   464     0036                     _restart:
   465     0036                     	ds	1
   466     0037                     _old_stato:
   467     0037                     	ds	1
   468     0038                     _stato:
   469     0038                     	ds	1
   470     0039                     _rowScan:
   471     0039                     	ds	1
   472     003A                     _colScan:
   473     003A                     	ds	1
   474     003B                     _keyok:
   475     003B                     	ds	1
   476     003C                     _keypressed:
   477     003C                     	ds	1
   478     003D                     _num5:
   479     003D                     	ds	1
   480     003E                     _num4:
   481     003E                     	ds	1
   482     003F                     _num3:
   483     003F                     	ds	1
   484     0040                     _print_countdown:
   485     0040                     	ds	3
   486                           
   487                           	psect	dataBANK0
   488     005F                     __pdataBANK0:
   489     005F                     _randx:
   490     005F                     	ds	4
   491     0063                     _countdown:
   492     0063                     	ds	1
   493                           
   494                           	psect	bssBANK1
   495     00A0                     __pbssBANK1:
   496     00A0                     _stringa:
   497     00A0                     	ds	16
   498                           
   499                           	psect	clrtext
   500     07CF                     clear_ram0:	
   501                           ;	Called with FSR containing the base address, and
   502                           ;	W with the last address+1
   503                           
   504     07CF  0064               	clrwdt	;clear the watchdog before getting into this loop
   505     07D0                     clrloop0:
   506     07D0  0180               	clrf	0	;clear RAM location pointed to by FSR
   507     07D1  0A84               	incf	4,f	;increment pointer
   508     07D2  0604               	xorwf	4,w	;XOR with final address
   509     07D3  1903               	btfsc	3,2	;have we reached the end yet?
   510     07D4  3400               	retlw	0	;all done for this memory range, return
   511     07D5  0604               	xorwf	4,w	;XOR again to restore value
   512     07D6  2FD0               	goto	clrloop0	;do the next byte
   513                           
   514                           	psect	cstackCOMMON
   515     0070                     __pcstackCOMMON:
   516     0070                     ?_UART_Init:
   517     0070                     ?_initLCD:	
   518                           ; 1 bytes @ 0x0
   519                           
   520     0070                     ?_Timer0_Init:	
   521                           ; 1 bytes @ 0x0
   522                           
   523     0070                     ?_RS485_TxEnable:	
   524                           ; 1 bytes @ 0x0
   525                           
   526     0070                     ?_UART_Write:	
   527                           ; 1 bytes @ 0x0
   528                           
   529     0070                     ?_GenerateRandomNumber:	
   530                           ; 1 bytes @ 0x0
   531                           
   532     0070                     ?_KeyPadReader:	
   533                           ; 1 bytes @ 0x0
   534                           
   535     0070                     ?_RS485_RxEnable:	
   536                           ; 1 bytes @ 0x0
   537                           
   538     0070                     ?_UART_Read:	
   539                           ; 1 bytes @ 0x0
   540                           
   541     0070                     ?_main:	
   542                           ; 1 bytes @ 0x0
   543                           
   544     0070                     ?_ISR:	
   545                           ; 1 bytes @ 0x0
   546                           
   547     0070                     ??_ISR:	
   548                           ; 1 bytes @ 0x0
   549                           
   550                           
   551                           ; 1 bytes @ 0x0
   552     0070                     	ds	2
   553     0072                     ??_UART_Init:
   554     0072                     ??_Timer0_Init:	
   555                           ; 1 bytes @ 0x2
   556                           
   557     0072                     ?_lcdSend:	
   558                           ; 1 bytes @ 0x2
   559                           
   560     0072                     ??_RS485_TxEnable:	
   561                           ; 1 bytes @ 0x2
   562                           
   563     0072                     ??_UART_Write:	
   564                           ; 1 bytes @ 0x2
   565                           
   566     0072                     ??_GenerateRandomNumber:	
   567                           ; 1 bytes @ 0x2
   568                           
   569     0072                     ??_KeyPadReader:	
   570                           ; 1 bytes @ 0x2
   571                           
   572     0072                     ??_RS485_RxEnable:	
   573                           ; 1 bytes @ 0x2
   574                           
   575     0072                     ?___wmul:	
   576                           ; 1 bytes @ 0x2
   577                           
   578     0072                     ?___awmod:	
   579                           ; 2 bytes @ 0x2
   580                           
   581     0072                     UART_Write@data:	
   582                           ; 2 bytes @ 0x2
   583                           
   584     0072                     lcdSend@tipo:	
   585                           ; 1 bytes @ 0x2
   586                           
   587     0072                     GenerateRandomNumber@count:	
   588                           ; 1 bytes @ 0x2
   589                           
   590     0072                     ___wmul@multiplier:	
   591                           ; 2 bytes @ 0x2
   592                           
   593     0072                     ___awmod@divisor:	
   594                           ; 2 bytes @ 0x2
   595                           
   596                           
   597                           ; 2 bytes @ 0x2
   598     0072                     	ds	1
   599     0073                     ??_lcdSend:
   600                           
   601                           ; 1 bytes @ 0x3
   602     0073                     	ds	1
   603     0074                     GenerateRandomNumber@randomNum:
   604     0074                     ___wmul@multiplicand:	
   605                           ; 1 bytes @ 0x4
   606                           
   607     0074                     ___awmod@dividend:	
   608                           ; 2 bytes @ 0x4
   609                           
   610                           
   611                           ; 2 bytes @ 0x4
   612     0074                     	ds	1
   613     0075                     lcdSend@dato:
   614                           
   615                           ; 1 bytes @ 0x5
   616     0075                     	ds	1
   617     0076                     ??_initLCD:
   618     0076                     ?_lcdPrint:	
   619                           ; 1 bytes @ 0x6
   620                           
   621     0076                     ??___wmul:	
   622                           ; 1 bytes @ 0x6
   623                           
   624     0076                     ??___awmod:	
   625                           ; 1 bytes @ 0x6
   626                           
   627     0076                     lcdPrint@str:	
   628                           ; 1 bytes @ 0x6
   629                           
   630     0076                     ___wmul@product:	
   631                           ; 2 bytes @ 0x6
   632                           
   633                           
   634                           ; 2 bytes @ 0x6
   635     0076                     	ds	1
   636     0077                     ___awmod@counter:
   637                           
   638                           ; 1 bytes @ 0x7
   639     0077                     	ds	1
   640     0078                     ?_potenza:
   641     0078                     potenza@e:	
   642                           ; 2 bytes @ 0x8
   643                           
   644     0078                     ___awmod@sign:	
   645                           ; 1 bytes @ 0x8
   646                           
   647     0078                     lcdPrint@n:	
   648                           ; 1 bytes @ 0x8
   649                           
   650                           
   651                           ; 2 bytes @ 0x8
   652     0078                     	ds	2
   653     007A                     ??_main:
   654                           
   655                           	psect	cstackBANK0
   656     0043                     __pcstackBANK0:	
   657                           ; 1 bytes @ 0xA
   658                           
   659     0043                     ??_lcdPrint:
   660     0043                     ??_potenza:	
   661                           ; 1 bytes @ 0x0
   662                           
   663                           
   664                           ; 1 bytes @ 0x0
   665     0043                     	ds	2
   666     0045                     potenza@b:
   667                           
   668                           ; 1 bytes @ 0x2
   669     0045                     	ds	1
   670     0046                     potenza@i:
   671                           
   672                           ; 2 bytes @ 0x3
   673     0046                     	ds	2
   674     0048                     potenza@n:
   675                           
   676                           ; 2 bytes @ 0x5
   677     0048                     	ds	2
   678     004A                     ?___awdiv:
   679     004A                     ___awdiv@divisor:	
   680                           ; 2 bytes @ 0x7
   681                           
   682                           
   683                           ; 2 bytes @ 0x7
   684     004A                     	ds	2
   685     004C                     ___awdiv@dividend:
   686                           
   687                           ; 2 bytes @ 0x9
   688     004C                     	ds	2
   689     004E                     ??___awdiv:
   690                           
   691                           ; 1 bytes @ 0xB
   692     004E                     	ds	1
   693     004F                     ___awdiv@counter:
   694                           
   695                           ; 1 bytes @ 0xC
   696     004F                     	ds	1
   697     0050                     ___awdiv@sign:
   698                           
   699                           ; 1 bytes @ 0xD
   700     0050                     	ds	1
   701     0051                     ___awdiv@quotient:
   702                           
   703                           ; 2 bytes @ 0xE
   704     0051                     	ds	2
   705     0053                     ?_intToString:
   706     0053                     intToString@n:	
   707                           ; 1 bytes @ 0x10
   708                           
   709                           
   710                           ; 2 bytes @ 0x10
   711     0053                     	ds	2
   712     0055                     intToString@str:
   713                           
   714                           ; 1 bytes @ 0x12
   715     0055                     	ds	1
   716     0056                     ??_intToString:
   717                           
   718                           ; 1 bytes @ 0x13
   719     0056                     	ds	1
   720     0057                     intToString@t:
   721                           
   722                           ; 2 bytes @ 0x14
   723     0057                     	ds	2
   724     0059                     intToString@cifre:
   725                           
   726                           ; 1 bytes @ 0x16
   727     0059                     	ds	1
   728     005A                     intToString@i:
   729                           
   730                           ; 2 bytes @ 0x17
   731     005A                     	ds	2
   732     005C                     ??_UART_Read:
   733                           
   734                           ; 1 bytes @ 0x19
   735     005C                     	ds	3
   736                           
   737                           	psect	maintext
   738     0045                     __pmaintext:	
   739 ;;
   740 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   741 ;;
   742 ;; *************** function _main *****************
   743 ;; Defined at:
   744 ;;		line 103 in file "main.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;		None
   747 ;; Auto vars:     Size  Location     Type
   748 ;;		None
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      void 
   751 ;; Registers used:
   752 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   753 ;; Tracked objects:
   754 ;;		On entry : B00/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   758 ;;      Params:         0       0       0       0       0
   759 ;;      Locals:         0       0       0       0       0
   760 ;;      Temps:          0       0       0       0       0
   761 ;;      Totals:         0       0       0       0       0
   762 ;;Total ram usage:        0 bytes
   763 ;; Hardware stack levels required when called: 5
   764 ;; This function calls:
   765 ;;		_GenerateRandomNumber
   766 ;;		_KeyPadReader
   767 ;;		_RS485_RxEnable
   768 ;;		_RS485_TxEnable
   769 ;;		_Timer0_Init
   770 ;;		_UART_Init
   771 ;;		_UART_Read
   772 ;;		_UART_Write
   773 ;;		_initLCD
   774 ;;		_lcdPrint
   775 ;;		_lcdSend
   776 ;; This function is called by:
   777 ;;		Startup code after reset
   778 ;; This function uses a non-reentrant model
   779 ;;
   780                           
   781     0045                     _main:	
   782                           ;psect for function _main
   783                           
   784     0045                     l2103:	
   785                           ;incstack = 0
   786                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   787                           
   788                           
   789                           ;main.c: 105:     TRISA=0x00;
   790     0045  1683               	bsf	3,5	;RP0=1, select bank1
   791     0046  1303               	bcf	3,6	;RP1=0, select bank1
   792     0047  0185               	clrf	5	;volatile
   793                           
   794                           ;main.c: 106:  TRISB=0x00;
   795     0048  0186               	clrf	6	;volatile
   796                           
   797                           ;main.c: 107:  TRISC=0x00;
   798     0049  0187               	clrf	7	;volatile
   799                           
   800                           ;main.c: 108:  TRISD=0x00;
   801     004A  0188               	clrf	8	;volatile
   802                           
   803                           ;main.c: 109:     TRISE=0X00;
   804     004B  0189               	clrf	9	;volatile
   805     004C                     l2105:
   806                           
   807                           ;main.c: 110:     UART_Init();
   808     004C  120A  118A  27A4  120A  118A  	fcall	_UART_Init
   809     0051                     l2107:
   810                           
   811                           ;main.c: 111:     initLCD();
   812     0051  120A  118A  25E8  120A  118A  	fcall	_initLCD
   813     0056                     l2109:
   814                           
   815                           ;main.c: 112:     Timer0_Init();
   816     0056  120A  118A  27B6  120A  118A  	fcall	_Timer0_Init
   817     005B                     l2111:
   818                           
   819                           ;main.c: 114:     {;main.c: 115:         lcdSend(0x01, 0);
   820     005B  01F2               	clrf	lcdSend@tipo
   821     005C  3001               	movlw	1
   822     005D  120A  118A  271D  120A  118A  	fcall	_lcdSend
   823     0062                     l2113:
   824                           
   825                           ;main.c: 116:         lcdPrint("Premi *");
   826     0062  3068               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   827     0063  00F6               	movwf	lcdPrint@str
   828     0064  3080               	movlw	128
   829     0065  00F7               	movwf	lcdPrint@str+1
   830     0066  120A  118A  269B  120A  118A  	fcall	_lcdPrint
   831     006B                     l2115:
   832                           
   833                           ;main.c: 117:         RS485_TxEnable();
   834     006B  120A  118A  27DC  120A  118A  	fcall	_RS485_TxEnable
   835     0070                     l2117:
   836                           
   837                           ;main.c: 118:         UART_Write('P');
   838     0070  3050               	movlw	80
   839     0071  120A  118A  27C5  120A  118A  	fcall	_UART_Write
   840     0076                     l2119:
   841                           
   842                           ;main.c: 119:         UART_Write('r');
   843     0076  3072               	movlw	114
   844     0077  120A  118A  27C5  120A  118A  	fcall	_UART_Write
   845     007C                     l2121:
   846                           
   847                           ;main.c: 120:         UART_Write('e');
   848     007C  3065               	movlw	101
   849     007D  120A  118A  27C5  120A  118A  	fcall	_UART_Write
   850     0082                     l2123:
   851                           
   852                           ;main.c: 121:         UART_Write('m');
   853     0082  306D               	movlw	109
   854     0083  120A  118A  27C5  120A  118A  	fcall	_UART_Write
   855     0088                     l2125:
   856                           
   857                           ;main.c: 122:         UART_Write('i');
   858     0088  3069               	movlw	105
   859     0089  120A  118A  27C5  120A  118A  	fcall	_UART_Write
   860     008E                     l2127:
   861                           
   862                           ;main.c: 123:         UART_Write(' ');
   863     008E  3020               	movlw	32
   864     008F  120A  118A  27C5  120A  118A  	fcall	_UART_Write
   865     0094                     l2129:
   866                           
   867                           ;main.c: 124:         UART_Write('*');
   868     0094  302A               	movlw	42
   869     0095  120A  118A  27C5  120A  118A  	fcall	_UART_Write
   870     009A                     l2131:
   871                           
   872                           ;main.c: 125:         UART_Write('\r');
   873     009A  300D               	movlw	13
   874     009B  120A  118A  27C5  120A  118A  	fcall	_UART_Write
   875     00A0                     l2133:
   876                           
   877                           ;main.c: 126:         UART_Write('\n');
   878     00A0  300A               	movlw	10
   879     00A1  120A  118A  27C5  120A  118A  	fcall	_UART_Write
   880     00A6                     l2135:
   881                           
   882                           ;main.c: 128:         num1 = GenerateRandomNumber();
   883     00A6  120A  118A  278B  120A  118A  	fcall	_GenerateRandomNumber
   884     00AB  00FB               	movwf	_num1
   885     00AC                     l2137:
   886                           
   887                           ;main.c: 130:         num2 = GenerateRandomNumber();
   888     00AC  120A  118A  278B  120A  118A  	fcall	_GenerateRandomNumber
   889     00B1  00FA               	movwf	_num2
   890     00B2                     l2139:
   891                           
   892                           ;main.c: 132:         num3 = GenerateRandomNumber();
   893     00B2  120A  118A  278B  120A  118A  	fcall	_GenerateRandomNumber
   894     00B7  1283               	bcf	3,5	;RP0=0, select bank0
   895     00B8  1303               	bcf	3,6	;RP1=0, select bank0
   896     00B9  00BF               	movwf	_num3
   897     00BA                     l2141:
   898                           
   899                           ;main.c: 134:         num4 = GenerateRandomNumber();
   900     00BA  120A  118A  278B  120A  118A  	fcall	_GenerateRandomNumber
   901     00BF  1283               	bcf	3,5	;RP0=0, select bank0
   902     00C0  1303               	bcf	3,6	;RP1=0, select bank0
   903     00C1  00BE               	movwf	_num4
   904     00C2                     l2143:
   905                           
   906                           ;main.c: 136:         num5 = GenerateRandomNumber();
   907     00C2  120A  118A  278B  120A  118A  	fcall	_GenerateRandomNumber
   908     00C7  1283               	bcf	3,5	;RP0=0, select bank0
   909     00C8  1303               	bcf	3,6	;RP1=0, select bank0
   910     00C9  00BD               	movwf	_num5
   911                           
   912                           ;main.c: 138:         while (codice[0] == '\0')
   913     00CA  28E0               	goto	l2151
   914     00CB                     l2145:
   915                           
   916                           ;main.c: 139:         {;main.c: 140:             KeyPadReader();
   917     00CB  120A  118A  241A  120A  118A  	fcall	_KeyPadReader
   918     00D0                     l2147:
   919                           
   920                           ;main.c: 141:             if (keys[keypressed] == '*'){
   921     00D0  1283               	bcf	3,5	;RP0=0, select bank0
   922     00D1  1303               	bcf	3,6	;RP1=0, select bank0
   923     00D2  083C               	movf	_keypressed,w
   924     00D3  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
   925     00D4  0084               	movwf	4
   926     00D5  120A  118A  250A  120A  118A  	fcall	stringdir
   927     00DA  3A2A               	xorlw	42
   928     00DB  1D03               	skipz
   929     00DC  28DE               	goto	u2151
   930     00DD  28DF               	goto	u2150
   931     00DE                     u2151:
   932     00DE  28E0               	goto	l2151
   933     00DF                     u2150:
   934     00DF  28E5               	goto	l2153
   935     00E0                     l2151:
   936                           
   937                           ;main.c: 138:         while (codice[0] == '\0')
   938     00E0  0826               	movf	_codice,w
   939     00E1  1903               	btfsc	3,2
   940     00E2  28E4               	goto	u2161
   941     00E3  28E5               	goto	u2160
   942     00E4                     u2161:
   943     00E4  28CB               	goto	l2145
   944     00E5                     u2160:
   945     00E5                     l2153:
   946                           
   947                           ;main.c: 147:             lcdSend(0x01, 0);
   948     00E5  01F2               	clrf	lcdSend@tipo
   949     00E6  3001               	movlw	1
   950     00E7  120A  118A  271D  120A  118A  	fcall	_lcdSend
   951     00EC                     l2155:
   952                           
   953                           ;main.c: 148:             lcdPrint("Attendere");
   954     00EC  3055               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   955     00ED  00F6               	movwf	lcdPrint@str
   956     00EE  3080               	movlw	128
   957     00EF  00F7               	movwf	lcdPrint@str+1
   958     00F0  120A  118A  269B  120A  118A  	fcall	_lcdPrint
   959     00F5                     l2157:
   960                           
   961                           ;main.c: 149:             RS485_TxEnable();
   962     00F5  120A  118A  27DC  120A  118A  	fcall	_RS485_TxEnable
   963                           
   964                           ;main.c: 150:             while(num1 != 0x30 && num1 != 0x31 && num1 != 0x32 && num1 != 
      +                          0x33 &&
   965     00FA  2901               	goto	l2161
   966     00FB                     l2159:
   967                           
   968                           ;main.c: 152:                   num1 != 0x38 && num1 != 0x39){;main.c: 153:             
      +                          num1 = GenerateRandomNumber();
   969     00FB  120A  118A  278B  120A  118A  	fcall	_GenerateRandomNumber
   970     0100  00FB               	movwf	_num1
   971     0101                     l2161:
   972                           
   973                           ;main.c: 150:             while(num1 != 0x30 && num1 != 0x31 && num1 != 0x32 && num1 != 
      +                          0x33 &&
   974     0101  3030               	movlw	48
   975     0102  067B               	xorwf	_num1,w
   976     0103  1903               	btfsc	3,2
   977     0104  2906               	goto	u2171
   978     0105  2907               	goto	u2170
   979     0106                     u2171:
   980     0106  293D               	goto	l2181
   981     0107                     u2170:
   982     0107                     l2163:
   983     0107  3031               	movlw	49
   984     0108  067B               	xorwf	_num1,w
   985     0109  1903               	btfsc	3,2
   986     010A  290C               	goto	u2181
   987     010B  290D               	goto	u2180
   988     010C                     u2181:
   989     010C  293D               	goto	l2181
   990     010D                     u2180:
   991     010D                     l2165:
   992     010D  3032               	movlw	50
   993     010E  067B               	xorwf	_num1,w
   994     010F  1903               	btfsc	3,2
   995     0110  2912               	goto	u2191
   996     0111  2913               	goto	u2190
   997     0112                     u2191:
   998     0112  293D               	goto	l2181
   999     0113                     u2190:
  1000     0113                     l2167:
  1001     0113  3033               	movlw	51
  1002     0114  067B               	xorwf	_num1,w
  1003     0115  1903               	btfsc	3,2
  1004     0116  2918               	goto	u2201
  1005     0117  2919               	goto	u2200
  1006     0118                     u2201:
  1007     0118  293D               	goto	l2181
  1008     0119                     u2200:
  1009     0119                     l2169:
  1010     0119  3034               	movlw	52
  1011     011A  067B               	xorwf	_num1,w
  1012     011B  1903               	btfsc	3,2
  1013     011C  291E               	goto	u2211
  1014     011D  291F               	goto	u2210
  1015     011E                     u2211:
  1016     011E  293D               	goto	l2181
  1017     011F                     u2210:
  1018     011F                     l2171:
  1019     011F  3035               	movlw	53
  1020     0120  067B               	xorwf	_num1,w
  1021     0121  1903               	btfsc	3,2
  1022     0122  2924               	goto	u2221
  1023     0123  2925               	goto	u2220
  1024     0124                     u2221:
  1025     0124  293D               	goto	l2181
  1026     0125                     u2220:
  1027     0125                     l2173:
  1028     0125  3036               	movlw	54
  1029     0126  067B               	xorwf	_num1,w
  1030     0127  1903               	btfsc	3,2
  1031     0128  292A               	goto	u2231
  1032     0129  292B               	goto	u2230
  1033     012A                     u2231:
  1034     012A  293D               	goto	l2181
  1035     012B                     u2230:
  1036     012B                     l2175:
  1037     012B  3037               	movlw	55
  1038     012C  067B               	xorwf	_num1,w
  1039     012D  1903               	btfsc	3,2
  1040     012E  2930               	goto	u2241
  1041     012F  2931               	goto	u2240
  1042     0130                     u2241:
  1043     0130  293D               	goto	l2181
  1044     0131                     u2240:
  1045     0131                     l2177:
  1046     0131  3038               	movlw	56
  1047     0132  067B               	xorwf	_num1,w
  1048     0133  1903               	btfsc	3,2
  1049     0134  2936               	goto	u2251
  1050     0135  2937               	goto	u2250
  1051     0136                     u2251:
  1052     0136  293D               	goto	l2181
  1053     0137                     u2250:
  1054     0137                     l2179:
  1055     0137  3039               	movlw	57
  1056     0138  067B               	xorwf	_num1,w
  1057     0139  1D03               	btfss	3,2
  1058     013A  293C               	goto	u2261
  1059     013B  293D               	goto	u2260
  1060     013C                     u2261:
  1061     013C  28FB               	goto	l2159
  1062     013D                     u2260:
  1063     013D                     l2181:
  1064                           
  1065                           ;main.c: 157:             lcdSend(0x01, 0);
  1066     013D  01F2               	clrf	lcdSend@tipo
  1067     013E  3001               	movlw	1
  1068     013F  120A  118A  271D  120A  118A  	fcall	_lcdSend
  1069     0144                     l2183:
  1070                           
  1071                           ;main.c: 158:             lcdPrint("Attendere.");
  1072     0144  304A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1073     0145  00F6               	movwf	lcdPrint@str
  1074     0146  3080               	movlw	128
  1075     0147  00F7               	movwf	lcdPrint@str+1
  1076     0148  120A  118A  269B  120A  118A  	fcall	_lcdPrint
  1077                           
  1078                           ;main.c: 159:             while(num2 != 0x30 && num2 != 0x31 && num2 != 0x32 && num2 != 
      +                          0x33 &&
  1079     014D  2954               	goto	l2187
  1080     014E                     l2185:
  1081                           
  1082                           ;main.c: 161:                   num2 != 0x38 && num2 != 0x39){;main.c: 162:             
      +                          num2 = GenerateRandomNumber();
  1083     014E  120A  118A  278B  120A  118A  	fcall	_GenerateRandomNumber
  1084     0153  00FA               	movwf	_num2
  1085     0154                     l2187:
  1086                           
  1087                           ;main.c: 159:             while(num2 != 0x30 && num2 != 0x31 && num2 != 0x32 && num2 != 
      +                          0x33 &&
  1088     0154  3030               	movlw	48
  1089     0155  067A               	xorwf	_num2,w
  1090     0156  1903               	btfsc	3,2
  1091     0157  2959               	goto	u2271
  1092     0158  295A               	goto	u2270
  1093     0159                     u2271:
  1094     0159  2990               	goto	l2207
  1095     015A                     u2270:
  1096     015A                     l2189:
  1097     015A  3031               	movlw	49
  1098     015B  067A               	xorwf	_num2,w
  1099     015C  1903               	btfsc	3,2
  1100     015D  295F               	goto	u2281
  1101     015E  2960               	goto	u2280
  1102     015F                     u2281:
  1103     015F  2990               	goto	l2207
  1104     0160                     u2280:
  1105     0160                     l2191:
  1106     0160  3032               	movlw	50
  1107     0161  067A               	xorwf	_num2,w
  1108     0162  1903               	btfsc	3,2
  1109     0163  2965               	goto	u2291
  1110     0164  2966               	goto	u2290
  1111     0165                     u2291:
  1112     0165  2990               	goto	l2207
  1113     0166                     u2290:
  1114     0166                     l2193:
  1115     0166  3033               	movlw	51
  1116     0167  067A               	xorwf	_num2,w
  1117     0168  1903               	btfsc	3,2
  1118     0169  296B               	goto	u2301
  1119     016A  296C               	goto	u2300
  1120     016B                     u2301:
  1121     016B  2990               	goto	l2207
  1122     016C                     u2300:
  1123     016C                     l2195:
  1124     016C  3034               	movlw	52
  1125     016D  067A               	xorwf	_num2,w
  1126     016E  1903               	btfsc	3,2
  1127     016F  2971               	goto	u2311
  1128     0170  2972               	goto	u2310
  1129     0171                     u2311:
  1130     0171  2990               	goto	l2207
  1131     0172                     u2310:
  1132     0172                     l2197:
  1133     0172  3035               	movlw	53
  1134     0173  067A               	xorwf	_num2,w
  1135     0174  1903               	btfsc	3,2
  1136     0175  2977               	goto	u2321
  1137     0176  2978               	goto	u2320
  1138     0177                     u2321:
  1139     0177  2990               	goto	l2207
  1140     0178                     u2320:
  1141     0178                     l2199:
  1142     0178  3036               	movlw	54
  1143     0179  067A               	xorwf	_num2,w
  1144     017A  1903               	btfsc	3,2
  1145     017B  297D               	goto	u2331
  1146     017C  297E               	goto	u2330
  1147     017D                     u2331:
  1148     017D  2990               	goto	l2207
  1149     017E                     u2330:
  1150     017E                     l2201:
  1151     017E  3037               	movlw	55
  1152     017F  067A               	xorwf	_num2,w
  1153     0180  1903               	btfsc	3,2
  1154     0181  2983               	goto	u2341
  1155     0182  2984               	goto	u2340
  1156     0183                     u2341:
  1157     0183  2990               	goto	l2207
  1158     0184                     u2340:
  1159     0184                     l2203:
  1160     0184  3038               	movlw	56
  1161     0185  067A               	xorwf	_num2,w
  1162     0186  1903               	btfsc	3,2
  1163     0187  2989               	goto	u2351
  1164     0188  298A               	goto	u2350
  1165     0189                     u2351:
  1166     0189  2990               	goto	l2207
  1167     018A                     u2350:
  1168     018A                     l2205:
  1169     018A  3039               	movlw	57
  1170     018B  067A               	xorwf	_num2,w
  1171     018C  1D03               	btfss	3,2
  1172     018D  298F               	goto	u2361
  1173     018E  2990               	goto	u2360
  1174     018F                     u2361:
  1175     018F  294E               	goto	l2185
  1176     0190                     u2360:
  1177     0190                     l2207:
  1178                           
  1179                           ;main.c: 166:             lcdSend(0x01, 0);
  1180     0190  01F2               	clrf	lcdSend@tipo
  1181     0191  3001               	movlw	1
  1182     0192  120A  118A  271D  120A  118A  	fcall	_lcdSend
  1183     0197                     l2209:
  1184                           
  1185                           ;main.c: 167:             lcdPrint("Attendere..");
  1186     0197  303E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1187     0198  00F6               	movwf	lcdPrint@str
  1188     0199  3080               	movlw	128
  1189     019A  00F7               	movwf	lcdPrint@str+1
  1190     019B  120A  118A  269B  120A  118A  	fcall	_lcdPrint
  1191                           
  1192                           ;main.c: 168:             while(num3 != 0x30 && num3 != 0x33 && num3 != 0x32 && num3 != 
      +                          0x33 &&
  1193     01A0  29A9               	goto	l2213
  1194     01A1                     l2211:
  1195                           
  1196                           ;main.c: 170:                   num3 != 0x38 && num3 != 0x39){;main.c: 171:             
      +                          num3 = GenerateRandomNumber();
  1197     01A1  120A  118A  278B  120A  118A  	fcall	_GenerateRandomNumber
  1198     01A6  1283               	bcf	3,5	;RP0=0, select bank0
  1199     01A7  1303               	bcf	3,6	;RP1=0, select bank0
  1200     01A8  00BF               	movwf	_num3
  1201     01A9                     l2213:
  1202                           
  1203                           ;main.c: 168:             while(num3 != 0x30 && num3 != 0x33 && num3 != 0x32 && num3 != 
      +                          0x33 &&
  1204     01A9  3030               	movlw	48
  1205     01AA  1283               	bcf	3,5	;RP0=0, select bank0
  1206     01AB  1303               	bcf	3,6	;RP1=0, select bank0
  1207     01AC  063F               	xorwf	_num3,w
  1208     01AD  1903               	btfsc	3,2
  1209     01AE  29B0               	goto	u2371
  1210     01AF  29B1               	goto	u2370
  1211     01B0                     u2371:
  1212     01B0  29E7               	goto	l2233
  1213     01B1                     u2370:
  1214     01B1                     l2215:
  1215     01B1  3033               	movlw	51
  1216     01B2  063F               	xorwf	_num3,w
  1217     01B3  1903               	btfsc	3,2
  1218     01B4  29B6               	goto	u2381
  1219     01B5  29B7               	goto	u2380
  1220     01B6                     u2381:
  1221     01B6  29E7               	goto	l2233
  1222     01B7                     u2380:
  1223     01B7                     l2217:
  1224     01B7  3032               	movlw	50
  1225     01B8  063F               	xorwf	_num3,w
  1226     01B9  1903               	btfsc	3,2
  1227     01BA  29BC               	goto	u2391
  1228     01BB  29BD               	goto	u2390
  1229     01BC                     u2391:
  1230     01BC  29E7               	goto	l2233
  1231     01BD                     u2390:
  1232     01BD                     l2219:
  1233     01BD  3033               	movlw	51
  1234     01BE  063F               	xorwf	_num3,w
  1235     01BF  1903               	btfsc	3,2
  1236     01C0  29C2               	goto	u2401
  1237     01C1  29C3               	goto	u2400
  1238     01C2                     u2401:
  1239     01C2  29E7               	goto	l2233
  1240     01C3                     u2400:
  1241     01C3                     l2221:
  1242     01C3  3034               	movlw	52
  1243     01C4  063F               	xorwf	_num3,w
  1244     01C5  1903               	btfsc	3,2
  1245     01C6  29C8               	goto	u2411
  1246     01C7  29C9               	goto	u2410
  1247     01C8                     u2411:
  1248     01C8  29E7               	goto	l2233
  1249     01C9                     u2410:
  1250     01C9                     l2223:
  1251     01C9  3035               	movlw	53
  1252     01CA  063F               	xorwf	_num3,w
  1253     01CB  1903               	btfsc	3,2
  1254     01CC  29CE               	goto	u2421
  1255     01CD  29CF               	goto	u2420
  1256     01CE                     u2421:
  1257     01CE  29E7               	goto	l2233
  1258     01CF                     u2420:
  1259     01CF                     l2225:
  1260     01CF  3036               	movlw	54
  1261     01D0  063F               	xorwf	_num3,w
  1262     01D1  1903               	btfsc	3,2
  1263     01D2  29D4               	goto	u2431
  1264     01D3  29D5               	goto	u2430
  1265     01D4                     u2431:
  1266     01D4  29E7               	goto	l2233
  1267     01D5                     u2430:
  1268     01D5                     l2227:
  1269     01D5  3037               	movlw	55
  1270     01D6  063F               	xorwf	_num3,w
  1271     01D7  1903               	btfsc	3,2
  1272     01D8  29DA               	goto	u2441
  1273     01D9  29DB               	goto	u2440
  1274     01DA                     u2441:
  1275     01DA  29E7               	goto	l2233
  1276     01DB                     u2440:
  1277     01DB                     l2229:
  1278     01DB  3038               	movlw	56
  1279     01DC  063F               	xorwf	_num3,w
  1280     01DD  1903               	btfsc	3,2
  1281     01DE  29E0               	goto	u2451
  1282     01DF  29E1               	goto	u2450
  1283     01E0                     u2451:
  1284     01E0  29E7               	goto	l2233
  1285     01E1                     u2450:
  1286     01E1                     l2231:
  1287     01E1  3039               	movlw	57
  1288     01E2  063F               	xorwf	_num3,w
  1289     01E3  1D03               	btfss	3,2
  1290     01E4  29E6               	goto	u2461
  1291     01E5  29E7               	goto	u2460
  1292     01E6                     u2461:
  1293     01E6  29A1               	goto	l2211
  1294     01E7                     u2460:
  1295     01E7                     l2233:
  1296                           
  1297                           ;main.c: 175:             lcdSend(0x01, 0);
  1298     01E7  01F2               	clrf	lcdSend@tipo
  1299     01E8  3001               	movlw	1
  1300     01E9  120A  118A  271D  120A  118A  	fcall	_lcdSend
  1301     01EE                     l2235:
  1302                           
  1303                           ;main.c: 176:             lcdPrint("Attendere...");
  1304     01EE  3031               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1305     01EF  00F6               	movwf	lcdPrint@str
  1306     01F0  3080               	movlw	128
  1307     01F1  00F7               	movwf	lcdPrint@str+1
  1308     01F2  120A  118A  269B  120A  118A  	fcall	_lcdPrint
  1309                           
  1310                           ;main.c: 177:             while(num4 != 0x30 && num4 != 0x34 && num4 != 0x32 && num4 != 
      +                          0x33 &&
  1311     01F7  2A00               	goto	l2239
  1312     01F8                     l2237:
  1313                           
  1314                           ;main.c: 179:                   num4 != 0x38 && num4 != 0x39){;main.c: 180:             
      +                          num4 = GenerateRandomNumber();
  1315     01F8  120A  118A  278B  120A  118A  	fcall	_GenerateRandomNumber
  1316     01FD  1283               	bcf	3,5	;RP0=0, select bank0
  1317     01FE  1303               	bcf	3,6	;RP1=0, select bank0
  1318     01FF  00BE               	movwf	_num4
  1319     0200                     l2239:
  1320                           
  1321                           ;main.c: 177:             while(num4 != 0x30 && num4 != 0x34 && num4 != 0x32 && num4 != 
      +                          0x33 &&
  1322     0200  3030               	movlw	48
  1323     0201  1283               	bcf	3,5	;RP0=0, select bank0
  1324     0202  1303               	bcf	3,6	;RP1=0, select bank0
  1325     0203  063E               	xorwf	_num4,w
  1326     0204  1903               	btfsc	3,2
  1327     0205  2A07               	goto	u2471
  1328     0206  2A08               	goto	u2470
  1329     0207                     u2471:
  1330     0207  2A3E               	goto	l2259
  1331     0208                     u2470:
  1332     0208                     l2241:
  1333     0208  3034               	movlw	52
  1334     0209  063E               	xorwf	_num4,w
  1335     020A  1903               	btfsc	3,2
  1336     020B  2A0D               	goto	u2481
  1337     020C  2A0E               	goto	u2480
  1338     020D                     u2481:
  1339     020D  2A3E               	goto	l2259
  1340     020E                     u2480:
  1341     020E                     l2243:
  1342     020E  3032               	movlw	50
  1343     020F  063E               	xorwf	_num4,w
  1344     0210  1903               	btfsc	3,2
  1345     0211  2A13               	goto	u2491
  1346     0212  2A14               	goto	u2490
  1347     0213                     u2491:
  1348     0213  2A3E               	goto	l2259
  1349     0214                     u2490:
  1350     0214                     l2245:
  1351     0214  3033               	movlw	51
  1352     0215  063E               	xorwf	_num4,w
  1353     0216  1903               	btfsc	3,2
  1354     0217  2A19               	goto	u2501
  1355     0218  2A1A               	goto	u2500
  1356     0219                     u2501:
  1357     0219  2A3E               	goto	l2259
  1358     021A                     u2500:
  1359     021A                     l2247:
  1360     021A  3034               	movlw	52
  1361     021B  063E               	xorwf	_num4,w
  1362     021C  1903               	btfsc	3,2
  1363     021D  2A1F               	goto	u2511
  1364     021E  2A20               	goto	u2510
  1365     021F                     u2511:
  1366     021F  2A3E               	goto	l2259
  1367     0220                     u2510:
  1368     0220                     l2249:
  1369     0220  3035               	movlw	53
  1370     0221  063E               	xorwf	_num4,w
  1371     0222  1903               	btfsc	3,2
  1372     0223  2A25               	goto	u2521
  1373     0224  2A26               	goto	u2520
  1374     0225                     u2521:
  1375     0225  2A3E               	goto	l2259
  1376     0226                     u2520:
  1377     0226                     l2251:
  1378     0226  3036               	movlw	54
  1379     0227  063E               	xorwf	_num4,w
  1380     0228  1903               	btfsc	3,2
  1381     0229  2A2B               	goto	u2531
  1382     022A  2A2C               	goto	u2530
  1383     022B                     u2531:
  1384     022B  2A3E               	goto	l2259
  1385     022C                     u2530:
  1386     022C                     l2253:
  1387     022C  3037               	movlw	55
  1388     022D  063E               	xorwf	_num4,w
  1389     022E  1903               	btfsc	3,2
  1390     022F  2A31               	goto	u2541
  1391     0230  2A32               	goto	u2540
  1392     0231                     u2541:
  1393     0231  2A3E               	goto	l2259
  1394     0232                     u2540:
  1395     0232                     l2255:
  1396     0232  3038               	movlw	56
  1397     0233  063E               	xorwf	_num4,w
  1398     0234  1903               	btfsc	3,2
  1399     0235  2A37               	goto	u2551
  1400     0236  2A38               	goto	u2550
  1401     0237                     u2551:
  1402     0237  2A3E               	goto	l2259
  1403     0238                     u2550:
  1404     0238                     l2257:
  1405     0238  3039               	movlw	57
  1406     0239  063E               	xorwf	_num4,w
  1407     023A  1D03               	btfss	3,2
  1408     023B  2A3D               	goto	u2561
  1409     023C  2A3E               	goto	u2560
  1410     023D                     u2561:
  1411     023D  29F8               	goto	l2237
  1412     023E                     u2560:
  1413     023E                     l2259:
  1414                           
  1415                           ;main.c: 184:             lcdSend(0x01, 0);
  1416     023E  01F2               	clrf	lcdSend@tipo
  1417     023F  3001               	movlw	1
  1418     0240  120A  118A  271D  120A  118A  	fcall	_lcdSend
  1419     0245                     l2261:
  1420                           
  1421                           ;main.c: 185:             lcdPrint("Attendere....");
  1422     0245  3023               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1423     0246  00F6               	movwf	lcdPrint@str
  1424     0247  3080               	movlw	128
  1425     0248  00F7               	movwf	lcdPrint@str+1
  1426     0249  120A  118A  269B  120A  118A  	fcall	_lcdPrint
  1427                           
  1428                           ;main.c: 186:             while(num5 != 0x30 && num5 != 0x35 && num5 != 0x32 && num5 != 
      +                          0x33 &&
  1429     024E  2A57               	goto	l2265
  1430     024F                     l2263:
  1431                           
  1432                           ;main.c: 188:                   num5 != 0x38 && num5 != 0x39){;main.c: 189:             
      +                          num5 = GenerateRandomNumber();
  1433     024F  120A  118A  278B  120A  118A  	fcall	_GenerateRandomNumber
  1434     0254  1283               	bcf	3,5	;RP0=0, select bank0
  1435     0255  1303               	bcf	3,6	;RP1=0, select bank0
  1436     0256  00BD               	movwf	_num5
  1437     0257                     l2265:
  1438                           
  1439                           ;main.c: 186:             while(num5 != 0x30 && num5 != 0x35 && num5 != 0x32 && num5 != 
      +                          0x33 &&
  1440     0257  3030               	movlw	48
  1441     0258  1283               	bcf	3,5	;RP0=0, select bank0
  1442     0259  1303               	bcf	3,6	;RP1=0, select bank0
  1443     025A  063D               	xorwf	_num5,w
  1444     025B  1903               	btfsc	3,2
  1445     025C  2A5E               	goto	u2571
  1446     025D  2A5F               	goto	u2570
  1447     025E                     u2571:
  1448     025E  2A95               	goto	l2285
  1449     025F                     u2570:
  1450     025F                     l2267:
  1451     025F  3035               	movlw	53
  1452     0260  063D               	xorwf	_num5,w
  1453     0261  1903               	btfsc	3,2
  1454     0262  2A64               	goto	u2581
  1455     0263  2A65               	goto	u2580
  1456     0264                     u2581:
  1457     0264  2A95               	goto	l2285
  1458     0265                     u2580:
  1459     0265                     l2269:
  1460     0265  3032               	movlw	50
  1461     0266  063D               	xorwf	_num5,w
  1462     0267  1903               	btfsc	3,2
  1463     0268  2A6A               	goto	u2591
  1464     0269  2A6B               	goto	u2590
  1465     026A                     u2591:
  1466     026A  2A95               	goto	l2285
  1467     026B                     u2590:
  1468     026B                     l2271:
  1469     026B  3033               	movlw	51
  1470     026C  063D               	xorwf	_num5,w
  1471     026D  1903               	btfsc	3,2
  1472     026E  2A70               	goto	u2601
  1473     026F  2A71               	goto	u2600
  1474     0270                     u2601:
  1475     0270  2A95               	goto	l2285
  1476     0271                     u2600:
  1477     0271                     l2273:
  1478     0271  3034               	movlw	52
  1479     0272  063D               	xorwf	_num5,w
  1480     0273  1903               	btfsc	3,2
  1481     0274  2A76               	goto	u2611
  1482     0275  2A77               	goto	u2610
  1483     0276                     u2611:
  1484     0276  2A95               	goto	l2285
  1485     0277                     u2610:
  1486     0277                     l2275:
  1487     0277  3035               	movlw	53
  1488     0278  063D               	xorwf	_num5,w
  1489     0279  1903               	btfsc	3,2
  1490     027A  2A7C               	goto	u2621
  1491     027B  2A7D               	goto	u2620
  1492     027C                     u2621:
  1493     027C  2A95               	goto	l2285
  1494     027D                     u2620:
  1495     027D                     l2277:
  1496     027D  3036               	movlw	54
  1497     027E  063D               	xorwf	_num5,w
  1498     027F  1903               	btfsc	3,2
  1499     0280  2A82               	goto	u2631
  1500     0281  2A83               	goto	u2630
  1501     0282                     u2631:
  1502     0282  2A95               	goto	l2285
  1503     0283                     u2630:
  1504     0283                     l2279:
  1505     0283  3037               	movlw	55
  1506     0284  063D               	xorwf	_num5,w
  1507     0285  1903               	btfsc	3,2
  1508     0286  2A88               	goto	u2641
  1509     0287  2A89               	goto	u2640
  1510     0288                     u2641:
  1511     0288  2A95               	goto	l2285
  1512     0289                     u2640:
  1513     0289                     l2281:
  1514     0289  3038               	movlw	56
  1515     028A  063D               	xorwf	_num5,w
  1516     028B  1903               	btfsc	3,2
  1517     028C  2A8E               	goto	u2651
  1518     028D  2A8F               	goto	u2650
  1519     028E                     u2651:
  1520     028E  2A95               	goto	l2285
  1521     028F                     u2650:
  1522     028F                     l2283:
  1523     028F  3039               	movlw	57
  1524     0290  063D               	xorwf	_num5,w
  1525     0291  1D03               	btfss	3,2
  1526     0292  2A94               	goto	u2661
  1527     0293  2A95               	goto	u2660
  1528     0294                     u2661:
  1529     0294  2A4F               	goto	l2263
  1530     0295                     u2660:
  1531     0295                     l2285:
  1532                           
  1533                           ;main.c: 192:             UART_Write(num1);
  1534     0295  087B               	movf	_num1,w
  1535     0296  120A  118A  27C5  120A  118A  	fcall	_UART_Write
  1536                           
  1537                           ;main.c: 193:             UART_Write(num2);
  1538     029B  087A               	movf	_num2,w
  1539     029C  120A  118A  27C5  120A  118A  	fcall	_UART_Write
  1540                           
  1541                           ;main.c: 194:             UART_Write(num3);
  1542     02A1  1283               	bcf	3,5	;RP0=0, select bank0
  1543     02A2  1303               	bcf	3,6	;RP1=0, select bank0
  1544     02A3  083F               	movf	_num3,w
  1545     02A4  120A  118A  27C5  120A  118A  	fcall	_UART_Write
  1546                           
  1547                           ;main.c: 195:             UART_Write(num4);
  1548     02A9  1283               	bcf	3,5	;RP0=0, select bank0
  1549     02AA  1303               	bcf	3,6	;RP1=0, select bank0
  1550     02AB  083E               	movf	_num4,w
  1551     02AC  120A  118A  27C5  120A  118A  	fcall	_UART_Write
  1552                           
  1553                           ;main.c: 196:             UART_Write(num5);
  1554     02B1  1283               	bcf	3,5	;RP0=0, select bank0
  1555     02B2  1303               	bcf	3,6	;RP1=0, select bank0
  1556     02B3  083D               	movf	_num5,w
  1557     02B4  120A  118A  27C5  120A  118A  	fcall	_UART_Write
  1558                           
  1559                           ;main.c: 197:             UART_Write('\r');
  1560     02B9  300D               	movlw	13
  1561     02BA  120A  118A  27C5  120A  118A  	fcall	_UART_Write
  1562                           
  1563                           ;main.c: 198:             UART_Write('\n');
  1564     02BF  300A               	movlw	10
  1565     02C0  120A  118A  27C5  120A  118A  	fcall	_UART_Write
  1566                           
  1567                           ;main.c: 199:             lcdSend(0x01, 0);
  1568     02C5  01F2               	clrf	lcdSend@tipo
  1569     02C6  3001               	movlw	1
  1570     02C7  120A  118A  271D  120A  118A  	fcall	_lcdSend
  1571                           
  1572                           ;main.c: 200:             lcdSend(num1, 1);
  1573     02CC  01F2               	clrf	lcdSend@tipo
  1574     02CD  0AF2               	incf	lcdSend@tipo,f
  1575     02CE  087B               	movf	_num1,w
  1576     02CF  120A  118A  271D  120A  118A  	fcall	_lcdSend
  1577                           
  1578                           ;main.c: 201:             lcdSend(num2, 1);
  1579     02D4  01F2               	clrf	lcdSend@tipo
  1580     02D5  0AF2               	incf	lcdSend@tipo,f
  1581     02D6  087A               	movf	_num2,w
  1582     02D7  120A  118A  271D  120A  118A  	fcall	_lcdSend
  1583                           
  1584                           ;main.c: 202:             lcdSend(num3, 1);
  1585     02DC  01F2               	clrf	lcdSend@tipo
  1586     02DD  0AF2               	incf	lcdSend@tipo,f
  1587     02DE  1283               	bcf	3,5	;RP0=0, select bank0
  1588     02DF  1303               	bcf	3,6	;RP1=0, select bank0
  1589     02E0  083F               	movf	_num3,w
  1590     02E1  120A  118A  271D  120A  118A  	fcall	_lcdSend
  1591                           
  1592                           ;main.c: 203:             lcdSend(num4, 1);
  1593     02E6  01F2               	clrf	lcdSend@tipo
  1594     02E7  0AF2               	incf	lcdSend@tipo,f
  1595     02E8  1283               	bcf	3,5	;RP0=0, select bank0
  1596     02E9  1303               	bcf	3,6	;RP1=0, select bank0
  1597     02EA  083E               	movf	_num4,w
  1598     02EB  120A  118A  271D  120A  118A  	fcall	_lcdSend
  1599                           
  1600                           ;main.c: 204:             lcdSend(num5, 1);
  1601     02F0  01F2               	clrf	lcdSend@tipo
  1602     02F1  0AF2               	incf	lcdSend@tipo,f
  1603     02F2  1283               	bcf	3,5	;RP0=0, select bank0
  1604     02F3  1303               	bcf	3,6	;RP1=0, select bank0
  1605     02F4  083D               	movf	_num5,w
  1606     02F5  120A  118A  271D  120A  118A  	fcall	_lcdSend
  1607     02FA                     l2287:
  1608                           
  1609                           ;main.c: 205:             keypressed = 0;
  1610     02FA  1283               	bcf	3,5	;RP0=0, select bank0
  1611     02FB  1303               	bcf	3,6	;RP1=0, select bank0
  1612     02FC  01BC               	clrf	_keypressed
  1613     02FD                     l2289:
  1614                           
  1615                           ;main.c: 206:             RS485_RxEnable();
  1616     02FD  120A  118A  27E1  120A  118A  	fcall	_RS485_RxEnable
  1617     0302                     l2291:
  1618                           
  1619                           ;main.c: 207:             UART_Read();
  1620     0302  120A  118A  230B  120A  118A  	fcall	_UART_Read
  1621     0307  285B               	goto	l2111
  1622     0308  120A  118A  280C   	ljmp	start
  1623     030B                     __end_of_main:
  1624                           
  1625                           	psect	text1
  1626     05E8                     __ptext1:	
  1627 ;; *************** function _initLCD *****************
  1628 ;; Defined at:
  1629 ;;		line 273 in file "main.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;		None
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;		None
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  1    wreg      void 
  1636 ;; Registers used:
  1637 ;;		wreg, status,2, status,0, pclath, cstack
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1643 ;;      Params:         0       0       0       0       0
  1644 ;;      Locals:         0       0       0       0       0
  1645 ;;      Temps:          2       0       0       0       0
  1646 ;;      Totals:         2       0       0       0       0
  1647 ;;Total ram usage:        2 bytes
  1648 ;; Hardware stack levels used: 1
  1649 ;; Hardware stack levels required when called: 2
  1650 ;; This function calls:
  1651 ;;		_lcdSend
  1652 ;; This function is called by:
  1653 ;;		_main
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657     05E8                     _initLCD:	
  1658                           ;psect for function _initLCD
  1659                           
  1660     05E8                     l2041:	
  1661                           ;incstack = 0
  1662                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  1663                           
  1664                           
  1665                           ;main.c: 274:     PORTEbits.RE2 = 0;
  1666     05E8  1283               	bcf	3,5	;RP0=0, select bank0
  1667     05E9  1303               	bcf	3,6	;RP1=0, select bank0
  1668     05EA  1109               	bcf	9,2	;volatile
  1669                           
  1670                           ;main.c: 275:     PORTEbits.RE1 = 0;
  1671     05EB  1089               	bcf	9,1	;volatile
  1672     05EC                     l2043:
  1673                           
  1674                           ;main.c: 276:     _delay((unsigned long)((20)*(20000000/4000.0)));
  1675     05EC  3082               	movlw	130
  1676     05ED  00F7               	movwf	??_initLCD+1
  1677     05EE  30DD               	movlw	221
  1678     05EF  00F6               	movwf	??_initLCD
  1679     05F0                     u2707:
  1680     05F0  0BF6               	decfsz	??_initLCD,f
  1681     05F1  2DF0               	goto	u2707
  1682     05F2  0BF7               	decfsz	??_initLCD+1,f
  1683     05F3  2DF0               	goto	u2707
  1684     05F4  2DF5               	nop2
  1685     05F5                     l2045:
  1686                           
  1687                           ;main.c: 277:     PORTEbits.RE1 = 1;
  1688     05F5  1283               	bcf	3,5	;RP0=0, select bank0
  1689     05F6  1303               	bcf	3,6	;RP1=0, select bank0
  1690     05F7  1489               	bsf	9,1	;volatile
  1691     05F8                     l2047:
  1692                           
  1693                           ;main.c: 278:     lcdSend(0x38, 0);
  1694     05F8  01F2               	clrf	lcdSend@tipo
  1695     05F9  3038               	movlw	56
  1696     05FA  120A  118A  271D  120A  118A  	fcall	_lcdSend
  1697     05FF                     l2049:
  1698                           
  1699                           ;main.c: 279:     _delay((unsigned long)((5)*(20000000/4000.0)));
  1700     05FF  3021               	movlw	33
  1701     0600  00F7               	movwf	??_initLCD+1
  1702     0601  3076               	movlw	118
  1703     0602  00F6               	movwf	??_initLCD
  1704     0603                     u2717:
  1705     0603  0BF6               	decfsz	??_initLCD,f
  1706     0604  2E03               	goto	u2717
  1707     0605  0BF7               	decfsz	??_initLCD+1,f
  1708     0606  2E03               	goto	u2717
  1709     0607  0000               	nop
  1710                           
  1711                           ;main.c: 280:     lcdSend(0x38, 0);
  1712     0608  01F2               	clrf	lcdSend@tipo
  1713     0609  3038               	movlw	56
  1714     060A  120A  118A  271D  120A  118A  	fcall	_lcdSend
  1715     060F                     l2051:
  1716                           
  1717                           ;main.c: 281:     _delay((unsigned long)((1)*(20000000/4000.0)));
  1718     060F  3007               	movlw	7
  1719     0610  00F7               	movwf	??_initLCD+1
  1720     0611  307D               	movlw	125
  1721     0612  00F6               	movwf	??_initLCD
  1722     0613                     u2727:
  1723     0613  0BF6               	decfsz	??_initLCD,f
  1724     0614  2E13               	goto	u2727
  1725     0615  0BF7               	decfsz	??_initLCD+1,f
  1726     0616  2E13               	goto	u2727
  1727     0617                     l2053:
  1728                           
  1729                           ;main.c: 282:     lcdSend(0x38, 0);
  1730     0617  01F2               	clrf	lcdSend@tipo
  1731     0618  3038               	movlw	56
  1732     0619  120A  118A  271D  120A  118A  	fcall	_lcdSend
  1733     061E                     l2055:
  1734                           
  1735                           ;main.c: 283:     lcdSend(0x08, 0);
  1736     061E  01F2               	clrf	lcdSend@tipo
  1737     061F  3008               	movlw	8
  1738     0620  120A  118A  271D  120A  118A  	fcall	_lcdSend
  1739     0625                     l2057:
  1740                           
  1741                           ;main.c: 284:     lcdSend(0x0F, 0);
  1742     0625  01F2               	clrf	lcdSend@tipo
  1743     0626  300F               	movlw	15
  1744     0627  120A  118A  271D  120A  118A  	fcall	_lcdSend
  1745     062C                     l2059:
  1746                           
  1747                           ;main.c: 285:     lcdSend(0x01, 0);
  1748     062C  01F2               	clrf	lcdSend@tipo
  1749     062D  3001               	movlw	1
  1750     062E  120A  118A  271D  120A  118A  	fcall	_lcdSend
  1751     0633                     l2061:
  1752                           
  1753                           ;main.c: 286:     lcdSend(0x0C, 0);
  1754     0633  01F2               	clrf	lcdSend@tipo
  1755     0634  300C               	movlw	12
  1756     0635  120A  118A  271D  120A  118A  	fcall	_lcdSend
  1757     063A                     l2063:
  1758                           
  1759                           ;main.c: 287:     lcdSend(0x80, 0);
  1760     063A  01F2               	clrf	lcdSend@tipo
  1761     063B  3080               	movlw	128
  1762     063C  120A  118A  271D  120A  118A  	fcall	_lcdSend
  1763     0641                     l209:
  1764     0641  0008               	return
  1765     0642                     __end_of_initLCD:
  1766                           
  1767                           	psect	text2
  1768     07C5                     __ptext2:	
  1769 ;; *************** function _UART_Write *****************
  1770 ;; Defined at:
  1771 ;;		line 240 in file "main.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;  data            1    wreg     unsigned char 
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;  data            1    2[COMMON] unsigned char 
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  1    wreg      void 
  1778 ;; Registers used:
  1779 ;;		wreg
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1785 ;;      Params:         0       0       0       0       0
  1786 ;;      Locals:         1       0       0       0       0
  1787 ;;      Temps:          0       0       0       0       0
  1788 ;;      Totals:         1       0       0       0       0
  1789 ;;Total ram usage:        1 bytes
  1790 ;; Hardware stack levels used: 1
  1791 ;; Hardware stack levels required when called: 1
  1792 ;; This function calls:
  1793 ;;		Nothing
  1794 ;; This function is called by:
  1795 ;;		_main
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799     07C5                     _UART_Write:	
  1800                           ;psect for function _UART_Write
  1801                           
  1802                           
  1803                           ;incstack = 0
  1804                           ; Regs used in _UART_Write: [wreg]
  1805                           ;UART_Write@data stored from wreg
  1806     07C5  00F2               	movwf	UART_Write@data
  1807     07C6                     l1629:
  1808     07C6                     l195:	
  1809                           ;main.c: 241:     while (!TXIF)
  1810                           
  1811                           
  1812                           ;main.c: 241:     while (!TXIF)
  1813     07C6  1283               	bcf	3,5	;RP0=0, select bank0
  1814     07C7  1303               	bcf	3,6	;RP1=0, select bank0
  1815     07C8  1E0C               	btfss	12,4	;volatile
  1816     07C9  2FCB               	goto	u1331
  1817     07CA  2FCC               	goto	u1330
  1818     07CB                     u1331:
  1819     07CB  2FC6               	goto	l195
  1820     07CC                     u1330:
  1821     07CC                     l1631:
  1822                           
  1823                           ;main.c: 243:     TXREG = data;
  1824     07CC  0872               	movf	UART_Write@data,w
  1825     07CD  0099               	movwf	25	;volatile
  1826     07CE                     l198:
  1827     07CE  0008               	return
  1828     07CF                     __end_of_UART_Write:
  1829                           
  1830                           	psect	text3
  1831     030B                     __ptext3:	
  1832 ;; *************** function _UART_Read *****************
  1833 ;; Defined at:
  1834 ;;		line 246 in file "main.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;		None
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;		None
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  1    wreg      unsigned char 
  1841 ;; Registers used:
  1842 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1848 ;;      Params:         0       0       0       0       0
  1849 ;;      Locals:         0       0       0       0       0
  1850 ;;      Temps:          0       3       0       0       0
  1851 ;;      Totals:         0       3       0       0       0
  1852 ;;Total ram usage:        3 bytes
  1853 ;; Hardware stack levels used: 1
  1854 ;; Hardware stack levels required when called: 4
  1855 ;; This function calls:
  1856 ;;		_intToString
  1857 ;;		_lcdPrint
  1858 ;;		_lcdSend
  1859 ;; This function is called by:
  1860 ;;		_main
  1861 ;; This function uses a non-reentrant model
  1862 ;;
  1863                           
  1864     030B                     _UART_Read:	
  1865                           ;psect for function _UART_Read
  1866                           
  1867     030B                     l2065:	
  1868                           ;incstack = 0
  1869                           ; Regs used in _UART_Read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1870                           
  1871                           
  1872                           ;main.c: 247:     while (countdown != 0){
  1873     030B  2B69               	goto	l2091
  1874     030C                     l202:
  1875                           
  1876                           ;main.c: 248:         if (!RCIF){
  1877     030C  1A8C               	btfsc	12,5	;volatile
  1878     030D  2B0F               	goto	u2131
  1879     030E  2B10               	goto	u2130
  1880     030F                     u2131:
  1881     030F  2B41               	goto	l2077
  1882     0310                     u2130:
  1883     0310                     l2067:
  1884                           
  1885                           ;main.c: 249:             intToString(countdown, print_countdown);
  1886     0310  0863               	movf	_countdown,w
  1887     0311  00DC               	movwf	??_UART_Read
  1888     0312  01DD               	clrf	??_UART_Read+1
  1889     0313  085C               	movf	??_UART_Read,w
  1890     0314  00D3               	movwf	intToString@n
  1891     0315  085D               	movf	??_UART_Read+1,w
  1892     0316  00D4               	movwf	intToString@n+1
  1893     0317  3040               	movlw	(low (_print_countdown| 0))& (0+255)
  1894     0318  00D5               	movwf	intToString@str
  1895     0319  120A  118A  2395  120A  118A  	fcall	_intToString
  1896     031E                     l2069:
  1897                           
  1898                           ;main.c: 250:             lcdSend(0xC0, 0);
  1899     031E  01F2               	clrf	lcdSend@tipo
  1900     031F  30C0               	movlw	192
  1901     0320  120A  118A  271D  120A  118A  	fcall	_lcdSend
  1902     0325                     l2071:
  1903                           
  1904                           ;main.c: 251:             lcdPrint(print_countdown);
  1905     0325  3040               	movlw	(low (_print_countdown| 0))& (0+255)
  1906     0326  00F6               	movwf	lcdPrint@str
  1907     0327  3000               	movlw	0
  1908     0328  00F7               	movwf	lcdPrint@str+1
  1909     0329  120A  118A  269B  120A  118A  	fcall	_lcdPrint
  1910     032E                     l2073:
  1911                           
  1912                           ;main.c: 252:             countdown --;
  1913     032E  3001               	movlw	1
  1914     032F  1283               	bcf	3,5	;RP0=0, select bank0
  1915     0330  1303               	bcf	3,6	;RP1=0, select bank0
  1916     0331  02E3               	subwf	_countdown,f
  1917     0332                     l2075:
  1918                           
  1919                           ;main.c: 253:             _delay((unsigned long)((200)*(20000000/4000.0)));
  1920     0332  3006               	movlw	6
  1921     0333  1283               	bcf	3,5	;RP0=0, select bank0
  1922     0334  1303               	bcf	3,6	;RP1=0, select bank0
  1923     0335  00DE               	movwf	??_UART_Read+2
  1924     0336  3013               	movlw	19
  1925     0337  00DD               	movwf	??_UART_Read+1
  1926     0338  30AD               	movlw	173
  1927     0339  00DC               	movwf	??_UART_Read
  1928     033A                     u2737:
  1929     033A  0BDC               	decfsz	??_UART_Read,f
  1930     033B  2B3A               	goto	u2737
  1931     033C  0BDD               	decfsz	??_UART_Read+1,f
  1932     033D  2B3A               	goto	u2737
  1933     033E  0BDE               	decfsz	??_UART_Read+2,f
  1934     033F  2B3A               	goto	u2737
  1935                           
  1936                           ;main.c: 254:         }
  1937     0340  2B69               	goto	l2091
  1938     0341                     l2077:
  1939                           
  1940                           ;main.c: 256:             lcdSend(0x01, 0);
  1941     0341  01F2               	clrf	lcdSend@tipo
  1942     0342  3001               	movlw	1
  1943     0343  120A  118A  271D  120A  118A  	fcall	_lcdSend
  1944     0348                     l2079:
  1945                           
  1946                           ;main.c: 257:             lcdPrint("Ricevuto");
  1947     0348  305F               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1948     0349  00F6               	movwf	lcdPrint@str
  1949     034A  3080               	movlw	128
  1950     034B  00F7               	movwf	lcdPrint@str+1
  1951     034C  120A  118A  269B  120A  118A  	fcall	_lcdPrint
  1952     0351                     l2081:
  1953                           
  1954                           ;main.c: 258:             RCIF = 0;
  1955     0351  1283               	bcf	3,5	;RP0=0, select bank0
  1956     0352  1303               	bcf	3,6	;RP1=0, select bank0
  1957     0353  128C               	bcf	12,5	;volatile
  1958     0354                     l2083:
  1959                           
  1960                           ;main.c: 259:             countdown = 60;
  1961     0354  303C               	movlw	60
  1962     0355  00E3               	movwf	_countdown
  1963     0356                     l2085:
  1964                           
  1965                           ;main.c: 260:             _delay((unsigned long)((1000)*(20000000/4000.0)));
  1966     0356  301A               	movlw	26
  1967     0357  1283               	bcf	3,5	;RP0=0, select bank0
  1968     0358  1303               	bcf	3,6	;RP1=0, select bank0
  1969     0359  00DE               	movwf	??_UART_Read+2
  1970     035A  305E               	movlw	94
  1971     035B  00DD               	movwf	??_UART_Read+1
  1972     035C  306D               	movlw	109
  1973     035D  00DC               	movwf	??_UART_Read
  1974     035E                     u2747:
  1975     035E  0BDC               	decfsz	??_UART_Read,f
  1976     035F  2B5E               	goto	u2747
  1977     0360  0BDD               	decfsz	??_UART_Read+1,f
  1978     0361  2B5E               	goto	u2747
  1979     0362  0BDE               	decfsz	??_UART_Read+2,f
  1980     0363  2B5E               	goto	u2747
  1981     0364  2B65               	nop2
  1982     0365                     l2087:
  1983                           
  1984                           ;main.c: 261:             return RCREG;;	Return value of _UART_Read is never used
  1985     0365  1283               	bcf	3,5	;RP0=0, select bank0
  1986     0366  1303               	bcf	3,6	;RP1=0, select bank0
  1987     0367  081A               	movf	26,w	;volatile
  1988     0368  2B94               	goto	l205
  1989     0369                     l2091:
  1990                           
  1991                           ;main.c: 247:     while (countdown != 0){
  1992     0369  1283               	bcf	3,5	;RP0=0, select bank0
  1993     036A  1303               	bcf	3,6	;RP1=0, select bank0
  1994     036B  0863               	movf	_countdown,w
  1995     036C  1D03               	btfss	3,2
  1996     036D  2B6F               	goto	u2141
  1997     036E  2B70               	goto	u2140
  1998     036F                     u2141:
  1999     036F  2B0C               	goto	l202
  2000     0370                     u2140:
  2001     0370                     l2093:
  2002                           
  2003                           ;main.c: 264:     lcdSend(0x01, 0);
  2004     0370  01F2               	clrf	lcdSend@tipo
  2005     0371  3001               	movlw	1
  2006     0372  120A  118A  271D  120A  118A  	fcall	_lcdSend
  2007     0377                     l2095:
  2008                           
  2009                           ;main.c: 265:     lcdPrint("Codice Scaduto");
  2010     0377  3014               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2011     0378  00F6               	movwf	lcdPrint@str
  2012     0379  3080               	movlw	128
  2013     037A  00F7               	movwf	lcdPrint@str+1
  2014     037B  120A  118A  269B  120A  118A  	fcall	_lcdPrint
  2015     0380                     l2097:
  2016                           
  2017                           ;main.c: 266:     RCIF = 0;
  2018     0380  1283               	bcf	3,5	;RP0=0, select bank0
  2019     0381  1303               	bcf	3,6	;RP1=0, select bank0
  2020     0382  128C               	bcf	12,5	;volatile
  2021     0383                     l2099:
  2022                           
  2023                           ;main.c: 267:     countdown = 60;
  2024     0383  303C               	movlw	60
  2025     0384  00E3               	movwf	_countdown
  2026     0385                     l2101:
  2027                           
  2028                           ;main.c: 268:     _delay((unsigned long)((1000)*(20000000/4000.0)));
  2029     0385  301A               	movlw	26
  2030     0386  1283               	bcf	3,5	;RP0=0, select bank0
  2031     0387  1303               	bcf	3,6	;RP1=0, select bank0
  2032     0388  00DE               	movwf	??_UART_Read+2
  2033     0389  305E               	movlw	94
  2034     038A  00DD               	movwf	??_UART_Read+1
  2035     038B  306D               	movlw	109
  2036     038C  00DC               	movwf	??_UART_Read
  2037     038D                     u2757:
  2038     038D  0BDC               	decfsz	??_UART_Read,f
  2039     038E  2B8D               	goto	u2757
  2040     038F  0BDD               	decfsz	??_UART_Read+1,f
  2041     0390  2B8D               	goto	u2757
  2042     0391  0BDE               	decfsz	??_UART_Read+2,f
  2043     0392  2B8D               	goto	u2757
  2044     0393  2B94               	nop2
  2045     0394                     l205:
  2046     0394  0008               	return
  2047     0395                     __end_of_UART_Read:
  2048                           
  2049                           	psect	text4
  2050     069B                     __ptext4:	
  2051 ;; *************** function _lcdPrint *****************
  2052 ;; Defined at:
  2053 ;;		line 311 in file "main.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;  str             2    6[COMMON] PTR unsigned char 
  2056 ;;		 -> STR_8(15), STR_7(9), print_countdown(3), STR_6(14), 
  2057 ;;		 -> STR_5(13), STR_4(12), STR_3(11), STR_2(10), 
  2058 ;;		 -> STR_1(8), 
  2059 ;; Auto vars:     Size  Location     Type
  2060 ;;  n               2    8[COMMON] int 
  2061 ;; Return value:  Size  Location     Type
  2062 ;;                  1    wreg      void 
  2063 ;; Registers used:
  2064 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2065 ;; Tracked objects:
  2066 ;;		On entry : 0/0
  2067 ;;		On exit  : 0/0
  2068 ;;		Unchanged: 0/0
  2069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2070 ;;      Params:         2       0       0       0       0
  2071 ;;      Locals:         2       0       0       0       0
  2072 ;;      Temps:          0       3       0       0       0
  2073 ;;      Totals:         4       3       0       0       0
  2074 ;;Total ram usage:        7 bytes
  2075 ;; Hardware stack levels used: 1
  2076 ;; Hardware stack levels required when called: 2
  2077 ;; This function calls:
  2078 ;;		_lcdSend
  2079 ;; This function is called by:
  2080 ;;		_main
  2081 ;;		_UART_Read
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085     069B                     _lcdPrint:	
  2086                           ;psect for function _lcdPrint
  2087                           
  2088     069B                     l2011:	
  2089                           ;incstack = 0
  2090                           ; Regs used in _lcdPrint: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2091                           
  2092                           
  2093                           ;main.c: 312:     int n = 0;
  2094     069B  01F8               	clrf	lcdPrint@n
  2095     069C  01F9               	clrf	lcdPrint@n+1
  2096                           
  2097                           ;main.c: 313:     while (str[n] != '\0') {
  2098     069D  2EC2               	goto	l2017
  2099     069E                     l2013:
  2100                           
  2101                           ;main.c: 314:         lcdSend(str[n++], 1);
  2102     069E  01F2               	clrf	lcdSend@tipo
  2103     069F  0AF2               	incf	lcdSend@tipo,f
  2104     06A0  0878               	movf	lcdPrint@n,w
  2105     06A1  0776               	addwf	lcdPrint@str,w
  2106     06A2  00C4               	movwf	??_lcdPrint+1
  2107     06A3  0877               	movf	lcdPrint@str+1,w
  2108     06A4  00C3               	movwf	??_lcdPrint
  2109     06A5  1803               	skipnc
  2110     06A6  0AC3               	incf	??_lcdPrint,f
  2111     06A7  1FF8               	btfss	lcdPrint@n,7
  2112     06A8  2EAA               	goto	u2080
  2113     06A9  03C3               	decf	??_lcdPrint,f
  2114     06AA                     u2080:
  2115     06AA  1283               	bcf	3,5	;RP0=0, select bank0
  2116     06AB  1303               	bcf	3,6	;RP1=0, select bank0
  2117     06AC  0843               	movf	??_lcdPrint,w
  2118     06AD  00C5               	movwf	??_lcdPrint+2
  2119     06AE  0845               	movf	??_lcdPrint+2,w
  2120     06AF  00FF               	movwf	btemp+1
  2121     06B0  0844               	movf	??_lcdPrint+1,w
  2122     06B1  0084               	movwf	4
  2123     06B2  120A  118A  2500  120A  118A  	fcall	stringtab
  2124     06B7  120A  118A  271D  120A  118A  	fcall	_lcdSend
  2125     06BC                     l2015:
  2126     06BC  3001               	movlw	1
  2127     06BD  07F8               	addwf	lcdPrint@n,f
  2128     06BE  1803               	skipnc
  2129     06BF  0AF9               	incf	lcdPrint@n+1,f
  2130     06C0  3000               	movlw	0
  2131     06C1  07F9               	addwf	lcdPrint@n+1,f
  2132     06C2                     l2017:
  2133                           
  2134                           ;main.c: 313:     while (str[n] != '\0') {
  2135     06C2  0878               	movf	lcdPrint@n,w
  2136     06C3  0776               	addwf	lcdPrint@str,w
  2137     06C4  1283               	bcf	3,5	;RP0=0, select bank0
  2138     06C5  1303               	bcf	3,6	;RP1=0, select bank0
  2139     06C6  00C4               	movwf	??_lcdPrint+1
  2140     06C7  0877               	movf	lcdPrint@str+1,w
  2141     06C8  00C3               	movwf	??_lcdPrint
  2142     06C9  1803               	skipnc
  2143     06CA  0AC3               	incf	??_lcdPrint,f
  2144     06CB  1FF8               	btfss	lcdPrint@n,7
  2145     06CC  2ECE               	goto	u2090
  2146     06CD  03C3               	decf	??_lcdPrint,f
  2147     06CE                     u2090:
  2148     06CE  1283               	bcf	3,5	;RP0=0, select bank0
  2149     06CF  1303               	bcf	3,6	;RP1=0, select bank0
  2150     06D0  0843               	movf	??_lcdPrint,w
  2151     06D1  00C5               	movwf	??_lcdPrint+2
  2152     06D2  0845               	movf	??_lcdPrint+2,w
  2153     06D3  00FF               	movwf	btemp+1
  2154     06D4  0844               	movf	??_lcdPrint+1,w
  2155     06D5  0084               	movwf	4
  2156     06D6  120A  118A  2500  120A  118A  	fcall	stringtab
  2157     06DB  3A00               	xorlw	0
  2158     06DC  1D03               	skipz
  2159     06DD  2EDF               	goto	u2101
  2160     06DE  2EE0               	goto	u2100
  2161     06DF                     u2101:
  2162     06DF  2E9E               	goto	l2013
  2163     06E0                     u2100:
  2164     06E0                     l218:
  2165     06E0  0008               	return
  2166     06E1                     __end_of_lcdPrint:
  2167                           
  2168                           	psect	text5
  2169     071D                     __ptext5:	
  2170 ;; *************** function _lcdSend *****************
  2171 ;; Defined at:
  2172 ;;		line 290 in file "main.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;  dato            1    wreg     unsigned char 
  2175 ;;  tipo            1    2[COMMON] unsigned char 
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;  dato            1    5[COMMON] unsigned char 
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      void 
  2180 ;; Registers used:
  2181 ;;		wreg, status,2, status,0
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2187 ;;      Params:         1       0       0       0       0
  2188 ;;      Locals:         1       0       0       0       0
  2189 ;;      Temps:          2       0       0       0       0
  2190 ;;      Totals:         4       0       0       0       0
  2191 ;;Total ram usage:        4 bytes
  2192 ;; Hardware stack levels used: 1
  2193 ;; Hardware stack levels required when called: 1
  2194 ;; This function calls:
  2195 ;;		Nothing
  2196 ;; This function is called by:
  2197 ;;		_main
  2198 ;;		_UART_Read
  2199 ;;		_initLCD
  2200 ;;		_lcdPrint
  2201 ;;		_KeyPressed
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205     071D                     _lcdSend:	
  2206                           ;psect for function _lcdSend
  2207                           
  2208                           
  2209                           ;incstack = 0
  2210                           ; Regs used in _lcdSend: [wreg+status,2+status,0]
  2211                           ;lcdSend@dato stored from wreg
  2212     071D  00F5               	movwf	lcdSend@dato
  2213     071E                     l1977:
  2214                           
  2215                           ;main.c: 294:     TRISD = 0x00;
  2216     071E  1683               	bsf	3,5	;RP0=1, select bank1
  2217     071F  1303               	bcf	3,6	;RP1=0, select bank1
  2218     0720  0188               	clrf	8	;volatile
  2219     0721                     l1979:
  2220                           
  2221                           ;main.c: 295:     TRISEbits.TRISE1 = 0;
  2222     0721  1089               	bcf	9,1	;volatile
  2223     0722                     l1981:
  2224                           
  2225                           ;main.c: 296:     TRISEbits.TRISE2 = 0;
  2226     0722  1109               	bcf	9,2	;volatile
  2227     0723                     l1983:
  2228                           
  2229                           ;main.c: 301:     PORTEbits.RE1 = 1;
  2230     0723  1283               	bcf	3,5	;RP0=0, select bank0
  2231     0724  1303               	bcf	3,6	;RP1=0, select bank0
  2232     0725  1489               	bsf	9,1	;volatile
  2233     0726                     l1985:
  2234                           
  2235                           ;main.c: 303:     PORTD = dato;
  2236     0726  0875               	movf	lcdSend@dato,w
  2237     0727  0088               	movwf	8	;volatile
  2238     0728                     l1987:
  2239                           
  2240                           ;main.c: 304:     PORTEbits.RE2 = tipo;
  2241     0728  0C72               	rrf	lcdSend@tipo,w
  2242     0729  1C03               	skipc
  2243     072A  1109               	bcf	9,2	;volatile
  2244     072B  1803               	skipnc
  2245     072C  1509               	bsf	9,2	;volatile
  2246     072D                     l1989:
  2247                           
  2248                           ;main.c: 305:     _delay((unsigned long)((3)*(20000000/4000.0)));
  2249     072D  3014               	movlw	20
  2250     072E  00F4               	movwf	??_lcdSend+1
  2251     072F  3079               	movlw	121
  2252     0730  00F3               	movwf	??_lcdSend
  2253     0731                     u2767:
  2254     0731  0BF3               	decfsz	??_lcdSend,f
  2255     0732  2F31               	goto	u2767
  2256     0733  0BF4               	decfsz	??_lcdSend+1,f
  2257     0734  2F31               	goto	u2767
  2258     0735  2F36               	nop2
  2259     0736                     l1991:
  2260                           
  2261                           ;main.c: 306:     PORTEbits.RE1 = 0;
  2262     0736  1283               	bcf	3,5	;RP0=0, select bank0
  2263     0737  1303               	bcf	3,6	;RP1=0, select bank0
  2264     0738  1089               	bcf	9,1	;volatile
  2265     0739                     l1993:
  2266                           
  2267                           ;main.c: 307:     _delay((unsigned long)((3)*(20000000/4000.0)));
  2268     0739  3014               	movlw	20
  2269     073A  00F4               	movwf	??_lcdSend+1
  2270     073B  3079               	movlw	121
  2271     073C  00F3               	movwf	??_lcdSend
  2272     073D                     u2777:
  2273     073D  0BF3               	decfsz	??_lcdSend,f
  2274     073E  2F3D               	goto	u2777
  2275     073F  0BF4               	decfsz	??_lcdSend+1,f
  2276     0740  2F3D               	goto	u2777
  2277     0741  2F42               	nop2
  2278     0742                     l1995:
  2279                           
  2280                           ;main.c: 308:     PORTEbits.RE1 = 1;
  2281     0742  1283               	bcf	3,5	;RP0=0, select bank0
  2282     0743  1303               	bcf	3,6	;RP1=0, select bank0
  2283     0744  1489               	bsf	9,1	;volatile
  2284     0745                     l212:
  2285     0745  0008               	return
  2286     0746                     __end_of_lcdSend:
  2287                           
  2288                           	psect	text6
  2289     0395                     __ptext6:	
  2290 ;; *************** function _intToString *****************
  2291 ;; Defined at:
  2292 ;;		line 457 in file "main.c"
  2293 ;; Parameters:    Size  Location     Type
  2294 ;;  n               2   16[BANK0 ] int 
  2295 ;;  str             1   18[BANK0 ] PTR unsigned char 
  2296 ;;		 -> print_countdown(3), 
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;  t               2   20[BANK0 ] int 
  2299 ;;  i               2   23[BANK0 ] int 
  2300 ;;  cifre           1   22[BANK0 ] unsigned char 
  2301 ;; Return value:  Size  Location     Type
  2302 ;;                  1    wreg      void 
  2303 ;; Registers used:
  2304 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2305 ;; Tracked objects:
  2306 ;;		On entry : 0/0
  2307 ;;		On exit  : 0/0
  2308 ;;		Unchanged: 0/0
  2309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2310 ;;      Params:         0       3       0       0       0
  2311 ;;      Locals:         0       5       0       0       0
  2312 ;;      Temps:          0       1       0       0       0
  2313 ;;      Totals:         0       9       0       0       0
  2314 ;;Total ram usage:        9 bytes
  2315 ;; Hardware stack levels used: 1
  2316 ;; Hardware stack levels required when called: 3
  2317 ;; This function calls:
  2318 ;;		___awdiv
  2319 ;;		___awmod
  2320 ;;		_potenza
  2321 ;; This function is called by:
  2322 ;;		_UART_Read
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326     0395                     _intToString:	
  2327                           ;psect for function _intToString
  2328                           
  2329     0395                     l2019:	
  2330                           ;incstack = 0
  2331                           ; Regs used in _intToString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2332                           
  2333                           
  2334                           ;main.c: 460:     char cifre = 1;
  2335     0395  1283               	bcf	3,5	;RP0=0, select bank0
  2336     0396  1303               	bcf	3,6	;RP1=0, select bank0
  2337     0397  01D9               	clrf	intToString@cifre
  2338     0398  0AD9               	incf	intToString@cifre,f
  2339     0399                     l2021:
  2340                           
  2341                           ;main.c: 463:     while (n / potenza(10, cifre)) cifre++;
  2342     0399  2B9E               	goto	l2025
  2343     039A                     l2023:
  2344     039A  3001               	movlw	1
  2345     039B  00D6               	movwf	??_intToString
  2346     039C  0856               	movf	??_intToString,w
  2347     039D  07D9               	addwf	intToString@cifre,f
  2348     039E                     l2025:
  2349     039E  0859               	movf	intToString@cifre,w
  2350     039F  00F8               	movwf	potenza@e
  2351     03A0  300A               	movlw	10
  2352     03A1  120A  118A  26E1  120A  118A  	fcall	_potenza
  2353     03A6  0879               	movf	?_potenza+1,w
  2354     03A7  1283               	bcf	3,5	;RP0=0, select bank0
  2355     03A8  1303               	bcf	3,6	;RP1=0, select bank0
  2356     03A9  00CB               	movwf	___awdiv@divisor+1
  2357     03AA  0878               	movf	?_potenza,w
  2358     03AB  00CA               	movwf	___awdiv@divisor
  2359     03AC  0854               	movf	intToString@n+1,w
  2360     03AD  00CD               	movwf	___awdiv@dividend+1
  2361     03AE  0853               	movf	intToString@n,w
  2362     03AF  00CC               	movwf	___awdiv@dividend
  2363     03B0  120A  118A  257F  120A  118A  	fcall	___awdiv
  2364     03B5  1283               	bcf	3,5	;RP0=0, select bank0
  2365     03B6  1303               	bcf	3,6	;RP1=0, select bank0
  2366     03B7  084A               	movf	?___awdiv,w
  2367     03B8  044B               	iorwf	?___awdiv+1,w
  2368     03B9  1D03               	btfss	3,2
  2369     03BA  2BBC               	goto	u2111
  2370     03BB  2BBD               	goto	u2110
  2371     03BC                     u2111:
  2372     03BC  2B9A               	goto	l2023
  2373     03BD                     u2110:
  2374     03BD                     l2027:
  2375                           
  2376                           ;main.c: 465:     for (i = 0; i < cifre; i++) {
  2377     03BD  01DA               	clrf	intToString@i
  2378     03BE  01DB               	clrf	intToString@i+1
  2379     03BF  2C03               	goto	l2037
  2380     03C0                     l2029:
  2381                           
  2382                           ;main.c: 466:         int t = potenza(10, cifre - 1 - i);
  2383     03C0  1283               	bcf	3,5	;RP0=0, select bank0
  2384     03C1  1303               	bcf	3,6	;RP1=0, select bank0
  2385     03C2  085A               	movf	intToString@i,w
  2386     03C3  0259               	subwf	intToString@cifre,w
  2387     03C4  3EFF               	addlw	255
  2388     03C5  00F8               	movwf	potenza@e
  2389     03C6  300A               	movlw	10
  2390     03C7  120A  118A  26E1  120A  118A  	fcall	_potenza
  2391     03CC  0879               	movf	?_potenza+1,w
  2392     03CD  1283               	bcf	3,5	;RP0=0, select bank0
  2393     03CE  1303               	bcf	3,6	;RP1=0, select bank0
  2394     03CF  00D8               	movwf	intToString@t+1
  2395     03D0  0878               	movf	?_potenza,w
  2396     03D1  00D7               	movwf	intToString@t
  2397     03D2                     l2031:
  2398                           
  2399                           ;main.c: 467:         str[i] = '0' + (char) (n / t);
  2400     03D2  085A               	movf	intToString@i,w
  2401     03D3  0755               	addwf	intToString@str,w
  2402     03D4  00D6               	movwf	??_intToString
  2403     03D5  0856               	movf	??_intToString,w
  2404     03D6  0084               	movwf	4
  2405     03D7  0858               	movf	intToString@t+1,w
  2406     03D8  00CB               	movwf	___awdiv@divisor+1
  2407     03D9  0857               	movf	intToString@t,w
  2408     03DA  00CA               	movwf	___awdiv@divisor
  2409     03DB  0854               	movf	intToString@n+1,w
  2410     03DC  00CD               	movwf	___awdiv@dividend+1
  2411     03DD  0853               	movf	intToString@n,w
  2412     03DE  00CC               	movwf	___awdiv@dividend
  2413     03DF  120A  118A  257F  120A  118A  	fcall	___awdiv
  2414     03E4  1283               	bcf	3,5	;RP0=0, select bank0
  2415     03E5  1303               	bcf	3,6	;RP1=0, select bank0
  2416     03E6  084A               	movf	?___awdiv,w
  2417     03E7  3E30               	addlw	48
  2418     03E8  1383               	bcf	3,7	;select IRP bank0
  2419     03E9  0080               	movwf	0
  2420     03EA                     l2033:
  2421                           
  2422                           ;main.c: 468:         n = n % t;
  2423     03EA  0858               	movf	intToString@t+1,w
  2424     03EB  00F3               	movwf	___awmod@divisor+1
  2425     03EC  0857               	movf	intToString@t,w
  2426     03ED  00F2               	movwf	___awmod@divisor
  2427     03EE  0854               	movf	intToString@n+1,w
  2428     03EF  00F5               	movwf	___awmod@dividend+1
  2429     03F0  0853               	movf	intToString@n,w
  2430     03F1  00F4               	movwf	___awmod@dividend
  2431     03F2  120A  118A  2642  120A  118A  	fcall	___awmod
  2432     03F7  0873               	movf	?___awmod+1,w
  2433     03F8  1283               	bcf	3,5	;RP0=0, select bank0
  2434     03F9  1303               	bcf	3,6	;RP1=0, select bank0
  2435     03FA  00D4               	movwf	intToString@n+1
  2436     03FB  0872               	movf	?___awmod,w
  2437     03FC  00D3               	movwf	intToString@n
  2438     03FD                     l2035:
  2439                           
  2440                           ;main.c: 469:     }
  2441     03FD  3001               	movlw	1
  2442     03FE  07DA               	addwf	intToString@i,f
  2443     03FF  1803               	skipnc
  2444     0400  0ADB               	incf	intToString@i+1,f
  2445     0401  3000               	movlw	0
  2446     0402  07DB               	addwf	intToString@i+1,f
  2447     0403                     l2037:
  2448     0403  085B               	movf	intToString@i+1,w
  2449     0404  3A80               	xorlw	128
  2450     0405  00D6               	movwf	??_intToString
  2451     0406  3080               	movlw	128
  2452     0407  0256               	subwf	??_intToString,w
  2453     0408  1D03               	skipz
  2454     0409  2C0C               	goto	u2125
  2455     040A  0859               	movf	intToString@cifre,w
  2456     040B  025A               	subwf	intToString@i,w
  2457     040C                     u2125:
  2458     040C  1C03               	skipc
  2459     040D  2C0F               	goto	u2121
  2460     040E  2C10               	goto	u2120
  2461     040F                     u2121:
  2462     040F  2BC0               	goto	l2029
  2463     0410                     u2120:
  2464     0410                     l2039:
  2465                           
  2466                           ;main.c: 471:     str[i] = '\0';
  2467     0410  1283               	bcf	3,5	;RP0=0, select bank0
  2468     0411  1303               	bcf	3,6	;RP1=0, select bank0
  2469     0412  085A               	movf	intToString@i,w
  2470     0413  0755               	addwf	intToString@str,w
  2471     0414  00D6               	movwf	??_intToString
  2472     0415  0856               	movf	??_intToString,w
  2473     0416  0084               	movwf	4
  2474     0417  1383               	bcf	3,7	;select IRP bank0
  2475     0418  0180               	clrf	0
  2476     0419                     l283:
  2477     0419  0008               	return
  2478     041A                     __end_of_intToString:
  2479                           
  2480                           	psect	text7
  2481     06E1                     __ptext7:	
  2482 ;; *************** function _potenza *****************
  2483 ;; Defined at:
  2484 ;;		line 449 in file "main.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;  b               1    wreg     unsigned char 
  2487 ;;  e               1    8[COMMON] unsigned char 
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;  b               1    2[BANK0 ] unsigned char 
  2490 ;;  i               2    3[BANK0 ] int 
  2491 ;;  n               2    5[BANK0 ] int 
  2492 ;; Return value:  Size  Location     Type
  2493 ;;                  2    8[COMMON] int 
  2494 ;; Registers used:
  2495 ;;		wreg, status,2, status,0, pclath, cstack
  2496 ;; Tracked objects:
  2497 ;;		On entry : 0/0
  2498 ;;		On exit  : 0/0
  2499 ;;		Unchanged: 0/0
  2500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2501 ;;      Params:         2       0       0       0       0
  2502 ;;      Locals:         0       5       0       0       0
  2503 ;;      Temps:          0       2       0       0       0
  2504 ;;      Totals:         2       7       0       0       0
  2505 ;;Total ram usage:        9 bytes
  2506 ;; Hardware stack levels used: 1
  2507 ;; Hardware stack levels required when called: 2
  2508 ;; This function calls:
  2509 ;;		___wmul
  2510 ;; This function is called by:
  2511 ;;		_intToString
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515     06E1                     _potenza:	
  2516                           ;psect for function _potenza
  2517                           
  2518                           
  2519                           ;incstack = 0
  2520                           ; Regs used in _potenza: [wreg+status,2+status,0+pclath+cstack]
  2521                           ;potenza@b stored from wreg
  2522     06E1  1283               	bcf	3,5	;RP0=0, select bank0
  2523     06E2  1303               	bcf	3,6	;RP1=0, select bank0
  2524     06E3  00C5               	movwf	potenza@b
  2525     06E4                     l1997:
  2526                           
  2527                           ;main.c: 450:     int n = 1;
  2528     06E4  3001               	movlw	1
  2529     06E5  00C8               	movwf	potenza@n
  2530     06E6  3000               	movlw	0
  2531     06E7  00C9               	movwf	potenza@n+1
  2532     06E8                     l1999:
  2533                           
  2534                           ;main.c: 451:     for (int i = 0; i < e; i++) {
  2535     06E8  01C6               	clrf	potenza@i
  2536     06E9  01C7               	clrf	potenza@i+1
  2537     06EA  2F09               	goto	l2005
  2538     06EB                     l2001:
  2539                           
  2540                           ;main.c: 452:         n = n * b;
  2541     06EB  1283               	bcf	3,5	;RP0=0, select bank0
  2542     06EC  1303               	bcf	3,6	;RP1=0, select bank0
  2543     06ED  0845               	movf	potenza@b,w
  2544     06EE  00C3               	movwf	??_potenza
  2545     06EF  01C4               	clrf	??_potenza+1
  2546     06F0  0843               	movf	??_potenza,w
  2547     06F1  00F2               	movwf	___wmul@multiplier
  2548     06F2  0844               	movf	??_potenza+1,w
  2549     06F3  00F3               	movwf	___wmul@multiplier+1
  2550     06F4  0849               	movf	potenza@n+1,w
  2551     06F5  00F5               	movwf	___wmul@multiplicand+1
  2552     06F6  0848               	movf	potenza@n,w
  2553     06F7  00F4               	movwf	___wmul@multiplicand
  2554     06F8  120A  118A  2746  120A  118A  	fcall	___wmul
  2555     06FD  0873               	movf	?___wmul+1,w
  2556     06FE  1283               	bcf	3,5	;RP0=0, select bank0
  2557     06FF  1303               	bcf	3,6	;RP1=0, select bank0
  2558     0700  00C9               	movwf	potenza@n+1
  2559     0701  0872               	movf	?___wmul,w
  2560     0702  00C8               	movwf	potenza@n
  2561     0703                     l2003:
  2562                           
  2563                           ;main.c: 453:     }
  2564     0703  3001               	movlw	1
  2565     0704  07C6               	addwf	potenza@i,f
  2566     0705  1803               	skipnc
  2567     0706  0AC7               	incf	potenza@i+1,f
  2568     0707  3000               	movlw	0
  2569     0708  07C7               	addwf	potenza@i+1,f
  2570     0709                     l2005:
  2571     0709  0847               	movf	potenza@i+1,w
  2572     070A  3A80               	xorlw	128
  2573     070B  00C3               	movwf	??_potenza
  2574     070C  3080               	movlw	128
  2575     070D  0243               	subwf	??_potenza,w
  2576     070E  1D03               	skipz
  2577     070F  2F12               	goto	u2075
  2578     0710  0878               	movf	potenza@e,w
  2579     0711  0246               	subwf	potenza@i,w
  2580     0712                     u2075:
  2581     0712  1C03               	skipc
  2582     0713  2F15               	goto	u2071
  2583     0714  2F16               	goto	u2070
  2584     0715                     u2071:
  2585     0715  2EEB               	goto	l2001
  2586     0716                     u2070:
  2587     0716                     l2007:
  2588                           
  2589                           ;main.c: 454:     return n;
  2590     0716  1283               	bcf	3,5	;RP0=0, select bank0
  2591     0717  1303               	bcf	3,6	;RP1=0, select bank0
  2592     0718  0849               	movf	potenza@n+1,w
  2593     0719  00F9               	movwf	?_potenza+1
  2594     071A  0848               	movf	potenza@n,w
  2595     071B  00F8               	movwf	?_potenza
  2596     071C                     l274:
  2597     071C  0008               	return
  2598     071D                     __end_of_potenza:
  2599                           
  2600                           	psect	text8
  2601     0746                     __ptext8:	
  2602 ;; *************** function ___wmul *****************
  2603 ;; Defined at:
  2604 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;  multiplier      2    2[COMMON] unsigned int 
  2607 ;;  multiplicand    2    4[COMMON] unsigned int 
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;  product         2    6[COMMON] unsigned int 
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  2    2[COMMON] unsigned int 
  2612 ;; Registers used:
  2613 ;;		wreg, status,2, status,0
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2619 ;;      Params:         4       0       0       0       0
  2620 ;;      Locals:         2       0       0       0       0
  2621 ;;      Temps:          0       0       0       0       0
  2622 ;;      Totals:         6       0       0       0       0
  2623 ;;Total ram usage:        6 bytes
  2624 ;; Hardware stack levels used: 1
  2625 ;; Hardware stack levels required when called: 1
  2626 ;; This function calls:
  2627 ;;		Nothing
  2628 ;; This function is called by:
  2629 ;;		_potenza
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633     0746                     ___wmul:	
  2634                           ;psect for function ___wmul
  2635                           
  2636     0746                     l1421:	
  2637                           ;incstack = 0
  2638                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2639                           
  2640     0746  01F6               	clrf	___wmul@product
  2641     0747  01F7               	clrf	___wmul@product+1
  2642     0748                     l1423:
  2643     0748  1C72               	btfss	___wmul@multiplier,0
  2644     0749  2F4B               	goto	u1041
  2645     074A  2F4C               	goto	u1040
  2646     074B                     u1041:
  2647     074B  2F52               	goto	l369
  2648     074C                     u1040:
  2649     074C                     l1425:
  2650     074C  0874               	movf	___wmul@multiplicand,w
  2651     074D  07F6               	addwf	___wmul@product,f
  2652     074E  1803               	skipnc
  2653     074F  0AF7               	incf	___wmul@product+1,f
  2654     0750  0875               	movf	___wmul@multiplicand+1,w
  2655     0751  07F7               	addwf	___wmul@product+1,f
  2656     0752                     l369:
  2657     0752  3001               	movlw	1
  2658     0753                     u1055:
  2659     0753  1003               	clrc
  2660     0754  0DF4               	rlf	___wmul@multiplicand,f
  2661     0755  0DF5               	rlf	___wmul@multiplicand+1,f
  2662     0756  3EFF               	addlw	-1
  2663     0757  1D03               	skipz
  2664     0758  2F53               	goto	u1055
  2665     0759                     l1427:
  2666     0759  3001               	movlw	1
  2667     075A                     u1065:
  2668     075A  1003               	clrc
  2669     075B  0CF3               	rrf	___wmul@multiplier+1,f
  2670     075C  0CF2               	rrf	___wmul@multiplier,f
  2671     075D  3EFF               	addlw	-1
  2672     075E  1D03               	skipz
  2673     075F  2F5A               	goto	u1065
  2674     0760                     l1429:
  2675     0760  0872               	movf	___wmul@multiplier,w
  2676     0761  0473               	iorwf	___wmul@multiplier+1,w
  2677     0762  1D03               	btfss	3,2
  2678     0763  2F65               	goto	u1071
  2679     0764  2F66               	goto	u1070
  2680     0765                     u1071:
  2681     0765  2F48               	goto	l1423
  2682     0766                     u1070:
  2683     0766                     l1431:
  2684     0766  0877               	movf	___wmul@product+1,w
  2685     0767  00F3               	movwf	?___wmul+1
  2686     0768  0876               	movf	___wmul@product,w
  2687     0769  00F2               	movwf	?___wmul
  2688     076A                     l371:
  2689     076A  0008               	return
  2690     076B                     __end_of___wmul:
  2691                           
  2692                           	psect	text9
  2693     0642                     __ptext9:	
  2694 ;; *************** function ___awmod *****************
  2695 ;; Defined at:
  2696 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;  divisor         2    2[COMMON] int 
  2699 ;;  dividend        2    4[COMMON] int 
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;  sign            1    8[COMMON] unsigned char 
  2702 ;;  counter         1    7[COMMON] unsigned char 
  2703 ;; Return value:  Size  Location     Type
  2704 ;;                  2    2[COMMON] int 
  2705 ;; Registers used:
  2706 ;;		wreg, status,2, status,0
  2707 ;; Tracked objects:
  2708 ;;		On entry : 0/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2712 ;;      Params:         4       0       0       0       0
  2713 ;;      Locals:         2       0       0       0       0
  2714 ;;      Temps:          1       0       0       0       0
  2715 ;;      Totals:         7       0       0       0       0
  2716 ;;Total ram usage:        7 bytes
  2717 ;; Hardware stack levels used: 1
  2718 ;; Hardware stack levels required when called: 1
  2719 ;; This function calls:
  2720 ;;		Nothing
  2721 ;; This function is called by:
  2722 ;;		_intToString
  2723 ;;		_KeyPressed
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727     0642                     ___awmod:	
  2728                           ;psect for function ___awmod
  2729                           
  2730     0642                     l1513:	
  2731                           ;incstack = 0
  2732                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2733                           
  2734     0642  01F8               	clrf	___awmod@sign
  2735     0643                     l1515:
  2736     0643  1FF5               	btfss	___awmod@dividend+1,7
  2737     0644  2E46               	goto	u1191
  2738     0645  2E47               	goto	u1190
  2739     0646                     u1191:
  2740     0646  2E4E               	goto	l1521
  2741     0647                     u1190:
  2742     0647                     l1517:
  2743     0647  09F4               	comf	___awmod@dividend,f
  2744     0648  09F5               	comf	___awmod@dividend+1,f
  2745     0649  0AF4               	incf	___awmod@dividend,f
  2746     064A  1903               	skipnz
  2747     064B  0AF5               	incf	___awmod@dividend+1,f
  2748     064C                     l1519:
  2749     064C  01F8               	clrf	___awmod@sign
  2750     064D  0AF8               	incf	___awmod@sign,f
  2751     064E                     l1521:
  2752     064E  1FF3               	btfss	___awmod@divisor+1,7
  2753     064F  2E51               	goto	u1201
  2754     0650  2E52               	goto	u1200
  2755     0651                     u1201:
  2756     0651  2E57               	goto	l1525
  2757     0652                     u1200:
  2758     0652                     l1523:
  2759     0652  09F2               	comf	___awmod@divisor,f
  2760     0653  09F3               	comf	___awmod@divisor+1,f
  2761     0654  0AF2               	incf	___awmod@divisor,f
  2762     0655  1903               	skipnz
  2763     0656  0AF3               	incf	___awmod@divisor+1,f
  2764     0657                     l1525:
  2765     0657  0872               	movf	___awmod@divisor,w
  2766     0658  0473               	iorwf	___awmod@divisor+1,w
  2767     0659  1903               	btfsc	3,2
  2768     065A  2E5C               	goto	u1211
  2769     065B  2E5D               	goto	u1210
  2770     065C                     u1211:
  2771     065C  2E8C               	goto	l1543
  2772     065D                     u1210:
  2773     065D                     l1527:
  2774     065D  01F7               	clrf	___awmod@counter
  2775     065E  0AF7               	incf	___awmod@counter,f
  2776     065F  2E6B               	goto	l1533
  2777     0660                     l1529:
  2778     0660  3001               	movlw	1
  2779     0661                     u1225:
  2780     0661  1003               	clrc
  2781     0662  0DF2               	rlf	___awmod@divisor,f
  2782     0663  0DF3               	rlf	___awmod@divisor+1,f
  2783     0664  3EFF               	addlw	-1
  2784     0665  1D03               	skipz
  2785     0666  2E61               	goto	u1225
  2786     0667                     l1531:
  2787     0667  3001               	movlw	1
  2788     0668  00F6               	movwf	??___awmod
  2789     0669  0876               	movf	??___awmod,w
  2790     066A  07F7               	addwf	___awmod@counter,f
  2791     066B                     l1533:
  2792     066B  1FF3               	btfss	___awmod@divisor+1,7
  2793     066C  2E6E               	goto	u1231
  2794     066D  2E6F               	goto	u1230
  2795     066E                     u1231:
  2796     066E  2E60               	goto	l1529
  2797     066F                     u1230:
  2798     066F                     l1535:
  2799     066F  0873               	movf	___awmod@divisor+1,w
  2800     0670  0275               	subwf	___awmod@dividend+1,w
  2801     0671  1D03               	skipz
  2802     0672  2E75               	goto	u1245
  2803     0673  0872               	movf	___awmod@divisor,w
  2804     0674  0274               	subwf	___awmod@dividend,w
  2805     0675                     u1245:
  2806     0675  1C03               	skipc
  2807     0676  2E78               	goto	u1241
  2808     0677  2E79               	goto	u1240
  2809     0678                     u1241:
  2810     0678  2E7F               	goto	l1539
  2811     0679                     u1240:
  2812     0679                     l1537:
  2813     0679  0872               	movf	___awmod@divisor,w
  2814     067A  02F4               	subwf	___awmod@dividend,f
  2815     067B  0873               	movf	___awmod@divisor+1,w
  2816     067C  1C03               	skipc
  2817     067D  03F5               	decf	___awmod@dividend+1,f
  2818     067E  02F5               	subwf	___awmod@dividend+1,f
  2819     067F                     l1539:
  2820     067F  3001               	movlw	1
  2821     0680                     u1255:
  2822     0680  1003               	clrc
  2823     0681  0CF3               	rrf	___awmod@divisor+1,f
  2824     0682  0CF2               	rrf	___awmod@divisor,f
  2825     0683  3EFF               	addlw	-1
  2826     0684  1D03               	skipz
  2827     0685  2E80               	goto	u1255
  2828     0686                     l1541:
  2829     0686  3001               	movlw	1
  2830     0687  02F7               	subwf	___awmod@counter,f
  2831     0688  1D03               	btfss	3,2
  2832     0689  2E8B               	goto	u1261
  2833     068A  2E8C               	goto	u1260
  2834     068B                     u1261:
  2835     068B  2E6F               	goto	l1535
  2836     068C                     u1260:
  2837     068C                     l1543:
  2838     068C  0878               	movf	___awmod@sign,w
  2839     068D  1903               	btfsc	3,2
  2840     068E  2E90               	goto	u1271
  2841     068F  2E91               	goto	u1270
  2842     0690                     u1271:
  2843     0690  2E96               	goto	l1547
  2844     0691                     u1270:
  2845     0691                     l1545:
  2846     0691  09F4               	comf	___awmod@dividend,f
  2847     0692  09F5               	comf	___awmod@dividend+1,f
  2848     0693  0AF4               	incf	___awmod@dividend,f
  2849     0694  1903               	skipnz
  2850     0695  0AF5               	incf	___awmod@dividend+1,f
  2851     0696                     l1547:
  2852     0696  0875               	movf	___awmod@dividend+1,w
  2853     0697  00F3               	movwf	?___awmod+1
  2854     0698  0874               	movf	___awmod@dividend,w
  2855     0699  00F2               	movwf	?___awmod
  2856     069A                     l535:
  2857     069A  0008               	return
  2858     069B                     __end_of___awmod:
  2859                           
  2860                           	psect	text10
  2861     057F                     __ptext10:	
  2862 ;; *************** function ___awdiv *****************
  2863 ;; Defined at:
  2864 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;  divisor         2    7[BANK0 ] int 
  2867 ;;  dividend        2    9[BANK0 ] int 
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;  quotient        2   14[BANK0 ] int 
  2870 ;;  sign            1   13[BANK0 ] unsigned char 
  2871 ;;  counter         1   12[BANK0 ] unsigned char 
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  2    7[BANK0 ] int 
  2874 ;; Registers used:
  2875 ;;		wreg, status,2, status,0
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2881 ;;      Params:         0       4       0       0       0
  2882 ;;      Locals:         0       4       0       0       0
  2883 ;;      Temps:          0       1       0       0       0
  2884 ;;      Totals:         0       9       0       0       0
  2885 ;;Total ram usage:        9 bytes
  2886 ;; Hardware stack levels used: 1
  2887 ;; Hardware stack levels required when called: 1
  2888 ;; This function calls:
  2889 ;;		Nothing
  2890 ;; This function is called by:
  2891 ;;		_intToString
  2892 ;; This function uses a non-reentrant model
  2893 ;;
  2894                           
  2895     057F                     ___awdiv:	
  2896                           ;psect for function ___awdiv
  2897                           
  2898     057F                     l1469:	
  2899                           ;incstack = 0
  2900                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2901                           
  2902     057F  1283               	bcf	3,5	;RP0=0, select bank0
  2903     0580  1303               	bcf	3,6	;RP1=0, select bank0
  2904     0581  01D0               	clrf	___awdiv@sign
  2905     0582                     l1471:
  2906     0582  1FCB               	btfss	___awdiv@divisor+1,7
  2907     0583  2D85               	goto	u1091
  2908     0584  2D86               	goto	u1090
  2909     0585                     u1091:
  2910     0585  2D8D               	goto	l1477
  2911     0586                     u1090:
  2912     0586                     l1473:
  2913     0586  09CA               	comf	___awdiv@divisor,f
  2914     0587  09CB               	comf	___awdiv@divisor+1,f
  2915     0588  0ACA               	incf	___awdiv@divisor,f
  2916     0589  1903               	skipnz
  2917     058A  0ACB               	incf	___awdiv@divisor+1,f
  2918     058B                     l1475:
  2919     058B  01D0               	clrf	___awdiv@sign
  2920     058C  0AD0               	incf	___awdiv@sign,f
  2921     058D                     l1477:
  2922     058D  1FCD               	btfss	___awdiv@dividend+1,7
  2923     058E  2D90               	goto	u1101
  2924     058F  2D91               	goto	u1100
  2925     0590                     u1101:
  2926     0590  2D9A               	goto	l1483
  2927     0591                     u1100:
  2928     0591                     l1479:
  2929     0591  09CC               	comf	___awdiv@dividend,f
  2930     0592  09CD               	comf	___awdiv@dividend+1,f
  2931     0593  0ACC               	incf	___awdiv@dividend,f
  2932     0594  1903               	skipnz
  2933     0595  0ACD               	incf	___awdiv@dividend+1,f
  2934     0596                     l1481:
  2935     0596  3001               	movlw	1
  2936     0597  00CE               	movwf	??___awdiv
  2937     0598  084E               	movf	??___awdiv,w
  2938     0599  06D0               	xorwf	___awdiv@sign,f
  2939     059A                     l1483:
  2940     059A  01D1               	clrf	___awdiv@quotient
  2941     059B  01D2               	clrf	___awdiv@quotient+1
  2942     059C                     l1485:
  2943     059C  084A               	movf	___awdiv@divisor,w
  2944     059D  044B               	iorwf	___awdiv@divisor+1,w
  2945     059E  1903               	btfsc	3,2
  2946     059F  2DA1               	goto	u1111
  2947     05A0  2DA2               	goto	u1110
  2948     05A1                     u1111:
  2949     05A1  2DD9               	goto	l1505
  2950     05A2                     u1110:
  2951     05A2                     l1487:
  2952     05A2  01CF               	clrf	___awdiv@counter
  2953     05A3  0ACF               	incf	___awdiv@counter,f
  2954     05A4  2DB0               	goto	l1493
  2955     05A5                     l1489:
  2956     05A5  3001               	movlw	1
  2957     05A6                     u1125:
  2958     05A6  1003               	clrc
  2959     05A7  0DCA               	rlf	___awdiv@divisor,f
  2960     05A8  0DCB               	rlf	___awdiv@divisor+1,f
  2961     05A9  3EFF               	addlw	-1
  2962     05AA  1D03               	skipz
  2963     05AB  2DA6               	goto	u1125
  2964     05AC                     l1491:
  2965     05AC  3001               	movlw	1
  2966     05AD  00CE               	movwf	??___awdiv
  2967     05AE  084E               	movf	??___awdiv,w
  2968     05AF  07CF               	addwf	___awdiv@counter,f
  2969     05B0                     l1493:
  2970     05B0  1FCB               	btfss	___awdiv@divisor+1,7
  2971     05B1  2DB3               	goto	u1131
  2972     05B2  2DB4               	goto	u1130
  2973     05B3                     u1131:
  2974     05B3  2DA5               	goto	l1489
  2975     05B4                     u1130:
  2976     05B4                     l1495:
  2977     05B4  3001               	movlw	1
  2978     05B5                     u1145:
  2979     05B5  1003               	clrc
  2980     05B6  0DD1               	rlf	___awdiv@quotient,f
  2981     05B7  0DD2               	rlf	___awdiv@quotient+1,f
  2982     05B8  3EFF               	addlw	-1
  2983     05B9  1D03               	skipz
  2984     05BA  2DB5               	goto	u1145
  2985     05BB  084B               	movf	___awdiv@divisor+1,w
  2986     05BC  024D               	subwf	___awdiv@dividend+1,w
  2987     05BD  1D03               	skipz
  2988     05BE  2DC1               	goto	u1155
  2989     05BF  084A               	movf	___awdiv@divisor,w
  2990     05C0  024C               	subwf	___awdiv@dividend,w
  2991     05C1                     u1155:
  2992     05C1  1C03               	skipc
  2993     05C2  2DC4               	goto	u1151
  2994     05C3  2DC5               	goto	u1150
  2995     05C4                     u1151:
  2996     05C4  2DCC               	goto	l1501
  2997     05C5                     u1150:
  2998     05C5                     l1497:
  2999     05C5  084A               	movf	___awdiv@divisor,w
  3000     05C6  02CC               	subwf	___awdiv@dividend,f
  3001     05C7  084B               	movf	___awdiv@divisor+1,w
  3002     05C8  1C03               	skipc
  3003     05C9  03CD               	decf	___awdiv@dividend+1,f
  3004     05CA  02CD               	subwf	___awdiv@dividend+1,f
  3005     05CB                     l1499:
  3006     05CB  1451               	bsf	___awdiv@quotient,0
  3007     05CC                     l1501:
  3008     05CC  3001               	movlw	1
  3009     05CD                     u1165:
  3010     05CD  1003               	clrc
  3011     05CE  0CCB               	rrf	___awdiv@divisor+1,f
  3012     05CF  0CCA               	rrf	___awdiv@divisor,f
  3013     05D0  3EFF               	addlw	-1
  3014     05D1  1D03               	skipz
  3015     05D2  2DCD               	goto	u1165
  3016     05D3                     l1503:
  3017     05D3  3001               	movlw	1
  3018     05D4  02CF               	subwf	___awdiv@counter,f
  3019     05D5  1D03               	btfss	3,2
  3020     05D6  2DD8               	goto	u1171
  3021     05D7  2DD9               	goto	u1170
  3022     05D8                     u1171:
  3023     05D8  2DB4               	goto	l1495
  3024     05D9                     u1170:
  3025     05D9                     l1505:
  3026     05D9  0850               	movf	___awdiv@sign,w
  3027     05DA  1903               	btfsc	3,2
  3028     05DB  2DDD               	goto	u1181
  3029     05DC  2DDE               	goto	u1180
  3030     05DD                     u1181:
  3031     05DD  2DE3               	goto	l1509
  3032     05DE                     u1180:
  3033     05DE                     l1507:
  3034     05DE  09D1               	comf	___awdiv@quotient,f
  3035     05DF  09D2               	comf	___awdiv@quotient+1,f
  3036     05E0  0AD1               	incf	___awdiv@quotient,f
  3037     05E1  1903               	skipnz
  3038     05E2  0AD2               	incf	___awdiv@quotient+1,f
  3039     05E3                     l1509:
  3040     05E3  0852               	movf	___awdiv@quotient+1,w
  3041     05E4  00CB               	movwf	?___awdiv+1
  3042     05E5  0851               	movf	___awdiv@quotient,w
  3043     05E6  00CA               	movwf	?___awdiv
  3044     05E7                     l522:
  3045     05E7  0008               	return
  3046     05E8                     __end_of___awdiv:
  3047                           
  3048                           	psect	text11
  3049     07A4                     __ptext11:	
  3050 ;; *************** function _UART_Init *****************
  3051 ;; Defined at:
  3052 ;;		line 212 in file "main.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;		None
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;		None
  3057 ;; Return value:  Size  Location     Type
  3058 ;;                  1    wreg      void 
  3059 ;; Registers used:
  3060 ;;		wreg
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3066 ;;      Params:         0       0       0       0       0
  3067 ;;      Locals:         0       0       0       0       0
  3068 ;;      Temps:          0       0       0       0       0
  3069 ;;      Totals:         0       0       0       0       0
  3070 ;;Total ram usage:        0 bytes
  3071 ;; Hardware stack levels used: 1
  3072 ;; Hardware stack levels required when called: 1
  3073 ;; This function calls:
  3074 ;;		Nothing
  3075 ;; This function is called by:
  3076 ;;		_main
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           
  3080     07A4                     _UART_Init:	
  3081                           ;psect for function _UART_Init
  3082                           
  3083     07A4                     l1581:	
  3084                           ;incstack = 0
  3085                           ; Regs used in _UART_Init: [wreg]
  3086                           
  3087                           
  3088                           ;main.c: 214:     TRISC6 = 0;
  3089     07A4  1683               	bsf	3,5	;RP0=1, select bank1
  3090     07A5  1303               	bcf	3,6	;RP1=0, select bank1
  3091     07A6  1307               	bcf	7,6	;volatile
  3092                           
  3093                           ;main.c: 215:     TRISC7 = 1;
  3094     07A7  1787               	bsf	7,7	;volatile
  3095                           
  3096                           ;main.c: 218:     BRGH = 1;
  3097     07A8  1518               	bsf	24,2	;volatile
  3098     07A9                     l1583:
  3099                           
  3100                           ;main.c: 219:     SPBRG = 51;
  3101     07A9  3033               	movlw	51
  3102     07AA  0099               	movwf	25	;volatile
  3103     07AB                     l1585:
  3104                           
  3105                           ;main.c: 222:     SYNC = 0;
  3106     07AB  1218               	bcf	24,4	;volatile
  3107     07AC                     l1587:
  3108                           
  3109                           ;main.c: 223:     SPEN = 1;
  3110     07AC  1283               	bcf	3,5	;RP0=0, select bank0
  3111     07AD  1303               	bcf	3,6	;RP1=0, select bank0
  3112     07AE  1798               	bsf	24,7	;volatile
  3113     07AF                     l1589:
  3114                           
  3115                           ;main.c: 226:     TXEN = 1;
  3116     07AF  1683               	bsf	3,5	;RP0=1, select bank1
  3117     07B0  1303               	bcf	3,6	;RP1=0, select bank1
  3118     07B1  1698               	bsf	24,5	;volatile
  3119     07B2                     l1591:
  3120                           
  3121                           ;main.c: 227:     CREN = 1;
  3122     07B2  1283               	bcf	3,5	;RP0=0, select bank0
  3123     07B3  1303               	bcf	3,6	;RP1=0, select bank0
  3124     07B4  1618               	bsf	24,4	;volatile
  3125     07B5                     l186:
  3126     07B5  0008               	return
  3127     07B6                     __end_of_UART_Init:
  3128                           
  3129                           	psect	text12
  3130     07B6                     __ptext12:	
  3131 ;; *************** function _Timer0_Init *****************
  3132 ;; Defined at:
  3133 ;;		line 341 in file "main.c"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;		None
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;		None
  3138 ;; Return value:  Size  Location     Type
  3139 ;;                  1    wreg      void 
  3140 ;; Registers used:
  3141 ;;		wreg
  3142 ;; Tracked objects:
  3143 ;;		On entry : 0/0
  3144 ;;		On exit  : 0/0
  3145 ;;		Unchanged: 0/0
  3146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3147 ;;      Params:         0       0       0       0       0
  3148 ;;      Locals:         0       0       0       0       0
  3149 ;;      Temps:          0       0       0       0       0
  3150 ;;      Totals:         0       0       0       0       0
  3151 ;;Total ram usage:        0 bytes
  3152 ;; Hardware stack levels used: 1
  3153 ;; Hardware stack levels required when called: 1
  3154 ;; This function calls:
  3155 ;;		Nothing
  3156 ;; This function is called by:
  3157 ;;		_main
  3158 ;; This function uses a non-reentrant model
  3159 ;;
  3160                           
  3161     07B6                     _Timer0_Init:	
  3162                           ;psect for function _Timer0_Init
  3163                           
  3164     07B6                     l1617:	
  3165                           ;incstack = 0
  3166                           ; Regs used in _Timer0_Init: [wreg]
  3167                           
  3168                           
  3169                           ;main.c: 343:     T0CS = 0;
  3170     07B6  1683               	bsf	3,5	;RP0=1, select bank1
  3171     07B7  1303               	bcf	3,6	;RP1=0, select bank1
  3172     07B8  1281               	bcf	1,5	;volatile
  3173                           
  3174                           ;main.c: 344:     PSA = 0;
  3175     07B9  1181               	bcf	1,3	;volatile
  3176                           
  3177                           ;main.c: 345:     PS2 = 1;
  3178     07BA  1501               	bsf	1,2	;volatile
  3179                           
  3180                           ;main.c: 346:     PS1 = 1;
  3181     07BB  1481               	bsf	1,1	;volatile
  3182                           
  3183                           ;main.c: 347:     PS0 = 1;
  3184     07BC  1401               	bsf	1,0	;volatile
  3185     07BD                     l1619:
  3186                           
  3187                           ;main.c: 350:     TMR0 = 6;
  3188     07BD  3006               	movlw	6
  3189     07BE  1283               	bcf	3,5	;RP0=0, select bank0
  3190     07BF  1303               	bcf	3,6	;RP1=0, select bank0
  3191     07C0  0081               	movwf	1	;volatile
  3192     07C1                     l1621:
  3193                           
  3194                           ;main.c: 351:     TMR0IF = 0;
  3195     07C1  110B               	bcf	11,2	;volatile
  3196     07C2                     l1623:
  3197                           
  3198                           ;main.c: 352:     TMR0IE = 1;
  3199     07C2  168B               	bsf	11,5	;volatile
  3200     07C3                     l1625:
  3201                           
  3202                           ;main.c: 353:     GIE = 1;
  3203     07C3  178B               	bsf	11,7	;volatile
  3204     07C4                     l241:
  3205     07C4  0008               	return
  3206     07C5                     __end_of_Timer0_Init:
  3207                           
  3208                           	psect	text13
  3209     07DC                     __ptext13:	
  3210 ;; *************** function _RS485_TxEnable *****************
  3211 ;; Defined at:
  3212 ;;		line 230 in file "main.c"
  3213 ;; Parameters:    Size  Location     Type
  3214 ;;		None
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;		None
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  1    wreg      void 
  3219 ;; Registers used:
  3220 ;;		None
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3226 ;;      Params:         0       0       0       0       0
  3227 ;;      Locals:         0       0       0       0       0
  3228 ;;      Temps:          0       0       0       0       0
  3229 ;;      Totals:         0       0       0       0       0
  3230 ;;Total ram usage:        0 bytes
  3231 ;; Hardware stack levels used: 1
  3232 ;; Hardware stack levels required when called: 1
  3233 ;; This function calls:
  3234 ;;		Nothing
  3235 ;; This function is called by:
  3236 ;;		_main
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240     07DC                     _RS485_TxEnable:	
  3241                           ;psect for function _RS485_TxEnable
  3242                           
  3243     07DC                     l1627:	
  3244                           ;incstack = 0
  3245                           ; Regs used in _RS485_TxEnable: []
  3246                           
  3247                           
  3248                           ;main.c: 231:     RC0 = 1;
  3249     07DC  1283               	bcf	3,5	;RP0=0, select bank0
  3250     07DD  1303               	bcf	3,6	;RP1=0, select bank0
  3251     07DE  1407               	bsf	7,0	;volatile
  3252                           
  3253                           ;main.c: 232:     RC1 = 0;
  3254     07DF  1087               	bcf	7,1	;volatile
  3255     07E0                     l189:
  3256     07E0  0008               	return
  3257     07E1                     __end_of_RS485_TxEnable:
  3258                           
  3259                           	psect	text14
  3260     07E1                     __ptext14:	
  3261 ;; *************** function _RS485_RxEnable *****************
  3262 ;; Defined at:
  3263 ;;		line 235 in file "main.c"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;		None
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;		None
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  1    wreg      void 
  3270 ;; Registers used:
  3271 ;;		None
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3277 ;;      Params:         0       0       0       0       0
  3278 ;;      Locals:         0       0       0       0       0
  3279 ;;      Temps:          0       0       0       0       0
  3280 ;;      Totals:         0       0       0       0       0
  3281 ;;Total ram usage:        0 bytes
  3282 ;; Hardware stack levels used: 1
  3283 ;; Hardware stack levels required when called: 1
  3284 ;; This function calls:
  3285 ;;		Nothing
  3286 ;; This function is called by:
  3287 ;;		_main
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291     07E1                     _RS485_RxEnable:	
  3292                           ;psect for function _RS485_RxEnable
  3293                           
  3294     07E1                     l1699:	
  3295                           ;incstack = 0
  3296                           ; Regs used in _RS485_RxEnable: []
  3297                           
  3298                           
  3299                           ;main.c: 236:     RC0 = 0;
  3300     07E1  1283               	bcf	3,5	;RP0=0, select bank0
  3301     07E2  1303               	bcf	3,6	;RP1=0, select bank0
  3302     07E3  1007               	bcf	7,0	;volatile
  3303                           
  3304                           ;main.c: 237:     RC1 = 1;
  3305     07E4  1487               	bsf	7,1	;volatile
  3306     07E5                     l192:
  3307     07E5  0008               	return
  3308     07E6                     __end_of_RS485_RxEnable:
  3309                           
  3310                           	psect	text15
  3311     041A                     __ptext15:	
  3312 ;; *************** function _KeyPadReader *****************
  3313 ;; Defined at:
  3314 ;;		line 366 in file "main.c"
  3315 ;; Parameters:    Size  Location     Type
  3316 ;;		None
  3317 ;; Auto vars:     Size  Location     Type
  3318 ;;		None
  3319 ;; Return value:  Size  Location     Type
  3320 ;;                  1    wreg      unsigned char 
  3321 ;; Registers used:
  3322 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3323 ;; Tracked objects:
  3324 ;;		On entry : 0/0
  3325 ;;		On exit  : 0/0
  3326 ;;		Unchanged: 0/0
  3327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3328 ;;      Params:         0       0       0       0       0
  3329 ;;      Locals:         0       0       0       0       0
  3330 ;;      Temps:          2       0       0       0       0
  3331 ;;      Totals:         2       0       0       0       0
  3332 ;;Total ram usage:        2 bytes
  3333 ;; Hardware stack levels used: 2
  3334 ;; Hardware stack levels required when called: 1
  3335 ;; This function calls:
  3336 ;;		Nothing
  3337 ;; This function is called by:
  3338 ;;		_main
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342     041A                     _KeyPadReader:	
  3343                           ;psect for function _KeyPadReader
  3344                           
  3345     041A                     l1645:	
  3346                           ;incstack = 0
  3347                           ; Regs used in _KeyPadReader: [wreg-fsr0h+status,2+status,0+pclath]
  3348                           
  3349                           
  3350                           ;main.c: 367:     TRISD |= 0x0F;
  3351     041A  300F               	movlw	15
  3352     041B  00F2               	movwf	??_KeyPadReader
  3353     041C  0872               	movf	??_KeyPadReader,w
  3354     041D  1683               	bsf	3,5	;RP0=1, select bank1
  3355     041E  1303               	bcf	3,6	;RP1=0, select bank1
  3356     041F  0488               	iorwf	8,f	;volatile
  3357     0420                     l1647:
  3358                           
  3359                           ;main.c: 370:     for (colScan = 0; colScan < 3; colScan++) {
  3360     0420  1283               	bcf	3,5	;RP0=0, select bank0
  3361     0421  1303               	bcf	3,6	;RP1=0, select bank0
  3362     0422  01BA               	clrf	_colScan
  3363     0423                     l1653:
  3364                           
  3365                           ;main.c: 371:         PORTB = PORTB | 0x07;
  3366     0423  0806               	movf	6,w	;volatile
  3367     0424  3807               	iorlw	7
  3368     0425  0086               	movwf	6	;volatile
  3369     0426                     l1655:
  3370                           
  3371                           ;main.c: 372:         PORTB &= colMask[colScan];
  3372     0426  083A               	movf	_colScan,w
  3373     0427  3E11               	addlw	low ((_colMask-__stringbase)| (0+32768))
  3374     0428  0084               	movwf	4
  3375     0429  120A  118A  250A  120A  118A  	fcall	stringdir
  3376     042E  00F2               	movwf	??_KeyPadReader
  3377     042F  0872               	movf	??_KeyPadReader,w
  3378     0430  0586               	andwf	6,f	;volatile
  3379     0431                     l1657:
  3380                           
  3381                           ;main.c: 375:         for (rowScan = 0; rowScan < 4; rowScan++) {
  3382     0431  01B9               	clrf	_rowScan
  3383     0432                     l1663:
  3384                           
  3385                           ;main.c: 376:             if (!(PORTD & rowMask[rowScan]) && (old_btn)) {
  3386     0432  0839               	movf	_rowScan,w
  3387     0433  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  3388     0434  0084               	movwf	4
  3389     0435  120A  118A  250A  120A  118A  	fcall	stringdir
  3390     043A  0508               	andwf	8,w	;volatile
  3391     043B  1D03               	btfss	3,2
  3392     043C  2C3E               	goto	u1351
  3393     043D  2C3F               	goto	u1350
  3394     043E                     u1351:
  3395     043E  2C48               	goto	l1671
  3396     043F                     u1350:
  3397     043F                     l1665:
  3398     043F  1C64               	btfss	_old_btn/(0+8),_old_btn& (0+7)
  3399     0440  2C42               	goto	u1361
  3400     0441  2C43               	goto	u1360
  3401     0442                     u1361:
  3402     0442  2C48               	goto	l1671
  3403     0443                     u1360:
  3404     0443                     l1667:
  3405                           
  3406                           ;main.c: 377:                 old_btn = 0;
  3407     0443  1064               	bcf	_old_btn/(0+8),_old_btn& (0+7)
  3408     0444                     l1669:
  3409                           
  3410                           ;main.c: 378:                 stato++;
  3411     0444  3001               	movlw	1
  3412     0445  00F2               	movwf	??_KeyPadReader
  3413     0446  0872               	movf	??_KeyPadReader,w
  3414     0447  07B8               	addwf	_stato,f
  3415     0448                     l1671:
  3416                           
  3417                           ;main.c: 380:             if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  3418     0448  0839               	movf	_rowScan,w
  3419     0449  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  3420     044A  0084               	movwf	4
  3421     044B  120A  118A  250A  120A  118A  	fcall	stringdir
  3422     0450  0508               	andwf	8,w	;volatile
  3423     0451  1903               	btfsc	3,2
  3424     0452  2C54               	goto	u1371
  3425     0453  2C55               	goto	u1370
  3426     0454                     u1371:
  3427     0454  2C76               	goto	l1683
  3428     0455                     u1370:
  3429     0455                     l1673:
  3430     0455  1864               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  3431     0456  2C58               	goto	u1381
  3432     0457  2C59               	goto	u1380
  3433     0458                     u1381:
  3434     0458  2C76               	goto	l1683
  3435     0459                     u1380:
  3436     0459                     l1675:
  3437                           
  3438                           ;main.c: 381:                 _delay((unsigned long)((10)*(20000000/4000.0)));
  3439     0459  3041               	movlw	65
  3440     045A  00F3               	movwf	??_KeyPadReader+1
  3441     045B  30EE               	movlw	238
  3442     045C  00F2               	movwf	??_KeyPadReader
  3443     045D                     u2787:
  3444     045D  0BF2               	decfsz	??_KeyPadReader,f
  3445     045E  2C5D               	goto	u2787
  3446     045F  0BF3               	decfsz	??_KeyPadReader+1,f
  3447     0460  2C5D               	goto	u2787
  3448     0461  0000               	nop
  3449     0462                     l1677:
  3450                           
  3451                           ;main.c: 382:                 if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  3452     0462  1283               	bcf	3,5	;RP0=0, select bank0
  3453     0463  1303               	bcf	3,6	;RP1=0, select bank0
  3454     0464  0839               	movf	_rowScan,w
  3455     0465  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  3456     0466  0084               	movwf	4
  3457     0467  120A  118A  250A  120A  118A  	fcall	stringdir
  3458     046C  0508               	andwf	8,w	;volatile
  3459     046D  1903               	btfsc	3,2
  3460     046E  2C70               	goto	u1391
  3461     046F  2C71               	goto	u1390
  3462     0470                     u1391:
  3463     0470  2C76               	goto	l1683
  3464     0471                     u1390:
  3465     0471                     l1679:
  3466     0471  1864               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  3467     0472  2C74               	goto	u1401
  3468     0473  2C75               	goto	u1400
  3469     0474                     u1401:
  3470     0474  2C76               	goto	l1683
  3471     0475                     u1400:
  3472     0475                     l1681:
  3473                           
  3474                           ;main.c: 383:                     old_btn = 1;
  3475     0475  1464               	bsf	_old_btn/(0+8),_old_btn& (0+7)
  3476     0476                     l1683:
  3477                           
  3478                           ;main.c: 386:             if (stato != old_stato) {
  3479     0476  0838               	movf	_stato,w
  3480     0477  0637               	xorwf	_old_stato,w
  3481     0478  1903               	skipnz
  3482     0479  2C7B               	goto	u1411
  3483     047A  2C7C               	goto	u1410
  3484     047B                     u1411:
  3485     047B  2C8A               	goto	l1691
  3486     047C                     u1410:
  3487     047C                     l1685:
  3488                           
  3489                           ;main.c: 387:                 keypressed = rowScan + (4 * colScan);
  3490     047C  083A               	movf	_colScan,w
  3491     047D  00F2               	movwf	??_KeyPadReader
  3492     047E  3002               	movlw	2
  3493     047F                     u1425:
  3494     047F  1003               	clrc
  3495     0480  0DF2               	rlf	??_KeyPadReader,f
  3496     0481  3EFF               	addlw	-1
  3497     0482  1D03               	skipz
  3498     0483  2C7F               	goto	u1425
  3499     0484  0839               	movf	_rowScan,w
  3500     0485  0772               	addwf	??_KeyPadReader,w
  3501     0486  00BC               	movwf	_keypressed
  3502     0487                     l1687:
  3503                           
  3504                           ;main.c: 390:                 old_stato = stato;
  3505     0487  0838               	movf	_stato,w
  3506     0488  00B7               	movwf	_old_stato
  3507     0489  2C9E               	goto	l258
  3508     048A                     l1691:
  3509                           
  3510                           ;main.c: 394:         }
  3511     048A  3001               	movlw	1
  3512     048B  00F2               	movwf	??_KeyPadReader
  3513     048C  0872               	movf	??_KeyPadReader,w
  3514     048D  07B9               	addwf	_rowScan,f
  3515     048E                     l1693:
  3516     048E  3004               	movlw	4
  3517     048F  0239               	subwf	_rowScan,w
  3518     0490  1C03               	skipc
  3519     0491  2C93               	goto	u1431
  3520     0492  2C94               	goto	u1430
  3521     0493                     u1431:
  3522     0493  2C32               	goto	l1663
  3523     0494                     u1430:
  3524     0494                     l1695:
  3525                           
  3526                           ;main.c: 396:     }
  3527     0494  3001               	movlw	1
  3528     0495  00F2               	movwf	??_KeyPadReader
  3529     0496  0872               	movf	??_KeyPadReader,w
  3530     0497  07BA               	addwf	_colScan,f
  3531     0498                     l1697:
  3532     0498  3003               	movlw	3
  3533     0499  023A               	subwf	_colScan,w
  3534     049A  1C03               	skipc
  3535     049B  2C9D               	goto	u1441
  3536     049C  2C9E               	goto	u1440
  3537     049D                     u1441:
  3538     049D  2C23               	goto	l1653
  3539     049E                     u1440:
  3540     049E                     l258:
  3541     049E  0008               	return
  3542     049F                     __end_of_KeyPadReader:
  3543                           
  3544                           	psect	text16
  3545     078B                     __ptext16:	
  3546 ;; *************** function _GenerateRandomNumber *****************
  3547 ;; Defined at:
  3548 ;;		line 356 in file "main.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;		None
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;  count           2    2[COMMON] unsigned int 
  3553 ;;  randomNum       1    4[COMMON] unsigned char 
  3554 ;; Return value:  Size  Location     Type
  3555 ;;                  1    wreg      unsigned char 
  3556 ;; Registers used:
  3557 ;;		wreg, status,2, status,0
  3558 ;; Tracked objects:
  3559 ;;		On entry : 0/0
  3560 ;;		On exit  : 0/0
  3561 ;;		Unchanged: 0/0
  3562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3563 ;;      Params:         0       0       0       0       0
  3564 ;;      Locals:         3       0       0       0       0
  3565 ;;      Temps:          0       0       0       0       0
  3566 ;;      Totals:         3       0       0       0       0
  3567 ;;Total ram usage:        3 bytes
  3568 ;; Hardware stack levels used: 1
  3569 ;; Hardware stack levels required when called: 1
  3570 ;; This function calls:
  3571 ;;		Nothing
  3572 ;; This function is called by:
  3573 ;;		_main
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577     078B                     _GenerateRandomNumber:	
  3578                           ;psect for function _GenerateRandomNumber
  3579                           
  3580     078B                     l1633:	
  3581                           ;incstack = 0
  3582                           ; Regs used in _GenerateRandomNumber: [wreg+status,2+status,0]
  3583                           
  3584                           
  3585                           ;main.c: 357:     unsigned int count = 0;
  3586     078B  01F2               	clrf	GenerateRandomNumber@count
  3587     078C  01F3               	clrf	GenerateRandomNumber@count+1
  3588                           
  3589                           ;main.c: 358:     while (count != 8000){
  3590     078D  2F94               	goto	l1637
  3591     078E                     l1635:
  3592                           
  3593                           ;main.c: 359:         count++;
  3594     078E  3001               	movlw	1
  3595     078F  07F2               	addwf	GenerateRandomNumber@count,f
  3596     0790  1803               	skipnc
  3597     0791  0AF3               	incf	GenerateRandomNumber@count+1,f
  3598     0792  3000               	movlw	0
  3599     0793  07F3               	addwf	GenerateRandomNumber@count+1,f
  3600     0794                     l1637:
  3601                           
  3602                           ;main.c: 358:     while (count != 8000){
  3603     0794  3040               	movlw	64
  3604     0795  0672               	xorwf	GenerateRandomNumber@count,w
  3605     0796  301F               	movlw	31
  3606     0797  1903               	skipnz
  3607     0798  0673               	xorwf	GenerateRandomNumber@count+1,w
  3608     0799  1D03               	btfss	3,2
  3609     079A  2F9C               	goto	u1341
  3610     079B  2F9D               	goto	u1340
  3611     079C                     u1341:
  3612     079C  2F8E               	goto	l1635
  3613     079D                     u1340:
  3614     079D                     l1639:
  3615                           
  3616                           ;main.c: 361:     unsigned char randomNum = TMR0;
  3617     079D  1283               	bcf	3,5	;RP0=0, select bank0
  3618     079E  1303               	bcf	3,6	;RP1=0, select bank0
  3619     079F  0801               	movf	1,w	;volatile
  3620     07A0  00F4               	movwf	GenerateRandomNumber@randomNum
  3621     07A1                     l1641:
  3622                           
  3623                           ;main.c: 362:     TMR0IF = 0;
  3624     07A1  110B               	bcf	11,2	;volatile
  3625                           
  3626                           ;main.c: 363:     return randomNum;
  3627     07A2  0874               	movf	GenerateRandomNumber@randomNum,w
  3628     07A3                     l247:
  3629     07A3  0008               	return
  3630     07A4                     __end_of_GenerateRandomNumber:
  3631                           
  3632                           	psect	text17
  3633     076B                     __ptext17:	
  3634 ;; *************** function _ISR *****************
  3635 ;; Defined at:
  3636 ;;		line 318 in file "main.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;		None
  3639 ;; Auto vars:     Size  Location     Type
  3640 ;;		None
  3641 ;; Return value:  Size  Location     Type
  3642 ;;                  1    wreg      void 
  3643 ;; Registers used:
  3644 ;;		None
  3645 ;; Tracked objects:
  3646 ;;		On entry : 0/0
  3647 ;;		On exit  : 0/0
  3648 ;;		Unchanged: 0/0
  3649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3650 ;;      Params:         0       0       0       0       0
  3651 ;;      Locals:         0       0       0       0       0
  3652 ;;      Temps:          2       0       0       0       0
  3653 ;;      Totals:         2       0       0       0       0
  3654 ;;Total ram usage:        2 bytes
  3655 ;; Hardware stack levels used: 1
  3656 ;; This function calls:
  3657 ;;		Nothing
  3658 ;; This function is called by:
  3659 ;;		Interrupt level 1
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663     076B                     _ISR:	
  3664                           ;psect for function _ISR
  3665                           
  3666     076B                     i1l1391:
  3667     076B                     i1l223:	
  3668                           ;main.c: 321:     }
  3669                           
  3670                           
  3671                           ;main.c: 319:     while (!TMR0IF){
  3672     076B  1D0B               	btfss	11,2	;volatile
  3673     076C  2F6E               	goto	u96_21
  3674     076D  2F6F               	goto	u96_20
  3675     076E                     u96_21:
  3676     076E  2F6B               	goto	i1l223
  3677     076F                     u96_20:
  3678     076F                     i1l225:
  3679                           
  3680                           ;main.c: 322:     TMR0IF = 0;
  3681     076F  110B               	bcf	11,2	;volatile
  3682     0770                     i1l226:	
  3683                           ;main.c: 325:     }
  3684                           
  3685                           
  3686                           ;main.c: 323:     while (!TMR0IF){
  3687     0770  1D0B               	btfss	11,2	;volatile
  3688     0771  2F73               	goto	u97_21
  3689     0772  2F74               	goto	u97_20
  3690     0773                     u97_21:
  3691     0773  2F70               	goto	i1l226
  3692     0774                     u97_20:
  3693     0774                     i1l228:
  3694                           
  3695                           ;main.c: 326:     TMR0IF = 0;
  3696     0774  110B               	bcf	11,2	;volatile
  3697     0775                     i1l229:	
  3698                           ;main.c: 329:     }
  3699                           
  3700                           
  3701                           ;main.c: 327:     while (!TMR0IF){
  3702     0775  1D0B               	btfss	11,2	;volatile
  3703     0776  2F78               	goto	u98_21
  3704     0777  2F79               	goto	u98_20
  3705     0778                     u98_21:
  3706     0778  2F75               	goto	i1l229
  3707     0779                     u98_20:
  3708     0779                     i1l231:
  3709                           
  3710                           ;main.c: 330:     TMR0IF = 0;
  3711     0779  110B               	bcf	11,2	;volatile
  3712     077A                     i1l232:	
  3713                           ;main.c: 333:     }
  3714                           
  3715                           
  3716                           ;main.c: 331:     while (!TMR0IF){
  3717     077A  1D0B               	btfss	11,2	;volatile
  3718     077B  2F7D               	goto	u99_21
  3719     077C  2F7E               	goto	u99_20
  3720     077D                     u99_21:
  3721     077D  2F7A               	goto	i1l232
  3722     077E                     u99_20:
  3723     077E                     i1l234:
  3724                           
  3725                           ;main.c: 334:     TMR0IF = 0;
  3726     077E  110B               	bcf	11,2	;volatile
  3727     077F                     i1l235:	
  3728                           ;main.c: 337:     }
  3729                           
  3730                           
  3731                           ;main.c: 335:     while (!TMR0IF){
  3732     077F  1D0B               	btfss	11,2	;volatile
  3733     0780  2F82               	goto	u100_21
  3734     0781  2F83               	goto	u100_20
  3735     0782                     u100_21:
  3736     0782  2F7F               	goto	i1l235
  3737     0783                     u100_20:
  3738     0783                     i1l237:
  3739                           
  3740                           ;main.c: 338:     TMR0IF = 0;
  3741     0783  110B               	bcf	11,2	;volatile
  3742     0784                     i1l238:
  3743     0784  0871               	movf	??_ISR+1,w
  3744     0785  008A               	movwf	10
  3745     0786  0E70               	swapf	??_ISR,w
  3746     0787  0083               	movwf	3
  3747     0788  0EFE               	swapf	btemp,f
  3748     0789  0E7E               	swapf	btemp,w
  3749     078A  0009               	retfie
  3750     078B                     __end_of_ISR:
  3751     007E                     btemp	set	126	;btemp
  3752     007E                     wtemp0	set	126
  3753                           
  3754                           	psect	intentry
  3755     0004                     __pintentry:	
  3756                           ;incstack = 0
  3757                           ; Regs used in _ISR: []
  3758                           
  3759     0004                     interrupt_function:
  3760     007E                     saved_w	set	btemp
  3761     0004  00FE               	movwf	btemp
  3762     0005  0E03               	swapf	3,w
  3763     0006  00F0               	movwf	??_ISR
  3764     0007  080A               	movf	10,w
  3765     0008  00F1               	movwf	??_ISR+1
  3766     0009  120A  118A  2F6B   	ljmp	_ISR
  3767                           
  3768                           	psect	idloc
  3769                           
  3770                           ;Config register IDLOC0 @ 0x2000
  3771                           ;	unspecified, using default values
  3772     2000                     	org	8192
  3773     2000  3FFF               	dw	16383
  3774                           
  3775                           ;Config register IDLOC1 @ 0x2001
  3776                           ;	unspecified, using default values
  3777     2001                     	org	8193
  3778     2001  3FFF               	dw	16383
  3779                           
  3780                           ;Config register IDLOC2 @ 0x2002
  3781                           ;	unspecified, using default values
  3782     2002                     	org	8194
  3783     2002  3FFF               	dw	16383
  3784                           
  3785                           ;Config register IDLOC3 @ 0x2003
  3786                           ;	unspecified, using default values
  3787     2003                     	org	8195
  3788     2003  3FFF               	dw	16383
  3789                           
  3790                           	psect	config
  3791                           
  3792                           ;Config register CONFIG @ 0x2007
  3793                           ;	Oscillator Selection bits
  3794                           ;	FOSC = HS, HS oscillator
  3795                           ;	Watchdog Timer Enable bit
  3796                           ;	WDTE = OFF, WDT disabled
  3797                           ;	Power-up Timer Enable bit
  3798                           ;	PWRTE = OFF, PWRT disabled
  3799                           ;	Brown-out Reset Enable bit
  3800                           ;	BOREN = OFF, BOR disabled
  3801                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3802                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3803                           ;	Data EEPROM Memory Code Protection bit
  3804                           ;	CPD = OFF, Data EEPROM code protection off
  3805                           ;	Flash Program Memory Write Enable bits
  3806                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3807                           ;	In-Circuit Debugger Mode bit
  3808                           ;	DEBUG = 0x1, unprogrammed default
  3809                           ;	Flash Program Memory Code Protection bit
  3810                           ;	CP = OFF, Code protection off
  3811     2007                     	org	8199
  3812     2007  3F3A               	dw	16186

Data Sizes:
    Strings     92
    Constant    19
    Data        5
    BSS         53
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     28      69
    BANK1            80      0      16
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    intToString@str	PTR unsigned char  size(1) Largest target is 3
		 -> print_countdown(BANK0[3]), 

    lcdPrint@str	PTR unsigned char  size(2) Largest target is 15
		 -> STR_8(CODE[15]), STR_7(CODE[9]), print_countdown(BANK0[3]), STR_6(CODE[14]), 
		 -> STR_5(CODE[13]), STR_4(CODE[12]), STR_3(CODE[11]), STR_2(CODE[10]), 
		 -> STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    _main->_lcdPrint
    _initLCD->_lcdSend
    _UART_Read->_lcdPrint
    _lcdPrint->_lcdSend
    _intToString->_potenza
    _potenza->___wmul
    ___awdiv->_potenza

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_UART_Read
    _UART_Read->_intToString
    _intToString->___awdiv
    ___awdiv->_potenza

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   15939
               _GenerateRandomNumber
                       _KeyPadReader
                     _RS485_RxEnable
                     _RS485_TxEnable
                        _Timer0_Init
                          _UART_Init
                          _UART_Read
                         _UART_Write
                            _initLCD
                           _lcdPrint
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0    2312
                                              6 COMMON     2     2      0
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Read                                            3     3      0    7994
                                             25 BANK0      3     3      0
                        _intToString
                           _lcdPrint
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _lcdPrint                                             7     5      2    3252
                                              6 COMMON     4     2      2
                                              0 BANK0      3     3      0
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _lcdSend                                              4     3      1    2312
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _intToString                                          9     6      3    2430
                                             16 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                            _potenza
 ---------------------------------------------------------------------------------
 (3) _potenza                                              9     7      2     591
                                              8 COMMON     2     0      2
                                              0 BANK0      7     7      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     244
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     600
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     604
                                              7 BANK0      9     5      4
                            _potenza (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RS485_TxEnable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RS485_RxEnable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _KeyPadReader                                         2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _GenerateRandomNumber                                 3     3      0      47
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GenerateRandomNumber
   _KeyPadReader
   _RS485_RxEnable
   _RS485_TxEnable
   _Timer0_Init
   _UART_Init
   _UART_Read
     _intToString
       ___awdiv
         _potenza (ARG)
           ___wmul
       ___awmod
       _potenza
     _lcdPrint
       _lcdSend
     _lcdSend
   _UART_Write
   _initLCD
     _lcdSend
   _lcdPrint
   _lcdSend

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      10       7       20.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1C      45       5       86.2%
BITBANK0            50      0       1       4        1.2%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      61      12        0.0%
ABS                  0      0      61       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Jun 13 11:09:30 2023

                            pc 0002                   ___awdiv@sign 0050                             fsr 0004  
          ___wmul@multiplicand 0074                            l202 030C                            l212 0745  
                          l205 0394                            l241 07C4                            l209 0641  
                          l218 06E0                            l247 07A3                            l192 07E5  
                          l258 049E                            l186 07B5                            l522 05E7  
                          l274 071C                            l371 076A                            l283 0419  
                          l195 07C6                            l189 07E0                            l198 07CE  
                          l535 069A                            l369 0752                            _GIE 005F  
                          _RC0 0038                            _RC1 0039                            _PS0 0408  
                          _PS1 0409                            _PS2 040A                            _ISR 076B  
                          _PSA 040B                            fsr0 0004                            indf 0000  
                 ___awmod@sign 0078                           ?_ISR 0070                           l2001 06EB  
                         l2003 0703                           l2011 069B                           l2005 0709  
                         l2021 0399                           l2013 069E                           l2101 0385  
                         l2007 0716                           l2031 03D2                           l2023 039A  
                         l2015 06BC                           l2111 005B                           l2103 0045  
                         l2033 03EA                           l2025 039E                           l2017 06C2  
                         l2041 05E8                           l2201 017E                           l2121 007C  
                         l2113 0062                           l2105 004C                           l2035 03FD  
                         l2027 03BD                           l2019 0395                           l2051 060F  
                         l2043 05EC                           l2211 01A1                           l2203 0184  
                         l2131 009A                           l2123 0082                           l2115 006B  
                         l2107 0051                           l1501 05CC                           l1421 0746  
                         l2029 03C0                           l2037 0403                           l2061 0633  
                         l2053 0617                           l2045 05F5                           l2221 01C3  
                         l2213 01A9                           l2205 018A                           l2141 00BA  
                         l2133 00A0                           l2125 0088                           l2117 0070  
                         l2109 0056                           l1503 05D3                           l1431 0766  
                         l1423 0748                           l2039 0410                           l2071 0325  
                         l2063 063A                           l2055 061E                           l2047 05F8  
                         l2231 01E1                           l2223 01C9                           l2215 01B1  
                         l2207 0190                           l2151 00E0                           l2143 00C2  
                         l2135 00A6                           l2127 008E                           l2119 0076  
                         l1505 05D9                           l1521 064E                           l1513 0642  
                         l1425 074C                           l2081 0351                           l2073 032E  
                         l2065 030B                           l2057 0625                           l2049 05FF  
                         l2241 0208                           l2225 01CF                           l2217 01B7  
                         l2233 01E7                           l2209 0197                           l2161 0101  
                         l2153 00E5                           l2145 00CB                           l2137 00AC  
                         l2129 0094                           l1507 05DE                           l1531 0667  
                         l1523 0652                           l1515 0643                           l1427 0759  
                         l2083 0354                           l2075 0332                           l2067 0310  
                         l2091 0369                           l2059 062C                           l2251 0226  
                         l2243 020E                           l2235 01EE                           l2227 01D5  
                         l2219 01BD                           l2171 011F                           l2163 0107  
                         l2155 00EC                           l2147 00D0                           l2139 00B2  
                         l1621 07C1                           l1509 05E3                           l1541 0686  
                         l1533 066B                           l1525 0657                           l1517 0647  
                         l1429 0760                           l2093 0370                           l2085 0356  
                         l2069 031E                           l2077 0341                           l2261 0245  
                         l2253 022C                           l2245 0214                           l2237 01F8  
                         l2229 01DB                           l2173 0125                           l2165 010D  
                         l2181 013D                           l2157 00F5                           l1623 07C2  
                         l1471 0582                           l1535 066F                           l1527 065D  
                         l1543 068C                           l1519 064C                           l2095 0377  
                         l2087 0365                           l2079 0348                           l1631 07CC  
                         l2271 026B                           l2263 024F                           l2255 0232  
                         l2247 021A                           l2239 0200                           l2191 0160  
                         l2183 0144                           l2175 012B                           l2167 0113  
                         l2159 00FB                           l1641 07A1                           l1633 078B  
                         l1625 07C3                           l1617 07B6                           l1481 0596  
                         l1473 0586                           l1545 0691                           l1537 0679  
                         l1529 0660                           l2097 0380                           l2281 0289  
                         l2273 0271                           l2265 0257                           l2257 0238  
                         l2249 0220                           l2193 0166                           l2185 014E  
                         l2177 0131                           l2169 0119                           l1635 078E  
                         l1627 07DC                           l1619 07BD                           l1491 05AC  
                         l1483 059A                           l1475 058B                           l1547 0696  
                         l1539 067F                           l2099 0383                           l2291 0302  
                         l2283 028F                           l2275 0277                           l2267 025F  
                         l2259 023E                           l2195 016C                           l2187 0154  
                         l2179 0137                           l1637 0794                           l1653 0423  
                         l1645 041A                           l1581 07A4                           l1493 05B0  
                         l1485 059C                           l1477 058D                           l1469 057F  
                         l1629 07C6                           l2277 027D                           l2269 0265  
                         l2285 0295                           l2197 0172                           l2189 015A  
                         l1639 079D                           l1671 0448                           l1663 0432  
                         l1655 0426                           l1647 0420                           l1591 07B2  
                         l1583 07A9                           l1495 05B4                           l1487 05A2  
                         l1479 0591                           l2287 02FA                           l2279 0283  
                         l2199 0178                           l1681 0475                           l1673 0455  
                         l1665 043F                           l1657 0431                           l1585 07AB  
                         l1497 05C5                           l1489 05A5                           l2289 02FD  
                         l1691 048A                           l1675 0459                           l1683 0476  
                         l1667 0443                           l1587 07AC                           l1499 05CB  
                         l1693 048E                           l1685 047C                           l1677 0462  
                         l1669 0444                           l1589 07AF                           l1695 0494  
                         l1687 0487                           l1679 0471                           l1697 0498  
                         l1699 07E1                           l1981 0722                           l1991 0736  
                         l1983 0723                           l1993 0739                           l1985 0726  
                         l1977 071E                           l1995 0742                           l1987 0728  
                         l1979 0721                           l1997 06E4                           l1989 072D  
                         l1999 06E8                           STR_1 0577                           STR_2 0564  
                         STR_3 0559                           STR_4 054D                           STR_5 0540  
                         STR_6 0532                           STR_7 056E                           STR_8 0523  
                         _BRGH 04C2                           _CREN 00C4                           _T0CS 040D  
                         u1100 0591                           u1101 0590                           u1110 05A2  
                         u1111 05A1                           u1200 0652                           u1040 074C  
                         u1201 0651                           u1041 074B                           u1130 05B4  
                         u1210 065D                           u1131 05B3                           u1211 065C  
                         u2100 06E0                           u1125 05A6                           u2101 06DF  
                         u1150 05C5                           u1230 066F                           u1070 0766  
                         u2110 03BD                           u1151 05C4                           u1231 066E  
                         u1071 0765                           u1055 0753                           u2111 03BC  
                         u1400 0475                           u1240 0679                           u2120 0410  
                         u2200 0119                           u1401 0474                           u1145 05B5  
                         u1241 0678                           u1225 0661                           u1065 075A  
                         u2121 040F                           u2201 0118                           u1410 047C  
                         u1170 05D9                           u1090 0586                           u2130 0310  
                         u1330 07CC                           u2210 011F                           u1411 047B  
                         u1171 05D8                           u1155 05C1                           u1091 0585  
                         u2131 030F                           u1331 07CB                           u2211 011E  
                         u1340 079D                           u1180 05DE                           u1260 068C  
                         u2140 0370                           u2300 016C                           u2220 0125  
                         u1341 079C                           u1181 05DD                           u1165 05CD  
                         u1261 068B                           u1245 0675                           u2125 040C  
                         u2141 036F                           u2301 016B                           u2221 0124  
                         u1430 0494                           u1350 043F                           u1270 0691  
                         u1190 0647                           u2070 0716                           u2310 0172  
                         u2230 012B                           u2150 00DF                           u1431 0493  
                         u1351 043E                           u1271 0690                           u1255 0680  
                         u1191 0646                           u2071 0715                           u2311 0171  
                         u2231 012A                           u2151 00DE                           u1440 049E  
                         u1360 0443                           u2080 06AA                           u2400 01C3  
                         u2320 0178                           u2240 0131                           u2160 00E5  
                         u1441 049D                           u1425 047F                           u1361 0442  
                         u2401 01C2                           u2321 0177                           u2241 0130  
                         u2161 00E4                           u1370 0455                           u2090 06CE  
                         u2410 01C9                           u2330 017E                           u2250 0137  
                         u2170 0107                           u1371 0454                           u2075 0712  
                         u2411 01C8                           u2331 017D                           u2251 0136  
                         u2171 0106                           u1380 0459                           u2500 021A  
                         u2420 01CF                           u2340 0184                           u2260 013D  
                         u2180 010D                           u1381 0458                           u2501 0219  
                         u2421 01CE                           u2341 0183                           u2261 013C  
                         u2181 010C                           u1390 0471                           u2510 0220  
                         u2430 01D5                           u2350 018A                           u2270 015A  
                         u2190 0113                           u1391 0470                           u2511 021F  
                         u2431 01D4                           u2351 0189                           u2271 0159  
                         u2191 0112                           u2600 0271                           u2520 0226  
                         u2440 01DB                           u2360 0190                           u2280 0160  
                         u2601 0270                           u2521 0225                           u2441 01DA  
                         u2361 018F                           u2281 015F                           u2610 0277  
                         u2530 022C                           u2450 01E1                           u2370 01B1  
                         u2290 0166                           u2611 0276                           u2531 022B  
                         u2451 01E0                           u2371 01B0                           u2291 0165  
                         u2620 027D                           u2540 0232                           u2460 01E7  
                         u2380 01B7                           u2621 027C                           u2541 0231  
                         u2461 01E6                           u2381 01B6                           u2630 0283  
                         u2550 0238                           u2470 0208                           u2390 01BD  
                         u2631 0282                           u2551 0237                           u2471 0207  
                         u2391 01BC                           u2640 0289                           u2560 023E  
                         u2480 020E                           u2641 0288                           u2561 023D  
                         u2481 020D                           u2650 028F                           u2570 025F  
                         u2490 0214                           u2707 05F0                           u2651 028E  
                         u2571 025E                           u2491 0213                           u2660 0295  
                         u2580 0265                           u2717 0603                           u2661 0294  
                         u2581 0264                           u2590 026B                           u2727 0613  
                         u2591 026A                           u2737 033A                           u2747 035E  
                         u2757 038D                           u2767 0731                           u2777 073D  
                         u2787 045D                           _RCIF 0065                 ??_KeyPadReader 0072  
                         _TMR0 0001                           _SPEN 00C7                           _TXEN 04C5  
                         _TXIF 0064                           _SYNC 04C4                           _data 0020  
                         _flag 0030                           _main 0045                           _num1 007B  
                         _num2 007A                           _num3 003F                           _keys 0510  
                         _num4 003E                           _num5 003D                           btemp 007E  
                         start 000C                          ??_ISR 0070                   ?_intToString 0053  
                        ?_main 0070                __end_of___awdiv 05E8                __end_of___awmod 069B  
              ___awdiv@divisor 004A                          i1l231 0779                          i1l223 076B  
                        i1l232 077A                          i1l225 076F                          i1l234 077E  
                        i1l226 0770                          i1l235 077F                          i1l228 0774  
                        i1l237 0783                          i1l229 0775                          i1l238 0784  
              ___awdiv@counter 004F                          _RCREG 001A                          _SPBRG 0099  
                        _PORTB 0006                          _PORTD 0008                          _TRISA 0085  
                        _TRISB 0086                          _TRISC 0087                          _TRISD 0088  
                        _TRISE 0089                          u96_20 076F                          u96_21 076E  
                        u97_20 0774                          u97_21 0773                          _TXREG 0019  
                        u98_20 0779                          u98_21 0778                          u99_20 077E  
                        u99_21 077D                __end_of_colMask 0523                __end_of_lcdSend 0746  
                  ?_UART_Write 0070                __end_of_initLCD 0642                          _count 002C  
                        _index 002E                          _keyok 003B                          _randx 005F  
                        _stato 0038                          pclath 000A                __end_of_rowMask 0520  
              __end_of_potenza 071D                          status 0003                          wtemp0 007E  
 __end_of_GenerateRandomNumber 07A4                __initialization 000F                   __end_of_main 030B  
                 __end_of_keys 051C                         ??_main 007A               ___awdiv@dividend 004C  
                       u100_20 0783                         u100_21 0782                         i1l1391 076B  
                       _TMR0IE 005D                         _TMR0IF 005A                         _TRISC6 043E  
                       _TRISC7 043F                  ??_Timer0_Init 0072               __end_of_lcdPrint 06E1  
            __end_of_UART_Init 07B6              __end_of_UART_Read 0395                         ___wmul 0746  
                    ??___awdiv 004E                      ??___awmod 0076                         _codice 0026  
             ___awdiv@quotient 0051                ___awmod@divisor 0072           __end_of_KeyPadReader 049F  
              ___awmod@counter 0077                      ??_lcdSend 0073                      ??_initLCD 0076  
                       saved_w 007E                      ??_potenza 0043        __end_of__initialization 0041  
             intToString@cifre 0059                 __pcstackCOMMON 0070                   __pidataBANK0 07D7  
          __end_of_Timer0_Init 07C5           _GenerateRandomNumber 078B                     __pbssBANK0 0020  
                   __pbssBANK1 00A0                     __pmaintext 0045                        ?___wmul 0072  
                   __pintentry 0004          ?_GenerateRandomNumber 0070                   ??_UART_Write 0072  
                    ?_lcdPrint 0076                     __stringtab 0500                   intToString@i 005A  
                 intToString@n 0053                   intToString@t 0057                    _Timer0_Init 07B6  
               _RS485_RxEnable 07E1                        ___awdiv 057F                        ___awmod 0642  
           __end_of_UART_Write 07CF                 _RS485_TxEnable 07DC                        _colMask 0520  
                      _colScan 003A                        _lcdSend 071D                        __ptext1 05E8  
                      __ptext2 07C5                        __ptext3 030B                        __ptext4 069B  
                      __ptext5 071D                        __ptext6 0395                        __ptext7 06E1  
                      __ptext8 0746                        __ptext9 0642                        _initLCD 05E8  
                      _old_btn 0320               ___awmod@dividend 0074                     _keypressed 003C  
                      _restart 0036                        _rowMask 051C                        _rowScan 0039  
                      _potenza 06E1                     ??_lcdPrint 0043                        clrloop0 07D0  
                      _stringa 00A0           end_of_initialization 0041                   _KeyPadReader 041A  
       __end_of_RS485_RxEnable 07E6         __end_of_RS485_TxEnable 07E1                      _UART_Init 07A4  
                    _UART_Read 030B                      _PORTEbits 0009                 UART_Write@data 0072  
       ??_GenerateRandomNumber 0072                      _TRISEbits 0089                ?_RS485_RxEnable 0070  
              ?_RS485_TxEnable 0070                 __end_of___wmul 076B                     ?_UART_Init 0070  
                   ?_UART_Read 0070                  __pbitbssBANK0 0320            start_initialization 000F  
GenerateRandomNumber@randomNum 0074                    __end_of_ISR 078B                 _stringPosition 0032  
               intToString@str 0055                       ??___wmul 0076                    __pdataBANK0 005F  
                ??_intToString 0056                    __pbssCOMMON 007A                      ___latbits 0002  
                __pcstackBANK0 0043                   ?_Timer0_Init 0070                       ?___awdiv 004A  
                     ?___awmod 0072                    ??_UART_Init 0072                    ??_UART_Read 005C  
                    __pstrings 0500                       ?_lcdSend 0072                       ?_initLCD 0070  
          __end_of_intToString 041A                      _countdown 0063                       ?_potenza 0078  
                    _randomNum 0034                      _old_stato 0037              interrupt_function 0004  
               ___wmul@product 0076                      clear_ram0 07CF                _print_countdown 0040  
                    lcdPrint@n 0078                    __stringbase 050F              ___wmul@multiplier 0072  
             ??_RS485_RxEnable 0072               ??_RS485_TxEnable 0072                    _intToString 0395  
           __end_of__stringtab 0510                       __ptext10 057F                       __ptext11 07A4  
                     __ptext12 07B6                       __ptext13 07DC                       __ptext14 07E1  
                     __ptext15 041A                       __ptext16 078B                       __ptext17 076B  
                     _lcdPrint 069B                       _received 0035                       intlevel1 0000  
                    stringcode 050A                       potenza@b 0045                       potenza@e 0078  
                     potenza@i 0046                       potenza@n 0048                    lcdSend@dato 0075  
                  lcdSend@tipo 0072                       stringdir 050A                       stringtab 0500  
                   _UART_Write 07C5      GenerateRandomNumber@count 0072                    lcdPrint@str 0076  
                ?_KeyPadReader 0070  
