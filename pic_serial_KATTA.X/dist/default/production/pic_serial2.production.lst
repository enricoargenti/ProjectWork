

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Jun 01 17:39:18 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Version 2.40
    20                           ; Generated 17/11/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0000                     	;# 
    55     0001                     	;# 
    56     0002                     	;# 
    57     0003                     	;# 
    58     0004                     	;# 
    59     0005                     	;# 
    60     0006                     	;# 
    61     0007                     	;# 
    62     0008                     	;# 
    63     0009                     	;# 
    64     000A                     	;# 
    65     000B                     	;# 
    66     000C                     	;# 
    67     000D                     	;# 
    68     000E                     	;# 
    69     000E                     	;# 
    70     000F                     	;# 
    71     0010                     	;# 
    72     0011                     	;# 
    73     0012                     	;# 
    74     0013                     	;# 
    75     0014                     	;# 
    76     0015                     	;# 
    77     0015                     	;# 
    78     0016                     	;# 
    79     0017                     	;# 
    80     0018                     	;# 
    81     0019                     	;# 
    82     001A                     	;# 
    83     001B                     	;# 
    84     001B                     	;# 
    85     001C                     	;# 
    86     001D                     	;# 
    87     001E                     	;# 
    88     001F                     	;# 
    89     0081                     	;# 
    90     0085                     	;# 
    91     0086                     	;# 
    92     0087                     	;# 
    93     0088                     	;# 
    94     0089                     	;# 
    95     008C                     	;# 
    96     008D                     	;# 
    97     008E                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0094                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009C                     	;# 
   105     009D                     	;# 
   106     009E                     	;# 
   107     009F                     	;# 
   108     010C                     	;# 
   109     010D                     	;# 
   110     010E                     	;# 
   111     010F                     	;# 
   112     018C                     	;# 
   113     018D                     	;# 
   114     0000                     	;# 
   115     0001                     	;# 
   116     0002                     	;# 
   117     0003                     	;# 
   118     0004                     	;# 
   119     0005                     	;# 
   120     0006                     	;# 
   121     0007                     	;# 
   122     0008                     	;# 
   123     0009                     	;# 
   124     000A                     	;# 
   125     000B                     	;# 
   126     000C                     	;# 
   127     000D                     	;# 
   128     000E                     	;# 
   129     000E                     	;# 
   130     000F                     	;# 
   131     0010                     	;# 
   132     0011                     	;# 
   133     0012                     	;# 
   134     0013                     	;# 
   135     0014                     	;# 
   136     0015                     	;# 
   137     0015                     	;# 
   138     0016                     	;# 
   139     0017                     	;# 
   140     0018                     	;# 
   141     0019                     	;# 
   142     001A                     	;# 
   143     001B                     	;# 
   144     001B                     	;# 
   145     001C                     	;# 
   146     001D                     	;# 
   147     001E                     	;# 
   148     001F                     	;# 
   149     0081                     	;# 
   150     0085                     	;# 
   151     0086                     	;# 
   152     0087                     	;# 
   153     0088                     	;# 
   154     0089                     	;# 
   155     008C                     	;# 
   156     008D                     	;# 
   157     008E                     	;# 
   158     0091                     	;# 
   159     0092                     	;# 
   160     0093                     	;# 
   161     0094                     	;# 
   162     0098                     	;# 
   163     0099                     	;# 
   164     009C                     	;# 
   165     009D                     	;# 
   166     009E                     	;# 
   167     009F                     	;# 
   168     010C                     	;# 
   169     010D                     	;# 
   170     010E                     	;# 
   171     010F                     	;# 
   172     018C                     	;# 
   173     018D                     	;# 
   174                           
   175                           	psect	idataBANK0
   176     00F7                     __pidataBANK0:
   177                           
   178                           ;initializer for _LED_DIS
   179     00F7  34C0               	retlw	192
   180     00F8  34F9               	retlw	249
   181     00F9  34A4               	retlw	164
   182     00FA  34B0               	retlw	176
   183     00FB  3499               	retlw	153
   184     00FC  3492               	retlw	146
   185     00FD  3482               	retlw	130
   186     00FE  34F8               	retlw	248
   187     00FF  3480               	retlw	128
   188     0100  3490               	retlw	144
   189     0101  3488               	retlw	136
   190     0102  3483               	retlw	131
   191     0103  34C6               	retlw	198
   192     0104  34A1               	retlw	161
   193     0105  3486               	retlw	134
   194     0106  348E               	retlw	142
   195     0107  34FF               	retlw	255
   196     0019                     _TXREG	set	25
   197     001A                     _RCREG	set	26
   198     0018                     _RCSTA	set	24
   199     0001                     _TMR0	set	1
   200     000B                     _INTCON	set	11
   201     0008                     _PORTD	set	8
   202     005A                     _T0IF	set	90
   203     0065                     _RCIF	set	101
   204     005E                     _PEIE	set	94
   205     005F                     _GIE	set	95
   206     004A                     _RE2	set	74
   207     0049                     _RE1	set	73
   208     0048                     _RE0	set	72
   209     003A                     _RC2	set	58
   210     003C                     _RC4	set	60
   211     003B                     _RC3	set	59
   212     003D                     _RC5	set	61
   213     002B                     _RA3	set	43
   214     0098                     _TXSTA	set	152
   215     0099                     _SPBRG	set	153
   216     0081                     _OPTION_REG	set	129
   217     0089                     _TRISE	set	137
   218     0088                     _TRISD	set	136
   219     0087                     _TRISC	set	135
   220     0086                     _TRISB	set	134
   221     0085                     _TRISA	set	133
   222     0465                     _RCIE	set	1125
   223                           
   224                           	psect	cinit
   225     0011                     start_initialization:	
   226                           ; #config settings
   227                           
   228     0011                     __initialization:
   229                           
   230                           ; Initialize objects allocated to BANK0
   231     0011  1383               	bcf	3,7	;select IRP bank0
   232     0012  3031               	movlw	low (__pdataBANK0+17)
   233     0013  00FD               	movwf	btemp+-1
   234     0014  3000               	movlw	high __pidataBANK0
   235     0015  00FE               	movwf	btemp
   236     0016  30F7               	movlw	low __pidataBANK0
   237     0017  00FF               	movwf	btemp+1
   238     0018  3020               	movlw	low __pdataBANK0
   239     0019  0084               	movwf	4
   240     001A  120A  118A  20E8  120A  118A  	fcall	init_ram0
   241                           
   242                           ; Clear objects allocated to COMMON
   243     001F  01F4               	clrf	__pbssCOMMON& (0+127)
   244     0020  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   245     0021                     end_of_initialization:	
   246                           ;End of C runtime variable initialization code
   247                           
   248     0021                     __end_of__initialization:
   249     0021  0183               	clrf	3
   250     0022  120A  118A  2908   	ljmp	_main	;jump to C main() function
   251                           
   252                           	psect	bssCOMMON
   253     0074                     __pbssCOMMON:
   254     0074                     _countVal:
   255     0074                     	ds	1
   256     0075                     _Dat_buff:
   257     0075                     	ds	1
   258                           
   259                           	psect	dataBANK0
   260     0020                     __pdataBANK0:
   261     0020                     _LED_DIS:
   262     0020                     	ds	17
   263                           
   264                           	psect	inittext
   265     00E4                     init_fetch0:	
   266                           ;	Called with low address in FSR and high address in W
   267                           
   268     00E4  087E               	movf	btemp,w
   269     00E5  008A               	movwf	10
   270     00E6  087F               	movf	btemp+1,w
   271     00E7  0082               	movwf	2
   272     00E8                     init_ram0:	
   273                           ;Called with:
   274                           ;	high address of idata address in btemp 
   275                           ;	low address of idata address in btemp+1 
   276                           ;	low address of data in FSR
   277                           ;	high address + 1 of data in btemp-1
   278                           
   279     00E8  120A  118A  20E4  120A  118A  	fcall	init_fetch0
   280     00ED  0080               	movwf	0
   281     00EE  0A84               	incf	4,f
   282     00EF  0804               	movf	4,w
   283     00F0  067D               	xorwf	btemp+-1,w
   284     00F1  1903               	btfsc	3,2
   285     00F2  3400               	retlw	0
   286     00F3  0AFF               	incf	btemp+1,f
   287     00F4  1903               	btfsc	3,2
   288     00F5  0AFE               	incf	btemp,f
   289     00F6  28E8               	goto	init_ram0
   290                           
   291                           	psect	cstackCOMMON
   292     0070                     __pcstackCOMMON:
   293     0070                     ?_mcu_init:
   294     0070                     ?_Board_init:	
   295                           ; 1 bytes @ 0x0
   296                           
   297     0070                     ?_main:	
   298                           ; 1 bytes @ 0x0
   299                           
   300     0070                     ?_usart:	
   301                           ; 1 bytes @ 0x0
   302                           
   303     0070                     ??_usart:	
   304                           ; 1 bytes @ 0x0
   305                           
   306                           
   307                           ; 1 bytes @ 0x0
   308     0070                     	ds	4
   309     0074                     ??_mcu_init:
   310     0074                     ??_Board_init:	
   311                           ; 1 bytes @ 0x4
   312                           
   313     0074                     ??_main:	
   314                           ; 1 bytes @ 0x4
   315                           
   316                           
   317                           	psect	maintext
   318     0108                     __pmaintext:	
   319                           ; 1 bytes @ 0x4
   320 ;;
   321 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   322 ;;
   323 ;; *************** function _main *****************
   324 ;; Defined at:
   325 ;;		line 113 in file "main.c"
   326 ;; Parameters:    Size  Location     Type
   327 ;;		None
   328 ;; Auto vars:     Size  Location     Type
   329 ;;		None
   330 ;; Return value:  Size  Location     Type
   331 ;;                  1    wreg      void 
   332 ;; Registers used:
   333 ;;		wreg, status,2, status,0, pclath, cstack
   334 ;; Tracked objects:
   335 ;;		On entry : B00/0
   336 ;;		On exit  : 0/0
   337 ;;		Unchanged: 0/0
   338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   339 ;;      Params:         0       0       0       0       0
   340 ;;      Locals:         0       0       0       0       0
   341 ;;      Temps:          0       0       0       0       0
   342 ;;      Totals:         0       0       0       0       0
   343 ;;Total ram usage:        0 bytes
   344 ;; Hardware stack levels required when called: 2
   345 ;; This function calls:
   346 ;;		_Board_init
   347 ;;		_mcu_init
   348 ;; This function is called by:
   349 ;;		Startup code after reset
   350 ;; This function uses a non-reentrant model
   351 ;;
   352                           
   353     0108                     _main:	
   354                           ;psect for function _main
   355                           
   356     0108                     l721:	
   357                           ;incstack = 0
   358                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   359                           
   360                           
   361                           ;main.c: 115:     Board_init();
   362     0108  120A  118A  209F  120A  118A  	fcall	_Board_init
   363                           
   364                           ;main.c: 116:     mcu_init();
   365     010D  120A  118A  20C5  120A  118A  	fcall	_mcu_init
   366     0112                     l72:	
   367                           ;main.c: 117:     while(1);
   368                           
   369     0112                     l73:
   370     0112  2912               	goto	l72
   371     0113  120A  118A  280E   	ljmp	start
   372     0116                     __end_of_main:
   373                           
   374                           	psect	text1
   375     00C5                     __ptext1:	
   376 ;; *************** function _mcu_init *****************
   377 ;; Defined at:
   378 ;;		line 120 in file "main.c"
   379 ;; Parameters:    Size  Location     Type
   380 ;;		None
   381 ;; Auto vars:     Size  Location     Type
   382 ;;		None
   383 ;; Return value:  Size  Location     Type
   384 ;;                  1    wreg      void 
   385 ;; Registers used:
   386 ;;		wreg
   387 ;; Tracked objects:
   388 ;;		On entry : 0/0
   389 ;;		On exit  : 0/0
   390 ;;		Unchanged: 0/0
   391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   392 ;;      Params:         0       0       0       0       0
   393 ;;      Locals:         0       0       0       0       0
   394 ;;      Temps:          0       0       0       0       0
   395 ;;      Totals:         0       0       0       0       0
   396 ;;Total ram usage:        0 bytes
   397 ;; Hardware stack levels used: 1
   398 ;; Hardware stack levels required when called: 1
   399 ;; This function calls:
   400 ;;		Nothing
   401 ;; This function is called by:
   402 ;;		_main
   403 ;; This function uses a non-reentrant model
   404 ;;
   405                           
   406     00C5                     _mcu_init:	
   407                           ;psect for function _mcu_init
   408                           
   409     00C5                     l711:	
   410                           ;incstack = 0
   411                           ; Regs used in _mcu_init: [wreg]
   412                           
   413                           
   414                           ;main.c: 122:     OPTION_REG = 0x06;
   415     00C5  3006               	movlw	6
   416     00C6  1683               	bsf	3,5	;RP0=1, select bank1
   417     00C7  1303               	bcf	3,6	;RP1=0, select bank1
   418     00C8  0081               	movwf	1	;volatile
   419                           
   420                           ;main.c: 123:     INTCON = 0XA0;
   421     00C9  30A0               	movlw	160
   422     00CA  008B               	movwf	11	;volatile
   423                           
   424                           ;main.c: 124:     TMR0 = 0xC8;
   425     00CB  30C8               	movlw	200
   426     00CC  1283               	bcf	3,5	;RP0=0, select bank0
   427     00CD  1303               	bcf	3,6	;RP1=0, select bank0
   428     00CE  0081               	movwf	1	;volatile
   429                           
   430                           ;main.c: 125:     TRISC = 0X80;
   431     00CF  3080               	movlw	128
   432     00D0  1683               	bsf	3,5	;RP0=1, select bank1
   433     00D1  1303               	bcf	3,6	;RP1=0, select bank1
   434     00D2  0087               	movwf	7	;volatile
   435                           
   436                           ;main.c: 126:     SPBRG = 0X19;
   437     00D3  3019               	movlw	25
   438     00D4  0099               	movwf	25	;volatile
   439                           
   440                           ;main.c: 127:     TXSTA = 0X24;
   441     00D5  3024               	movlw	36
   442     00D6  0098               	movwf	24	;volatile
   443                           
   444                           ;main.c: 128:     RCSTA = 0X90;
   445     00D7  3090               	movlw	144
   446     00D8  1283               	bcf	3,5	;RP0=0, select bank0
   447     00D9  1303               	bcf	3,6	;RP1=0, select bank0
   448     00DA  0098               	movwf	24	;volatile
   449     00DB                     l713:
   450                           
   451                           ;main.c: 129:     RCIE = 0X1;
   452     00DB  1683               	bsf	3,5	;RP0=1, select bank1
   453     00DC  1303               	bcf	3,6	;RP1=0, select bank1
   454     00DD  168C               	bsf	12,5	;volatile
   455     00DE                     l715:
   456                           
   457                           ;main.c: 130:     GIE = 0X1;
   458     00DE  178B               	bsf	11,7	;volatile
   459     00DF                     l717:
   460                           
   461                           ;main.c: 131:     PEIE = 0X1;
   462     00DF  170B               	bsf	11,6	;volatile
   463     00E0                     l719:
   464                           
   465                           ;main.c: 132:     RE2 = 0;
   466     00E0  1283               	bcf	3,5	;RP0=0, select bank0
   467     00E1  1303               	bcf	3,6	;RP1=0, select bank0
   468     00E2  1109               	bcf	9,2	;volatile
   469     00E3                     l78:
   470     00E3  0008               	return
   471     00E4                     __end_of_mcu_init:
   472                           
   473                           	psect	text2
   474     009F                     __ptext2:	
   475 ;; *************** function _Board_init *****************
   476 ;; Defined at:
   477 ;;		line 67 in file "main.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;		None
   480 ;; Auto vars:     Size  Location     Type
   481 ;;		None
   482 ;; Return value:  Size  Location     Type
   483 ;;                  1    wreg      void 
   484 ;; Registers used:
   485 ;;		wreg, status,2
   486 ;; Tracked objects:
   487 ;;		On entry : 0/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   491 ;;      Params:         0       0       0       0       0
   492 ;;      Locals:         0       0       0       0       0
   493 ;;      Temps:          0       0       0       0       0
   494 ;;      Totals:         0       0       0       0       0
   495 ;;Total ram usage:        0 bytes
   496 ;; Hardware stack levels used: 1
   497 ;; Hardware stack levels required when called: 1
   498 ;; This function calls:
   499 ;;		Nothing
   500 ;; This function is called by:
   501 ;;		_main
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505     009F                     _Board_init:	
   506                           ;psect for function _Board_init
   507                           
   508     009F                     l683:	
   509                           ;incstack = 0
   510                           ; Regs used in _Board_init: [wreg+status,2]
   511                           
   512                           
   513                           ;main.c: 70:     TRISA=0x00;
   514     009F  1683               	bsf	3,5	;RP0=1, select bank1
   515     00A0  1303               	bcf	3,6	;RP1=0, select bank1
   516     00A1  0185               	clrf	5	;volatile
   517                           
   518                           ;main.c: 71:  TRISB=0x00;
   519     00A2  0186               	clrf	6	;volatile
   520                           
   521                           ;main.c: 72:  TRISC=0x00;
   522     00A3  0187               	clrf	7	;volatile
   523                           
   524                           ;main.c: 73:  TRISD=0x00;
   525     00A4  0188               	clrf	8	;volatile
   526                           
   527                           ;main.c: 74:     TRISE=0X00;
   528     00A5  0189               	clrf	9	;volatile
   529     00A6                     l685:
   530                           
   531                           ;main.c: 77:     PORTD=0XFF;
   532     00A6  30FF               	movlw	255
   533     00A7  1283               	bcf	3,5	;RP0=0, select bank0
   534     00A8  1303               	bcf	3,6	;RP1=0, select bank0
   535     00A9  0088               	movwf	8	;volatile
   536     00AA                     l687:
   537                           
   538                           ;main.c: 80:     RA3=1;
   539     00AA  1585               	bsf	5,3	;volatile
   540     00AB                     l689:
   541                           
   542                           ;main.c: 83:     RC5=1;
   543     00AB  1687               	bsf	7,5	;volatile
   544     00AC  0000               	nop	;# 
   545     00AD  0000               	nop	;# 
   546     00AE                     l691:
   547                           
   548                           ;main.c: 86:     RC5=0;
   549     00AE  1283               	bcf	3,5	;RP0=0, select bank0
   550     00AF  1303               	bcf	3,6	;RP1=0, select bank0
   551     00B0  1287               	bcf	7,5	;volatile
   552     00B1                     l693:
   553                           
   554                           ;main.c: 88:     RC3=1;
   555     00B1  1587               	bsf	7,3	;volatile
   556     00B2  0000               	nop	;# 
   557     00B3  0000               	nop	;# 
   558     00B4                     l695:
   559                           
   560                           ;main.c: 91:     RC3=0;
   561     00B4  1283               	bcf	3,5	;RP0=0, select bank0
   562     00B5  1303               	bcf	3,6	;RP1=0, select bank0
   563     00B6  1187               	bcf	7,3	;volatile
   564     00B7                     l697:
   565                           
   566                           ;main.c: 94:     PORTD=0X00;
   567     00B7  0188               	clrf	8	;volatile
   568     00B8                     l699:
   569                           
   570                           ;main.c: 95:     RC4=1;
   571     00B8  1607               	bsf	7,4	;volatile
   572     00B9  0000               	nop	;# 
   573     00BA  0000               	nop	;# 
   574     00BB                     l701:
   575                           
   576                           ;main.c: 98:     RC4=0;
   577     00BB  1283               	bcf	3,5	;RP0=0, select bank0
   578     00BC  1303               	bcf	3,6	;RP1=0, select bank0
   579     00BD  1207               	bcf	7,4	;volatile
   580                           
   581                           ;main.c: 102:     PORTD=0XFF;
   582     00BE  30FF               	movlw	255
   583     00BF  0088               	movwf	8	;volatile
   584     00C0                     l703:
   585                           
   586                           ;main.c: 104:     RC2=0;
   587     00C0  1107               	bcf	7,2	;volatile
   588     00C1                     l705:
   589                           
   590                           ;main.c: 106:     RE0=0;
   591     00C1  1009               	bcf	9,0	;volatile
   592     00C2                     l707:
   593                           
   594                           ;main.c: 108:     RE1=0;
   595     00C2  1089               	bcf	9,1	;volatile
   596     00C3                     l709:
   597                           
   598                           ;main.c: 110:     RE2=0;
   599     00C3  1109               	bcf	9,2	;volatile
   600     00C4                     l67:
   601     00C4  0008               	return
   602     00C5                     __end_of_Board_init:
   603                           
   604                           	psect	text3
   605     0025                     __ptext3:	
   606 ;; *************** function _usart *****************
   607 ;; Defined at:
   608 ;;		line 135 in file "main.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;		None
   611 ;; Auto vars:     Size  Location     Type
   612 ;;		None
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   622 ;;      Params:         0       0       0       0       0
   623 ;;      Locals:         0       0       0       0       0
   624 ;;      Temps:          4       0       0       0       0
   625 ;;      Totals:         4       0       0       0       0
   626 ;;Total ram usage:        4 bytes
   627 ;; Hardware stack levels used: 1
   628 ;; This function calls:
   629 ;;		Nothing
   630 ;; This function is called by:
   631 ;;		Interrupt level 1
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635     0025                     _usart:	
   636                           ;psect for function _usart
   637                           
   638     0025                     i1l723:
   639                           
   640                           ;main.c: 137:     if(RCIE && RCIF)
   641     0025  1683               	bsf	3,5	;RP0=1, select bank1
   642     0026  1303               	bcf	3,6	;RP1=0, select bank1
   643     0027  1E8C               	btfss	12,5	;volatile
   644     0028  282A               	goto	u1_21
   645     0029  282B               	goto	u1_20
   646     002A                     u1_21:
   647     002A  2860               	goto	i1l83
   648     002B                     u1_20:
   649     002B                     i1l725:
   650     002B  1283               	bcf	3,5	;RP0=0, select bank0
   651     002C  1303               	bcf	3,6	;RP1=0, select bank0
   652     002D  1E8C               	btfss	12,5	;volatile
   653     002E  2830               	goto	u2_21
   654     002F  2831               	goto	u2_20
   655     0030                     u2_21:
   656     0030  2860               	goto	i1l83
   657     0031                     u2_20:
   658     0031                     i1l727:
   659                           
   660                           ;main.c: 138:     {;main.c: 139:         RE2 = 1;
   661     0031  1509               	bsf	9,2	;volatile
   662     0032                     i1l729:
   663                           
   664                           ;main.c: 140:         _delay((unsigned long)((100)*(4000000/4000000.0)));
   665     0032  3021               	movlw	33
   666     0033  00F0               	movwf	??_usart
   667     0034                     u9_27:
   668     0034  0BF0               	decfsz	??_usart,f
   669     0035  2834               	goto	u9_27
   670     0036                     i1l731:
   671                           
   672                           ;main.c: 141:         if (RCREG != 0x0A && RCREG != 0x0D )
   673     0036  300A               	movlw	10
   674     0037  1283               	bcf	3,5	;RP0=0, select bank0
   675     0038  1303               	bcf	3,6	;RP1=0, select bank0
   676     0039  061A               	xorwf	26,w	;volatile
   677     003A  1903               	btfsc	3,2
   678     003B  283D               	goto	u3_21
   679     003C  283E               	goto	u3_20
   680     003D                     u3_21:
   681     003D  2851               	goto	i1l741
   682     003E                     u3_20:
   683     003E                     i1l733:
   684     003E  300D               	movlw	13
   685     003F  061A               	xorwf	26,w	;volatile
   686     0040  1903               	btfsc	3,2
   687     0041  2843               	goto	u4_21
   688     0042  2844               	goto	u4_20
   689     0043                     u4_21:
   690     0043  2851               	goto	i1l741
   691     0044                     u4_20:
   692     0044                     i1l735:
   693                           
   694                           ;main.c: 142:         {;main.c: 143:             Dat_buff = RCREG;
   695     0044  081A               	movf	26,w	;volatile
   696     0045  00F5               	movwf	_Dat_buff
   697     0046                     i1l737:
   698                           
   699                           ;main.c: 144:             if (Dat_buff == 0x4b) { Dat_buff = 0x2F; };
   700     0046  304B               	movlw	75
   701     0047  0675               	xorwf	_Dat_buff,w
   702     0048  1D03               	btfss	3,2
   703     0049  284B               	goto	u5_21
   704     004A  284C               	goto	u5_20
   705     004B                     u5_21:
   706     004B  284E               	goto	i1l85
   707     004C                     u5_20:
   708     004C                     i1l739:
   709     004C  302F               	movlw	47
   710     004D  00F5               	movwf	_Dat_buff
   711     004E                     i1l85:
   712                           
   713                           ;main.c: 145:             TXREG = Dat_buff;
   714     004E  0875               	movf	_Dat_buff,w
   715     004F  0099               	movwf	25	;volatile
   716                           
   717                           ;main.c: 146:         }
   718     0050  2853               	goto	i1l86
   719     0051                     i1l741:
   720                           
   721                           ;main.c: 148:         {;main.c: 149:             TXREG = RCREG;
   722     0051  081A               	movf	26,w	;volatile
   723     0052  0099               	movwf	25	;volatile
   724     0053                     i1l86:	
   725                           ;main.c: 150:         };
   726                           
   727                           
   728                           ;main.c: 151:         _delay((unsigned long)((200)*(4000000/4000000.0)));
   729     0053  3042               	movlw	66
   730     0054  00F0               	movwf	??_usart
   731     0055                     u10_27:
   732     0055  0BF0               	decfsz	??_usart,f
   733     0056  2855               	goto	u10_27
   734     0057  0000               	nop
   735     0058                     i1l743:
   736                           
   737                           ;main.c: 152:         RE2 = 0;
   738     0058  1283               	bcf	3,5	;RP0=0, select bank0
   739     0059  1303               	bcf	3,6	;RP1=0, select bank0
   740     005A  1109               	bcf	9,2	;volatile
   741                           
   742                           ;main.c: 153:         _delay((unsigned long)((100)*(4000000/4000000.0)));
   743     005B  3021               	movlw	33
   744     005C  00F0               	movwf	??_usart
   745     005D                     u11_27:
   746     005D  0BF0               	decfsz	??_usart,f
   747     005E  285D               	goto	u11_27
   748                           
   749                           ;main.c: 154:     }
   750     005F  2896               	goto	i1l91
   751     0060                     i1l83:	
   752                           ;main.c: 155:     else if(T0IF)
   753                           
   754     0060  1D0B               	btfss	11,2	;volatile
   755     0061  2863               	goto	u6_21
   756     0062  2864               	goto	u6_20
   757     0063                     u6_21:
   758     0063  2896               	goto	i1l91
   759     0064                     u6_20:
   760     0064                     i1l745:
   761                           
   762                           ;main.c: 156:     {;main.c: 157:         T0IF = 0;
   763     0064  110B               	bcf	11,2	;volatile
   764     0065                     i1l747:
   765                           
   766                           ;main.c: 158:         TMR0 = 0xc8;
   767     0065  30C8               	movlw	200
   768     0066  1283               	bcf	3,5	;RP0=0, select bank0
   769     0067  0081               	movwf	1	;volatile
   770     0068                     i1l749:
   771                           
   772                           ;main.c: 159:         if(++countVal == 2)
   773     0068  3001               	movlw	1
   774     0069  00F0               	movwf	??_usart
   775     006A  0870               	movf	??_usart,w
   776     006B  07F4               	addwf	_countVal,f
   777     006C  3002               	movlw	2
   778     006D  0674               	xorwf	_countVal,w
   779     006E  1D03               	btfss	3,2
   780     006F  2871               	goto	u7_21
   781     0070  2872               	goto	u7_20
   782     0071                     u7_21:
   783     0071  2889               	goto	i1l89
   784     0072                     u7_20:
   785     0072                     i1l751:
   786                           
   787                           ;main.c: 160:         {;main.c: 161:             countVal = 0;
   788     0072  01F4               	clrf	_countVal
   789     0073                     i1l753:
   790                           
   791                           ;main.c: 162:             RC3 = 1;
   792     0073  1587               	bsf	7,3	;volatile
   793     0074                     i1l755:
   794                           
   795                           ;main.c: 163:             PORTD = LED_DIS[(Dat_buff >> 4) & 0X0F];
   796     0074  0875               	movf	_Dat_buff,w
   797     0075  00F0               	movwf	??_usart
   798     0076  3004               	movlw	4
   799     0077                     u8_25:
   800     0077  1003               	clrc
   801     0078  0CF0               	rrf	??_usart,f
   802     0079  3EFF               	addlw	-1
   803     007A  1D03               	skipz
   804     007B  2877               	goto	u8_25
   805     007C  0870               	movf	??_usart,w
   806     007D  390F               	andlw	15
   807     007E  3E20               	addlw	(low (_LED_DIS| 0))& (0+255)
   808     007F  0084               	movwf	4
   809     0080  1383               	bcf	3,7	;select IRP bank0
   810     0081  0800               	movf	0,w
   811     0082  0088               	movwf	8	;volatile
   812     0083                     i1l757:
   813                           
   814                           ;main.c: 164:             RC3 = 0;
   815     0083  1187               	bcf	7,3	;volatile
   816     0084                     i1l759:
   817                           
   818                           ;main.c: 165:             RC4 = 1;
   819     0084  1607               	bsf	7,4	;volatile
   820     0085                     i1l761:
   821                           
   822                           ;main.c: 166:             PORTD = 0X20;
   823     0085  3020               	movlw	32
   824     0086  0088               	movwf	8	;volatile
   825     0087                     i1l763:
   826                           
   827                           ;main.c: 167:             RC4 = 0;
   828     0087  1207               	bcf	7,4	;volatile
   829                           
   830                           ;main.c: 168:         }
   831     0088  2896               	goto	i1l91
   832     0089                     i1l89:	
   833                           ;main.c: 169:         else
   834                           
   835                           
   836                           ;main.c: 170:         {;main.c: 171:             RC3 = 1;
   837     0089  1587               	bsf	7,3	;volatile
   838     008A                     i1l765:
   839                           
   840                           ;main.c: 172:             PORTD = LED_DIS[Dat_buff & 0x0F];
   841     008A  0875               	movf	_Dat_buff,w
   842     008B  390F               	andlw	15
   843     008C  3E20               	addlw	(low (_LED_DIS| 0))& (0+255)
   844     008D  0084               	movwf	4
   845     008E  1383               	bcf	3,7	;select IRP bank0
   846     008F  0800               	movf	0,w
   847     0090  0088               	movwf	8	;volatile
   848     0091                     i1l767:
   849                           
   850                           ;main.c: 173:             RC3 = 0;
   851     0091  1187               	bcf	7,3	;volatile
   852     0092                     i1l769:
   853                           
   854                           ;main.c: 174:             RC4 = 1;
   855     0092  1607               	bsf	7,4	;volatile
   856     0093                     i1l771:
   857                           
   858                           ;main.c: 175:             PORTD = 0X10;
   859     0093  3010               	movlw	16
   860     0094  0088               	movwf	8	;volatile
   861     0095  2887               	goto	i1l763
   862     0096                     i1l91:
   863     0096  0873               	movf	??_usart+3,w
   864     0097  008A               	movwf	10
   865     0098  0872               	movf	??_usart+2,w
   866     0099  0084               	movwf	4
   867     009A  0E71               	swapf	??_usart+1,w
   868     009B  0083               	movwf	3
   869     009C  0EFE               	swapf	btemp,f
   870     009D  0E7E               	swapf	btemp,w
   871     009E  0009               	retfie
   872     009F                     __end_of_usart:
   873     007E                     btemp	set	126	;btemp
   874     007E                     wtemp0	set	126
   875                           
   876                           	psect	intentry
   877     0004                     __pintentry:	
   878                           ;incstack = 0
   879                           ; Regs used in _usart: [wreg-fsr0h+status,2+status,0]
   880                           
   881     0004                     interrupt_function:
   882     007E                     saved_w	set	btemp
   883     0004  00FE               	movwf	btemp
   884     0005  0E03               	swapf	3,w
   885     0006  00F1               	movwf	??_usart+1
   886     0007  0804               	movf	4,w
   887     0008  00F2               	movwf	??_usart+2
   888     0009  080A               	movf	10,w
   889     000A  00F3               	movwf	??_usart+3
   890     000B  120A  118A  2825   	ljmp	_usart
   891                           
   892                           	psect	idloc
   893                           
   894                           ;Config register IDLOC0 @ 0x2000
   895                           ;	unspecified, using default values
   896     2000                     	org	8192
   897     2000  3FFF               	dw	16383
   898                           
   899                           ;Config register IDLOC1 @ 0x2001
   900                           ;	unspecified, using default values
   901     2001                     	org	8193
   902     2001  3FFF               	dw	16383
   903                           
   904                           ;Config register IDLOC2 @ 0x2002
   905                           ;	unspecified, using default values
   906     2002                     	org	8194
   907     2002  3FFF               	dw	16383
   908                           
   909                           ;Config register IDLOC3 @ 0x2003
   910                           ;	unspecified, using default values
   911     2003                     	org	8195
   912     2003  3FFF               	dw	16383
   913                           
   914                           	psect	config
   915                           
   916                           ;Config register CONFIG @ 0x2007
   917                           ;	Oscillator Selection bits
   918                           ;	FOSC = XT, XT oscillator
   919                           ;	Watchdog Timer Enable bit
   920                           ;	WDTE = OFF, WDT disabled
   921                           ;	Power-up Timer Enable bit
   922                           ;	PWRTE = OFF, PWRT disabled
   923                           ;	Brown-out Reset Enable bit
   924                           ;	BOREN = OFF, BOR disabled
   925                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   926                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   927                           ;	Data EEPROM Memory Code Protection bit
   928                           ;	CPD = OFF, Data EEPROM code protection off
   929                           ;	Flash Program Memory Write Enable bits
   930                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   931                           ;	In-Circuit Debugger Mode bit
   932                           ;	DEBUG = 0x1, unprogrammed default
   933                           ;	Flash Program Memory Code Protection bit
   934                           ;	CP = OFF, Code protection off
   935     2007                     	org	8199
   936     2007  3F39               	dw	16185

Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       6
    BANK0            80      0      17
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _usart in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _usart in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _usart in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _usart in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _usart in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                         _Board_init
                           _mcu_init
 ---------------------------------------------------------------------------------
 (1) _mcu_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Board_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _usart                                                4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Board_init
   _mcu_init

 _usart (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      11       5       21.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       6       1       42.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      17      12        0.0%
ABS                  0      0      17       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Jun 01 17:39:18 2023

                      pc 0002                       l72 0112                       l73 0112  
                     l67 00C4                       l78 00E3                       fsr 0004  
                    l701 00BB                      l703 00C0                      l711 00C5  
                    l705 00C1                      l713 00DB                      l721 0108  
                    l707 00C2                      l715 00DE                      l709 00C3  
                    l717 00DF                      l719 00E0                      l691 00AE  
                    l683 009F                      l693 00B1                      l685 00A6  
                    l695 00B4                      l687 00AA                      l697 00B7  
                    l689 00AB                      l699 00B8                      _GIE 005F  
                    _RA3 002B                      _RC2 003A                      _RC3 003B  
                    _RC4 003C                      _RE0 0048                      _RC5 003D  
                    _RE1 0049                      _RE2 004A                      fsr0 0004  
                    indf 0000                     _T0IF 005A                     _PEIE 005E  
                   _RCIE 0465                     _RCIF 0065                     i1l91 0096  
                   i1l83 0060                     i1l85 004E                     i1l86 0053  
                   i1l89 0089                     _TMR0 0001                     u1_20 002B  
                   u1_21 002A                     u2_20 0031                     u2_21 0030  
                   u3_20 003E                     u3_21 003D                     u4_20 0044  
                   u4_21 0043                     u5_20 004C                     u5_21 004B  
                   u6_20 0064                     u6_21 0063                     u7_20 0072  
                   u7_21 0071                     u8_25 0077                     u9_27 0034  
                   _main 0108                     btemp 007E                     start 000E  
             _Board_init 009F                    ?_main 0070                    i1l731 0036  
                  i1l723 0025                    i1l733 003E                    i1l741 0051  
                  i1l725 002B                    i1l751 0072                    i1l743 0058  
                  i1l735 0044                    i1l727 0031                    i1l761 0085  
                  i1l753 0073                    i1l745 0064                    i1l737 0046  
                  i1l729 0032                    i1l771 0093                    i1l763 0087  
                  i1l755 0074                    i1l747 0065                    i1l739 004C  
                  i1l765 008A                    i1l757 0083                    i1l749 0068  
                  i1l767 0091                    i1l759 0084                    i1l769 0092  
                  _RCREG 001A                    u10_27 0055                    _RCSTA 0018  
                  u11_27 005D                    _SPBRG 0099                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _TXREG 0019  
                  _TXSTA 0098                    _usart 0025                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 0116                   ??_main 0074                   ?_usart 0070  
                 _INTCON 000B              ?_Board_init 0070         __end_of_mcu_init 00E4  
                 saved_w 007E  __end_of__initialization 0021           __pcstackCOMMON 0070  
           __pidataBANK0 00F7            __end_of_usart 009F                  ??_usart 0070  
             __pmaintext 0108               __pintentry 0004                  _LED_DIS 0020  
              ?_mcu_init 0070                  __ptext1 00C5                  __ptext2 009F  
                __ptext3 0025     end_of_initialization 0021               ??_mcu_init 0074  
           ??_Board_init 0074       __end_of_Board_init 00C5      start_initialization 0011  
             init_fetch0 00E4              __pdataBANK0 0020              __pbssCOMMON 0074  
              ___latbits 0002        interrupt_function 0004                 _Dat_buff 0075  
               _countVal 0074                 _mcu_init 00C5                 init_ram0 00E8  
               intlevel1 0000               _OPTION_REG 0081  
