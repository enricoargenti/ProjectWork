

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Jun 28 22:17:10 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40     0000                     
    41                           ; Generated 22/03/2023 GMT
    42                           ; 
    43                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F877A Definitions
    73                           ; 
    74                           ; SFR Addresses
    75     0000                     	;# 
    76     0001                     	;# 
    77     0002                     	;# 
    78     0003                     	;# 
    79     0004                     	;# 
    80     0005                     	;# 
    81     0006                     	;# 
    82     0007                     	;# 
    83     0008                     	;# 
    84     0009                     	;# 
    85     000A                     	;# 
    86     000B                     	;# 
    87     000C                     	;# 
    88     000D                     	;# 
    89     000E                     	;# 
    90     000E                     	;# 
    91     000F                     	;# 
    92     0010                     	;# 
    93     0011                     	;# 
    94     0012                     	;# 
    95     0013                     	;# 
    96     0014                     	;# 
    97     0015                     	;# 
    98     0015                     	;# 
    99     0016                     	;# 
   100     0017                     	;# 
   101     0018                     	;# 
   102     0019                     	;# 
   103     001A                     	;# 
   104     001B                     	;# 
   105     001B                     	;# 
   106     001C                     	;# 
   107     001D                     	;# 
   108     001E                     	;# 
   109     001F                     	;# 
   110     0081                     	;# 
   111     0085                     	;# 
   112     0086                     	;# 
   113     0087                     	;# 
   114     0088                     	;# 
   115     0089                     	;# 
   116     008C                     	;# 
   117     008D                     	;# 
   118     008E                     	;# 
   119     0091                     	;# 
   120     0092                     	;# 
   121     0093                     	;# 
   122     0094                     	;# 
   123     0098                     	;# 
   124     0099                     	;# 
   125     009C                     	;# 
   126     009D                     	;# 
   127     009E                     	;# 
   128     009F                     	;# 
   129     010C                     	;# 
   130     010D                     	;# 
   131     010E                     	;# 
   132     010F                     	;# 
   133     018C                     	;# 
   134     018D                     	;# 
   135     0000                     	;# 
   136     0001                     	;# 
   137     0002                     	;# 
   138     0003                     	;# 
   139     0004                     	;# 
   140     0005                     	;# 
   141     0006                     	;# 
   142     0007                     	;# 
   143     0008                     	;# 
   144     0009                     	;# 
   145     000A                     	;# 
   146     000B                     	;# 
   147     000C                     	;# 
   148     000D                     	;# 
   149     000E                     	;# 
   150     000E                     	;# 
   151     000F                     	;# 
   152     0010                     	;# 
   153     0011                     	;# 
   154     0012                     	;# 
   155     0013                     	;# 
   156     0014                     	;# 
   157     0015                     	;# 
   158     0015                     	;# 
   159     0016                     	;# 
   160     0017                     	;# 
   161     0018                     	;# 
   162     0019                     	;# 
   163     001A                     	;# 
   164     001B                     	;# 
   165     001B                     	;# 
   166     001C                     	;# 
   167     001D                     	;# 
   168     001E                     	;# 
   169     001F                     	;# 
   170     0081                     	;# 
   171     0085                     	;# 
   172     0086                     	;# 
   173     0087                     	;# 
   174     0088                     	;# 
   175     0089                     	;# 
   176     008C                     	;# 
   177     008D                     	;# 
   178     008E                     	;# 
   179     0091                     	;# 
   180     0092                     	;# 
   181     0093                     	;# 
   182     0094                     	;# 
   183     0098                     	;# 
   184     0099                     	;# 
   185     009C                     	;# 
   186     009D                     	;# 
   187     009E                     	;# 
   188     009F                     	;# 
   189     010C                     	;# 
   190     010D                     	;# 
   191     010E                     	;# 
   192     010F                     	;# 
   193     018C                     	;# 
   194     018D                     	;# 
   195                           
   196                           	psect	idataCOMMON
   197     07FE                     __pidataCOMMON:
   198                           
   199                           ;initializer for _countdown
   200     07FE  343C               	retlw	60
   201                           
   202                           	psect	idataBANK0
   203     07FF                     __pidataBANK0:
   204                           
   205                           ;initializer for _id1
   206     07FF  3401               	retlw	1
   207                           
   208                           	psect	strings
   209     0800                     __pstrings:
   210     0800                     stringtab:
   211     0800                     __stringtab:
   212                           
   213                           ;	String table - string pointers are 1 byte each
   214     0800  1BFF               	btfsc	btemp+1,7
   215     0801  280A               	ljmp	stringcode
   216     0802  1383               	bcf	3,7
   217     0803  187F               	btfsc	btemp+1,0
   218     0804  1783               	bsf	3,7
   219     0805  0800               	movf	0,w
   220     0806  0A84               	incf	4,f
   221     0807  1903               	skipnz
   222     0808  0AFF               	incf	btemp+1,f
   223     0809  0008               	return
   224     080A                     stringcode:
   225     080A                     stringdir:
   226     080A  3008               	movlw	high stringdir
   227     080B  008A               	movwf	10
   228     080C  0804               	movf	4,w
   229     080D  0A84               	incf	4,f
   230     080E  0782               	addwf	2,f
   231     080F                     __stringbase:
   232     080F  3400               	retlw	0
   233     0810                     __end_of__stringtab:
   234     0810                     _keys:
   235     0810  3423               	retlw	35
   236     0811  3437               	retlw	55
   237     0812  3434               	retlw	52
   238     0813  3431               	retlw	49
   239     0814  342A               	retlw	42
   240     0815  3438               	retlw	56
   241     0816  3435               	retlw	53
   242     0817  3432               	retlw	50
   243     0818  3430               	retlw	48
   244     0819  3439               	retlw	57
   245     081A  3436               	retlw	54
   246     081B  3433               	retlw	51
   247     081C                     __end_of_keys:
   248     081C                     _rowMask:
   249     081C  3401               	retlw	1
   250     081D  3402               	retlw	2
   251     081E  3404               	retlw	4
   252     081F  3408               	retlw	8
   253     0820                     __end_of_rowMask:
   254     0820                     _colMask:
   255     0820  34FE               	retlw	254
   256     0821  34FD               	retlw	253
   257     0822  34FB               	retlw	251
   258     0823                     __end_of_colMask:
   259     0001                     _TMR0	set	1
   260     0006                     _PORTB	set	6
   261     0008                     _PORTD	set	8
   262     0009                     _PORTEbits	set	9
   263     001A                     _RCREG	set	26
   264     0019                     _TXREG	set	25
   265     005F                     _GIE	set	95
   266     005D                     _TMR0IE	set	93
   267     005A                     _TMR0IF	set	90
   268     0065                     _RCIF	set	101
   269     0064                     _TXIF	set	100
   270     0039                     _RC1	set	57
   271     0038                     _RC0	set	56
   272     00C4                     _CREN	set	196
   273     00C7                     _SPEN	set	199
   274     0089                     _TRISEbits	set	137
   275     0099                     _SPBRG	set	153
   276     0089                     _TRISE	set	137
   277     0088                     _TRISD	set	136
   278     0087                     _TRISC	set	135
   279     0086                     _TRISB	set	134
   280     0085                     _TRISA	set	133
   281     0408                     _PS0	set	1032
   282     0409                     _PS1	set	1033
   283     040A                     _PS2	set	1034
   284     040B                     _PSA	set	1035
   285     040D                     _T0CS	set	1037
   286     04C5                     _TXEN	set	1221
   287     04C4                     _SYNC	set	1220
   288     04C2                     _BRGH	set	1218
   289     043F                     _TRISC7	set	1087
   290     043E                     _TRISC6	set	1086
   291     0823                     STR_11:
   292     0823  3443               	retlw	67	;'C'
   293     0824  346F               	retlw	111	;'o'
   294     0825  3464               	retlw	100	;'d'
   295     0826  3469               	retlw	105	;'i'
   296     0827  3463               	retlw	99	;'c'
   297     0828  3465               	retlw	101	;'e'
   298     0829  3420               	retlw	32	;' '
   299     082A  3453               	retlw	83	;'S'
   300     082B  3463               	retlw	99	;'c'
   301     082C  3461               	retlw	97	;'a'
   302     082D  3464               	retlw	100	;'d'
   303     082E  3475               	retlw	117	;'u'
   304     082F  3474               	retlw	116	;'t'
   305     0830  346F               	retlw	111	;'o'
   306     0831  3400               	retlw	0
   307     0832                     STR_6:
   308     0832  3441               	retlw	65	;'A'
   309     0833  3474               	retlw	116	;'t'
   310     0834  3474               	retlw	116	;'t'
   311     0835  3465               	retlw	101	;'e'
   312     0836  346E               	retlw	110	;'n'
   313     0837  3464               	retlw	100	;'d'
   314     0838  3465               	retlw	101	;'e'
   315     0839  3472               	retlw	114	;'r'
   316     083A  3465               	retlw	101	;'e'
   317     083B  342E               	retlw	46	;'.'
   318     083C  342E               	retlw	46	;'.'
   319     083D  342E               	retlw	46	;'.'
   320     083E  342E               	retlw	46	;'.'
   321     083F  3400               	retlw	0
   322     0840                     STR_9:
   323     0840  3454               	retlw	84	;'T'
   324     0841  3465               	retlw	101	;'e'
   325     0842  346D               	retlw	109	;'m'
   326     0843  3470               	retlw	112	;'p'
   327     0844  346F               	retlw	111	;'o'
   328     0845  3420               	retlw	32	;' '
   329     0846  3453               	retlw	83	;'S'
   330     0847  3463               	retlw	99	;'c'
   331     0848  3461               	retlw	97	;'a'
   332     0849  3464               	retlw	100	;'d'
   333     084A  3475               	retlw	117	;'u'
   334     084B  3474               	retlw	116	;'t'
   335     084C  346F               	retlw	111	;'o'
   336     084D  3400               	retlw	0
   337     084E                     STR_5:
   338     084E  3441               	retlw	65	;'A'
   339     084F  3474               	retlw	116	;'t'
   340     0850  3474               	retlw	116	;'t'
   341     0851  3465               	retlw	101	;'e'
   342     0852  346E               	retlw	110	;'n'
   343     0853  3464               	retlw	100	;'d'
   344     0854  3465               	retlw	101	;'e'
   345     0855  3472               	retlw	114	;'r'
   346     0856  3465               	retlw	101	;'e'
   347     0857  342E               	retlw	46	;'.'
   348     0858  342E               	retlw	46	;'.'
   349     0859  342E               	retlw	46	;'.'
   350     085A  3400               	retlw	0
   351     085B                     STR_4:
   352     085B  3441               	retlw	65	;'A'
   353     085C  3474               	retlw	116	;'t'
   354     085D  3474               	retlw	116	;'t'
   355     085E  3465               	retlw	101	;'e'
   356     085F  346E               	retlw	110	;'n'
   357     0860  3464               	retlw	100	;'d'
   358     0861  3465               	retlw	101	;'e'
   359     0862  3472               	retlw	114	;'r'
   360     0863  3465               	retlw	101	;'e'
   361     0864  342E               	retlw	46	;'.'
   362     0865  342E               	retlw	46	;'.'
   363     0866  3400               	retlw	0
   364     0867                     STR_3:
   365     0867  3441               	retlw	65	;'A'
   366     0868  3474               	retlw	116	;'t'
   367     0869  3474               	retlw	116	;'t'
   368     086A  3465               	retlw	101	;'e'
   369     086B  346E               	retlw	110	;'n'
   370     086C  3464               	retlw	100	;'d'
   371     086D  3465               	retlw	101	;'e'
   372     086E  3472               	retlw	114	;'r'
   373     086F  3465               	retlw	101	;'e'
   374     0870  342E               	retlw	46	;'.'
   375     0871  3400               	retlw	0
   376     0872                     STR_8:
   377     0872  3441               	retlw	65	;'A'
   378     0873  3450               	retlw	80	;'P'
   379     0874  3452               	retlw	82	;'R'
   380     0875  3449               	retlw	73	;'I'
   381     0876  3420               	retlw	32	;' '
   382     0877  3450               	retlw	80	;'P'
   383     0878  344F               	retlw	79	;'O'
   384     0879  3452               	retlw	82	;'R'
   385     087A  3454               	retlw	84	;'T'
   386     087B  3441               	retlw	65	;'A'
   387     087C  3400               	retlw	0
   388     087D                     STR_2:
   389     087D  3441               	retlw	65	;'A'
   390     087E  3474               	retlw	116	;'t'
   391     087F  3474               	retlw	116	;'t'
   392     0880  3465               	retlw	101	;'e'
   393     0881  346E               	retlw	110	;'n'
   394     0882  3464               	retlw	100	;'d'
   395     0883  3465               	retlw	101	;'e'
   396     0884  3472               	retlw	114	;'r'
   397     0885  3465               	retlw	101	;'e'
   398     0886  3400               	retlw	0
   399     0887                     STR_1:
   400     0887  3450               	retlw	80	;'P'
   401     0888  3472               	retlw	114	;'r'
   402     0889  3465               	retlw	101	;'e'
   403     088A  346D               	retlw	109	;'m'
   404     088B  3469               	retlw	105	;'i'
   405     088C  3420               	retlw	32	;' '
   406     088D  342A               	retlw	42	;'*'
   407     088E  3400               	retlw	0
   408     088F                     STR_10:
   409     088F  344D               	retlw	77	;'M'
   410     0890  3461               	retlw	97	;'a'
   411     0891  346E               	retlw	110	;'n'
   412     0892  3464               	retlw	100	;'d'
   413     0893  3461               	retlw	97	;'a'
   414     0894  3474               	retlw	116	;'t'
   415     0895  346F               	retlw	111	;'o'
   416     0896  3400               	retlw	0
   417     087D                     
   418                           	psect	cinit
   419     0013                     start_initialization:	
   420                           ; #config settings
   421                           
   422     0013                     __initialization:
   423                           
   424                           ; Initialize objects allocated to BANK0
   425     0013  120A  118A  27FF  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   426     0018  00EF               	movwf	__pdataBANK0& (0+127)
   427                           
   428                           ; Initialize objects allocated to COMMON
   429     0019  120A  118A  27FE  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   430     001E  00F9               	movwf	__pdataCOMMON& (0+127)
   431                           
   432                           ; Clear objects allocated to BANK0
   433     001F  1383               	bcf	3,7	;select IRP bank0
   434     0020  3020               	movlw	low __pbssBANK0
   435     0021  0084               	movwf	4
   436     0022  3053               	movlw	low (__pbssBANK0+51)
   437     0023  120A  158A  2507  120A  118A  	fcall	clear_ram0
   438                           
   439                           ; Clear objects allocated to COMMON
   440     0028  01F5               	clrf	__pbssCOMMON& (0+127)
   441     0029  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   442     002A  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   443                           
   444                           ; Clear objects allocated to BITCOMMON
   445     002B  01F8               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   446     002C                     end_of_initialization:	
   447                           ;End of C runtime variable initialization code
   448                           
   449     002C                     __end_of__initialization:
   450     002C  0183               	clrf	3
   451     002D  120A  118A  2830   	ljmp	_main	;jump to C main() function
   452                           
   453                           	psect	bitbssCOMMON
   454     03C0                     __pbitbssCOMMON:
   455     03C0                     _old_btn:
   456     03C0                     	ds	1
   457                           
   458                           	psect	bssCOMMON
   459     0075                     __pbssCOMMON:
   460     0075                     _stato:
   461     0075                     	ds	1
   462     0076                     _rowScan:
   463     0076                     	ds	1
   464     0077                     _colScan:
   465     0077                     	ds	1
   466                           
   467                           	psect	dataCOMMON
   468     0079                     __pdataCOMMON:
   469     0079                     _countdown:
   470     0079                     	ds	1
   471                           
   472                           	psect	bssBANK0
   473     0020                     __pbssBANK0:
   474     0020                     _stringa:
   475     0020                     	ds	16
   476     0030                     _data:
   477     0030                     	ds	6
   478     0036                     _codice:
   479     0036                     	ds	6
   480     003C                     _count:
   481     003C                     	ds	2
   482     003E                     _index:
   483     003E                     	ds	2
   484     0040                     _flag:
   485     0040                     	ds	2
   486     0042                     _stringPosition:
   487     0042                     	ds	2
   488     0044                     _type:
   489     0044                     	ds	1
   490     0045                     _randomNum:
   491     0045                     	ds	1
   492     0046                     _received:
   493     0046                     	ds	1
   494     0047                     _restart:
   495     0047                     	ds	1
   496     0048                     _old_stato:
   497     0048                     	ds	1
   498     0049                     _keyok:
   499     0049                     	ds	1
   500     004A                     _keypressed:
   501     004A                     	ds	1
   502     004B                     _num5:
   503     004B                     	ds	1
   504     004C                     _num4:
   505     004C                     	ds	1
   506     004D                     _num3:
   507     004D                     	ds	1
   508     004E                     _num2:
   509     004E                     	ds	1
   510     004F                     _num1:
   511     004F                     	ds	1
   512     0050                     _print_countdown:
   513     0050                     	ds	3
   514                           
   515                           	psect	dataBANK0
   516     006F                     __pdataBANK0:
   517     006F                     _id1:
   518     006F                     	ds	1
   519                           
   520                           	psect	clrtext
   521     0D07                     clear_ram0:	
   522                           ;	Called with FSR containing the base address, and
   523                           ;	W with the last address+1
   524                           
   525     0D07  0064               	clrwdt	;clear the watchdog before getting into this loop
   526     0D08                     clrloop0:
   527     0D08  0180               	clrf	0	;clear RAM location pointed to by FSR
   528     0D09  0A84               	incf	4,f	;increment pointer
   529     0D0A  0604               	xorwf	4,w	;XOR with final address
   530     0D0B  1903               	btfsc	3,2	;have we reached the end yet?
   531     0D0C  3400               	retlw	0	;all done for this memory range, return
   532     0D0D  0604               	xorwf	4,w	;XOR again to restore value
   533     0D0E  2D08               	goto	clrloop0	;do the next byte
   534                           
   535                           	psect	cstackBANK1
   536     00A0                     __pcstackBANK1:
   537     00A0                     ??_UART_Read1:
   538     00A0                     ??_UART_Read2:	
   539                           ; 1 bytes @ 0x0
   540                           
   541                           
   542                           ; 1 bytes @ 0x0
   543     00A0                     	ds	3
   544     00A3                     UART_Read1@count:
   545                           
   546                           ; 1 bytes @ 0x3
   547     00A3                     	ds	1
   548                           
   549                           	psect	cstackCOMMON
   550     0070                     __pcstackCOMMON:
   551     0070                     ?_UART_Init:
   552     0070                     ?_initLCD:	
   553                           ; 1 bytes @ 0x0
   554                           
   555     0070                     ?_Timer0_Init:	
   556                           ; 1 bytes @ 0x0
   557                           
   558     0070                     ?_RS485_TxEnable:	
   559                           ; 1 bytes @ 0x0
   560                           
   561     0070                     ?_UART_Write:	
   562                           ; 1 bytes @ 0x0
   563                           
   564     0070                     ?_GenerateRandomNumber:	
   565                           ; 1 bytes @ 0x0
   566                           
   567     0070                     ?_KeyPadReader:	
   568                           ; 1 bytes @ 0x0
   569                           
   570     0070                     ?_RS485_RxEnable:	
   571                           ; 1 bytes @ 0x0
   572                           
   573     0070                     ?_UART_Read1:	
   574                           ; 1 bytes @ 0x0
   575                           
   576     0070                     ?_UART_Read2:	
   577                           ; 1 bytes @ 0x0
   578                           
   579     0070                     ?_main:	
   580                           ; 1 bytes @ 0x0
   581                           
   582     0070                     ?_ISR:	
   583                           ; 1 bytes @ 0x0
   584                           
   585     0070                     ??_ISR:	
   586                           ; 1 bytes @ 0x0
   587                           
   588                           
   589                           ; 1 bytes @ 0x0
   590     0070                     	ds	5
   591                           
   592                           	psect	cstackBANK0
   593     0053                     __pcstackBANK0:
   594     0053                     ??_UART_Init:
   595     0053                     ??_Timer0_Init:	
   596                           ; 1 bytes @ 0x0
   597                           
   598     0053                     ?_lcdSend:	
   599                           ; 1 bytes @ 0x0
   600                           
   601     0053                     ??_RS485_TxEnable:	
   602                           ; 1 bytes @ 0x0
   603                           
   604     0053                     ??_UART_Write:	
   605                           ; 1 bytes @ 0x0
   606                           
   607     0053                     ??_GenerateRandomNumber:	
   608                           ; 1 bytes @ 0x0
   609                           
   610     0053                     ??_KeyPadReader:	
   611                           ; 1 bytes @ 0x0
   612                           
   613     0053                     ??_RS485_RxEnable:	
   614                           ; 1 bytes @ 0x0
   615                           
   616     0053                     ?___bmul:	
   617                           ; 1 bytes @ 0x0
   618                           
   619     0053                     ?___awmod:	
   620                           ; 1 bytes @ 0x0
   621                           
   622     0053                     UART_Write@data:	
   623                           ; 2 bytes @ 0x0
   624                           
   625     0053                     lcdSend@tipo:	
   626                           ; 1 bytes @ 0x0
   627                           
   628     0053                     GenerateRandomNumber@randomNum:	
   629                           ; 1 bytes @ 0x0
   630                           
   631     0053                     ___bmul@multiplicand:	
   632                           ; 1 bytes @ 0x0
   633                           
   634     0053                     ___awmod@divisor:	
   635                           ; 1 bytes @ 0x0
   636                           
   637                           
   638                           ; 2 bytes @ 0x0
   639     0053                     	ds	1
   640     0054                     ??_lcdSend:
   641     0054                     ??___bmul:	
   642                           ; 1 bytes @ 0x1
   643                           
   644     0054                     lcdSend@dato:	
   645                           ; 1 bytes @ 0x1
   646                           
   647     0054                     GenerateRandomNumber@count:	
   648                           ; 1 bytes @ 0x1
   649                           
   650                           
   651                           ; 2 bytes @ 0x1
   652     0054                     	ds	1
   653     0055                     ??_initLCD:
   654     0055                     ?_lcdPrint:	
   655                           ; 1 bytes @ 0x2
   656                           
   657     0055                     ___bmul@product:	
   658                           ; 1 bytes @ 0x2
   659                           
   660     0055                     lcdPrint@str:	
   661                           ; 1 bytes @ 0x2
   662                           
   663     0055                     ___awmod@dividend:	
   664                           ; 2 bytes @ 0x2
   665                           
   666                           
   667                           ; 2 bytes @ 0x2
   668     0055                     	ds	1
   669     0056                     ___bmul@multiplier:
   670                           
   671                           ; 1 bytes @ 0x3
   672     0056                     	ds	1
   673     0057                     ??_lcdPrint:
   674     0057                     ?_potenza:	
   675                           ; 1 bytes @ 0x4
   676                           
   677     0057                     ??___awmod:	
   678                           ; 1 bytes @ 0x4
   679                           
   680     0057                     potenza@e:	
   681                           ; 1 bytes @ 0x4
   682                           
   683                           
   684                           ; 1 bytes @ 0x4
   685     0057                     	ds	1
   686     0058                     ??_potenza:
   687     0058                     ___awmod@counter:	
   688                           ; 1 bytes @ 0x5
   689                           
   690                           
   691                           ; 1 bytes @ 0x5
   692     0058                     	ds	1
   693     0059                     potenza@b:
   694     0059                     ___awmod@sign:	
   695                           ; 1 bytes @ 0x6
   696                           
   697                           
   698                           ; 1 bytes @ 0x6
   699     0059                     	ds	1
   700     005A                     lcdPrint@n:
   701     005A                     potenza@i:	
   702                           ; 2 bytes @ 0x7
   703                           
   704                           
   705                           ; 2 bytes @ 0x7
   706     005A                     	ds	2
   707     005C                     potenza@n:
   708                           
   709                           ; 1 bytes @ 0x9
   710     005C                     	ds	1
   711     005D                     ?___awdiv:
   712     005D                     ___awdiv@divisor:	
   713                           ; 2 bytes @ 0xA
   714                           
   715                           
   716                           ; 2 bytes @ 0xA
   717     005D                     	ds	2
   718     005F                     ___awdiv@dividend:
   719                           
   720                           ; 2 bytes @ 0xC
   721     005F                     	ds	2
   722     0061                     ??___awdiv:
   723                           
   724                           ; 1 bytes @ 0xE
   725     0061                     	ds	1
   726     0062                     ___awdiv@counter:
   727                           
   728                           ; 1 bytes @ 0xF
   729     0062                     	ds	1
   730     0063                     ___awdiv@sign:
   731                           
   732                           ; 1 bytes @ 0x10
   733     0063                     	ds	1
   734     0064                     ___awdiv@quotient:
   735                           
   736                           ; 2 bytes @ 0x11
   737     0064                     	ds	2
   738     0066                     ?_intToString:
   739     0066                     intToString@n:	
   740                           ; 1 bytes @ 0x13
   741                           
   742                           
   743                           ; 2 bytes @ 0x13
   744     0066                     	ds	2
   745     0068                     intToString@str:
   746                           
   747                           ; 1 bytes @ 0x15
   748     0068                     	ds	1
   749     0069                     ??_intToString:
   750                           
   751                           ; 1 bytes @ 0x16
   752     0069                     	ds	3
   753     006C                     intToString@t:
   754                           
   755                           ; 1 bytes @ 0x19
   756     006C                     	ds	1
   757     006D                     intToString@cifre:
   758                           
   759                           ; 1 bytes @ 0x1A
   760     006D                     	ds	1
   761     006E                     intToString@i:
   762                           
   763                           ; 1 bytes @ 0x1B
   764     006E                     	ds	1
   765     006F                     ??_main:
   766                           
   767                           	psect	maintext
   768     0030                     __pmaintext:	
   769                           ; 1 bytes @ 0x1C
   770 ;;
   771 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   772 ;;
   773 ;; *************** function _main *****************
   774 ;; Defined at:
   775 ;;		line 107 in file "main.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;		None
   778 ;; Auto vars:     Size  Location     Type
   779 ;;		None
   780 ;; Return value:  Size  Location     Type
   781 ;;                  1    wreg      void 
   782 ;; Registers used:
   783 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   784 ;; Tracked objects:
   785 ;;		On entry : B00/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   789 ;;      Params:         0       0       0       0       0
   790 ;;      Locals:         0       0       0       0       0
   791 ;;      Temps:          0       0       0       0       0
   792 ;;      Totals:         0       0       0       0       0
   793 ;;Total ram usage:        0 bytes
   794 ;; Hardware stack levels required when called: 6
   795 ;; This function calls:
   796 ;;		_GenerateRandomNumber
   797 ;;		_KeyPadReader
   798 ;;		_RS485_RxEnable
   799 ;;		_RS485_TxEnable
   800 ;;		_Timer0_Init
   801 ;;		_UART_Init
   802 ;;		_UART_Read1
   803 ;;		_UART_Read2
   804 ;;		_UART_Write
   805 ;;		_initLCD
   806 ;;		_lcdPrint
   807 ;;		_lcdSend
   808 ;; This function is called by:
   809 ;;		Startup code after reset
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813     0030                     _main:	
   814                           ;psect for function _main
   815                           
   816     0030                     l2962:	
   817                           ;incstack = 0
   818                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   819                           
   820                           
   821                           ;main.c: 109:     TRISA=0x00;
   822     0030  1683               	bsf	3,5	;RP0=1, select bank1
   823     0031  1303               	bcf	3,6	;RP1=0, select bank1
   824     0032  0185               	clrf	5	;volatile
   825                           
   826                           ;main.c: 110:  TRISB=0x00;
   827     0033  0186               	clrf	6	;volatile
   828                           
   829                           ;main.c: 111:  TRISC=0x00;
   830     0034  0187               	clrf	7	;volatile
   831                           
   832                           ;main.c: 112:  TRISD=0x00;
   833     0035  0188               	clrf	8	;volatile
   834                           
   835                           ;main.c: 113:     TRISE=0X00;
   836     0036  0189               	clrf	9	;volatile
   837     0037                     l2964:
   838                           
   839                           ;main.c: 114:     UART_Init();
   840     0037  120A  158A  2528  120A  118A  	fcall	_UART_Init
   841     003C                     l2966:
   842                           
   843                           ;main.c: 115:     initLCD();
   844     003C  120A  158A  2689  120A  118A  	fcall	_initLCD
   845     0041                     l2968:
   846                           
   847                           ;main.c: 116:     Timer0_Init();
   848     0041  120A  158A  2519  120A  118A  	fcall	_Timer0_Init
   849     0046                     l2970:
   850                           
   851                           ;main.c: 118:     {;main.c: 119:         lcdSend(0x01, 0);
   852     0046  1283               	bcf	3,5	;RP0=0, select bank0
   853     0047  1303               	bcf	3,6	;RP1=0, select bank0
   854     0048  01D3               	clrf	lcdSend@tipo
   855     0049  3001               	movlw	1
   856     004A  120A  158A  253A  120A  118A  	fcall	_lcdSend
   857     004F                     l2972:
   858                           
   859                           ;main.c: 120:         lcdPrint("Premi *");
   860     004F  3078               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   861     0050  1283               	bcf	3,5	;RP0=0, select bank0
   862     0051  1303               	bcf	3,6	;RP1=0, select bank0
   863     0052  00D5               	movwf	lcdPrint@str
   864     0053  3080               	movlw	128
   865     0054  00D6               	movwf	lcdPrint@str+1
   866     0055  120A  158A  257D  120A  118A  	fcall	_lcdPrint
   867     005A                     l2974:
   868                           
   869                           ;main.c: 121:         RS485_TxEnable();
   870     005A  120A  118A  27F9  120A  118A  	fcall	_RS485_TxEnable
   871     005F                     l2976:
   872                           
   873                           ;main.c: 122:         UART_Write('P');
   874     005F  3050               	movlw	80
   875     0060  120A  158A  250F  120A  118A  	fcall	_UART_Write
   876     0065                     l2978:
   877                           
   878                           ;main.c: 123:         UART_Write('r');
   879     0065  3072               	movlw	114
   880     0066  120A  158A  250F  120A  118A  	fcall	_UART_Write
   881     006B                     l2980:
   882                           
   883                           ;main.c: 124:         UART_Write('e');
   884     006B  3065               	movlw	101
   885     006C  120A  158A  250F  120A  118A  	fcall	_UART_Write
   886     0071                     l2982:
   887                           
   888                           ;main.c: 125:         UART_Write('m');
   889     0071  306D               	movlw	109
   890     0072  120A  158A  250F  120A  118A  	fcall	_UART_Write
   891     0077                     l2984:
   892                           
   893                           ;main.c: 126:         UART_Write('i');
   894     0077  3069               	movlw	105
   895     0078  120A  158A  250F  120A  118A  	fcall	_UART_Write
   896     007D                     l2986:
   897                           
   898                           ;main.c: 127:         UART_Write(' ');
   899     007D  3020               	movlw	32
   900     007E  120A  158A  250F  120A  118A  	fcall	_UART_Write
   901     0083                     l2988:
   902                           
   903                           ;main.c: 128:         UART_Write('*');
   904     0083  302A               	movlw	42
   905     0084  120A  158A  250F  120A  118A  	fcall	_UART_Write
   906     0089                     l2990:
   907                           
   908                           ;main.c: 129:         UART_Write('\r');
   909     0089  300D               	movlw	13
   910     008A  120A  158A  250F  120A  118A  	fcall	_UART_Write
   911     008F                     l2992:
   912                           
   913                           ;main.c: 130:         UART_Write('\n');
   914     008F  300A               	movlw	10
   915     0090  120A  158A  250F  120A  118A  	fcall	_UART_Write
   916     0095                     l2994:
   917                           
   918                           ;main.c: 131:         num1 = GenerateRandomNumber();
   919     0095  120A  158A  254F  120A  118A  	fcall	_GenerateRandomNumber
   920     009A  1283               	bcf	3,5	;RP0=0, select bank0
   921     009B  1303               	bcf	3,6	;RP1=0, select bank0
   922     009C  00CF               	movwf	_num1
   923     009D                     l2996:
   924                           
   925                           ;main.c: 132:         num2 = GenerateRandomNumber();
   926     009D  120A  158A  254F  120A  118A  	fcall	_GenerateRandomNumber
   927     00A2  1283               	bcf	3,5	;RP0=0, select bank0
   928     00A3  1303               	bcf	3,6	;RP1=0, select bank0
   929     00A4  00CE               	movwf	_num2
   930     00A5                     l2998:
   931                           
   932                           ;main.c: 133:         num3 = GenerateRandomNumber();
   933     00A5  120A  158A  254F  120A  118A  	fcall	_GenerateRandomNumber
   934     00AA  1283               	bcf	3,5	;RP0=0, select bank0
   935     00AB  1303               	bcf	3,6	;RP1=0, select bank0
   936     00AC  00CD               	movwf	_num3
   937     00AD                     l3000:
   938                           
   939                           ;main.c: 134:         num4 = GenerateRandomNumber();
   940     00AD  120A  158A  254F  120A  118A  	fcall	_GenerateRandomNumber
   941     00B2  1283               	bcf	3,5	;RP0=0, select bank0
   942     00B3  1303               	bcf	3,6	;RP1=0, select bank0
   943     00B4  00CC               	movwf	_num4
   944     00B5                     l3002:
   945                           
   946                           ;main.c: 135:         num5 = GenerateRandomNumber();
   947     00B5  120A  158A  254F  120A  118A  	fcall	_GenerateRandomNumber
   948     00BA  1283               	bcf	3,5	;RP0=0, select bank0
   949     00BB  1303               	bcf	3,6	;RP1=0, select bank0
   950     00BC  00CB               	movwf	_num5
   951                           
   952                           ;main.c: 136:         while (codice[0] == '\0')
   953     00BD  28D3               	goto	l3010
   954     00BE                     l3004:
   955                           
   956                           ;main.c: 137:         {;main.c: 138:             KeyPadReader();
   957     00BE  120A  158A  2773  120A  118A  	fcall	_KeyPadReader
   958     00C3                     l3006:
   959                           
   960                           ;main.c: 139:             if (keys[keypressed] == '*'){
   961     00C3  1283               	bcf	3,5	;RP0=0, select bank0
   962     00C4  1303               	bcf	3,6	;RP1=0, select bank0
   963     00C5  084A               	movf	_keypressed,w
   964     00C6  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
   965     00C7  0084               	movwf	4
   966     00C8  120A  158A  200A  120A  118A  	fcall	stringdir
   967     00CD  3A2A               	xorlw	42
   968     00CE  1D03               	skipz
   969     00CF  28D1               	goto	u3361
   970     00D0  28D2               	goto	u3360
   971     00D1                     u3361:
   972     00D1  28D3               	goto	l3010
   973     00D2                     u3360:
   974     00D2  28D8               	goto	l3012
   975     00D3                     l3010:
   976                           
   977                           ;main.c: 136:         while (codice[0] == '\0')
   978     00D3  0836               	movf	_codice,w
   979     00D4  1903               	btfsc	3,2
   980     00D5  28D7               	goto	u3371
   981     00D6  28D8               	goto	u3370
   982     00D7                     u3371:
   983     00D7  28BE               	goto	l3004
   984     00D8                     u3370:
   985     00D8                     l3012:
   986                           
   987                           ;main.c: 143:         lcdSend(0x01, 0);
   988     00D8  01D3               	clrf	lcdSend@tipo
   989     00D9  3001               	movlw	1
   990     00DA  120A  158A  253A  120A  118A  	fcall	_lcdSend
   991     00DF                     l3014:
   992                           
   993                           ;main.c: 144:         lcdPrint("Attendere");
   994     00DF  306E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   995     00E0  1283               	bcf	3,5	;RP0=0, select bank0
   996     00E1  1303               	bcf	3,6	;RP1=0, select bank0
   997     00E2  00D5               	movwf	lcdPrint@str
   998     00E3  3080               	movlw	128
   999     00E4  00D6               	movwf	lcdPrint@str+1
  1000     00E5  120A  158A  257D  120A  118A  	fcall	_lcdPrint
  1001                           
  1002                           ;main.c: 145:         while(num1 != 0x30 && num1 != 0x31 && num1 != 0x32 && num1 != 0x33
      +                           &&
  1003     00EA  28F3               	goto	l3018
  1004     00EB                     l3016:
  1005                           
  1006                           ;main.c: 147:               num1 != 0x38 && num1 != 0x39){;main.c: 148:         num1 = G
      +                          enerateRandomNumber();
  1007     00EB  120A  158A  254F  120A  118A  	fcall	_GenerateRandomNumber
  1008     00F0  1283               	bcf	3,5	;RP0=0, select bank0
  1009     00F1  1303               	bcf	3,6	;RP1=0, select bank0
  1010     00F2  00CF               	movwf	_num1
  1011     00F3                     l3018:
  1012                           
  1013                           ;main.c: 145:         while(num1 != 0x30 && num1 != 0x31 && num1 != 0x32 && num1 != 0x33
      +                           &&
  1014     00F3  3030               	movlw	48
  1015     00F4  1283               	bcf	3,5	;RP0=0, select bank0
  1016     00F5  1303               	bcf	3,6	;RP1=0, select bank0
  1017     00F6  064F               	xorwf	_num1,w
  1018     00F7  1903               	btfsc	3,2
  1019     00F8  28FA               	goto	u3381
  1020     00F9  28FB               	goto	u3380
  1021     00FA                     u3381:
  1022     00FA  2931               	goto	l3038
  1023     00FB                     u3380:
  1024     00FB                     l3020:
  1025     00FB  3031               	movlw	49
  1026     00FC  064F               	xorwf	_num1,w
  1027     00FD  1903               	btfsc	3,2
  1028     00FE  2900               	goto	u3391
  1029     00FF  2901               	goto	u3390
  1030     0100                     u3391:
  1031     0100  2931               	goto	l3038
  1032     0101                     u3390:
  1033     0101                     l3022:
  1034     0101  3032               	movlw	50
  1035     0102  064F               	xorwf	_num1,w
  1036     0103  1903               	btfsc	3,2
  1037     0104  2906               	goto	u3401
  1038     0105  2907               	goto	u3400
  1039     0106                     u3401:
  1040     0106  2931               	goto	l3038
  1041     0107                     u3400:
  1042     0107                     l3024:
  1043     0107  3033               	movlw	51
  1044     0108  064F               	xorwf	_num1,w
  1045     0109  1903               	btfsc	3,2
  1046     010A  290C               	goto	u3411
  1047     010B  290D               	goto	u3410
  1048     010C                     u3411:
  1049     010C  2931               	goto	l3038
  1050     010D                     u3410:
  1051     010D                     l3026:
  1052     010D  3034               	movlw	52
  1053     010E  064F               	xorwf	_num1,w
  1054     010F  1903               	btfsc	3,2
  1055     0110  2912               	goto	u3421
  1056     0111  2913               	goto	u3420
  1057     0112                     u3421:
  1058     0112  2931               	goto	l3038
  1059     0113                     u3420:
  1060     0113                     l3028:
  1061     0113  3035               	movlw	53
  1062     0114  064F               	xorwf	_num1,w
  1063     0115  1903               	btfsc	3,2
  1064     0116  2918               	goto	u3431
  1065     0117  2919               	goto	u3430
  1066     0118                     u3431:
  1067     0118  2931               	goto	l3038
  1068     0119                     u3430:
  1069     0119                     l3030:
  1070     0119  3036               	movlw	54
  1071     011A  064F               	xorwf	_num1,w
  1072     011B  1903               	btfsc	3,2
  1073     011C  291E               	goto	u3441
  1074     011D  291F               	goto	u3440
  1075     011E                     u3441:
  1076     011E  2931               	goto	l3038
  1077     011F                     u3440:
  1078     011F                     l3032:
  1079     011F  3037               	movlw	55
  1080     0120  064F               	xorwf	_num1,w
  1081     0121  1903               	btfsc	3,2
  1082     0122  2924               	goto	u3451
  1083     0123  2925               	goto	u3450
  1084     0124                     u3451:
  1085     0124  2931               	goto	l3038
  1086     0125                     u3450:
  1087     0125                     l3034:
  1088     0125  3038               	movlw	56
  1089     0126  064F               	xorwf	_num1,w
  1090     0127  1903               	btfsc	3,2
  1091     0128  292A               	goto	u3461
  1092     0129  292B               	goto	u3460
  1093     012A                     u3461:
  1094     012A  2931               	goto	l3038
  1095     012B                     u3460:
  1096     012B                     l3036:
  1097     012B  3039               	movlw	57
  1098     012C  064F               	xorwf	_num1,w
  1099     012D  1D03               	btfss	3,2
  1100     012E  2930               	goto	u3471
  1101     012F  2931               	goto	u3470
  1102     0130                     u3471:
  1103     0130  28EB               	goto	l3016
  1104     0131                     u3470:
  1105     0131                     l3038:
  1106                           
  1107                           ;main.c: 150:         lcdSend(0x01, 0);
  1108     0131  01D3               	clrf	lcdSend@tipo
  1109     0132  3001               	movlw	1
  1110     0133  120A  158A  253A  120A  118A  	fcall	_lcdSend
  1111     0138                     l3040:
  1112                           
  1113                           ;main.c: 151:         lcdPrint("Attendere.");
  1114     0138  3058               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1115     0139  1283               	bcf	3,5	;RP0=0, select bank0
  1116     013A  1303               	bcf	3,6	;RP1=0, select bank0
  1117     013B  00D5               	movwf	lcdPrint@str
  1118     013C  3080               	movlw	128
  1119     013D  00D6               	movwf	lcdPrint@str+1
  1120     013E  120A  158A  257D  120A  118A  	fcall	_lcdPrint
  1121                           
  1122                           ;main.c: 152:         while(num2 != 0x30 && num2 != 0x31 && num2 != 0x32 && num2 != 0x33
      +                           &&
  1123     0143  294C               	goto	l3044
  1124     0144                     l3042:
  1125                           
  1126                           ;main.c: 154:               num2 != 0x38 && num2 != 0x39){;main.c: 155:         num2 = G
      +                          enerateRandomNumber();
  1127     0144  120A  158A  254F  120A  118A  	fcall	_GenerateRandomNumber
  1128     0149  1283               	bcf	3,5	;RP0=0, select bank0
  1129     014A  1303               	bcf	3,6	;RP1=0, select bank0
  1130     014B  00CE               	movwf	_num2
  1131     014C                     l3044:
  1132                           
  1133                           ;main.c: 152:         while(num2 != 0x30 && num2 != 0x31 && num2 != 0x32 && num2 != 0x33
      +                           &&
  1134     014C  3030               	movlw	48
  1135     014D  1283               	bcf	3,5	;RP0=0, select bank0
  1136     014E  1303               	bcf	3,6	;RP1=0, select bank0
  1137     014F  064E               	xorwf	_num2,w
  1138     0150  1903               	btfsc	3,2
  1139     0151  2953               	goto	u3481
  1140     0152  2954               	goto	u3480
  1141     0153                     u3481:
  1142     0153  298A               	goto	l3064
  1143     0154                     u3480:
  1144     0154                     l3046:
  1145     0154  3031               	movlw	49
  1146     0155  064E               	xorwf	_num2,w
  1147     0156  1903               	btfsc	3,2
  1148     0157  2959               	goto	u3491
  1149     0158  295A               	goto	u3490
  1150     0159                     u3491:
  1151     0159  298A               	goto	l3064
  1152     015A                     u3490:
  1153     015A                     l3048:
  1154     015A  3032               	movlw	50
  1155     015B  064E               	xorwf	_num2,w
  1156     015C  1903               	btfsc	3,2
  1157     015D  295F               	goto	u3501
  1158     015E  2960               	goto	u3500
  1159     015F                     u3501:
  1160     015F  298A               	goto	l3064
  1161     0160                     u3500:
  1162     0160                     l3050:
  1163     0160  3033               	movlw	51
  1164     0161  064E               	xorwf	_num2,w
  1165     0162  1903               	btfsc	3,2
  1166     0163  2965               	goto	u3511
  1167     0164  2966               	goto	u3510
  1168     0165                     u3511:
  1169     0165  298A               	goto	l3064
  1170     0166                     u3510:
  1171     0166                     l3052:
  1172     0166  3034               	movlw	52
  1173     0167  064E               	xorwf	_num2,w
  1174     0168  1903               	btfsc	3,2
  1175     0169  296B               	goto	u3521
  1176     016A  296C               	goto	u3520
  1177     016B                     u3521:
  1178     016B  298A               	goto	l3064
  1179     016C                     u3520:
  1180     016C                     l3054:
  1181     016C  3035               	movlw	53
  1182     016D  064E               	xorwf	_num2,w
  1183     016E  1903               	btfsc	3,2
  1184     016F  2971               	goto	u3531
  1185     0170  2972               	goto	u3530
  1186     0171                     u3531:
  1187     0171  298A               	goto	l3064
  1188     0172                     u3530:
  1189     0172                     l3056:
  1190     0172  3036               	movlw	54
  1191     0173  064E               	xorwf	_num2,w
  1192     0174  1903               	btfsc	3,2
  1193     0175  2977               	goto	u3541
  1194     0176  2978               	goto	u3540
  1195     0177                     u3541:
  1196     0177  298A               	goto	l3064
  1197     0178                     u3540:
  1198     0178                     l3058:
  1199     0178  3037               	movlw	55
  1200     0179  064E               	xorwf	_num2,w
  1201     017A  1903               	btfsc	3,2
  1202     017B  297D               	goto	u3551
  1203     017C  297E               	goto	u3550
  1204     017D                     u3551:
  1205     017D  298A               	goto	l3064
  1206     017E                     u3550:
  1207     017E                     l3060:
  1208     017E  3038               	movlw	56
  1209     017F  064E               	xorwf	_num2,w
  1210     0180  1903               	btfsc	3,2
  1211     0181  2983               	goto	u3561
  1212     0182  2984               	goto	u3560
  1213     0183                     u3561:
  1214     0183  298A               	goto	l3064
  1215     0184                     u3560:
  1216     0184                     l3062:
  1217     0184  3039               	movlw	57
  1218     0185  064E               	xorwf	_num2,w
  1219     0186  1D03               	btfss	3,2
  1220     0187  2989               	goto	u3571
  1221     0188  298A               	goto	u3570
  1222     0189                     u3571:
  1223     0189  2944               	goto	l3042
  1224     018A                     u3570:
  1225     018A                     l3064:
  1226                           
  1227                           ;main.c: 157:         lcdSend(0x01, 0);
  1228     018A  01D3               	clrf	lcdSend@tipo
  1229     018B  3001               	movlw	1
  1230     018C  120A  158A  253A  120A  118A  	fcall	_lcdSend
  1231     0191                     l3066:
  1232                           
  1233                           ;main.c: 158:         lcdPrint("Attendere..");
  1234     0191  304C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1235     0192  1283               	bcf	3,5	;RP0=0, select bank0
  1236     0193  1303               	bcf	3,6	;RP1=0, select bank0
  1237     0194  00D5               	movwf	lcdPrint@str
  1238     0195  3080               	movlw	128
  1239     0196  00D6               	movwf	lcdPrint@str+1
  1240     0197  120A  158A  257D  120A  118A  	fcall	_lcdPrint
  1241                           
  1242                           ;main.c: 159:         while(num3 != 0x30 && num3 != 0x31 && num3 != 0x32 && num3 != 0x33
      +                           &&
  1243     019C  29A5               	goto	l3070
  1244     019D                     l3068:
  1245                           
  1246                           ;main.c: 161:               num3 != 0x38 && num3 != 0x39){;main.c: 162:         num3 = G
      +                          enerateRandomNumber();
  1247     019D  120A  158A  254F  120A  118A  	fcall	_GenerateRandomNumber
  1248     01A2  1283               	bcf	3,5	;RP0=0, select bank0
  1249     01A3  1303               	bcf	3,6	;RP1=0, select bank0
  1250     01A4  00CD               	movwf	_num3
  1251     01A5                     l3070:
  1252                           
  1253                           ;main.c: 159:         while(num3 != 0x30 && num3 != 0x31 && num3 != 0x32 && num3 != 0x33
      +                           &&
  1254     01A5  3030               	movlw	48
  1255     01A6  1283               	bcf	3,5	;RP0=0, select bank0
  1256     01A7  1303               	bcf	3,6	;RP1=0, select bank0
  1257     01A8  064D               	xorwf	_num3,w
  1258     01A9  1903               	btfsc	3,2
  1259     01AA  29AC               	goto	u3581
  1260     01AB  29AD               	goto	u3580
  1261     01AC                     u3581:
  1262     01AC  29E3               	goto	l3090
  1263     01AD                     u3580:
  1264     01AD                     l3072:
  1265     01AD  3031               	movlw	49
  1266     01AE  064D               	xorwf	_num3,w
  1267     01AF  1903               	btfsc	3,2
  1268     01B0  29B2               	goto	u3591
  1269     01B1  29B3               	goto	u3590
  1270     01B2                     u3591:
  1271     01B2  29E3               	goto	l3090
  1272     01B3                     u3590:
  1273     01B3                     l3074:
  1274     01B3  3032               	movlw	50
  1275     01B4  064D               	xorwf	_num3,w
  1276     01B5  1903               	btfsc	3,2
  1277     01B6  29B8               	goto	u3601
  1278     01B7  29B9               	goto	u3600
  1279     01B8                     u3601:
  1280     01B8  29E3               	goto	l3090
  1281     01B9                     u3600:
  1282     01B9                     l3076:
  1283     01B9  3033               	movlw	51
  1284     01BA  064D               	xorwf	_num3,w
  1285     01BB  1903               	btfsc	3,2
  1286     01BC  29BE               	goto	u3611
  1287     01BD  29BF               	goto	u3610
  1288     01BE                     u3611:
  1289     01BE  29E3               	goto	l3090
  1290     01BF                     u3610:
  1291     01BF                     l3078:
  1292     01BF  3034               	movlw	52
  1293     01C0  064D               	xorwf	_num3,w
  1294     01C1  1903               	btfsc	3,2
  1295     01C2  29C4               	goto	u3621
  1296     01C3  29C5               	goto	u3620
  1297     01C4                     u3621:
  1298     01C4  29E3               	goto	l3090
  1299     01C5                     u3620:
  1300     01C5                     l3080:
  1301     01C5  3035               	movlw	53
  1302     01C6  064D               	xorwf	_num3,w
  1303     01C7  1903               	btfsc	3,2
  1304     01C8  29CA               	goto	u3631
  1305     01C9  29CB               	goto	u3630
  1306     01CA                     u3631:
  1307     01CA  29E3               	goto	l3090
  1308     01CB                     u3630:
  1309     01CB                     l3082:
  1310     01CB  3036               	movlw	54
  1311     01CC  064D               	xorwf	_num3,w
  1312     01CD  1903               	btfsc	3,2
  1313     01CE  29D0               	goto	u3641
  1314     01CF  29D1               	goto	u3640
  1315     01D0                     u3641:
  1316     01D0  29E3               	goto	l3090
  1317     01D1                     u3640:
  1318     01D1                     l3084:
  1319     01D1  3037               	movlw	55
  1320     01D2  064D               	xorwf	_num3,w
  1321     01D3  1903               	btfsc	3,2
  1322     01D4  29D6               	goto	u3651
  1323     01D5  29D7               	goto	u3650
  1324     01D6                     u3651:
  1325     01D6  29E3               	goto	l3090
  1326     01D7                     u3650:
  1327     01D7                     l3086:
  1328     01D7  3038               	movlw	56
  1329     01D8  064D               	xorwf	_num3,w
  1330     01D9  1903               	btfsc	3,2
  1331     01DA  29DC               	goto	u3661
  1332     01DB  29DD               	goto	u3660
  1333     01DC                     u3661:
  1334     01DC  29E3               	goto	l3090
  1335     01DD                     u3660:
  1336     01DD                     l3088:
  1337     01DD  3039               	movlw	57
  1338     01DE  064D               	xorwf	_num3,w
  1339     01DF  1D03               	btfss	3,2
  1340     01E0  29E2               	goto	u3671
  1341     01E1  29E3               	goto	u3670
  1342     01E2                     u3671:
  1343     01E2  299D               	goto	l3068
  1344     01E3                     u3670:
  1345     01E3                     l3090:
  1346                           
  1347                           ;main.c: 164:         lcdSend(0x01, 0);
  1348     01E3  01D3               	clrf	lcdSend@tipo
  1349     01E4  3001               	movlw	1
  1350     01E5  120A  158A  253A  120A  118A  	fcall	_lcdSend
  1351     01EA                     l3092:
  1352                           
  1353                           ;main.c: 165:         lcdPrint("Attendere...");
  1354     01EA  303F               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1355     01EB  1283               	bcf	3,5	;RP0=0, select bank0
  1356     01EC  1303               	bcf	3,6	;RP1=0, select bank0
  1357     01ED  00D5               	movwf	lcdPrint@str
  1358     01EE  3080               	movlw	128
  1359     01EF  00D6               	movwf	lcdPrint@str+1
  1360     01F0  120A  158A  257D  120A  118A  	fcall	_lcdPrint
  1361                           
  1362                           ;main.c: 166:         while(num4 != 0x30 && num4 != 0x31 && num4 != 0x32 && num4 != 0x33
      +                           &&
  1363     01F5  29FE               	goto	l3096
  1364     01F6                     l3094:
  1365                           
  1366                           ;main.c: 168:               num4 != 0x38 && num4 != 0x39){;main.c: 169:         num4 = G
      +                          enerateRandomNumber();
  1367     01F6  120A  158A  254F  120A  118A  	fcall	_GenerateRandomNumber
  1368     01FB  1283               	bcf	3,5	;RP0=0, select bank0
  1369     01FC  1303               	bcf	3,6	;RP1=0, select bank0
  1370     01FD  00CC               	movwf	_num4
  1371     01FE                     l3096:
  1372                           
  1373                           ;main.c: 166:         while(num4 != 0x30 && num4 != 0x31 && num4 != 0x32 && num4 != 0x33
      +                           &&
  1374     01FE  3030               	movlw	48
  1375     01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1376     0200  1303               	bcf	3,6	;RP1=0, select bank0
  1377     0201  064C               	xorwf	_num4,w
  1378     0202  1903               	btfsc	3,2
  1379     0203  2A05               	goto	u3681
  1380     0204  2A06               	goto	u3680
  1381     0205                     u3681:
  1382     0205  2A3C               	goto	l3116
  1383     0206                     u3680:
  1384     0206                     l3098:
  1385     0206  3031               	movlw	49
  1386     0207  064C               	xorwf	_num4,w
  1387     0208  1903               	btfsc	3,2
  1388     0209  2A0B               	goto	u3691
  1389     020A  2A0C               	goto	u3690
  1390     020B                     u3691:
  1391     020B  2A3C               	goto	l3116
  1392     020C                     u3690:
  1393     020C                     l3100:
  1394     020C  3032               	movlw	50
  1395     020D  064C               	xorwf	_num4,w
  1396     020E  1903               	btfsc	3,2
  1397     020F  2A11               	goto	u3701
  1398     0210  2A12               	goto	u3700
  1399     0211                     u3701:
  1400     0211  2A3C               	goto	l3116
  1401     0212                     u3700:
  1402     0212                     l3102:
  1403     0212  3033               	movlw	51
  1404     0213  064C               	xorwf	_num4,w
  1405     0214  1903               	btfsc	3,2
  1406     0215  2A17               	goto	u3711
  1407     0216  2A18               	goto	u3710
  1408     0217                     u3711:
  1409     0217  2A3C               	goto	l3116
  1410     0218                     u3710:
  1411     0218                     l3104:
  1412     0218  3034               	movlw	52
  1413     0219  064C               	xorwf	_num4,w
  1414     021A  1903               	btfsc	3,2
  1415     021B  2A1D               	goto	u3721
  1416     021C  2A1E               	goto	u3720
  1417     021D                     u3721:
  1418     021D  2A3C               	goto	l3116
  1419     021E                     u3720:
  1420     021E                     l3106:
  1421     021E  3035               	movlw	53
  1422     021F  064C               	xorwf	_num4,w
  1423     0220  1903               	btfsc	3,2
  1424     0221  2A23               	goto	u3731
  1425     0222  2A24               	goto	u3730
  1426     0223                     u3731:
  1427     0223  2A3C               	goto	l3116
  1428     0224                     u3730:
  1429     0224                     l3108:
  1430     0224  3036               	movlw	54
  1431     0225  064C               	xorwf	_num4,w
  1432     0226  1903               	btfsc	3,2
  1433     0227  2A29               	goto	u3741
  1434     0228  2A2A               	goto	u3740
  1435     0229                     u3741:
  1436     0229  2A3C               	goto	l3116
  1437     022A                     u3740:
  1438     022A                     l3110:
  1439     022A  3037               	movlw	55
  1440     022B  064C               	xorwf	_num4,w
  1441     022C  1903               	btfsc	3,2
  1442     022D  2A2F               	goto	u3751
  1443     022E  2A30               	goto	u3750
  1444     022F                     u3751:
  1445     022F  2A3C               	goto	l3116
  1446     0230                     u3750:
  1447     0230                     l3112:
  1448     0230  3038               	movlw	56
  1449     0231  064C               	xorwf	_num4,w
  1450     0232  1903               	btfsc	3,2
  1451     0233  2A35               	goto	u3761
  1452     0234  2A36               	goto	u3760
  1453     0235                     u3761:
  1454     0235  2A3C               	goto	l3116
  1455     0236                     u3760:
  1456     0236                     l3114:
  1457     0236  3039               	movlw	57
  1458     0237  064C               	xorwf	_num4,w
  1459     0238  1D03               	btfss	3,2
  1460     0239  2A3B               	goto	u3771
  1461     023A  2A3C               	goto	u3770
  1462     023B                     u3771:
  1463     023B  29F6               	goto	l3094
  1464     023C                     u3770:
  1465     023C                     l3116:
  1466                           
  1467                           ;main.c: 171:         lcdSend(0x01, 0);
  1468     023C  01D3               	clrf	lcdSend@tipo
  1469     023D  3001               	movlw	1
  1470     023E  120A  158A  253A  120A  118A  	fcall	_lcdSend
  1471     0243                     l3118:
  1472                           
  1473                           ;main.c: 172:         lcdPrint("Attendere....");
  1474     0243  3023               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1475     0244  1283               	bcf	3,5	;RP0=0, select bank0
  1476     0245  1303               	bcf	3,6	;RP1=0, select bank0
  1477     0246  00D5               	movwf	lcdPrint@str
  1478     0247  3080               	movlw	128
  1479     0248  00D6               	movwf	lcdPrint@str+1
  1480     0249  120A  158A  257D  120A  118A  	fcall	_lcdPrint
  1481                           
  1482                           ;main.c: 173:         while(num5 != 0x30 && num5 != 0x31 && num5 != 0x32 && num5 != 0x33
      +                           &&
  1483     024E  2A57               	goto	l3122
  1484     024F                     l3120:
  1485                           
  1486                           ;main.c: 175:               num5 != 0x38 && num5 != 0x39){;main.c: 176:         num5 = G
      +                          enerateRandomNumber();
  1487     024F  120A  158A  254F  120A  118A  	fcall	_GenerateRandomNumber
  1488     0254  1283               	bcf	3,5	;RP0=0, select bank0
  1489     0255  1303               	bcf	3,6	;RP1=0, select bank0
  1490     0256  00CB               	movwf	_num5
  1491     0257                     l3122:
  1492                           
  1493                           ;main.c: 173:         while(num5 != 0x30 && num5 != 0x31 && num5 != 0x32 && num5 != 0x33
      +                           &&
  1494     0257  3030               	movlw	48
  1495     0258  1283               	bcf	3,5	;RP0=0, select bank0
  1496     0259  1303               	bcf	3,6	;RP1=0, select bank0
  1497     025A  064B               	xorwf	_num5,w
  1498     025B  1903               	btfsc	3,2
  1499     025C  2A5E               	goto	u3781
  1500     025D  2A5F               	goto	u3780
  1501     025E                     u3781:
  1502     025E  2A95               	goto	l3142
  1503     025F                     u3780:
  1504     025F                     l3124:
  1505     025F  3031               	movlw	49
  1506     0260  064B               	xorwf	_num5,w
  1507     0261  1903               	btfsc	3,2
  1508     0262  2A64               	goto	u3791
  1509     0263  2A65               	goto	u3790
  1510     0264                     u3791:
  1511     0264  2A95               	goto	l3142
  1512     0265                     u3790:
  1513     0265                     l3126:
  1514     0265  3032               	movlw	50
  1515     0266  064B               	xorwf	_num5,w
  1516     0267  1903               	btfsc	3,2
  1517     0268  2A6A               	goto	u3801
  1518     0269  2A6B               	goto	u3800
  1519     026A                     u3801:
  1520     026A  2A95               	goto	l3142
  1521     026B                     u3800:
  1522     026B                     l3128:
  1523     026B  3033               	movlw	51
  1524     026C  064B               	xorwf	_num5,w
  1525     026D  1903               	btfsc	3,2
  1526     026E  2A70               	goto	u3811
  1527     026F  2A71               	goto	u3810
  1528     0270                     u3811:
  1529     0270  2A95               	goto	l3142
  1530     0271                     u3810:
  1531     0271                     l3130:
  1532     0271  3034               	movlw	52
  1533     0272  064B               	xorwf	_num5,w
  1534     0273  1903               	btfsc	3,2
  1535     0274  2A76               	goto	u3821
  1536     0275  2A77               	goto	u3820
  1537     0276                     u3821:
  1538     0276  2A95               	goto	l3142
  1539     0277                     u3820:
  1540     0277                     l3132:
  1541     0277  3035               	movlw	53
  1542     0278  064B               	xorwf	_num5,w
  1543     0279  1903               	btfsc	3,2
  1544     027A  2A7C               	goto	u3831
  1545     027B  2A7D               	goto	u3830
  1546     027C                     u3831:
  1547     027C  2A95               	goto	l3142
  1548     027D                     u3830:
  1549     027D                     l3134:
  1550     027D  3036               	movlw	54
  1551     027E  064B               	xorwf	_num5,w
  1552     027F  1903               	btfsc	3,2
  1553     0280  2A82               	goto	u3841
  1554     0281  2A83               	goto	u3840
  1555     0282                     u3841:
  1556     0282  2A95               	goto	l3142
  1557     0283                     u3840:
  1558     0283                     l3136:
  1559     0283  3037               	movlw	55
  1560     0284  064B               	xorwf	_num5,w
  1561     0285  1903               	btfsc	3,2
  1562     0286  2A88               	goto	u3851
  1563     0287  2A89               	goto	u3850
  1564     0288                     u3851:
  1565     0288  2A95               	goto	l3142
  1566     0289                     u3850:
  1567     0289                     l3138:
  1568     0289  3038               	movlw	56
  1569     028A  064B               	xorwf	_num5,w
  1570     028B  1903               	btfsc	3,2
  1571     028C  2A8E               	goto	u3861
  1572     028D  2A8F               	goto	u3860
  1573     028E                     u3861:
  1574     028E  2A95               	goto	l3142
  1575     028F                     u3860:
  1576     028F                     l3140:
  1577     028F  3039               	movlw	57
  1578     0290  064B               	xorwf	_num5,w
  1579     0291  1D03               	btfss	3,2
  1580     0292  2A94               	goto	u3871
  1581     0293  2A95               	goto	u3870
  1582     0294                     u3871:
  1583     0294  2A4F               	goto	l3120
  1584     0295                     u3870:
  1585     0295                     l3142:
  1586                           
  1587                           ;main.c: 178:         UART_Write(id1);
  1588     0295  3001               	movlw	1
  1589     0296  120A  158A  250F  120A  118A  	fcall	_UART_Write
  1590     029B                     l3144:
  1591                           
  1592                           ;main.c: 180:         type = 0x01;
  1593     029B  1283               	bcf	3,5	;RP0=0, select bank0
  1594     029C  1303               	bcf	3,6	;RP1=0, select bank0
  1595     029D  01C4               	clrf	_type
  1596     029E  0AC4               	incf	_type,f
  1597                           
  1598                           ;main.c: 181:         UART_Write(type);
  1599     029F  3001               	movlw	1
  1600     02A0  120A  158A  250F  120A  118A  	fcall	_UART_Write
  1601                           
  1602                           ;main.c: 182:         UART_Write(num1);
  1603     02A5  1283               	bcf	3,5	;RP0=0, select bank0
  1604     02A6  1303               	bcf	3,6	;RP1=0, select bank0
  1605     02A7  084F               	movf	_num1,w
  1606     02A8  120A  158A  250F  120A  118A  	fcall	_UART_Write
  1607                           
  1608                           ;main.c: 183:         UART_Write(num2);
  1609     02AD  1283               	bcf	3,5	;RP0=0, select bank0
  1610     02AE  1303               	bcf	3,6	;RP1=0, select bank0
  1611     02AF  084E               	movf	_num2,w
  1612     02B0  120A  158A  250F  120A  118A  	fcall	_UART_Write
  1613                           
  1614                           ;main.c: 184:         UART_Write(num3);
  1615     02B5  1283               	bcf	3,5	;RP0=0, select bank0
  1616     02B6  1303               	bcf	3,6	;RP1=0, select bank0
  1617     02B7  084D               	movf	_num3,w
  1618     02B8  120A  158A  250F  120A  118A  	fcall	_UART_Write
  1619                           
  1620                           ;main.c: 185:         UART_Write(num4);
  1621     02BD  1283               	bcf	3,5	;RP0=0, select bank0
  1622     02BE  1303               	bcf	3,6	;RP1=0, select bank0
  1623     02BF  084C               	movf	_num4,w
  1624     02C0  120A  158A  250F  120A  118A  	fcall	_UART_Write
  1625                           
  1626                           ;main.c: 186:         UART_Write(num5);
  1627     02C5  1283               	bcf	3,5	;RP0=0, select bank0
  1628     02C6  1303               	bcf	3,6	;RP1=0, select bank0
  1629     02C7  084B               	movf	_num5,w
  1630     02C8  120A  158A  250F  120A  118A  	fcall	_UART_Write
  1631                           
  1632                           ;main.c: 187:         UART_Write('\r');
  1633     02CD  300D               	movlw	13
  1634     02CE  120A  158A  250F  120A  118A  	fcall	_UART_Write
  1635                           
  1636                           ;main.c: 188:         UART_Write('\n');
  1637     02D3  300A               	movlw	10
  1638     02D4  120A  158A  250F  120A  118A  	fcall	_UART_Write
  1639                           
  1640                           ;main.c: 189:         lcdSend(0x01, 0);
  1641     02D9  1283               	bcf	3,5	;RP0=0, select bank0
  1642     02DA  1303               	bcf	3,6	;RP1=0, select bank0
  1643     02DB  01D3               	clrf	lcdSend@tipo
  1644     02DC  3001               	movlw	1
  1645     02DD  120A  158A  253A  120A  118A  	fcall	_lcdSend
  1646                           
  1647                           ;main.c: 190:         lcdSend(num1, 1);
  1648     02E2  1283               	bcf	3,5	;RP0=0, select bank0
  1649     02E3  1303               	bcf	3,6	;RP1=0, select bank0
  1650     02E4  01D3               	clrf	lcdSend@tipo
  1651     02E5  0AD3               	incf	lcdSend@tipo,f
  1652     02E6  084F               	movf	_num1,w
  1653     02E7  120A  158A  253A  120A  118A  	fcall	_lcdSend
  1654                           
  1655                           ;main.c: 191:         lcdSend(num2, 1);
  1656     02EC  1283               	bcf	3,5	;RP0=0, select bank0
  1657     02ED  1303               	bcf	3,6	;RP1=0, select bank0
  1658     02EE  01D3               	clrf	lcdSend@tipo
  1659     02EF  0AD3               	incf	lcdSend@tipo,f
  1660     02F0  084E               	movf	_num2,w
  1661     02F1  120A  158A  253A  120A  118A  	fcall	_lcdSend
  1662                           
  1663                           ;main.c: 192:         lcdSend(num3, 1);
  1664     02F6  1283               	bcf	3,5	;RP0=0, select bank0
  1665     02F7  1303               	bcf	3,6	;RP1=0, select bank0
  1666     02F8  01D3               	clrf	lcdSend@tipo
  1667     02F9  0AD3               	incf	lcdSend@tipo,f
  1668     02FA  084D               	movf	_num3,w
  1669     02FB  120A  158A  253A  120A  118A  	fcall	_lcdSend
  1670                           
  1671                           ;main.c: 193:         lcdSend(num4, 1);
  1672     0300  1283               	bcf	3,5	;RP0=0, select bank0
  1673     0301  1303               	bcf	3,6	;RP1=0, select bank0
  1674     0302  01D3               	clrf	lcdSend@tipo
  1675     0303  0AD3               	incf	lcdSend@tipo,f
  1676     0304  084C               	movf	_num4,w
  1677     0305  120A  158A  253A  120A  118A  	fcall	_lcdSend
  1678                           
  1679                           ;main.c: 194:         lcdSend(num5, 1);
  1680     030A  1283               	bcf	3,5	;RP0=0, select bank0
  1681     030B  1303               	bcf	3,6	;RP1=0, select bank0
  1682     030C  01D3               	clrf	lcdSend@tipo
  1683     030D  0AD3               	incf	lcdSend@tipo,f
  1684     030E  084B               	movf	_num5,w
  1685     030F  120A  158A  253A  120A  118A  	fcall	_lcdSend
  1686     0314                     l3146:
  1687                           
  1688                           ;main.c: 195:         keypressed = 0;
  1689     0314  1283               	bcf	3,5	;RP0=0, select bank0
  1690     0315  1303               	bcf	3,6	;RP1=0, select bank0
  1691     0316  01CA               	clrf	_keypressed
  1692     0317                     l3148:
  1693                           
  1694                           ;main.c: 196:         RS485_RxEnable();
  1695     0317  120A  158A  2502  120A  118A  	fcall	_RS485_RxEnable
  1696     031C                     l3150:
  1697                           
  1698                           ;main.c: 197:         flag = 1;
  1699     031C  3001               	movlw	1
  1700     031D  1283               	bcf	3,5	;RP0=0, select bank0
  1701     031E  1303               	bcf	3,6	;RP1=0, select bank0
  1702     031F  00C0               	movwf	_flag
  1703     0320  3000               	movlw	0
  1704     0321  00C1               	movwf	_flag+1
  1705     0322                     l3152:
  1706                           
  1707                           ;main.c: 198:         UART_Read1();
  1708     0322  120A  118A  2330  120A  118A  	fcall	_UART_Read1
  1709     0327                     l3154:
  1710                           
  1711                           ;main.c: 199:         UART_Read2();
  1712     0327  120A  118A  254A  120A  118A  	fcall	_UART_Read2
  1713     032C  2846               	goto	l2970
  1714     032D  120A  118A  2810   	ljmp	start
  1715     0330                     __end_of_main:
  1716                           
  1717                           	psect	text1
  1718     0E89                     __ptext1:	
  1719 ;; *************** function _initLCD *****************
  1720 ;; Defined at:
  1721 ;;		line 411 in file "main.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;		None
  1724 ;; Auto vars:     Size  Location     Type
  1725 ;;		None
  1726 ;; Return value:  Size  Location     Type
  1727 ;;                  1    wreg      void 
  1728 ;; Registers used:
  1729 ;;		wreg, status,2, status,0, pclath, cstack
  1730 ;; Tracked objects:
  1731 ;;		On entry : 0/0
  1732 ;;		On exit  : 0/0
  1733 ;;		Unchanged: 0/0
  1734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1735 ;;      Params:         0       0       0       0       0
  1736 ;;      Locals:         0       0       0       0       0
  1737 ;;      Temps:          0       2       0       0       0
  1738 ;;      Totals:         0       2       0       0       0
  1739 ;;Total ram usage:        2 bytes
  1740 ;; Hardware stack levels used: 1
  1741 ;; Hardware stack levels required when called: 3
  1742 ;; This function calls:
  1743 ;;		_lcdSend
  1744 ;; This function is called by:
  1745 ;;		_main
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749     0E89                     _initLCD:	
  1750                           ;psect for function _initLCD
  1751                           
  1752     0E89                     l2628:	
  1753                           ;incstack = 0
  1754                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  1755                           
  1756                           
  1757                           ;main.c: 412:     PORTEbits.RE2 = 0;
  1758     0E89  1283               	bcf	3,5	;RP0=0, select bank0
  1759     0E8A  1303               	bcf	3,6	;RP1=0, select bank0
  1760     0E8B  1109               	bcf	9,2	;volatile
  1761                           
  1762                           ;main.c: 413:     PORTEbits.RE1 = 0;
  1763     0E8C  1089               	bcf	9,1	;volatile
  1764     0E8D                     l2630:
  1765                           
  1766                           ;main.c: 414:     _delay((unsigned long)((20)*(20000000/4000.0)));
  1767     0E8D  3082               	movlw	130
  1768     0E8E  1283               	bcf	3,5	;RP0=0, select bank0
  1769     0E8F  1303               	bcf	3,6	;RP1=0, select bank0
  1770     0E90  00D6               	movwf	??_initLCD+1
  1771     0E91  30DD               	movlw	221
  1772     0E92  00D5               	movwf	??_initLCD
  1773     0E93                     u3887:
  1774     0E93  0BD5               	decfsz	??_initLCD,f
  1775     0E94  2E93               	goto	u3887
  1776     0E95  0BD6               	decfsz	??_initLCD+1,f
  1777     0E96  2E93               	goto	u3887
  1778     0E97                     l2632:
  1779                           
  1780                           ;main.c: 415:     PORTEbits.RE1 = 1;
  1781     0E97  1283               	bcf	3,5	;RP0=0, select bank0
  1782     0E98  1303               	bcf	3,6	;RP1=0, select bank0
  1783     0E99  1489               	bsf	9,1	;volatile
  1784     0E9A                     l2634:
  1785                           
  1786                           ;main.c: 416:     lcdSend(0x38, 0);
  1787     0E9A  01D3               	clrf	lcdSend@tipo
  1788     0E9B  3038               	movlw	56
  1789     0E9C  120A  158A  253A  120A  158A  	fcall	_lcdSend
  1790     0EA1                     l2636:
  1791                           
  1792                           ;main.c: 417:     _delay((unsigned long)((5)*(20000000/4000.0)));
  1793     0EA1  3021               	movlw	33
  1794     0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  1795     0EA3  1303               	bcf	3,6	;RP1=0, select bank0
  1796     0EA4  00D6               	movwf	??_initLCD+1
  1797     0EA5  3075               	movlw	117
  1798     0EA6  00D5               	movwf	??_initLCD
  1799     0EA7                     u3897:
  1800     0EA7  0BD5               	decfsz	??_initLCD,f
  1801     0EA8  2EA7               	goto	u3897
  1802     0EA9  0BD6               	decfsz	??_initLCD+1,f
  1803     0EAA  2EA7               	goto	u3897
  1804     0EAB  2EAC               	nop2
  1805                           
  1806                           ;main.c: 418:     lcdSend(0x38, 0);
  1807     0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  1808     0EAD  1303               	bcf	3,6	;RP1=0, select bank0
  1809     0EAE  01D3               	clrf	lcdSend@tipo
  1810     0EAF  3038               	movlw	56
  1811     0EB0  120A  158A  253A  120A  158A  	fcall	_lcdSend
  1812     0EB5                     l2638:
  1813                           
  1814                           ;main.c: 419:     _delay((unsigned long)((1)*(20000000/4000.0)));
  1815     0EB5  3007               	movlw	7
  1816     0EB6  1283               	bcf	3,5	;RP0=0, select bank0
  1817     0EB7  1303               	bcf	3,6	;RP1=0, select bank0
  1818     0EB8  00D6               	movwf	??_initLCD+1
  1819     0EB9  307C               	movlw	124
  1820     0EBA  00D5               	movwf	??_initLCD
  1821     0EBB                     u3907:
  1822     0EBB  0BD5               	decfsz	??_initLCD,f
  1823     0EBC  2EBB               	goto	u3907
  1824     0EBD  0BD6               	decfsz	??_initLCD+1,f
  1825     0EBE  2EBB               	goto	u3907
  1826     0EBF  0000               	nop
  1827     0EC0                     l2640:
  1828                           
  1829                           ;main.c: 420:     lcdSend(0x38, 0);
  1830     0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  1831     0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  1832     0EC2  01D3               	clrf	lcdSend@tipo
  1833     0EC3  3038               	movlw	56
  1834     0EC4  120A  158A  253A  120A  158A  	fcall	_lcdSend
  1835     0EC9                     l2642:
  1836                           
  1837                           ;main.c: 421:     lcdSend(0x08, 0);
  1838     0EC9  1283               	bcf	3,5	;RP0=0, select bank0
  1839     0ECA  1303               	bcf	3,6	;RP1=0, select bank0
  1840     0ECB  01D3               	clrf	lcdSend@tipo
  1841     0ECC  3008               	movlw	8
  1842     0ECD  120A  158A  253A  120A  158A  	fcall	_lcdSend
  1843     0ED2                     l2644:
  1844                           
  1845                           ;main.c: 422:     lcdSend(0x0F, 0);
  1846     0ED2  1283               	bcf	3,5	;RP0=0, select bank0
  1847     0ED3  1303               	bcf	3,6	;RP1=0, select bank0
  1848     0ED4  01D3               	clrf	lcdSend@tipo
  1849     0ED5  300F               	movlw	15
  1850     0ED6  120A  158A  253A  120A  158A  	fcall	_lcdSend
  1851     0EDB                     l2646:
  1852                           
  1853                           ;main.c: 423:     lcdSend(0x01, 0);
  1854     0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  1855     0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  1856     0EDD  01D3               	clrf	lcdSend@tipo
  1857     0EDE  3001               	movlw	1
  1858     0EDF  120A  158A  253A  120A  158A  	fcall	_lcdSend
  1859     0EE4                     l2648:
  1860                           
  1861                           ;main.c: 424:     lcdSend(0x0C, 0);
  1862     0EE4  1283               	bcf	3,5	;RP0=0, select bank0
  1863     0EE5  1303               	bcf	3,6	;RP1=0, select bank0
  1864     0EE6  01D3               	clrf	lcdSend@tipo
  1865     0EE7  300C               	movlw	12
  1866     0EE8  120A  158A  253A  120A  158A  	fcall	_lcdSend
  1867     0EED                     l2650:
  1868                           
  1869                           ;main.c: 425:     lcdSend(0x80, 0);
  1870     0EED  1283               	bcf	3,5	;RP0=0, select bank0
  1871     0EEE  1303               	bcf	3,6	;RP1=0, select bank0
  1872     0EEF  01D3               	clrf	lcdSend@tipo
  1873     0EF0  3080               	movlw	128
  1874     0EF1  120A  158A  253A  120A  158A  	fcall	_lcdSend
  1875     0EF6                     l239:
  1876     0EF6  0008               	return
  1877     0EF7                     __end_of_initLCD:
  1878                           
  1879                           	psect	text2
  1880     054A                     __ptext2:	
  1881 ;; *************** function _UART_Read2 *****************
  1882 ;; Defined at:
  1883 ;;		line 237 in file "main.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;		None
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;  trash           1    0        unsigned char 
  1888 ;; Return value:  Size  Location     Type
  1889 ;;                  1    wreg      unsigned char 
  1890 ;; Registers used:
  1891 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1892 ;; Tracked objects:
  1893 ;;		On entry : 0/0
  1894 ;;		On exit  : 0/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1897 ;;      Params:         0       0       0       0       0
  1898 ;;      Locals:         0       0       0       0       0
  1899 ;;      Temps:          0       0       3       0       0
  1900 ;;      Totals:         0       0       3       0       0
  1901 ;;Total ram usage:        3 bytes
  1902 ;; Hardware stack levels used: 1
  1903 ;; Hardware stack levels required when called: 5
  1904 ;; This function calls:
  1905 ;;		_intToString
  1906 ;;		_lcdPrint
  1907 ;;		_lcdSend
  1908 ;; This function is called by:
  1909 ;;		_main
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913     054A                     _UART_Read2:	
  1914                           ;psect for function _UART_Read2
  1915                           
  1916     054A                     l2864:	
  1917                           ;incstack = 0
  1918                           ; Regs used in _UART_Read2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1919                           
  1920                           
  1921                           ;main.c: 238:     char trash;;main.c: 239:     while (countdown != 0){
  1922     054A  2ECC               	goto	l2946
  1923     054B                     l206:
  1924                           
  1925                           ;main.c: 240:         if (!RCIF){
  1926     054B  1283               	bcf	3,5	;RP0=0, select bank0
  1927     054C  1303               	bcf	3,6	;RP1=0, select bank0
  1928     054D  1A8C               	btfsc	12,5	;volatile
  1929     054E  2D50               	goto	u3281
  1930     054F  2D51               	goto	u3280
  1931     0550                     u3281:
  1932     0550  2EC6               	goto	l2944
  1933     0551                     u3280:
  1934     0551                     l2866:
  1935                           
  1936                           ;main.c: 241:             lcdSend(0x01, 0);
  1937     0551  01D3               	clrf	lcdSend@tipo
  1938     0552  3001               	movlw	1
  1939     0553  120A  158A  253A  120A  118A  	fcall	_lcdSend
  1940     0558                     l2868:
  1941                           
  1942                           ;main.c: 242:             lcdPrint("Attendere");
  1943     0558  306E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1944     0559  1283               	bcf	3,5	;RP0=0, select bank0
  1945     055A  1303               	bcf	3,6	;RP1=0, select bank0
  1946     055B  00D5               	movwf	lcdPrint@str
  1947     055C  3080               	movlw	128
  1948     055D  00D6               	movwf	lcdPrint@str+1
  1949     055E  120A  158A  257D  120A  118A  	fcall	_lcdPrint
  1950     0563                     l2870:
  1951                           
  1952                           ;main.c: 243:             intToString(countdown, print_countdown);
  1953     0563  0879               	movf	_countdown,w
  1954     0564  1683               	bsf	3,5	;RP0=1, select bank1
  1955     0565  1303               	bcf	3,6	;RP1=0, select bank1
  1956     0566  00A0               	movwf	??_UART_Read2^(0+128)
  1957     0567  01A1               	clrf	(??_UART_Read2^(0+128)+1)
  1958     0568  0820               	movf	??_UART_Read2^(0+128),w
  1959     0569  1283               	bcf	3,5	;RP0=0, select bank0
  1960     056A  1303               	bcf	3,6	;RP1=0, select bank0
  1961     056B  00E6               	movwf	intToString@n
  1962     056C  1683               	bsf	3,5	;RP0=1, select bank1
  1963     056D  1303               	bcf	3,6	;RP1=0, select bank1
  1964     056E  0821               	movf	(??_UART_Read2+1)^(0+128),w
  1965     056F  1283               	bcf	3,5	;RP0=0, select bank0
  1966     0570  1303               	bcf	3,6	;RP1=0, select bank0
  1967     0571  00E7               	movwf	intToString@n+1
  1968     0572  3050               	movlw	(low (_print_countdown| 0))& (0+255)
  1969     0573  00E8               	movwf	intToString@str
  1970     0574  120A  158A  26F7  120A  118A  	fcall	_intToString
  1971     0579                     l2872:
  1972                           
  1973                           ;main.c: 244:             lcdSend(0xC0, 0);
  1974     0579  1283               	bcf	3,5	;RP0=0, select bank0
  1975     057A  1303               	bcf	3,6	;RP1=0, select bank0
  1976     057B  01D3               	clrf	lcdSend@tipo
  1977     057C  30C0               	movlw	192
  1978     057D  120A  158A  253A  120A  118A  	fcall	_lcdSend
  1979     0582                     l2874:
  1980                           
  1981                           ;main.c: 245:             lcdPrint(print_countdown);
  1982     0582  3050               	movlw	(low (_print_countdown| 0))& (0+255)
  1983     0583  1283               	bcf	3,5	;RP0=0, select bank0
  1984     0584  1303               	bcf	3,6	;RP1=0, select bank0
  1985     0585  00D5               	movwf	lcdPrint@str
  1986     0586  3000               	movlw	0
  1987     0587  00D6               	movwf	lcdPrint@str+1
  1988     0588  120A  158A  257D  120A  118A  	fcall	_lcdPrint
  1989     058D                     l2876:
  1990                           
  1991                           ;main.c: 246:             countdown --;
  1992     058D  3001               	movlw	1
  1993     058E  02F9               	subwf	_countdown,f
  1994     058F                     l2878:
  1995                           
  1996                           ;main.c: 247:             _delay((unsigned long)((60)*(20000000/4000.0)));
  1997     058F  3002               	movlw	2
  1998     0590  1683               	bsf	3,5	;RP0=1, select bank1
  1999     0591  1303               	bcf	3,6	;RP1=0, select bank1
  2000     0592  00A2               	movwf	(??_UART_Read2^(0+128)+2)
  2001     0593  3086               	movlw	134
  2002     0594  00A1               	movwf	(??_UART_Read2^(0+128)+1)
  2003     0595  3098               	movlw	152
  2004     0596  00A0               	movwf	??_UART_Read2^(0+128)
  2005     0597                     u3917:
  2006     0597  0BA0               	decfsz	??_UART_Read2^(0+128),f
  2007     0598  2D97               	goto	u3917
  2008     0599  0BA1               	decfsz	(??_UART_Read2^(0+128)+1),f
  2009     059A  2D97               	goto	u3917
  2010     059B  0BA2               	decfsz	(??_UART_Read2^(0+128)+2),f
  2011     059C  2D97               	goto	u3917
  2012     059D  0000               	nop
  2013                           
  2014                           ;main.c: 248:         }
  2015     059E  2ECC               	goto	l2946
  2016     059F                     l2880:
  2017                           
  2018                           ;main.c: 251:                 intToString(countdown, print_countdown);
  2019     059F  0879               	movf	_countdown,w
  2020     05A0  1683               	bsf	3,5	;RP0=1, select bank1
  2021     05A1  1303               	bcf	3,6	;RP1=0, select bank1
  2022     05A2  00A0               	movwf	??_UART_Read2^(0+128)
  2023     05A3  01A1               	clrf	(??_UART_Read2^(0+128)+1)
  2024     05A4  0820               	movf	??_UART_Read2^(0+128),w
  2025     05A5  1283               	bcf	3,5	;RP0=0, select bank0
  2026     05A6  1303               	bcf	3,6	;RP1=0, select bank0
  2027     05A7  00E6               	movwf	intToString@n
  2028     05A8  1683               	bsf	3,5	;RP0=1, select bank1
  2029     05A9  1303               	bcf	3,6	;RP1=0, select bank1
  2030     05AA  0821               	movf	(??_UART_Read2+1)^(0+128),w
  2031     05AB  1283               	bcf	3,5	;RP0=0, select bank0
  2032     05AC  1303               	bcf	3,6	;RP1=0, select bank0
  2033     05AD  00E7               	movwf	intToString@n+1
  2034     05AE  3050               	movlw	(low (_print_countdown| 0))& (0+255)
  2035     05AF  00E8               	movwf	intToString@str
  2036     05B0  120A  158A  26F7  120A  118A  	fcall	_intToString
  2037     05B5                     l2882:
  2038                           
  2039                           ;main.c: 252:                 lcdSend(0xC0, 0);
  2040     05B5  1283               	bcf	3,5	;RP0=0, select bank0
  2041     05B6  1303               	bcf	3,6	;RP1=0, select bank0
  2042     05B7  01D3               	clrf	lcdSend@tipo
  2043     05B8  30C0               	movlw	192
  2044     05B9  120A  158A  253A  120A  118A  	fcall	_lcdSend
  2045     05BE                     l2884:
  2046                           
  2047                           ;main.c: 253:                 lcdPrint(print_countdown);
  2048     05BE  3050               	movlw	(low (_print_countdown| 0))& (0+255)
  2049     05BF  1283               	bcf	3,5	;RP0=0, select bank0
  2050     05C0  1303               	bcf	3,6	;RP1=0, select bank0
  2051     05C1  00D5               	movwf	lcdPrint@str
  2052     05C2  3000               	movlw	0
  2053     05C3  00D6               	movwf	lcdPrint@str+1
  2054     05C4  120A  158A  257D  120A  118A  	fcall	_lcdPrint
  2055     05C9                     l2886:
  2056                           
  2057                           ;main.c: 254:                 countdown --;
  2058     05C9  3001               	movlw	1
  2059     05CA  02F9               	subwf	_countdown,f
  2060     05CB                     l2888:
  2061                           
  2062                           ;main.c: 255:                 _delay((unsigned long)((60)*(20000000/4000.0)));
  2063     05CB  3002               	movlw	2
  2064     05CC  1683               	bsf	3,5	;RP0=1, select bank1
  2065     05CD  1303               	bcf	3,6	;RP1=0, select bank1
  2066     05CE  00A2               	movwf	(??_UART_Read2^(0+128)+2)
  2067     05CF  3086               	movlw	134
  2068     05D0  00A1               	movwf	(??_UART_Read2^(0+128)+1)
  2069     05D1  3098               	movlw	152
  2070     05D2  00A0               	movwf	??_UART_Read2^(0+128)
  2071     05D3                     u3927:
  2072     05D3  0BA0               	decfsz	??_UART_Read2^(0+128),f
  2073     05D4  2DD3               	goto	u3927
  2074     05D5  0BA1               	decfsz	(??_UART_Read2^(0+128)+1),f
  2075     05D6  2DD3               	goto	u3927
  2076     05D7  0BA2               	decfsz	(??_UART_Read2^(0+128)+2),f
  2077     05D8  2DD3               	goto	u3927
  2078     05D9  0000               	nop
  2079     05DA                     l2890:
  2080                           
  2081                           ;main.c: 256:                 if(RCREG == id1){
  2082     05DA  1283               	bcf	3,5	;RP0=0, select bank0
  2083     05DB  1303               	bcf	3,6	;RP1=0, select bank0
  2084     05DC  031A               	decf	26,w	;volatile
  2085     05DD  1D03               	btfss	3,2
  2086     05DE  2DE0               	goto	u3291
  2087     05DF  2DE1               	goto	u3290
  2088     05E0                     u3291:
  2089     05E0  2EC2               	goto	l211
  2090     05E1                     u3290:
  2091     05E1                     l2892:
  2092                           
  2093                           ;main.c: 257:                     lcdSend(0x01, 0);
  2094     05E1  01D3               	clrf	lcdSend@tipo
  2095     05E2  3001               	movlw	1
  2096     05E3  120A  158A  253A  120A  118A  	fcall	_lcdSend
  2097                           
  2098                           ;main.c: 258:                     lcdSend(RCREG, 1);
  2099     05E8  1283               	bcf	3,5	;RP0=0, select bank0
  2100     05E9  1303               	bcf	3,6	;RP1=0, select bank0
  2101     05EA  01D3               	clrf	lcdSend@tipo
  2102     05EB  0AD3               	incf	lcdSend@tipo,f
  2103     05EC  081A               	movf	26,w	;volatile
  2104     05ED  120A  158A  253A  120A  118A  	fcall	_lcdSend
  2105     05F2                     l2894:
  2106                           
  2107                           ;main.c: 259:                     RCIF = 0;
  2108     05F2  1283               	bcf	3,5	;RP0=0, select bank0
  2109     05F3  1303               	bcf	3,6	;RP1=0, select bank0
  2110     05F4  128C               	bcf	12,5	;volatile
  2111     05F5                     l2896:
  2112     05F5  081A               	movf	26,w	;volatile
  2113                           
  2114                           ;main.c: 261:                     while (countdown != 0){
  2115     05F6  2EBD               	goto	l2940
  2116     05F7                     l213:
  2117                           
  2118                           ;main.c: 262:                         if (!RCIF){
  2119     05F7  1283               	bcf	3,5	;RP0=0, select bank0
  2120     05F8  1303               	bcf	3,6	;RP1=0, select bank0
  2121     05F9  1A8C               	btfsc	12,5	;volatile
  2122     05FA  2DFC               	goto	u3301
  2123     05FB  2DFD               	goto	u3300
  2124     05FC                     u3301:
  2125     05FC  2EB8               	goto	l2938
  2126     05FD                     u3300:
  2127     05FD                     l2898:
  2128                           
  2129                           ;main.c: 263:                             intToString(countdown, print_countdown);
  2130     05FD  0879               	movf	_countdown,w
  2131     05FE  1683               	bsf	3,5	;RP0=1, select bank1
  2132     05FF  1303               	bcf	3,6	;RP1=0, select bank1
  2133     0600  00A0               	movwf	??_UART_Read2^(0+128)
  2134     0601  01A1               	clrf	(??_UART_Read2^(0+128)+1)
  2135     0602  0820               	movf	??_UART_Read2^(0+128),w
  2136     0603  1283               	bcf	3,5	;RP0=0, select bank0
  2137     0604  1303               	bcf	3,6	;RP1=0, select bank0
  2138     0605  00E6               	movwf	intToString@n
  2139     0606  1683               	bsf	3,5	;RP0=1, select bank1
  2140     0607  1303               	bcf	3,6	;RP1=0, select bank1
  2141     0608  0821               	movf	(??_UART_Read2+1)^(0+128),w
  2142     0609  1283               	bcf	3,5	;RP0=0, select bank0
  2143     060A  1303               	bcf	3,6	;RP1=0, select bank0
  2144     060B  00E7               	movwf	intToString@n+1
  2145     060C  3050               	movlw	(low (_print_countdown| 0))& (0+255)
  2146     060D  00E8               	movwf	intToString@str
  2147     060E  120A  158A  26F7  120A  118A  	fcall	_intToString
  2148     0613                     l2900:
  2149                           
  2150                           ;main.c: 264:                             lcdSend(0xC0, 0);
  2151     0613  1283               	bcf	3,5	;RP0=0, select bank0
  2152     0614  1303               	bcf	3,6	;RP1=0, select bank0
  2153     0615  01D3               	clrf	lcdSend@tipo
  2154     0616  30C0               	movlw	192
  2155     0617  120A  158A  253A  120A  118A  	fcall	_lcdSend
  2156     061C                     l2902:
  2157                           
  2158                           ;main.c: 265:                             lcdPrint(print_countdown);
  2159     061C  3050               	movlw	(low (_print_countdown| 0))& (0+255)
  2160     061D  1283               	bcf	3,5	;RP0=0, select bank0
  2161     061E  1303               	bcf	3,6	;RP1=0, select bank0
  2162     061F  00D5               	movwf	lcdPrint@str
  2163     0620  3000               	movlw	0
  2164     0621  00D6               	movwf	lcdPrint@str+1
  2165     0622  120A  158A  257D  120A  118A  	fcall	_lcdPrint
  2166     0627                     l2904:
  2167                           
  2168                           ;main.c: 266:                             countdown --;
  2169     0627  3001               	movlw	1
  2170     0628  02F9               	subwf	_countdown,f
  2171     0629                     l2906:
  2172                           
  2173                           ;main.c: 267:                             _delay((unsigned long)((60)*(20000000/4000.0))
      +                          );
  2174     0629  3002               	movlw	2
  2175     062A  1683               	bsf	3,5	;RP0=1, select bank1
  2176     062B  1303               	bcf	3,6	;RP1=0, select bank1
  2177     062C  00A2               	movwf	(??_UART_Read2^(0+128)+2)
  2178     062D  3086               	movlw	134
  2179     062E  00A1               	movwf	(??_UART_Read2^(0+128)+1)
  2180     062F  3098               	movlw	152
  2181     0630  00A0               	movwf	??_UART_Read2^(0+128)
  2182     0631                     u3937:
  2183     0631  0BA0               	decfsz	??_UART_Read2^(0+128),f
  2184     0632  2E31               	goto	u3937
  2185     0633  0BA1               	decfsz	(??_UART_Read2^(0+128)+1),f
  2186     0634  2E31               	goto	u3937
  2187     0635  0BA2               	decfsz	(??_UART_Read2^(0+128)+2),f
  2188     0636  2E31               	goto	u3937
  2189     0637  0000               	nop
  2190                           
  2191                           ;main.c: 268:                         }
  2192     0638  2EBD               	goto	l2940
  2193     0639                     l2908:
  2194                           
  2195                           ;main.c: 271:                                 intToString(countdown, print_countdown);
  2196     0639  0879               	movf	_countdown,w
  2197     063A  1683               	bsf	3,5	;RP0=1, select bank1
  2198     063B  1303               	bcf	3,6	;RP1=0, select bank1
  2199     063C  00A0               	movwf	??_UART_Read2^(0+128)
  2200     063D  01A1               	clrf	(??_UART_Read2^(0+128)+1)
  2201     063E  0820               	movf	??_UART_Read2^(0+128),w
  2202     063F  1283               	bcf	3,5	;RP0=0, select bank0
  2203     0640  1303               	bcf	3,6	;RP1=0, select bank0
  2204     0641  00E6               	movwf	intToString@n
  2205     0642  1683               	bsf	3,5	;RP0=1, select bank1
  2206     0643  1303               	bcf	3,6	;RP1=0, select bank1
  2207     0644  0821               	movf	(??_UART_Read2+1)^(0+128),w
  2208     0645  1283               	bcf	3,5	;RP0=0, select bank0
  2209     0646  1303               	bcf	3,6	;RP1=0, select bank0
  2210     0647  00E7               	movwf	intToString@n+1
  2211     0648  3050               	movlw	(low (_print_countdown| 0))& (0+255)
  2212     0649  00E8               	movwf	intToString@str
  2213     064A  120A  158A  26F7  120A  118A  	fcall	_intToString
  2214     064F                     l2910:
  2215                           
  2216                           ;main.c: 272:                                 lcdSend(0xC0, 0);
  2217     064F  1283               	bcf	3,5	;RP0=0, select bank0
  2218     0650  1303               	bcf	3,6	;RP1=0, select bank0
  2219     0651  01D3               	clrf	lcdSend@tipo
  2220     0652  30C0               	movlw	192
  2221     0653  120A  158A  253A  120A  118A  	fcall	_lcdSend
  2222     0658                     l2912:
  2223                           
  2224                           ;main.c: 273:                                 lcdPrint(print_countdown);
  2225     0658  3050               	movlw	(low (_print_countdown| 0))& (0+255)
  2226     0659  1283               	bcf	3,5	;RP0=0, select bank0
  2227     065A  1303               	bcf	3,6	;RP1=0, select bank0
  2228     065B  00D5               	movwf	lcdPrint@str
  2229     065C  3000               	movlw	0
  2230     065D  00D6               	movwf	lcdPrint@str+1
  2231     065E  120A  158A  257D  120A  118A  	fcall	_lcdPrint
  2232     0663                     l2914:
  2233                           
  2234                           ;main.c: 274:                                 countdown --;
  2235     0663  3001               	movlw	1
  2236     0664  02F9               	subwf	_countdown,f
  2237     0665                     l2916:
  2238                           
  2239                           ;main.c: 275:                                 _delay((unsigned long)((60)*(20000000/4000
      +                          .0)));
  2240     0665  3002               	movlw	2
  2241     0666  1683               	bsf	3,5	;RP0=1, select bank1
  2242     0667  1303               	bcf	3,6	;RP1=0, select bank1
  2243     0668  00A2               	movwf	(??_UART_Read2^(0+128)+2)
  2244     0669  3086               	movlw	134
  2245     066A  00A1               	movwf	(??_UART_Read2^(0+128)+1)
  2246     066B  3098               	movlw	152
  2247     066C  00A0               	movwf	??_UART_Read2^(0+128)
  2248     066D                     u3947:
  2249     066D  0BA0               	decfsz	??_UART_Read2^(0+128),f
  2250     066E  2E6D               	goto	u3947
  2251     066F  0BA1               	decfsz	(??_UART_Read2^(0+128)+1),f
  2252     0670  2E6D               	goto	u3947
  2253     0671  0BA2               	decfsz	(??_UART_Read2^(0+128)+2),f
  2254     0672  2E6D               	goto	u3947
  2255     0673  0000               	nop
  2256     0674                     l2918:
  2257                           
  2258                           ;main.c: 276:                                 if(RCREG == 0x01){
  2259     0674  1283               	bcf	3,5	;RP0=0, select bank0
  2260     0675  1303               	bcf	3,6	;RP1=0, select bank0
  2261     0676  031A               	decf	26,w	;volatile
  2262     0677  1D03               	btfss	3,2
  2263     0678  2E7A               	goto	u3311
  2264     0679  2E7B               	goto	u3310
  2265     067A                     u3311:
  2266     067A  2EB6               	goto	l218
  2267     067B                     u3310:
  2268     067B                     l2920:
  2269                           
  2270                           ;main.c: 277:                                     lcdSend(0x80 + 1, 0);
  2271     067B  01D3               	clrf	lcdSend@tipo
  2272     067C  3081               	movlw	129
  2273     067D  120A  158A  253A  120A  118A  	fcall	_lcdSend
  2274                           
  2275                           ;main.c: 278:                                     lcdSend(RCREG, 1);
  2276     0682  1283               	bcf	3,5	;RP0=0, select bank0
  2277     0683  1303               	bcf	3,6	;RP1=0, select bank0
  2278     0684  01D3               	clrf	lcdSend@tipo
  2279     0685  0AD3               	incf	lcdSend@tipo,f
  2280     0686  081A               	movf	26,w	;volatile
  2281     0687  120A  158A  253A  120A  118A  	fcall	_lcdSend
  2282     068C                     l2922:
  2283                           
  2284                           ;main.c: 279:                                     RCIF = 0;
  2285     068C  1283               	bcf	3,5	;RP0=0, select bank0
  2286     068D  1303               	bcf	3,6	;RP1=0, select bank0
  2287     068E  128C               	bcf	12,5	;volatile
  2288     068F                     l2924:
  2289     068F  081A               	movf	26,w	;volatile
  2290     0690                     l2926:
  2291                           
  2292                           ;main.c: 281:                                     countdown = 60;
  2293     0690  303C               	movlw	60
  2294     0691  00F9               	movwf	_countdown
  2295                           
  2296                           ;main.c: 282:                                     lcdSend(0xC0, 0);
  2297     0692  01D3               	clrf	lcdSend@tipo
  2298     0693  30C0               	movlw	192
  2299     0694  120A  158A  253A  120A  118A  	fcall	_lcdSend
  2300     0699                     l2928:
  2301                           
  2302                           ;main.c: 283:                                     lcdPrint("APRI PORTA");
  2303     0699  3063               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2304     069A  1283               	bcf	3,5	;RP0=0, select bank0
  2305     069B  1303               	bcf	3,6	;RP1=0, select bank0
  2306     069C  00D5               	movwf	lcdPrint@str
  2307     069D  3080               	movlw	128
  2308     069E  00D6               	movwf	lcdPrint@str+1
  2309     069F  120A  158A  257D  120A  118A  	fcall	_lcdPrint
  2310     06A4                     l2930:
  2311                           
  2312                           ;main.c: 284:                                     _delay((unsigned long)((200)*(20000000
      +                          /4000.0)));
  2313     06A4  3006               	movlw	6
  2314     06A5  1683               	bsf	3,5	;RP0=1, select bank1
  2315     06A6  1303               	bcf	3,6	;RP1=0, select bank1
  2316     06A7  00A2               	movwf	(??_UART_Read2^(0+128)+2)
  2317     06A8  3013               	movlw	19
  2318     06A9  00A1               	movwf	(??_UART_Read2^(0+128)+1)
  2319     06AA  30AD               	movlw	173
  2320     06AB  00A0               	movwf	??_UART_Read2^(0+128)
  2321     06AC                     u3957:
  2322     06AC  0BA0               	decfsz	??_UART_Read2^(0+128),f
  2323     06AD  2EAC               	goto	u3957
  2324     06AE  0BA1               	decfsz	(??_UART_Read2^(0+128)+1),f
  2325     06AF  2EAC               	goto	u3957
  2326     06B0  0BA2               	decfsz	(??_UART_Read2^(0+128)+2),f
  2327     06B1  2EAC               	goto	u3957
  2328     06B2                     l2932:
  2329                           
  2330                           ;main.c: 285:                                     return RCREG;;	Return value of _UART_R
      +                          ead2 is never used
  2331     06B2  1283               	bcf	3,5	;RP0=0, select bank0
  2332     06B3  1303               	bcf	3,6	;RP1=0, select bank0
  2333     06B4  081A               	movf	26,w	;volatile
  2334     06B5  2EEB               	goto	l219
  2335     06B6                     l218:	
  2336                           ;main.c: 286:                                 }
  2337                           
  2338                           
  2339                           ;main.c: 313:                                 RCIF = 0;
  2340     06B6  128C               	bcf	12,5	;volatile
  2341     06B7                     l2936:
  2342     06B7  081A               	movf	26,w	;volatile
  2343     06B8                     l2938:
  2344                           
  2345                           ;main.c: 270:                             while (countdown != 0){
  2346     06B8  0879               	movf	_countdown,w
  2347     06B9  1D03               	btfss	3,2
  2348     06BA  2EBC               	goto	u3321
  2349     06BB  2EBD               	goto	u3320
  2350     06BC                     u3321:
  2351     06BC  2E39               	goto	l2908
  2352     06BD                     u3320:
  2353     06BD                     l2940:
  2354                           
  2355                           ;main.c: 261:                     while (countdown != 0){
  2356     06BD  0879               	movf	_countdown,w
  2357     06BE  1D03               	btfss	3,2
  2358     06BF  2EC1               	goto	u3331
  2359     06C0  2EC2               	goto	u3330
  2360     06C1                     u3331:
  2361     06C1  2DF7               	goto	l213
  2362     06C2                     u3330:
  2363     06C2                     l211:	
  2364                           ;main.c: 318:                 }
  2365                           
  2366                           
  2367                           ;main.c: 319:                 RCIF = 0;
  2368     06C2  1283               	bcf	3,5	;RP0=0, select bank0
  2369     06C3  1303               	bcf	3,6	;RP1=0, select bank0
  2370     06C4  128C               	bcf	12,5	;volatile
  2371     06C5                     l2942:
  2372     06C5  081A               	movf	26,w	;volatile
  2373     06C6                     l2944:
  2374                           
  2375                           ;main.c: 250:             while (countdown != 0){
  2376     06C6  0879               	movf	_countdown,w
  2377     06C7  1D03               	btfss	3,2
  2378     06C8  2ECA               	goto	u3341
  2379     06C9  2ECB               	goto	u3340
  2380     06CA                     u3341:
  2381     06CA  2D9F               	goto	l2880
  2382     06CB                     u3340:
  2383     06CB  2D4A               	goto	l2864
  2384     06CC                     l2946:
  2385                           
  2386                           ;main.c: 239:     while (countdown != 0){
  2387     06CC  0879               	movf	_countdown,w
  2388     06CD  1D03               	btfss	3,2
  2389     06CE  2ED0               	goto	u3351
  2390     06CF  2ED1               	goto	u3350
  2391     06D0                     u3351:
  2392     06D0  2D4B               	goto	l206
  2393     06D1                     u3350:
  2394     06D1                     l2948:
  2395                           
  2396                           ;main.c: 324:     lcdSend(0x01, 0);
  2397     06D1  1283               	bcf	3,5	;RP0=0, select bank0
  2398     06D2  1303               	bcf	3,6	;RP1=0, select bank0
  2399     06D3  01D3               	clrf	lcdSend@tipo
  2400     06D4  3001               	movlw	1
  2401     06D5  120A  158A  253A  120A  118A  	fcall	_lcdSend
  2402     06DA                     l2950:
  2403                           
  2404                           ;main.c: 325:     lcdPrint("Tempo Scaduto");
  2405     06DA  3031               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2406     06DB  1283               	bcf	3,5	;RP0=0, select bank0
  2407     06DC  1303               	bcf	3,6	;RP1=0, select bank0
  2408     06DD  00D5               	movwf	lcdPrint@str
  2409     06DE  3080               	movlw	128
  2410     06DF  00D6               	movwf	lcdPrint@str+1
  2411     06E0  120A  158A  257D  120A  118A  	fcall	_lcdPrint
  2412     06E5                     l2952:
  2413                           
  2414                           ;main.c: 326:     RCIF = 0;
  2415     06E5  1283               	bcf	3,5	;RP0=0, select bank0
  2416     06E6  1303               	bcf	3,6	;RP1=0, select bank0
  2417     06E7  128C               	bcf	12,5	;volatile
  2418     06E8                     l2954:
  2419                           
  2420                           ;main.c: 327:     countdown = 60;
  2421     06E8  303C               	movlw	60
  2422     06E9  00F9               	movwf	_countdown
  2423     06EA  2EA4               	goto	l2930
  2424     06EB                     l219:
  2425     06EB  0008               	return
  2426     06EC                     __end_of_UART_Read2:
  2427                           
  2428                           	psect	text3
  2429     0330                     __ptext3:	
  2430 ;; *************** function _UART_Read1 *****************
  2431 ;; Defined at:
  2432 ;;		line 334 in file "main.c"
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;		None
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;  count           1    3[BANK1 ] unsigned char 
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  1    wreg      unsigned char 
  2439 ;; Registers used:
  2440 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2446 ;;      Params:         0       0       0       0       0
  2447 ;;      Locals:         0       0       1       0       0
  2448 ;;      Temps:          0       0       3       0       0
  2449 ;;      Totals:         0       0       4       0       0
  2450 ;;Total ram usage:        4 bytes
  2451 ;; Hardware stack levels used: 1
  2452 ;; Hardware stack levels required when called: 5
  2453 ;; This function calls:
  2454 ;;		_RS485_RxEnable
  2455 ;;		_RS485_TxEnable
  2456 ;;		_UART_Write
  2457 ;;		_intToString
  2458 ;;		_lcdPrint
  2459 ;;		_lcdSend
  2460 ;; This function is called by:
  2461 ;;		_main
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465     0330                     _UART_Read1:	
  2466                           ;psect for function _UART_Read1
  2467                           
  2468     0330                     l2728:	
  2469                           ;incstack = 0
  2470                           ; Regs used in _UART_Read1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2471                           
  2472                           
  2473                           ;main.c: 335:     char count = 0;
  2474     0330  1683               	bsf	3,5	;RP0=1, select bank1
  2475     0331  1303               	bcf	3,6	;RP1=0, select bank1
  2476     0332  01A3               	clrf	UART_Read1@count^(0+128)
  2477     0333                     l2730:
  2478                           
  2479                           ;main.c: 336:     countdown = 60;
  2480     0333  303C               	movlw	60
  2481     0334  00F9               	movwf	_countdown
  2482                           
  2483                           ;main.c: 337:     while (countdown != 0){
  2484     0335  2D1C               	goto	l2848
  2485     0336                     l2732:
  2486                           
  2487                           ;main.c: 338:         if (count != 5){
  2488     0336  3005               	movlw	5
  2489     0337  1683               	bsf	3,5	;RP0=1, select bank1
  2490     0338  1303               	bcf	3,6	;RP1=0, select bank1
  2491     0339  0623               	xorwf	UART_Read1@count^(0+128),w
  2492     033A  1903               	btfsc	3,2
  2493     033B  2B3D               	goto	u3161
  2494     033C  2B3E               	goto	u3160
  2495     033D                     u3161:
  2496     033D  2CA7               	goto	l2814
  2497     033E                     u3160:
  2498     033E                     l2734:
  2499                           
  2500                           ;main.c: 339:             if(keypressed != 0 && count == 0){
  2501     033E  1283               	bcf	3,5	;RP0=0, select bank0
  2502     033F  1303               	bcf	3,6	;RP1=0, select bank0
  2503     0340  084A               	movf	_keypressed,w
  2504     0341  1903               	btfsc	3,2
  2505     0342  2B44               	goto	u3171
  2506     0343  2B45               	goto	u3170
  2507     0344                     u3171:
  2508     0344  2B78               	goto	l2748
  2509     0345                     u3170:
  2510     0345                     l2736:
  2511     0345  1683               	bsf	3,5	;RP0=1, select bank1
  2512     0346  1303               	bcf	3,6	;RP1=0, select bank1
  2513     0347  0823               	movf	UART_Read1@count^(0+128),w
  2514     0348  1D03               	btfss	3,2
  2515     0349  2B4B               	goto	u3181
  2516     034A  2B4C               	goto	u3180
  2517     034B                     u3181:
  2518     034B  2B78               	goto	l2748
  2519     034C                     u3180:
  2520     034C                     l2738:
  2521                           
  2522                           ;main.c: 340:                 lcdSend(0x01, 0);
  2523     034C  1283               	bcf	3,5	;RP0=0, select bank0
  2524     034D  1303               	bcf	3,6	;RP1=0, select bank0
  2525     034E  01D3               	clrf	lcdSend@tipo
  2526     034F  3001               	movlw	1
  2527     0350  120A  158A  253A  120A  118A  	fcall	_lcdSend
  2528     0355                     l2740:
  2529                           
  2530                           ;main.c: 341:                 lcdSend(keys[keypressed], 1);
  2531     0355  1283               	bcf	3,5	;RP0=0, select bank0
  2532     0356  1303               	bcf	3,6	;RP1=0, select bank0
  2533     0357  01D3               	clrf	lcdSend@tipo
  2534     0358  0AD3               	incf	lcdSend@tipo,f
  2535     0359  084A               	movf	_keypressed,w
  2536     035A  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2537     035B  0084               	movwf	4
  2538     035C  120A  158A  200A  120A  118A  	fcall	stringdir
  2539     0361  120A  158A  253A  120A  118A  	fcall	_lcdSend
  2540     0366                     l2742:
  2541                           
  2542                           ;main.c: 342:                 num1 = keys[keypressed];
  2543     0366  1283               	bcf	3,5	;RP0=0, select bank0
  2544     0367  1303               	bcf	3,6	;RP1=0, select bank0
  2545     0368  084A               	movf	_keypressed,w
  2546     0369  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2547     036A  0084               	movwf	4
  2548     036B  120A  158A  200A  120A  118A  	fcall	stringdir
  2549     0370  00CF               	movwf	_num1
  2550     0371                     l2744:
  2551                           
  2552                           ;main.c: 343:                 keypressed = 0;
  2553     0371  01CA               	clrf	_keypressed
  2554     0372                     l2746:
  2555                           
  2556                           ;main.c: 344:                 count ++;
  2557     0372  3001               	movlw	1
  2558     0373  1683               	bsf	3,5	;RP0=1, select bank1
  2559     0374  1303               	bcf	3,6	;RP1=0, select bank1
  2560     0375  00A0               	movwf	??_UART_Read1^(0+128)
  2561     0376  0820               	movf	??_UART_Read1^(0+128),w
  2562     0377  07A3               	addwf	UART_Read1@count^(0+128),f
  2563     0378                     l2748:
  2564                           
  2565                           ;main.c: 346:             if(keypressed != 0 && count == 1){
  2566     0378  1283               	bcf	3,5	;RP0=0, select bank0
  2567     0379  084A               	movf	_keypressed,w
  2568     037A  1903               	btfsc	3,2
  2569     037B  2B7D               	goto	u3191
  2570     037C  2B7E               	goto	u3190
  2571     037D                     u3191:
  2572     037D  2BB4               	goto	l2762
  2573     037E                     u3190:
  2574     037E                     l2750:
  2575     037E  1683               	bsf	3,5	;RP0=1, select bank1
  2576     037F  1303               	bcf	3,6	;RP1=0, select bank1
  2577     0380  0323               	decf	UART_Read1@count^(0+128),w
  2578     0381  1D03               	btfss	3,2
  2579     0382  2B84               	goto	u3201
  2580     0383  2B85               	goto	u3200
  2581     0384                     u3201:
  2582     0384  2BB4               	goto	l2762
  2583     0385                     u3200:
  2584     0385                     l2752:
  2585                           
  2586                           ;main.c: 347:                 lcdSend(0x80 + count, 0);
  2587     0385  1283               	bcf	3,5	;RP0=0, select bank0
  2588     0386  1303               	bcf	3,6	;RP1=0, select bank0
  2589     0387  01D3               	clrf	lcdSend@tipo
  2590     0388  1683               	bsf	3,5	;RP0=1, select bank1
  2591     0389  1303               	bcf	3,6	;RP1=0, select bank1
  2592     038A  0823               	movf	UART_Read1@count^(0+128),w
  2593     038B  3E80               	addlw	128
  2594     038C  120A  158A  253A  120A  118A  	fcall	_lcdSend
  2595     0391                     l2754:
  2596                           
  2597                           ;main.c: 348:                 lcdSend(keys[keypressed], 1);
  2598     0391  1283               	bcf	3,5	;RP0=0, select bank0
  2599     0392  1303               	bcf	3,6	;RP1=0, select bank0
  2600     0393  01D3               	clrf	lcdSend@tipo
  2601     0394  0AD3               	incf	lcdSend@tipo,f
  2602     0395  084A               	movf	_keypressed,w
  2603     0396  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2604     0397  0084               	movwf	4
  2605     0398  120A  158A  200A  120A  118A  	fcall	stringdir
  2606     039D  120A  158A  253A  120A  118A  	fcall	_lcdSend
  2607     03A2                     l2756:
  2608                           
  2609                           ;main.c: 349:                 num2 = keys[keypressed];
  2610     03A2  1283               	bcf	3,5	;RP0=0, select bank0
  2611     03A3  1303               	bcf	3,6	;RP1=0, select bank0
  2612     03A4  084A               	movf	_keypressed,w
  2613     03A5  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2614     03A6  0084               	movwf	4
  2615     03A7  120A  158A  200A  120A  118A  	fcall	stringdir
  2616     03AC  00CE               	movwf	_num2
  2617     03AD                     l2758:
  2618                           
  2619                           ;main.c: 350:                 keypressed = 0;
  2620     03AD  01CA               	clrf	_keypressed
  2621     03AE                     l2760:
  2622                           
  2623                           ;main.c: 351:                 count ++;
  2624     03AE  3001               	movlw	1
  2625     03AF  1683               	bsf	3,5	;RP0=1, select bank1
  2626     03B0  1303               	bcf	3,6	;RP1=0, select bank1
  2627     03B1  00A0               	movwf	??_UART_Read1^(0+128)
  2628     03B2  0820               	movf	??_UART_Read1^(0+128),w
  2629     03B3  07A3               	addwf	UART_Read1@count^(0+128),f
  2630     03B4                     l2762:
  2631                           
  2632                           ;main.c: 353:             if(keypressed != 0 && count == 2){
  2633     03B4  1283               	bcf	3,5	;RP0=0, select bank0
  2634     03B5  084A               	movf	_keypressed,w
  2635     03B6  1903               	btfsc	3,2
  2636     03B7  2BB9               	goto	u3211
  2637     03B8  2BBA               	goto	u3210
  2638     03B9                     u3211:
  2639     03B9  2BF1               	goto	l2776
  2640     03BA                     u3210:
  2641     03BA                     l2764:
  2642     03BA  3002               	movlw	2
  2643     03BB  1683               	bsf	3,5	;RP0=1, select bank1
  2644     03BC  1303               	bcf	3,6	;RP1=0, select bank1
  2645     03BD  0623               	xorwf	UART_Read1@count^(0+128),w
  2646     03BE  1D03               	btfss	3,2
  2647     03BF  2BC1               	goto	u3221
  2648     03C0  2BC2               	goto	u3220
  2649     03C1                     u3221:
  2650     03C1  2BF1               	goto	l2776
  2651     03C2                     u3220:
  2652     03C2                     l2766:
  2653                           
  2654                           ;main.c: 354:                 lcdSend(0x80 + count, 0);
  2655     03C2  1283               	bcf	3,5	;RP0=0, select bank0
  2656     03C3  1303               	bcf	3,6	;RP1=0, select bank0
  2657     03C4  01D3               	clrf	lcdSend@tipo
  2658     03C5  1683               	bsf	3,5	;RP0=1, select bank1
  2659     03C6  1303               	bcf	3,6	;RP1=0, select bank1
  2660     03C7  0823               	movf	UART_Read1@count^(0+128),w
  2661     03C8  3E80               	addlw	128
  2662     03C9  120A  158A  253A  120A  118A  	fcall	_lcdSend
  2663     03CE                     l2768:
  2664                           
  2665                           ;main.c: 355:                 lcdSend(keys[keypressed], 1);
  2666     03CE  1283               	bcf	3,5	;RP0=0, select bank0
  2667     03CF  1303               	bcf	3,6	;RP1=0, select bank0
  2668     03D0  01D3               	clrf	lcdSend@tipo
  2669     03D1  0AD3               	incf	lcdSend@tipo,f
  2670     03D2  084A               	movf	_keypressed,w
  2671     03D3  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2672     03D4  0084               	movwf	4
  2673     03D5  120A  158A  200A  120A  118A  	fcall	stringdir
  2674     03DA  120A  158A  253A  120A  118A  	fcall	_lcdSend
  2675     03DF                     l2770:
  2676                           
  2677                           ;main.c: 356:                 num3 = keys[keypressed];
  2678     03DF  1283               	bcf	3,5	;RP0=0, select bank0
  2679     03E0  1303               	bcf	3,6	;RP1=0, select bank0
  2680     03E1  084A               	movf	_keypressed,w
  2681     03E2  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2682     03E3  0084               	movwf	4
  2683     03E4  120A  158A  200A  120A  118A  	fcall	stringdir
  2684     03E9  00CD               	movwf	_num3
  2685     03EA                     l2772:
  2686                           
  2687                           ;main.c: 357:                 keypressed = 0;
  2688     03EA  01CA               	clrf	_keypressed
  2689     03EB                     l2774:
  2690                           
  2691                           ;main.c: 358:                 count ++;
  2692     03EB  3001               	movlw	1
  2693     03EC  1683               	bsf	3,5	;RP0=1, select bank1
  2694     03ED  1303               	bcf	3,6	;RP1=0, select bank1
  2695     03EE  00A0               	movwf	??_UART_Read1^(0+128)
  2696     03EF  0820               	movf	??_UART_Read1^(0+128),w
  2697     03F0  07A3               	addwf	UART_Read1@count^(0+128),f
  2698     03F1                     l2776:
  2699                           
  2700                           ;main.c: 360:             if(keypressed != 0 && count == 3){
  2701     03F1  1283               	bcf	3,5	;RP0=0, select bank0
  2702     03F2  084A               	movf	_keypressed,w
  2703     03F3  1903               	btfsc	3,2
  2704     03F4  2BF6               	goto	u3231
  2705     03F5  2BF7               	goto	u3230
  2706     03F6                     u3231:
  2707     03F6  2C2E               	goto	l2790
  2708     03F7                     u3230:
  2709     03F7                     l2778:
  2710     03F7  3003               	movlw	3
  2711     03F8  1683               	bsf	3,5	;RP0=1, select bank1
  2712     03F9  1303               	bcf	3,6	;RP1=0, select bank1
  2713     03FA  0623               	xorwf	UART_Read1@count^(0+128),w
  2714     03FB  1D03               	btfss	3,2
  2715     03FC  2BFE               	goto	u3241
  2716     03FD  2BFF               	goto	u3240
  2717     03FE                     u3241:
  2718     03FE  2C2E               	goto	l2790
  2719     03FF                     u3240:
  2720     03FF                     l2780:
  2721                           
  2722                           ;main.c: 361:                 lcdSend(0x80 + count, 0);
  2723     03FF  1283               	bcf	3,5	;RP0=0, select bank0
  2724     0400  1303               	bcf	3,6	;RP1=0, select bank0
  2725     0401  01D3               	clrf	lcdSend@tipo
  2726     0402  1683               	bsf	3,5	;RP0=1, select bank1
  2727     0403  1303               	bcf	3,6	;RP1=0, select bank1
  2728     0404  0823               	movf	UART_Read1@count^(0+128),w
  2729     0405  3E80               	addlw	128
  2730     0406  120A  158A  253A  120A  118A  	fcall	_lcdSend
  2731     040B                     l2782:
  2732                           
  2733                           ;main.c: 362:                 lcdSend(keys[keypressed], 1);
  2734     040B  1283               	bcf	3,5	;RP0=0, select bank0
  2735     040C  1303               	bcf	3,6	;RP1=0, select bank0
  2736     040D  01D3               	clrf	lcdSend@tipo
  2737     040E  0AD3               	incf	lcdSend@tipo,f
  2738     040F  084A               	movf	_keypressed,w
  2739     0410  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2740     0411  0084               	movwf	4
  2741     0412  120A  158A  200A  120A  118A  	fcall	stringdir
  2742     0417  120A  158A  253A  120A  118A  	fcall	_lcdSend
  2743     041C                     l2784:
  2744                           
  2745                           ;main.c: 363:                 num4 = keys[keypressed];
  2746     041C  1283               	bcf	3,5	;RP0=0, select bank0
  2747     041D  1303               	bcf	3,6	;RP1=0, select bank0
  2748     041E  084A               	movf	_keypressed,w
  2749     041F  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2750     0420  0084               	movwf	4
  2751     0421  120A  158A  200A  120A  118A  	fcall	stringdir
  2752     0426  00CC               	movwf	_num4
  2753     0427                     l2786:
  2754                           
  2755                           ;main.c: 364:                 keypressed = 0;
  2756     0427  01CA               	clrf	_keypressed
  2757     0428                     l2788:
  2758                           
  2759                           ;main.c: 365:                 count ++;
  2760     0428  3001               	movlw	1
  2761     0429  1683               	bsf	3,5	;RP0=1, select bank1
  2762     042A  1303               	bcf	3,6	;RP1=0, select bank1
  2763     042B  00A0               	movwf	??_UART_Read1^(0+128)
  2764     042C  0820               	movf	??_UART_Read1^(0+128),w
  2765     042D  07A3               	addwf	UART_Read1@count^(0+128),f
  2766     042E                     l2790:
  2767                           
  2768                           ;main.c: 367:             if(keypressed != 0 && count == 4){
  2769     042E  1283               	bcf	3,5	;RP0=0, select bank0
  2770     042F  084A               	movf	_keypressed,w
  2771     0430  1903               	btfsc	3,2
  2772     0431  2C33               	goto	u3251
  2773     0432  2C34               	goto	u3250
  2774     0433                     u3251:
  2775     0433  2C6B               	goto	l2804
  2776     0434                     u3250:
  2777     0434                     l2792:
  2778     0434  3004               	movlw	4
  2779     0435  1683               	bsf	3,5	;RP0=1, select bank1
  2780     0436  1303               	bcf	3,6	;RP1=0, select bank1
  2781     0437  0623               	xorwf	UART_Read1@count^(0+128),w
  2782     0438  1D03               	btfss	3,2
  2783     0439  2C3B               	goto	u3261
  2784     043A  2C3C               	goto	u3260
  2785     043B                     u3261:
  2786     043B  2C6B               	goto	l2804
  2787     043C                     u3260:
  2788     043C                     l2794:
  2789                           
  2790                           ;main.c: 368:                 lcdSend(0x80 + count, 0);
  2791     043C  1283               	bcf	3,5	;RP0=0, select bank0
  2792     043D  1303               	bcf	3,6	;RP1=0, select bank0
  2793     043E  01D3               	clrf	lcdSend@tipo
  2794     043F  1683               	bsf	3,5	;RP0=1, select bank1
  2795     0440  1303               	bcf	3,6	;RP1=0, select bank1
  2796     0441  0823               	movf	UART_Read1@count^(0+128),w
  2797     0442  3E80               	addlw	128
  2798     0443  120A  158A  253A  120A  118A  	fcall	_lcdSend
  2799     0448                     l2796:
  2800                           
  2801                           ;main.c: 369:                 lcdSend(keys[keypressed], 1);
  2802     0448  1283               	bcf	3,5	;RP0=0, select bank0
  2803     0449  1303               	bcf	3,6	;RP1=0, select bank0
  2804     044A  01D3               	clrf	lcdSend@tipo
  2805     044B  0AD3               	incf	lcdSend@tipo,f
  2806     044C  084A               	movf	_keypressed,w
  2807     044D  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2808     044E  0084               	movwf	4
  2809     044F  120A  158A  200A  120A  118A  	fcall	stringdir
  2810     0454  120A  158A  253A  120A  118A  	fcall	_lcdSend
  2811     0459                     l2798:
  2812                           
  2813                           ;main.c: 370:                 num5 = keys[keypressed];
  2814     0459  1283               	bcf	3,5	;RP0=0, select bank0
  2815     045A  1303               	bcf	3,6	;RP1=0, select bank0
  2816     045B  084A               	movf	_keypressed,w
  2817     045C  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2818     045D  0084               	movwf	4
  2819     045E  120A  158A  200A  120A  118A  	fcall	stringdir
  2820     0463  00CB               	movwf	_num5
  2821     0464                     l2800:
  2822                           
  2823                           ;main.c: 371:                 keypressed = 0;
  2824     0464  01CA               	clrf	_keypressed
  2825     0465                     l2802:
  2826                           
  2827                           ;main.c: 372:                 count ++;
  2828     0465  3001               	movlw	1
  2829     0466  1683               	bsf	3,5	;RP0=1, select bank1
  2830     0467  1303               	bcf	3,6	;RP1=0, select bank1
  2831     0468  00A0               	movwf	??_UART_Read1^(0+128)
  2832     0469  0820               	movf	??_UART_Read1^(0+128),w
  2833     046A  07A3               	addwf	UART_Read1@count^(0+128),f
  2834     046B                     l2804:
  2835                           
  2836                           ;main.c: 374:             intToString(countdown, print_countdown);
  2837     046B  0879               	movf	_countdown,w
  2838     046C  1683               	bsf	3,5	;RP0=1, select bank1
  2839     046D  1303               	bcf	3,6	;RP1=0, select bank1
  2840     046E  00A0               	movwf	??_UART_Read1^(0+128)
  2841     046F  01A1               	clrf	(??_UART_Read1^(0+128)+1)
  2842     0470  0820               	movf	??_UART_Read1^(0+128),w
  2843     0471  1283               	bcf	3,5	;RP0=0, select bank0
  2844     0472  1303               	bcf	3,6	;RP1=0, select bank0
  2845     0473  00E6               	movwf	intToString@n
  2846     0474  1683               	bsf	3,5	;RP0=1, select bank1
  2847     0475  1303               	bcf	3,6	;RP1=0, select bank1
  2848     0476  0821               	movf	(??_UART_Read1+1)^(0+128),w
  2849     0477  1283               	bcf	3,5	;RP0=0, select bank0
  2850     0478  1303               	bcf	3,6	;RP1=0, select bank0
  2851     0479  00E7               	movwf	intToString@n+1
  2852     047A  3050               	movlw	(low (_print_countdown| 0))& (0+255)
  2853     047B  00E8               	movwf	intToString@str
  2854     047C  120A  158A  26F7  120A  118A  	fcall	_intToString
  2855     0481                     l2806:
  2856                           
  2857                           ;main.c: 375:             lcdSend(0xC0, 0);
  2858     0481  1283               	bcf	3,5	;RP0=0, select bank0
  2859     0482  1303               	bcf	3,6	;RP1=0, select bank0
  2860     0483  01D3               	clrf	lcdSend@tipo
  2861     0484  30C0               	movlw	192
  2862     0485  120A  158A  253A  120A  118A  	fcall	_lcdSend
  2863     048A                     l2808:
  2864                           
  2865                           ;main.c: 376:             lcdPrint(print_countdown);
  2866     048A  3050               	movlw	(low (_print_countdown| 0))& (0+255)
  2867     048B  1283               	bcf	3,5	;RP0=0, select bank0
  2868     048C  1303               	bcf	3,6	;RP1=0, select bank0
  2869     048D  00D5               	movwf	lcdPrint@str
  2870     048E  3000               	movlw	0
  2871     048F  00D6               	movwf	lcdPrint@str+1
  2872     0490  120A  158A  257D  120A  118A  	fcall	_lcdPrint
  2873     0495                     l2810:
  2874                           
  2875                           ;main.c: 377:             countdown --;
  2876     0495  3001               	movlw	1
  2877     0496  02F9               	subwf	_countdown,f
  2878     0497                     l2812:
  2879                           
  2880                           ;main.c: 378:             _delay((unsigned long)((80)*(20000000/4000.0)));
  2881     0497  3003               	movlw	3
  2882     0498  1683               	bsf	3,5	;RP0=1, select bank1
  2883     0499  1303               	bcf	3,6	;RP1=0, select bank1
  2884     049A  00A2               	movwf	(??_UART_Read1^(0+128)+2)
  2885     049B  3008               	movlw	8
  2886     049C  00A1               	movwf	(??_UART_Read1^(0+128)+1)
  2887     049D  3076               	movlw	118
  2888     049E  00A0               	movwf	??_UART_Read1^(0+128)
  2889     049F                     u3967:
  2890     049F  0BA0               	decfsz	??_UART_Read1^(0+128),f
  2891     04A0  2C9F               	goto	u3967
  2892     04A1  0BA1               	decfsz	(??_UART_Read1^(0+128)+1),f
  2893     04A2  2C9F               	goto	u3967
  2894     04A3  0BA2               	decfsz	(??_UART_Read1^(0+128)+2),f
  2895     04A4  2C9F               	goto	u3967
  2896     04A5  0000               	nop
  2897                           
  2898                           ;main.c: 379:         }
  2899     04A6  2D1C               	goto	l2848
  2900     04A7                     l2814:
  2901                           
  2902                           ;main.c: 381:             RS485_TxEnable();
  2903     04A7  120A  118A  27F9  120A  118A  	fcall	_RS485_TxEnable
  2904     04AC                     l2816:
  2905                           
  2906                           ;main.c: 382:             UART_Write(id1);
  2907     04AC  3001               	movlw	1
  2908     04AD  120A  158A  250F  120A  118A  	fcall	_UART_Write
  2909     04B2                     l2818:
  2910                           
  2911                           ;main.c: 384:             UART_Write(0x02);
  2912     04B2  3002               	movlw	2
  2913     04B3  120A  158A  250F  120A  118A  	fcall	_UART_Write
  2914     04B8                     l2820:
  2915                           
  2916                           ;main.c: 385:             UART_Write(num1);
  2917     04B8  1283               	bcf	3,5	;RP0=0, select bank0
  2918     04B9  1303               	bcf	3,6	;RP1=0, select bank0
  2919     04BA  084F               	movf	_num1,w
  2920     04BB  120A  158A  250F  120A  118A  	fcall	_UART_Write
  2921     04C0                     l2822:
  2922                           
  2923                           ;main.c: 386:             UART_Write(num2);
  2924     04C0  1283               	bcf	3,5	;RP0=0, select bank0
  2925     04C1  1303               	bcf	3,6	;RP1=0, select bank0
  2926     04C2  084E               	movf	_num2,w
  2927     04C3  120A  158A  250F  120A  118A  	fcall	_UART_Write
  2928     04C8                     l2824:
  2929                           
  2930                           ;main.c: 387:             UART_Write(num3);
  2931     04C8  1283               	bcf	3,5	;RP0=0, select bank0
  2932     04C9  1303               	bcf	3,6	;RP1=0, select bank0
  2933     04CA  084D               	movf	_num3,w
  2934     04CB  120A  158A  250F  120A  118A  	fcall	_UART_Write
  2935     04D0                     l2826:
  2936                           
  2937                           ;main.c: 388:             UART_Write(num4);
  2938     04D0  1283               	bcf	3,5	;RP0=0, select bank0
  2939     04D1  1303               	bcf	3,6	;RP1=0, select bank0
  2940     04D2  084C               	movf	_num4,w
  2941     04D3  120A  158A  250F  120A  118A  	fcall	_UART_Write
  2942     04D8                     l2828:
  2943                           
  2944                           ;main.c: 389:             UART_Write(num5);
  2945     04D8  1283               	bcf	3,5	;RP0=0, select bank0
  2946     04D9  1303               	bcf	3,6	;RP1=0, select bank0
  2947     04DA  084B               	movf	_num5,w
  2948     04DB  120A  158A  250F  120A  118A  	fcall	_UART_Write
  2949     04E0                     l2830:
  2950                           
  2951                           ;main.c: 390:             UART_Write('\r');
  2952     04E0  300D               	movlw	13
  2953     04E1  120A  158A  250F  120A  118A  	fcall	_UART_Write
  2954     04E6                     l2832:
  2955                           
  2956                           ;main.c: 391:             UART_Write('\n');
  2957     04E6  300A               	movlw	10
  2958     04E7  120A  158A  250F  120A  118A  	fcall	_UART_Write
  2959     04EC                     l2834:
  2960                           
  2961                           ;main.c: 392:             RS485_RxEnable();
  2962     04EC  120A  158A  2502  120A  118A  	fcall	_RS485_RxEnable
  2963                           
  2964                           ;main.c: 393:             lcdSend(0x01, 0);
  2965     04F1  1283               	bcf	3,5	;RP0=0, select bank0
  2966     04F2  1303               	bcf	3,6	;RP1=0, select bank0
  2967     04F3  01D3               	clrf	lcdSend@tipo
  2968     04F4  3001               	movlw	1
  2969     04F5  120A  158A  253A  120A  118A  	fcall	_lcdSend
  2970     04FA                     l2836:
  2971                           
  2972                           ;main.c: 394:             lcdPrint("Mandato");
  2973     04FA  3080               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2974     04FB  1283               	bcf	3,5	;RP0=0, select bank0
  2975     04FC  1303               	bcf	3,6	;RP1=0, select bank0
  2976     04FD  00D5               	movwf	lcdPrint@str
  2977     04FE  3080               	movlw	128
  2978     04FF  00D6               	movwf	lcdPrint@str+1
  2979     0500  120A  158A  257D  120A  118A  	fcall	_lcdPrint
  2980     0505                     l2838:
  2981                           
  2982                           ;main.c: 395:             RCIF = 0;
  2983     0505  1283               	bcf	3,5	;RP0=0, select bank0
  2984     0506  1303               	bcf	3,6	;RP1=0, select bank0
  2985     0507  128C               	bcf	12,5	;volatile
  2986     0508                     l2840:
  2987                           
  2988                           ;main.c: 396:             countdown = 60;
  2989     0508  303C               	movlw	60
  2990     0509  00F9               	movwf	_countdown
  2991     050A                     l2842:
  2992                           
  2993                           ;main.c: 397:             _delay((unsigned long)((100)*(20000000/4000.0)));
  2994     050A  3003               	movlw	3
  2995     050B  1683               	bsf	3,5	;RP0=1, select bank1
  2996     050C  1303               	bcf	3,6	;RP1=0, select bank1
  2997     050D  00A2               	movwf	(??_UART_Read1^(0+128)+2)
  2998     050E  308A               	movlw	138
  2999     050F  00A1               	movwf	(??_UART_Read1^(0+128)+1)
  3000     0510  3055               	movlw	85
  3001     0511  00A0               	movwf	??_UART_Read1^(0+128)
  3002     0512                     u3977:
  3003     0512  0BA0               	decfsz	??_UART_Read1^(0+128),f
  3004     0513  2D12               	goto	u3977
  3005     0514  0BA1               	decfsz	(??_UART_Read1^(0+128)+1),f
  3006     0515  2D12               	goto	u3977
  3007     0516  0BA2               	decfsz	(??_UART_Read1^(0+128)+2),f
  3008     0517  2D12               	goto	u3977
  3009     0518                     l2844:
  3010                           
  3011                           ;main.c: 398:             return RCREG;;	Return value of _UART_Read1 is never used
  3012     0518  1283               	bcf	3,5	;RP0=0, select bank0
  3013     0519  1303               	bcf	3,6	;RP1=0, select bank0
  3014     051A  081A               	movf	26,w	;volatile
  3015     051B  2D49               	goto	l235
  3016     051C                     l2848:
  3017                           
  3018                           ;main.c: 337:     while (countdown != 0){
  3019     051C  0879               	movf	_countdown,w
  3020     051D  1D03               	btfss	3,2
  3021     051E  2D20               	goto	u3271
  3022     051F  2D21               	goto	u3270
  3023     0520                     u3271:
  3024     0520  2B36               	goto	l2732
  3025     0521                     u3270:
  3026     0521                     l2850:
  3027                           
  3028                           ;main.c: 401:     lcdSend(0x01, 0);
  3029     0521  1283               	bcf	3,5	;RP0=0, select bank0
  3030     0522  1303               	bcf	3,6	;RP1=0, select bank0
  3031     0523  01D3               	clrf	lcdSend@tipo
  3032     0524  3001               	movlw	1
  3033     0525  120A  158A  253A  120A  118A  	fcall	_lcdSend
  3034     052A                     l2852:
  3035                           
  3036                           ;main.c: 402:     lcdPrint("Codice Scaduto");
  3037     052A  3014               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  3038     052B  1283               	bcf	3,5	;RP0=0, select bank0
  3039     052C  1303               	bcf	3,6	;RP1=0, select bank0
  3040     052D  00D5               	movwf	lcdPrint@str
  3041     052E  3080               	movlw	128
  3042     052F  00D6               	movwf	lcdPrint@str+1
  3043     0530  120A  158A  257D  120A  118A  	fcall	_lcdPrint
  3044     0535                     l2854:
  3045                           
  3046                           ;main.c: 403:     RCIF = 0;
  3047     0535  1283               	bcf	3,5	;RP0=0, select bank0
  3048     0536  1303               	bcf	3,6	;RP1=0, select bank0
  3049     0537  128C               	bcf	12,5	;volatile
  3050     0538                     l2856:
  3051                           
  3052                           ;main.c: 404:     countdown = 60;
  3053     0538  303C               	movlw	60
  3054     0539  00F9               	movwf	_countdown
  3055     053A                     l2858:
  3056                           
  3057                           ;main.c: 405:     _delay((unsigned long)((200)*(20000000/4000.0)));
  3058     053A  3006               	movlw	6
  3059     053B  1683               	bsf	3,5	;RP0=1, select bank1
  3060     053C  1303               	bcf	3,6	;RP1=0, select bank1
  3061     053D  00A2               	movwf	(??_UART_Read1^(0+128)+2)
  3062     053E  3013               	movlw	19
  3063     053F  00A1               	movwf	(??_UART_Read1^(0+128)+1)
  3064     0540  30AD               	movlw	173
  3065     0541  00A0               	movwf	??_UART_Read1^(0+128)
  3066     0542                     u3987:
  3067     0542  0BA0               	decfsz	??_UART_Read1^(0+128),f
  3068     0543  2D42               	goto	u3987
  3069     0544  0BA1               	decfsz	(??_UART_Read1^(0+128)+1),f
  3070     0545  2D42               	goto	u3987
  3071     0546  0BA2               	decfsz	(??_UART_Read1^(0+128)+2),f
  3072     0547  2D42               	goto	u3987
  3073     0548  2D18               	goto	l2844
  3074     0549                     l235:
  3075     0549  0008               	return
  3076     054A                     __end_of_UART_Read1:
  3077                           
  3078                           	psect	text4
  3079     0D7D                     __ptext4:	
  3080 ;; *************** function _lcdPrint *****************
  3081 ;; Defined at:
  3082 ;;		line 449 in file "main.c"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;  str             2    2[BANK0 ] PTR unsigned char 
  3085 ;;		 -> STR_11(15), STR_10(8), STR_9(14), STR_8(11), 
  3086 ;;		 -> print_countdown(3), STR_7(10), STR_6(14), STR_5(13), 
  3087 ;;		 -> STR_4(12), STR_3(11), STR_2(10), STR_1(8), 
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;  n               2    7[BANK0 ] int 
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  1    wreg      void 
  3092 ;; Registers used:
  3093 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3099 ;;      Params:         0       2       0       0       0
  3100 ;;      Locals:         0       2       0       0       0
  3101 ;;      Temps:          0       3       0       0       0
  3102 ;;      Totals:         0       7       0       0       0
  3103 ;;Total ram usage:        7 bytes
  3104 ;; Hardware stack levels used: 1
  3105 ;; Hardware stack levels required when called: 3
  3106 ;; This function calls:
  3107 ;;		_lcdSend
  3108 ;; This function is called by:
  3109 ;;		_main
  3110 ;;		_UART_Read2
  3111 ;;		_UART_Read1
  3112 ;; This function uses a non-reentrant model
  3113 ;;
  3114                           
  3115     0D7D                     _lcdPrint:	
  3116                           ;psect for function _lcdPrint
  3117                           
  3118     0D7D                     l2578:	
  3119                           ;incstack = 0
  3120                           ; Regs used in _lcdPrint: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3121                           
  3122                           
  3123                           ;main.c: 450:     int n = 0;
  3124     0D7D  1283               	bcf	3,5	;RP0=0, select bank0
  3125     0D7E  1303               	bcf	3,6	;RP1=0, select bank0
  3126     0D7F  01DA               	clrf	lcdPrint@n
  3127     0D80  01DB               	clrf	lcdPrint@n+1
  3128                           
  3129                           ;main.c: 451:     while (str[n] != '\0') {
  3130     0D81  2DA8               	goto	l2584
  3131     0D82                     l2580:
  3132                           
  3133                           ;main.c: 452:         lcdSend(str[n++], 1);
  3134     0D82  01D3               	clrf	lcdSend@tipo
  3135     0D83  0AD3               	incf	lcdSend@tipo,f
  3136     0D84  085A               	movf	lcdPrint@n,w
  3137     0D85  0755               	addwf	lcdPrint@str,w
  3138     0D86  00D8               	movwf	??_lcdPrint+1
  3139     0D87  0856               	movf	lcdPrint@str+1,w
  3140     0D88  00D7               	movwf	??_lcdPrint
  3141     0D89  1803               	skipnc
  3142     0D8A  0AD7               	incf	??_lcdPrint,f
  3143     0D8B  1FDA               	btfss	lcdPrint@n,7
  3144     0D8C  2D8E               	goto	u2990
  3145     0D8D  03D7               	decf	??_lcdPrint,f
  3146     0D8E                     u2990:
  3147     0D8E  1283               	bcf	3,5	;RP0=0, select bank0
  3148     0D8F  1303               	bcf	3,6	;RP1=0, select bank0
  3149     0D90  0857               	movf	??_lcdPrint,w
  3150     0D91  00D9               	movwf	??_lcdPrint+2
  3151     0D92  0859               	movf	??_lcdPrint+2,w
  3152     0D93  00FF               	movwf	btemp+1
  3153     0D94  0858               	movf	??_lcdPrint+1,w
  3154     0D95  0084               	movwf	4
  3155     0D96  120A  158A  2000  120A  158A  	fcall	stringtab
  3156     0D9B  120A  158A  253A  120A  158A  	fcall	_lcdSend
  3157     0DA0                     l2582:
  3158     0DA0  3001               	movlw	1
  3159     0DA1  1283               	bcf	3,5	;RP0=0, select bank0
  3160     0DA2  1303               	bcf	3,6	;RP1=0, select bank0
  3161     0DA3  07DA               	addwf	lcdPrint@n,f
  3162     0DA4  1803               	skipnc
  3163     0DA5  0ADB               	incf	lcdPrint@n+1,f
  3164     0DA6  3000               	movlw	0
  3165     0DA7  07DB               	addwf	lcdPrint@n+1,f
  3166     0DA8                     l2584:
  3167                           
  3168                           ;main.c: 451:     while (str[n] != '\0') {
  3169     0DA8  085A               	movf	lcdPrint@n,w
  3170     0DA9  0755               	addwf	lcdPrint@str,w
  3171     0DAA  00D8               	movwf	??_lcdPrint+1
  3172     0DAB  0856               	movf	lcdPrint@str+1,w
  3173     0DAC  00D7               	movwf	??_lcdPrint
  3174     0DAD  1803               	skipnc
  3175     0DAE  0AD7               	incf	??_lcdPrint,f
  3176     0DAF  1FDA               	btfss	lcdPrint@n,7
  3177     0DB0  2DB2               	goto	u3000
  3178     0DB1  03D7               	decf	??_lcdPrint,f
  3179     0DB2                     u3000:
  3180     0DB2  1283               	bcf	3,5	;RP0=0, select bank0
  3181     0DB3  1303               	bcf	3,6	;RP1=0, select bank0
  3182     0DB4  0857               	movf	??_lcdPrint,w
  3183     0DB5  00D9               	movwf	??_lcdPrint+2
  3184     0DB6  0859               	movf	??_lcdPrint+2,w
  3185     0DB7  00FF               	movwf	btemp+1
  3186     0DB8  0858               	movf	??_lcdPrint+1,w
  3187     0DB9  0084               	movwf	4
  3188     0DBA  120A  158A  2000  120A  158A  	fcall	stringtab
  3189     0DBF  3A00               	xorlw	0
  3190     0DC0  1D03               	skipz
  3191     0DC1  2DC3               	goto	u3011
  3192     0DC2  2DC4               	goto	u3010
  3193     0DC3                     u3011:
  3194     0DC3  2D82               	goto	l2580
  3195     0DC4                     u3010:
  3196     0DC4                     l248:
  3197     0DC4  0008               	return
  3198     0DC5                     __end_of_lcdPrint:
  3199                           
  3200                           	psect	text5
  3201     0D3A                     __ptext5:	
  3202 ;; *************** function _lcdSend *****************
  3203 ;; Defined at:
  3204 ;;		line 428 in file "main.c"
  3205 ;; Parameters:    Size  Location     Type
  3206 ;;  dato            1    wreg     unsigned char 
  3207 ;;  tipo            1    0[BANK0 ] unsigned char 
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;  dato            1    1[BANK0 ] unsigned char 
  3210 ;; Return value:  Size  Location     Type
  3211 ;;                  1    wreg      void 
  3212 ;; Registers used:
  3213 ;;		wreg, status,2, status,0
  3214 ;; Tracked objects:
  3215 ;;		On entry : 0/0
  3216 ;;		On exit  : 0/0
  3217 ;;		Unchanged: 0/0
  3218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3219 ;;      Params:         0       1       0       0       0
  3220 ;;      Locals:         0       1       0       0       0
  3221 ;;      Temps:          0       0       0       0       0
  3222 ;;      Totals:         0       2       0       0       0
  3223 ;;Total ram usage:        2 bytes
  3224 ;; Hardware stack levels used: 1
  3225 ;; Hardware stack levels required when called: 2
  3226 ;; This function calls:
  3227 ;;		Nothing
  3228 ;; This function is called by:
  3229 ;;		_main
  3230 ;;		_UART_Read2
  3231 ;;		_UART_Read1
  3232 ;;		_initLCD
  3233 ;;		_lcdPrint
  3234 ;; This function uses a non-reentrant model
  3235 ;;
  3236                           
  3237     0D3A                     _lcdSend:	
  3238                           ;psect for function _lcdSend
  3239                           
  3240                           
  3241                           ;incstack = 0
  3242                           ; Regs used in _lcdSend: [wreg+status,2+status,0]
  3243                           ;lcdSend@dato stored from wreg
  3244     0D3A  1283               	bcf	3,5	;RP0=0, select bank0
  3245     0D3B  1303               	bcf	3,6	;RP1=0, select bank0
  3246     0D3C  00D4               	movwf	lcdSend@dato
  3247     0D3D                     l2466:
  3248                           
  3249                           ;main.c: 432:     TRISD = 0x00;
  3250     0D3D  1683               	bsf	3,5	;RP0=1, select bank1
  3251     0D3E  1303               	bcf	3,6	;RP1=0, select bank1
  3252     0D3F  0188               	clrf	8	;volatile
  3253     0D40                     l2468:
  3254                           
  3255                           ;main.c: 433:     TRISEbits.TRISE1 = 0;
  3256     0D40  1089               	bcf	9,1	;volatile
  3257     0D41                     l2470:
  3258                           
  3259                           ;main.c: 434:     TRISEbits.TRISE2 = 0;
  3260     0D41  1109               	bcf	9,2	;volatile
  3261     0D42                     l2472:
  3262                           
  3263                           ;main.c: 439:     PORTEbits.RE1 = 1;
  3264     0D42  1283               	bcf	3,5	;RP0=0, select bank0
  3265     0D43  1303               	bcf	3,6	;RP1=0, select bank0
  3266     0D44  1489               	bsf	9,1	;volatile
  3267     0D45                     l2474:
  3268                           
  3269                           ;main.c: 441:     PORTD = dato;
  3270     0D45  0854               	movf	lcdSend@dato,w
  3271     0D46  0088               	movwf	8	;volatile
  3272     0D47                     l2476:
  3273                           
  3274                           ;main.c: 442:     PORTEbits.RE2 = tipo;
  3275     0D47  0C53               	rrf	lcdSend@tipo,w
  3276     0D48  1C03               	skipc
  3277     0D49  1109               	bcf	9,2	;volatile
  3278     0D4A  1803               	skipnc
  3279     0D4B  1509               	bsf	9,2	;volatile
  3280     0D4C                     l2478:
  3281                           
  3282                           ;main.c: 444:     PORTEbits.RE1 = 0;
  3283     0D4C  1089               	bcf	9,1	;volatile
  3284     0D4D                     l2480:
  3285                           
  3286                           ;main.c: 446:     PORTEbits.RE1 = 1;
  3287     0D4D  1489               	bsf	9,1	;volatile
  3288     0D4E                     l242:
  3289     0D4E  0008               	return
  3290     0D4F                     __end_of_lcdSend:
  3291                           
  3292                           	psect	text6
  3293     0EF7                     __ptext6:	
  3294 ;; *************** function _intToString *****************
  3295 ;; Defined at:
  3296 ;;		line 663 in file "main.c"
  3297 ;; Parameters:    Size  Location     Type
  3298 ;;  n               2   19[BANK0 ] int 
  3299 ;;  str             1   21[BANK0 ] PTR unsigned char 
  3300 ;;		 -> print_countdown(3), 
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;  t               1   25[BANK0 ] unsigned char 
  3303 ;;  i               1   27[BANK0 ] unsigned char 
  3304 ;;  cifre           1   26[BANK0 ] unsigned char 
  3305 ;; Return value:  Size  Location     Type
  3306 ;;                  1    wreg      void 
  3307 ;; Registers used:
  3308 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3309 ;; Tracked objects:
  3310 ;;		On entry : 0/0
  3311 ;;		On exit  : 0/0
  3312 ;;		Unchanged: 0/0
  3313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3314 ;;      Params:         0       3       0       0       0
  3315 ;;      Locals:         0       3       0       0       0
  3316 ;;      Temps:          0       3       0       0       0
  3317 ;;      Totals:         0       9       0       0       0
  3318 ;;Total ram usage:        9 bytes
  3319 ;; Hardware stack levels used: 1
  3320 ;; Hardware stack levels required when called: 4
  3321 ;; This function calls:
  3322 ;;		___awdiv
  3323 ;;		___awmod
  3324 ;;		_potenza
  3325 ;; This function is called by:
  3326 ;;		_UART_Read2
  3327 ;;		_UART_Read1
  3328 ;; This function uses a non-reentrant model
  3329 ;;
  3330                           
  3331     0EF7                     _intToString:	
  3332                           ;psect for function _intToString
  3333                           
  3334     0EF7                     l2594:	
  3335                           ;incstack = 0
  3336                           ; Regs used in _intToString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3337                           
  3338                           
  3339                           ;main.c: 666:     char cifre = 1;
  3340     0EF7  1283               	bcf	3,5	;RP0=0, select bank0
  3341     0EF8  1303               	bcf	3,6	;RP1=0, select bank0
  3342     0EF9  01ED               	clrf	intToString@cifre
  3343     0EFA  0AED               	incf	intToString@cifre,f
  3344     0EFB                     l2596:
  3345                           
  3346                           ;main.c: 669:     while (n / potenza(10, cifre)) cifre++;
  3347     0EFB  2F00               	goto	l2600
  3348     0EFC                     l2598:
  3349     0EFC  3001               	movlw	1
  3350     0EFD  00E9               	movwf	??_intToString
  3351     0EFE  0869               	movf	??_intToString,w
  3352     0EFF  07ED               	addwf	intToString@cifre,f
  3353     0F00                     l2600:
  3354     0F00  086D               	movf	intToString@cifre,w
  3355     0F01  00D7               	movwf	potenza@e
  3356     0F02  300A               	movlw	10
  3357     0F03  120A  118A  27CD  120A  158A  	fcall	_potenza
  3358     0F08  1283               	bcf	3,5	;RP0=0, select bank0
  3359     0F09  1303               	bcf	3,6	;RP1=0, select bank0
  3360     0F0A  00E9               	movwf	??_intToString
  3361     0F0B  01EA               	clrf	??_intToString+1
  3362     0F0C  0869               	movf	??_intToString,w
  3363     0F0D  00DD               	movwf	___awdiv@divisor
  3364     0F0E  086A               	movf	??_intToString+1,w
  3365     0F0F  00DE               	movwf	___awdiv@divisor+1
  3366     0F10  0867               	movf	intToString@n+1,w
  3367     0F11  00E0               	movwf	___awdiv@dividend+1
  3368     0F12  0866               	movf	intToString@n,w
  3369     0F13  00DF               	movwf	___awdiv@dividend
  3370     0F14  120A  158A  2620  120A  158A  	fcall	___awdiv
  3371     0F19  1283               	bcf	3,5	;RP0=0, select bank0
  3372     0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  3373     0F1B  085D               	movf	?___awdiv,w
  3374     0F1C  045E               	iorwf	?___awdiv+1,w
  3375     0F1D  1D03               	btfss	3,2
  3376     0F1E  2F20               	goto	u3031
  3377     0F1F  2F21               	goto	u3030
  3378     0F20                     u3031:
  3379     0F20  2EFC               	goto	l2598
  3380     0F21                     u3030:
  3381     0F21                     l2602:
  3382                           
  3383                           ;main.c: 671:     for (i = 0; i < cifre; i++) {
  3384     0F21  01EE               	clrf	intToString@i
  3385     0F22  2F65               	goto	l2612
  3386     0F23                     l2604:
  3387                           
  3388                           ;main.c: 672:         char t = potenza(10, cifre - 1 - i);
  3389     0F23  086E               	movf	intToString@i,w
  3390     0F24  026D               	subwf	intToString@cifre,w
  3391     0F25  3EFF               	addlw	255
  3392     0F26  00D7               	movwf	potenza@e
  3393     0F27  300A               	movlw	10
  3394     0F28  120A  118A  27CD  120A  158A  	fcall	_potenza
  3395     0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  3396     0F2E  1303               	bcf	3,6	;RP1=0, select bank0
  3397     0F2F  00EC               	movwf	intToString@t
  3398     0F30                     l2606:
  3399                           
  3400                           ;main.c: 673:         str[i] = '0' + (char) (n / t);
  3401     0F30  086E               	movf	intToString@i,w
  3402     0F31  0768               	addwf	intToString@str,w
  3403     0F32  00E9               	movwf	??_intToString
  3404     0F33  0869               	movf	??_intToString,w
  3405     0F34  0084               	movwf	4
  3406     0F35  086C               	movf	intToString@t,w
  3407     0F36  00EA               	movwf	??_intToString+1
  3408     0F37  01EB               	clrf	??_intToString+2
  3409     0F38  086A               	movf	??_intToString+1,w
  3410     0F39  00DD               	movwf	___awdiv@divisor
  3411     0F3A  086B               	movf	??_intToString+2,w
  3412     0F3B  00DE               	movwf	___awdiv@divisor+1
  3413     0F3C  0867               	movf	intToString@n+1,w
  3414     0F3D  00E0               	movwf	___awdiv@dividend+1
  3415     0F3E  0866               	movf	intToString@n,w
  3416     0F3F  00DF               	movwf	___awdiv@dividend
  3417     0F40  120A  158A  2620  120A  158A  	fcall	___awdiv
  3418     0F45  1283               	bcf	3,5	;RP0=0, select bank0
  3419     0F46  1303               	bcf	3,6	;RP1=0, select bank0
  3420     0F47  085D               	movf	?___awdiv,w
  3421     0F48  3E30               	addlw	48
  3422     0F49  1383               	bcf	3,7	;select IRP bank0
  3423     0F4A  0080               	movwf	0
  3424     0F4B                     l2608:
  3425                           
  3426                           ;main.c: 674:         n = n % t;
  3427     0F4B  086C               	movf	intToString@t,w
  3428     0F4C  00E9               	movwf	??_intToString
  3429     0F4D  01EA               	clrf	??_intToString+1
  3430     0F4E  0869               	movf	??_intToString,w
  3431     0F4F  00D3               	movwf	___awmod@divisor
  3432     0F50  086A               	movf	??_intToString+1,w
  3433     0F51  00D4               	movwf	___awmod@divisor+1
  3434     0F52  0867               	movf	intToString@n+1,w
  3435     0F53  00D6               	movwf	___awmod@dividend+1
  3436     0F54  0866               	movf	intToString@n,w
  3437     0F55  00D5               	movwf	___awmod@dividend
  3438     0F56  120A  158A  25C5  120A  158A  	fcall	___awmod
  3439     0F5B  1283               	bcf	3,5	;RP0=0, select bank0
  3440     0F5C  1303               	bcf	3,6	;RP1=0, select bank0
  3441     0F5D  0854               	movf	?___awmod+1,w
  3442     0F5E  00E7               	movwf	intToString@n+1
  3443     0F5F  0853               	movf	?___awmod,w
  3444     0F60  00E6               	movwf	intToString@n
  3445     0F61                     l2610:
  3446                           
  3447                           ;main.c: 675:     }
  3448     0F61  3001               	movlw	1
  3449     0F62  00E9               	movwf	??_intToString
  3450     0F63  0869               	movf	??_intToString,w
  3451     0F64  07EE               	addwf	intToString@i,f
  3452     0F65                     l2612:
  3453     0F65  086D               	movf	intToString@cifre,w
  3454     0F66  026E               	subwf	intToString@i,w
  3455     0F67  1C03               	skipc
  3456     0F68  2F6A               	goto	u3041
  3457     0F69  2F6B               	goto	u3040
  3458     0F6A                     u3041:
  3459     0F6A  2F23               	goto	l2604
  3460     0F6B                     u3040:
  3461     0F6B                     l2614:
  3462                           
  3463                           ;main.c: 677:     str[i] = '\0';
  3464     0F6B  086E               	movf	intToString@i,w
  3465     0F6C  0768               	addwf	intToString@str,w
  3466     0F6D  00E9               	movwf	??_intToString
  3467     0F6E  0869               	movf	??_intToString,w
  3468     0F6F  0084               	movwf	4
  3469     0F70  1383               	bcf	3,7	;select IRP bank0
  3470     0F71  0180               	clrf	0
  3471     0F72                     l344:
  3472     0F72  0008               	return
  3473     0F73                     __end_of_intToString:
  3474                           
  3475                           	psect	text7
  3476     07CD                     __ptext7:	
  3477 ;; *************** function _potenza *****************
  3478 ;; Defined at:
  3479 ;;		line 655 in file "main.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;  b               1    wreg     unsigned char 
  3482 ;;  e               1    4[BANK0 ] unsigned char 
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;  b               1    6[BANK0 ] unsigned char 
  3485 ;;  i               2    7[BANK0 ] int 
  3486 ;;  n               1    9[BANK0 ] unsigned char 
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  1    wreg      unsigned char 
  3489 ;; Registers used:
  3490 ;;		wreg, status,2, status,0, pclath, cstack
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3496 ;;      Params:         0       1       0       0       0
  3497 ;;      Locals:         0       4       0       0       0
  3498 ;;      Temps:          0       1       0       0       0
  3499 ;;      Totals:         0       6       0       0       0
  3500 ;;Total ram usage:        6 bytes
  3501 ;; Hardware stack levels used: 1
  3502 ;; Hardware stack levels required when called: 3
  3503 ;; This function calls:
  3504 ;;		___bmul
  3505 ;; This function is called by:
  3506 ;;		_intToString
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510     07CD                     _potenza:	
  3511                           ;psect for function _potenza
  3512                           
  3513                           
  3514                           ;incstack = 0
  3515                           ; Regs used in _potenza: [wreg+status,2+status,0+pclath+cstack]
  3516                           ;potenza@b stored from wreg
  3517     07CD  1283               	bcf	3,5	;RP0=0, select bank0
  3518     07CE  1303               	bcf	3,6	;RP1=0, select bank0
  3519     07CF  00D9               	movwf	potenza@b
  3520     07D0                     l2482:
  3521                           
  3522                           ;main.c: 656:     char n = 1;
  3523     07D0  01DC               	clrf	potenza@n
  3524     07D1  0ADC               	incf	potenza@n,f
  3525     07D2                     l2484:
  3526                           
  3527                           ;main.c: 657:     for (int i = 0; i < e; i++) {
  3528     07D2  01DA               	clrf	potenza@i
  3529     07D3  01DB               	clrf	potenza@i+1
  3530     07D4  2FE8               	goto	l2490
  3531     07D5                     l2486:
  3532                           
  3533                           ;main.c: 658:         n = n * b;
  3534     07D5  1283               	bcf	3,5	;RP0=0, select bank0
  3535     07D6  1303               	bcf	3,6	;RP1=0, select bank0
  3536     07D7  0859               	movf	potenza@b,w
  3537     07D8  00D3               	movwf	___bmul@multiplicand
  3538     07D9  085C               	movf	potenza@n,w
  3539     07DA  120A  158A  2566  120A  118A  	fcall	___bmul
  3540     07DF  1283               	bcf	3,5	;RP0=0, select bank0
  3541     07E0  1303               	bcf	3,6	;RP1=0, select bank0
  3542     07E1  00DC               	movwf	potenza@n
  3543     07E2                     l2488:
  3544                           
  3545                           ;main.c: 659:     }
  3546     07E2  3001               	movlw	1
  3547     07E3  07DA               	addwf	potenza@i,f
  3548     07E4  1803               	skipnc
  3549     07E5  0ADB               	incf	potenza@i+1,f
  3550     07E6  3000               	movlw	0
  3551     07E7  07DB               	addwf	potenza@i+1,f
  3552     07E8                     l2490:
  3553     07E8  085B               	movf	potenza@i+1,w
  3554     07E9  3A80               	xorlw	128
  3555     07EA  00D8               	movwf	??_potenza
  3556     07EB  3080               	movlw	128
  3557     07EC  0258               	subwf	??_potenza,w
  3558     07ED  1D03               	skipz
  3559     07EE  2FF1               	goto	u2795
  3560     07EF  0857               	movf	potenza@e,w
  3561     07F0  025A               	subwf	potenza@i,w
  3562     07F1                     u2795:
  3563     07F1  1C03               	skipc
  3564     07F2  2FF4               	goto	u2791
  3565     07F3  2FF5               	goto	u2790
  3566     07F4                     u2791:
  3567     07F4  2FD5               	goto	l2486
  3568     07F5                     u2790:
  3569     07F5                     l2492:
  3570                           
  3571                           ;main.c: 660:     return n;
  3572     07F5  1283               	bcf	3,5	;RP0=0, select bank0
  3573     07F6  1303               	bcf	3,6	;RP1=0, select bank0
  3574     07F7  085C               	movf	potenza@n,w
  3575     07F8                     l335:
  3576     07F8  0008               	return
  3577     07F9                     __end_of_potenza:
  3578                           
  3579                           	psect	text8
  3580     0D66                     __ptext8:	
  3581 ;; *************** function ___bmul *****************
  3582 ;; Defined at:
  3583 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  3584 ;; Parameters:    Size  Location     Type
  3585 ;;  multiplier      1    wreg     unsigned char 
  3586 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;  multiplier      1    3[BANK0 ] unsigned char 
  3589 ;;  product         1    2[BANK0 ] unsigned char 
  3590 ;; Return value:  Size  Location     Type
  3591 ;;                  1    wreg      unsigned char 
  3592 ;; Registers used:
  3593 ;;		wreg, status,2, status,0
  3594 ;; Tracked objects:
  3595 ;;		On entry : 0/0
  3596 ;;		On exit  : 0/0
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3599 ;;      Params:         0       1       0       0       0
  3600 ;;      Locals:         0       2       0       0       0
  3601 ;;      Temps:          0       1       0       0       0
  3602 ;;      Totals:         0       4       0       0       0
  3603 ;;Total ram usage:        4 bytes
  3604 ;; Hardware stack levels used: 1
  3605 ;; Hardware stack levels required when called: 2
  3606 ;; This function calls:
  3607 ;;		Nothing
  3608 ;; This function is called by:
  3609 ;;		_potenza
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613     0D66                     ___bmul:	
  3614                           ;psect for function ___bmul
  3615                           
  3616                           
  3617                           ;incstack = 0
  3618                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3619                           ;___bmul@multiplier stored from wreg
  3620     0D66  1283               	bcf	3,5	;RP0=0, select bank0
  3621     0D67  1303               	bcf	3,6	;RP1=0, select bank0
  3622     0D68  00D6               	movwf	___bmul@multiplier
  3623     0D69                     l2452:
  3624     0D69  01D5               	clrf	___bmul@product
  3625     0D6A                     l2454:
  3626     0D6A  1C56               	btfss	___bmul@multiplier,0
  3627     0D6B  2D6D               	goto	u2771
  3628     0D6C  2D6E               	goto	u2770
  3629     0D6D                     u2771:
  3630     0D6D  2D72               	goto	l2458
  3631     0D6E                     u2770:
  3632     0D6E                     l2456:
  3633     0D6E  0853               	movf	___bmul@multiplicand,w
  3634     0D6F  00D4               	movwf	??___bmul
  3635     0D70  0854               	movf	??___bmul,w
  3636     0D71  07D5               	addwf	___bmul@product,f
  3637     0D72                     l2458:
  3638     0D72  1003               	clrc
  3639     0D73  0DD3               	rlf	___bmul@multiplicand,f
  3640     0D74                     l2460:
  3641     0D74  1003               	clrc
  3642     0D75  0CD6               	rrf	___bmul@multiplier,f
  3643     0D76  0856               	movf	___bmul@multiplier,w
  3644     0D77  1D03               	btfss	3,2
  3645     0D78  2D7A               	goto	u2781
  3646     0D79  2D7B               	goto	u2780
  3647     0D7A                     u2781:
  3648     0D7A  2D6A               	goto	l2454
  3649     0D7B                     u2780:
  3650     0D7B                     l2462:
  3651     0D7B  0855               	movf	___bmul@product,w
  3652     0D7C                     l456:
  3653     0D7C  0008               	return
  3654     0D7D                     __end_of___bmul:
  3655                           
  3656                           	psect	text9
  3657     0DC5                     __ptext9:	
  3658 ;; *************** function ___awmod *****************
  3659 ;; Defined at:
  3660 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  3661 ;; Parameters:    Size  Location     Type
  3662 ;;  divisor         2    0[BANK0 ] int 
  3663 ;;  dividend        2    2[BANK0 ] int 
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;  sign            1    6[BANK0 ] unsigned char 
  3666 ;;  counter         1    5[BANK0 ] unsigned char 
  3667 ;; Return value:  Size  Location     Type
  3668 ;;                  2    0[BANK0 ] int 
  3669 ;; Registers used:
  3670 ;;		wreg, status,2, status,0
  3671 ;; Tracked objects:
  3672 ;;		On entry : 0/0
  3673 ;;		On exit  : 0/0
  3674 ;;		Unchanged: 0/0
  3675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3676 ;;      Params:         0       4       0       0       0
  3677 ;;      Locals:         0       2       0       0       0
  3678 ;;      Temps:          0       1       0       0       0
  3679 ;;      Totals:         0       7       0       0       0
  3680 ;;Total ram usage:        7 bytes
  3681 ;; Hardware stack levels used: 1
  3682 ;; Hardware stack levels required when called: 2
  3683 ;; This function calls:
  3684 ;;		Nothing
  3685 ;; This function is called by:
  3686 ;;		_intToString
  3687 ;; This function uses a non-reentrant model
  3688 ;;
  3689                           
  3690     0DC5                     ___awmod:	
  3691                           ;psect for function ___awmod
  3692                           
  3693     0DC5                     l2540:	
  3694                           ;incstack = 0
  3695                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3696                           
  3697     0DC5  1283               	bcf	3,5	;RP0=0, select bank0
  3698     0DC6  1303               	bcf	3,6	;RP1=0, select bank0
  3699     0DC7  01D9               	clrf	___awmod@sign
  3700     0DC8                     l2542:
  3701     0DC8  1FD6               	btfss	___awmod@dividend+1,7
  3702     0DC9  2DCB               	goto	u2901
  3703     0DCA  2DCC               	goto	u2900
  3704     0DCB                     u2901:
  3705     0DCB  2DD3               	goto	l2548
  3706     0DCC                     u2900:
  3707     0DCC                     l2544:
  3708     0DCC  09D5               	comf	___awmod@dividend,f
  3709     0DCD  09D6               	comf	___awmod@dividend+1,f
  3710     0DCE  0AD5               	incf	___awmod@dividend,f
  3711     0DCF  1903               	skipnz
  3712     0DD0  0AD6               	incf	___awmod@dividend+1,f
  3713     0DD1                     l2546:
  3714     0DD1  01D9               	clrf	___awmod@sign
  3715     0DD2  0AD9               	incf	___awmod@sign,f
  3716     0DD3                     l2548:
  3717     0DD3  1FD4               	btfss	___awmod@divisor+1,7
  3718     0DD4  2DD6               	goto	u2911
  3719     0DD5  2DD7               	goto	u2910
  3720     0DD6                     u2911:
  3721     0DD6  2DDC               	goto	l2552
  3722     0DD7                     u2910:
  3723     0DD7                     l2550:
  3724     0DD7  09D3               	comf	___awmod@divisor,f
  3725     0DD8  09D4               	comf	___awmod@divisor+1,f
  3726     0DD9  0AD3               	incf	___awmod@divisor,f
  3727     0DDA  1903               	skipnz
  3728     0DDB  0AD4               	incf	___awmod@divisor+1,f
  3729     0DDC                     l2552:
  3730     0DDC  0853               	movf	___awmod@divisor,w
  3731     0DDD  0454               	iorwf	___awmod@divisor+1,w
  3732     0DDE  1903               	btfsc	3,2
  3733     0DDF  2DE1               	goto	u2921
  3734     0DE0  2DE2               	goto	u2920
  3735     0DE1                     u2921:
  3736     0DE1  2E11               	goto	l2570
  3737     0DE2                     u2920:
  3738     0DE2                     l2554:
  3739     0DE2  01D8               	clrf	___awmod@counter
  3740     0DE3  0AD8               	incf	___awmod@counter,f
  3741     0DE4  2DF0               	goto	l2560
  3742     0DE5                     l2556:
  3743     0DE5  3001               	movlw	1
  3744     0DE6                     u2935:
  3745     0DE6  1003               	clrc
  3746     0DE7  0DD3               	rlf	___awmod@divisor,f
  3747     0DE8  0DD4               	rlf	___awmod@divisor+1,f
  3748     0DE9  3EFF               	addlw	-1
  3749     0DEA  1D03               	skipz
  3750     0DEB  2DE6               	goto	u2935
  3751     0DEC                     l2558:
  3752     0DEC  3001               	movlw	1
  3753     0DED  00D7               	movwf	??___awmod
  3754     0DEE  0857               	movf	??___awmod,w
  3755     0DEF  07D8               	addwf	___awmod@counter,f
  3756     0DF0                     l2560:
  3757     0DF0  1FD4               	btfss	___awmod@divisor+1,7
  3758     0DF1  2DF3               	goto	u2941
  3759     0DF2  2DF4               	goto	u2940
  3760     0DF3                     u2941:
  3761     0DF3  2DE5               	goto	l2556
  3762     0DF4                     u2940:
  3763     0DF4                     l2562:
  3764     0DF4  0854               	movf	___awmod@divisor+1,w
  3765     0DF5  0256               	subwf	___awmod@dividend+1,w
  3766     0DF6  1D03               	skipz
  3767     0DF7  2DFA               	goto	u2955
  3768     0DF8  0853               	movf	___awmod@divisor,w
  3769     0DF9  0255               	subwf	___awmod@dividend,w
  3770     0DFA                     u2955:
  3771     0DFA  1C03               	skipc
  3772     0DFB  2DFD               	goto	u2951
  3773     0DFC  2DFE               	goto	u2950
  3774     0DFD                     u2951:
  3775     0DFD  2E04               	goto	l2566
  3776     0DFE                     u2950:
  3777     0DFE                     l2564:
  3778     0DFE  0853               	movf	___awmod@divisor,w
  3779     0DFF  02D5               	subwf	___awmod@dividend,f
  3780     0E00  0854               	movf	___awmod@divisor+1,w
  3781     0E01  1C03               	skipc
  3782     0E02  03D6               	decf	___awmod@dividend+1,f
  3783     0E03  02D6               	subwf	___awmod@dividend+1,f
  3784     0E04                     l2566:
  3785     0E04  3001               	movlw	1
  3786     0E05                     u2965:
  3787     0E05  1003               	clrc
  3788     0E06  0CD4               	rrf	___awmod@divisor+1,f
  3789     0E07  0CD3               	rrf	___awmod@divisor,f
  3790     0E08  3EFF               	addlw	-1
  3791     0E09  1D03               	skipz
  3792     0E0A  2E05               	goto	u2965
  3793     0E0B                     l2568:
  3794     0E0B  3001               	movlw	1
  3795     0E0C  02D8               	subwf	___awmod@counter,f
  3796     0E0D  1D03               	btfss	3,2
  3797     0E0E  2E10               	goto	u2971
  3798     0E0F  2E11               	goto	u2970
  3799     0E10                     u2971:
  3800     0E10  2DF4               	goto	l2562
  3801     0E11                     u2970:
  3802     0E11                     l2570:
  3803     0E11  0859               	movf	___awmod@sign,w
  3804     0E12  1903               	btfsc	3,2
  3805     0E13  2E15               	goto	u2981
  3806     0E14  2E16               	goto	u2980
  3807     0E15                     u2981:
  3808     0E15  2E1B               	goto	l2574
  3809     0E16                     u2980:
  3810     0E16                     l2572:
  3811     0E16  09D5               	comf	___awmod@dividend,f
  3812     0E17  09D6               	comf	___awmod@dividend+1,f
  3813     0E18  0AD5               	incf	___awmod@dividend,f
  3814     0E19  1903               	skipnz
  3815     0E1A  0AD6               	incf	___awmod@dividend+1,f
  3816     0E1B                     l2574:
  3817     0E1B  0856               	movf	___awmod@dividend+1,w
  3818     0E1C  00D4               	movwf	?___awmod+1
  3819     0E1D  0855               	movf	___awmod@dividend,w
  3820     0E1E  00D3               	movwf	?___awmod
  3821     0E1F                     l596:
  3822     0E1F  0008               	return
  3823     0E20                     __end_of___awmod:
  3824                           
  3825                           	psect	text10
  3826     0E20                     __ptext10:	
  3827 ;; *************** function ___awdiv *****************
  3828 ;; Defined at:
  3829 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;  divisor         2   10[BANK0 ] int 
  3832 ;;  dividend        2   12[BANK0 ] int 
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;  quotient        2   17[BANK0 ] int 
  3835 ;;  sign            1   16[BANK0 ] unsigned char 
  3836 ;;  counter         1   15[BANK0 ] unsigned char 
  3837 ;; Return value:  Size  Location     Type
  3838 ;;                  2   10[BANK0 ] int 
  3839 ;; Registers used:
  3840 ;;		wreg, status,2, status,0
  3841 ;; Tracked objects:
  3842 ;;		On entry : 0/0
  3843 ;;		On exit  : 0/0
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3846 ;;      Params:         0       4       0       0       0
  3847 ;;      Locals:         0       4       0       0       0
  3848 ;;      Temps:          0       1       0       0       0
  3849 ;;      Totals:         0       9       0       0       0
  3850 ;;Total ram usage:        9 bytes
  3851 ;; Hardware stack levels used: 1
  3852 ;; Hardware stack levels required when called: 2
  3853 ;; This function calls:
  3854 ;;		Nothing
  3855 ;; This function is called by:
  3856 ;;		_intToString
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860     0E20                     ___awdiv:	
  3861                           ;psect for function ___awdiv
  3862                           
  3863     0E20                     l2496:	
  3864                           ;incstack = 0
  3865                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3866                           
  3867     0E20  1283               	bcf	3,5	;RP0=0, select bank0
  3868     0E21  1303               	bcf	3,6	;RP1=0, select bank0
  3869     0E22  01E3               	clrf	___awdiv@sign
  3870     0E23                     l2498:
  3871     0E23  1FDE               	btfss	___awdiv@divisor+1,7
  3872     0E24  2E26               	goto	u2801
  3873     0E25  2E27               	goto	u2800
  3874     0E26                     u2801:
  3875     0E26  2E2E               	goto	l2504
  3876     0E27                     u2800:
  3877     0E27                     l2500:
  3878     0E27  09DD               	comf	___awdiv@divisor,f
  3879     0E28  09DE               	comf	___awdiv@divisor+1,f
  3880     0E29  0ADD               	incf	___awdiv@divisor,f
  3881     0E2A  1903               	skipnz
  3882     0E2B  0ADE               	incf	___awdiv@divisor+1,f
  3883     0E2C                     l2502:
  3884     0E2C  01E3               	clrf	___awdiv@sign
  3885     0E2D  0AE3               	incf	___awdiv@sign,f
  3886     0E2E                     l2504:
  3887     0E2E  1FE0               	btfss	___awdiv@dividend+1,7
  3888     0E2F  2E31               	goto	u2811
  3889     0E30  2E32               	goto	u2810
  3890     0E31                     u2811:
  3891     0E31  2E3B               	goto	l2510
  3892     0E32                     u2810:
  3893     0E32                     l2506:
  3894     0E32  09DF               	comf	___awdiv@dividend,f
  3895     0E33  09E0               	comf	___awdiv@dividend+1,f
  3896     0E34  0ADF               	incf	___awdiv@dividend,f
  3897     0E35  1903               	skipnz
  3898     0E36  0AE0               	incf	___awdiv@dividend+1,f
  3899     0E37                     l2508:
  3900     0E37  3001               	movlw	1
  3901     0E38  00E1               	movwf	??___awdiv
  3902     0E39  0861               	movf	??___awdiv,w
  3903     0E3A  06E3               	xorwf	___awdiv@sign,f
  3904     0E3B                     l2510:
  3905     0E3B  01E4               	clrf	___awdiv@quotient
  3906     0E3C  01E5               	clrf	___awdiv@quotient+1
  3907     0E3D                     l2512:
  3908     0E3D  085D               	movf	___awdiv@divisor,w
  3909     0E3E  045E               	iorwf	___awdiv@divisor+1,w
  3910     0E3F  1903               	btfsc	3,2
  3911     0E40  2E42               	goto	u2821
  3912     0E41  2E43               	goto	u2820
  3913     0E42                     u2821:
  3914     0E42  2E7A               	goto	l2532
  3915     0E43                     u2820:
  3916     0E43                     l2514:
  3917     0E43  01E2               	clrf	___awdiv@counter
  3918     0E44  0AE2               	incf	___awdiv@counter,f
  3919     0E45  2E51               	goto	l2520
  3920     0E46                     l2516:
  3921     0E46  3001               	movlw	1
  3922     0E47                     u2835:
  3923     0E47  1003               	clrc
  3924     0E48  0DDD               	rlf	___awdiv@divisor,f
  3925     0E49  0DDE               	rlf	___awdiv@divisor+1,f
  3926     0E4A  3EFF               	addlw	-1
  3927     0E4B  1D03               	skipz
  3928     0E4C  2E47               	goto	u2835
  3929     0E4D                     l2518:
  3930     0E4D  3001               	movlw	1
  3931     0E4E  00E1               	movwf	??___awdiv
  3932     0E4F  0861               	movf	??___awdiv,w
  3933     0E50  07E2               	addwf	___awdiv@counter,f
  3934     0E51                     l2520:
  3935     0E51  1FDE               	btfss	___awdiv@divisor+1,7
  3936     0E52  2E54               	goto	u2841
  3937     0E53  2E55               	goto	u2840
  3938     0E54                     u2841:
  3939     0E54  2E46               	goto	l2516
  3940     0E55                     u2840:
  3941     0E55                     l2522:
  3942     0E55  3001               	movlw	1
  3943     0E56                     u2855:
  3944     0E56  1003               	clrc
  3945     0E57  0DE4               	rlf	___awdiv@quotient,f
  3946     0E58  0DE5               	rlf	___awdiv@quotient+1,f
  3947     0E59  3EFF               	addlw	-1
  3948     0E5A  1D03               	skipz
  3949     0E5B  2E56               	goto	u2855
  3950     0E5C  085E               	movf	___awdiv@divisor+1,w
  3951     0E5D  0260               	subwf	___awdiv@dividend+1,w
  3952     0E5E  1D03               	skipz
  3953     0E5F  2E62               	goto	u2865
  3954     0E60  085D               	movf	___awdiv@divisor,w
  3955     0E61  025F               	subwf	___awdiv@dividend,w
  3956     0E62                     u2865:
  3957     0E62  1C03               	skipc
  3958     0E63  2E65               	goto	u2861
  3959     0E64  2E66               	goto	u2860
  3960     0E65                     u2861:
  3961     0E65  2E6D               	goto	l2528
  3962     0E66                     u2860:
  3963     0E66                     l2524:
  3964     0E66  085D               	movf	___awdiv@divisor,w
  3965     0E67  02DF               	subwf	___awdiv@dividend,f
  3966     0E68  085E               	movf	___awdiv@divisor+1,w
  3967     0E69  1C03               	skipc
  3968     0E6A  03E0               	decf	___awdiv@dividend+1,f
  3969     0E6B  02E0               	subwf	___awdiv@dividend+1,f
  3970     0E6C                     l2526:
  3971     0E6C  1464               	bsf	___awdiv@quotient,0
  3972     0E6D                     l2528:
  3973     0E6D  3001               	movlw	1
  3974     0E6E                     u2875:
  3975     0E6E  1003               	clrc
  3976     0E6F  0CDE               	rrf	___awdiv@divisor+1,f
  3977     0E70  0CDD               	rrf	___awdiv@divisor,f
  3978     0E71  3EFF               	addlw	-1
  3979     0E72  1D03               	skipz
  3980     0E73  2E6E               	goto	u2875
  3981     0E74                     l2530:
  3982     0E74  3001               	movlw	1
  3983     0E75  02E2               	subwf	___awdiv@counter,f
  3984     0E76  1D03               	btfss	3,2
  3985     0E77  2E79               	goto	u2881
  3986     0E78  2E7A               	goto	u2880
  3987     0E79                     u2881:
  3988     0E79  2E55               	goto	l2522
  3989     0E7A                     u2880:
  3990     0E7A                     l2532:
  3991     0E7A  0863               	movf	___awdiv@sign,w
  3992     0E7B  1903               	btfsc	3,2
  3993     0E7C  2E7E               	goto	u2891
  3994     0E7D  2E7F               	goto	u2890
  3995     0E7E                     u2891:
  3996     0E7E  2E84               	goto	l2536
  3997     0E7F                     u2890:
  3998     0E7F                     l2534:
  3999     0E7F  09E4               	comf	___awdiv@quotient,f
  4000     0E80  09E5               	comf	___awdiv@quotient+1,f
  4001     0E81  0AE4               	incf	___awdiv@quotient,f
  4002     0E82  1903               	skipnz
  4003     0E83  0AE5               	incf	___awdiv@quotient+1,f
  4004     0E84                     l2536:
  4005     0E84  0865               	movf	___awdiv@quotient+1,w
  4006     0E85  00DE               	movwf	?___awdiv+1
  4007     0E86  0864               	movf	___awdiv@quotient,w
  4008     0E87  00DD               	movwf	?___awdiv
  4009     0E88                     l583:
  4010     0E88  0008               	return
  4011     0E89                     __end_of___awdiv:
  4012                           
  4013                           	psect	text11
  4014     0D0F                     __ptext11:	
  4015 ;; *************** function _UART_Write *****************
  4016 ;; Defined at:
  4017 ;;		line 231 in file "main.c"
  4018 ;; Parameters:    Size  Location     Type
  4019 ;;  data            1    wreg     unsigned char 
  4020 ;; Auto vars:     Size  Location     Type
  4021 ;;  data            1    0[BANK0 ] unsigned char 
  4022 ;; Return value:  Size  Location     Type
  4023 ;;                  1    wreg      void 
  4024 ;; Registers used:
  4025 ;;		wreg
  4026 ;; Tracked objects:
  4027 ;;		On entry : 0/0
  4028 ;;		On exit  : 0/0
  4029 ;;		Unchanged: 0/0
  4030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4031 ;;      Params:         0       0       0       0       0
  4032 ;;      Locals:         0       1       0       0       0
  4033 ;;      Temps:          0       0       0       0       0
  4034 ;;      Totals:         0       1       0       0       0
  4035 ;;Total ram usage:        1 bytes
  4036 ;; Hardware stack levels used: 1
  4037 ;; Hardware stack levels required when called: 2
  4038 ;; This function calls:
  4039 ;;		Nothing
  4040 ;; This function is called by:
  4041 ;;		_main
  4042 ;;		_UART_Read1
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046     0D0F                     _UART_Write:	
  4047                           ;psect for function _UART_Write
  4048                           
  4049                           
  4050                           ;incstack = 0
  4051                           ; Regs used in _UART_Write: [wreg]
  4052                           ;UART_Write@data stored from wreg
  4053     0D0F  1283               	bcf	3,5	;RP0=0, select bank0
  4054     0D10  1303               	bcf	3,6	;RP1=0, select bank0
  4055     0D11  00D3               	movwf	UART_Write@data
  4056     0D12                     l2588:
  4057     0D12                     l199:	
  4058                           ;main.c: 232:     while (!TXIF)
  4059                           
  4060                           
  4061                           ;main.c: 232:     while (!TXIF)
  4062     0D12  1E0C               	btfss	12,4	;volatile
  4063     0D13  2D15               	goto	u3021
  4064     0D14  2D16               	goto	u3020
  4065     0D15                     u3021:
  4066     0D15  2D12               	goto	l199
  4067     0D16                     u3020:
  4068     0D16                     l2590:
  4069                           
  4070                           ;main.c: 234:     TXREG = data;
  4071     0D16  0853               	movf	UART_Write@data,w
  4072     0D17  0099               	movwf	25	;volatile
  4073     0D18                     l202:
  4074     0D18  0008               	return
  4075     0D19                     __end_of_UART_Write:
  4076                           
  4077                           	psect	text12
  4078     07F9                     __ptext12:	
  4079 ;; *************** function _RS485_TxEnable *****************
  4080 ;; Defined at:
  4081 ;;		line 221 in file "main.c"
  4082 ;; Parameters:    Size  Location     Type
  4083 ;;		None
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;		None
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  1    wreg      void 
  4088 ;; Registers used:
  4089 ;;		None
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4095 ;;      Params:         0       0       0       0       0
  4096 ;;      Locals:         0       0       0       0       0
  4097 ;;      Temps:          0       0       0       0       0
  4098 ;;      Totals:         0       0       0       0       0
  4099 ;;Total ram usage:        0 bytes
  4100 ;; Hardware stack levels used: 1
  4101 ;; Hardware stack levels required when called: 2
  4102 ;; This function calls:
  4103 ;;		Nothing
  4104 ;; This function is called by:
  4105 ;;		_main
  4106 ;;		_UART_Read1
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110     07F9                     _RS485_TxEnable:	
  4111                           ;psect for function _RS485_TxEnable
  4112                           
  4113     07F9                     l2586:	
  4114                           ;incstack = 0
  4115                           ; Regs used in _RS485_TxEnable: []
  4116                           
  4117                           
  4118                           ;main.c: 222:     RC0 = 1;
  4119     07F9  1283               	bcf	3,5	;RP0=0, select bank0
  4120     07FA  1303               	bcf	3,6	;RP1=0, select bank0
  4121     07FB  1407               	bsf	7,0	;volatile
  4122                           
  4123                           ;main.c: 223:     RC1 = 0;
  4124     07FC  1087               	bcf	7,1	;volatile
  4125     07FD                     l193:
  4126     07FD  0008               	return
  4127     07FE                     __end_of_RS485_TxEnable:
  4128                           
  4129                           	psect	text13
  4130     0D02                     __ptext13:	
  4131 ;; *************** function _RS485_RxEnable *****************
  4132 ;; Defined at:
  4133 ;;		line 226 in file "main.c"
  4134 ;; Parameters:    Size  Location     Type
  4135 ;;		None
  4136 ;; Auto vars:     Size  Location     Type
  4137 ;;		None
  4138 ;; Return value:  Size  Location     Type
  4139 ;;                  1    wreg      void 
  4140 ;; Registers used:
  4141 ;;		None
  4142 ;; Tracked objects:
  4143 ;;		On entry : 0/0
  4144 ;;		On exit  : 0/0
  4145 ;;		Unchanged: 0/0
  4146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4147 ;;      Params:         0       0       0       0       0
  4148 ;;      Locals:         0       0       0       0       0
  4149 ;;      Temps:          0       0       0       0       0
  4150 ;;      Totals:         0       0       0       0       0
  4151 ;;Total ram usage:        0 bytes
  4152 ;; Hardware stack levels used: 1
  4153 ;; Hardware stack levels required when called: 2
  4154 ;; This function calls:
  4155 ;;		Nothing
  4156 ;; This function is called by:
  4157 ;;		_main
  4158 ;;		_UART_Read1
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161                           
  4162     0D02                     _RS485_RxEnable:	
  4163                           ;psect for function _RS485_RxEnable
  4164                           
  4165     0D02                     l2592:	
  4166                           ;incstack = 0
  4167                           ; Regs used in _RS485_RxEnable: []
  4168                           
  4169                           
  4170                           ;main.c: 227:     RC0 = 0;
  4171     0D02  1283               	bcf	3,5	;RP0=0, select bank0
  4172     0D03  1303               	bcf	3,6	;RP1=0, select bank0
  4173     0D04  1007               	bcf	7,0	;volatile
  4174                           
  4175                           ;main.c: 228:     RC1 = 1;
  4176     0D05  1487               	bsf	7,1	;volatile
  4177     0D06                     l196:
  4178     0D06  0008               	return
  4179     0D07                     __end_of_RS485_RxEnable:
  4180                           
  4181                           	psect	text14
  4182     0D28                     __ptext14:	
  4183 ;; *************** function _UART_Init *****************
  4184 ;; Defined at:
  4185 ;;		line 203 in file "main.c"
  4186 ;; Parameters:    Size  Location     Type
  4187 ;;		None
  4188 ;; Auto vars:     Size  Location     Type
  4189 ;;		None
  4190 ;; Return value:  Size  Location     Type
  4191 ;;                  1    wreg      void 
  4192 ;; Registers used:
  4193 ;;		wreg
  4194 ;; Tracked objects:
  4195 ;;		On entry : 0/0
  4196 ;;		On exit  : 0/0
  4197 ;;		Unchanged: 0/0
  4198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4199 ;;      Params:         0       0       0       0       0
  4200 ;;      Locals:         0       0       0       0       0
  4201 ;;      Temps:          0       0       0       0       0
  4202 ;;      Totals:         0       0       0       0       0
  4203 ;;Total ram usage:        0 bytes
  4204 ;; Hardware stack levels used: 1
  4205 ;; Hardware stack levels required when called: 2
  4206 ;; This function calls:
  4207 ;;		Nothing
  4208 ;; This function is called by:
  4209 ;;		_main
  4210 ;; This function uses a non-reentrant model
  4211 ;;
  4212                           
  4213     0D28                     _UART_Init:	
  4214                           ;psect for function _UART_Init
  4215                           
  4216     0D28                     l2616:	
  4217                           ;incstack = 0
  4218                           ; Regs used in _UART_Init: [wreg]
  4219                           
  4220                           
  4221                           ;main.c: 205:     TRISC6 = 0;
  4222     0D28  1683               	bsf	3,5	;RP0=1, select bank1
  4223     0D29  1303               	bcf	3,6	;RP1=0, select bank1
  4224     0D2A  1307               	bcf	7,6	;volatile
  4225                           
  4226                           ;main.c: 206:     TRISC7 = 1;
  4227     0D2B  1787               	bsf	7,7	;volatile
  4228                           
  4229                           ;main.c: 209:     BRGH = 1;
  4230     0D2C  1518               	bsf	24,2	;volatile
  4231     0D2D                     l2618:
  4232                           
  4233                           ;main.c: 210:     SPBRG = 51;
  4234     0D2D  3033               	movlw	51
  4235     0D2E  0099               	movwf	25	;volatile
  4236     0D2F                     l2620:
  4237                           
  4238                           ;main.c: 213:     SYNC = 0;
  4239     0D2F  1218               	bcf	24,4	;volatile
  4240     0D30                     l2622:
  4241                           
  4242                           ;main.c: 214:     SPEN = 1;
  4243     0D30  1283               	bcf	3,5	;RP0=0, select bank0
  4244     0D31  1303               	bcf	3,6	;RP1=0, select bank0
  4245     0D32  1798               	bsf	24,7	;volatile
  4246     0D33                     l2624:
  4247                           
  4248                           ;main.c: 217:     TXEN = 1;
  4249     0D33  1683               	bsf	3,5	;RP0=1, select bank1
  4250     0D34  1303               	bcf	3,6	;RP1=0, select bank1
  4251     0D35  1698               	bsf	24,5	;volatile
  4252     0D36                     l2626:
  4253                           
  4254                           ;main.c: 218:     CREN = 1;
  4255     0D36  1283               	bcf	3,5	;RP0=0, select bank0
  4256     0D37  1303               	bcf	3,6	;RP1=0, select bank0
  4257     0D38  1618               	bsf	24,4	;volatile
  4258     0D39                     l190:
  4259     0D39  0008               	return
  4260     0D3A                     __end_of_UART_Init:
  4261                           
  4262                           	psect	text15
  4263     0D19                     __ptext15:	
  4264 ;; *************** function _Timer0_Init *****************
  4265 ;; Defined at:
  4266 ;;		line 548 in file "main.c"
  4267 ;; Parameters:    Size  Location     Type
  4268 ;;		None
  4269 ;; Auto vars:     Size  Location     Type
  4270 ;;		None
  4271 ;; Return value:  Size  Location     Type
  4272 ;;                  1    wreg      void 
  4273 ;; Registers used:
  4274 ;;		wreg
  4275 ;; Tracked objects:
  4276 ;;		On entry : 0/0
  4277 ;;		On exit  : 0/0
  4278 ;;		Unchanged: 0/0
  4279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4280 ;;      Params:         0       0       0       0       0
  4281 ;;      Locals:         0       0       0       0       0
  4282 ;;      Temps:          0       0       0       0       0
  4283 ;;      Totals:         0       0       0       0       0
  4284 ;;Total ram usage:        0 bytes
  4285 ;; Hardware stack levels used: 1
  4286 ;; Hardware stack levels required when called: 2
  4287 ;; This function calls:
  4288 ;;		Nothing
  4289 ;; This function is called by:
  4290 ;;		_main
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293                           
  4294     0D19                     _Timer0_Init:	
  4295                           ;psect for function _Timer0_Init
  4296                           
  4297     0D19                     l2652:	
  4298                           ;incstack = 0
  4299                           ; Regs used in _Timer0_Init: [wreg]
  4300                           
  4301                           
  4302                           ;main.c: 550:     T0CS = 0;
  4303     0D19  1683               	bsf	3,5	;RP0=1, select bank1
  4304     0D1A  1303               	bcf	3,6	;RP1=0, select bank1
  4305     0D1B  1281               	bcf	1,5	;volatile
  4306                           
  4307                           ;main.c: 551:     PSA = 0;
  4308     0D1C  1181               	bcf	1,3	;volatile
  4309                           
  4310                           ;main.c: 552:     PS2 = 1;
  4311     0D1D  1501               	bsf	1,2	;volatile
  4312                           
  4313                           ;main.c: 553:     PS1 = 1;
  4314     0D1E  1481               	bsf	1,1	;volatile
  4315                           
  4316                           ;main.c: 554:     PS0 = 1;
  4317     0D1F  1401               	bsf	1,0	;volatile
  4318     0D20                     l2654:
  4319                           
  4320                           ;main.c: 557:     TMR0 = 6;
  4321     0D20  3006               	movlw	6
  4322     0D21  1283               	bcf	3,5	;RP0=0, select bank0
  4323     0D22  1303               	bcf	3,6	;RP1=0, select bank0
  4324     0D23  0081               	movwf	1	;volatile
  4325     0D24                     l2656:
  4326                           
  4327                           ;main.c: 558:     TMR0IF = 0;
  4328     0D24  110B               	bcf	11,2	;volatile
  4329     0D25                     l2658:
  4330                           
  4331                           ;main.c: 559:     TMR0IE = 1;
  4332     0D25  168B               	bsf	11,5	;volatile
  4333     0D26                     l2660:
  4334                           
  4335                           ;main.c: 560:     GIE = 1;
  4336     0D26  178B               	bsf	11,7	;volatile
  4337     0D27                     l310:
  4338     0D27  0008               	return
  4339     0D28                     __end_of_Timer0_Init:
  4340                           
  4341                           	psect	text16
  4342     0F73                     __ptext16:	
  4343 ;; *************** function _KeyPadReader *****************
  4344 ;; Defined at:
  4345 ;;		line 573 in file "main.c"
  4346 ;; Parameters:    Size  Location     Type
  4347 ;;		None
  4348 ;; Auto vars:     Size  Location     Type
  4349 ;;		None
  4350 ;; Return value:  Size  Location     Type
  4351 ;;                  1    wreg      unsigned char 
  4352 ;; Registers used:
  4353 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4354 ;; Tracked objects:
  4355 ;;		On entry : 0/0
  4356 ;;		On exit  : 0/0
  4357 ;;		Unchanged: 0/0
  4358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4359 ;;      Params:         0       0       0       0       0
  4360 ;;      Locals:         0       0       0       0       0
  4361 ;;      Temps:          0       2       0       0       0
  4362 ;;      Totals:         0       2       0       0       0
  4363 ;;Total ram usage:        2 bytes
  4364 ;; Hardware stack levels used: 2
  4365 ;; Hardware stack levels required when called: 2
  4366 ;; This function calls:
  4367 ;;		Nothing
  4368 ;; This function is called by:
  4369 ;;		_main
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373     0F73                     _KeyPadReader:	
  4374                           ;psect for function _KeyPadReader
  4375                           
  4376     0F73                     l2674:	
  4377                           ;incstack = 0
  4378                           ; Regs used in _KeyPadReader: [wreg-fsr0h+status,2+status,0+pclath]
  4379                           
  4380                           
  4381                           ;main.c: 574:     TRISD |= 0x0F;
  4382     0F73  300F               	movlw	15
  4383     0F74  1283               	bcf	3,5	;RP0=0, select bank0
  4384     0F75  1303               	bcf	3,6	;RP1=0, select bank0
  4385     0F76  00D3               	movwf	??_KeyPadReader
  4386     0F77  0853               	movf	??_KeyPadReader,w
  4387     0F78  1683               	bsf	3,5	;RP0=1, select bank1
  4388     0F79  1303               	bcf	3,6	;RP1=0, select bank1
  4389     0F7A  0488               	iorwf	8,f	;volatile
  4390     0F7B                     l2676:
  4391                           
  4392                           ;main.c: 577:     for (colScan = 0; colScan < 3; colScan++) {
  4393     0F7B  01F7               	clrf	_colScan
  4394     0F7C                     l2678:
  4395     0F7C  3003               	movlw	3
  4396     0F7D  0277               	subwf	_colScan,w
  4397     0F7E  1C03               	skipc
  4398     0F7F  2F81               	goto	u3061
  4399     0F80  2F82               	goto	u3060
  4400     0F81                     u3061:
  4401     0F81  2F83               	goto	l2682
  4402     0F82                     u3060:
  4403     0F82  2F7B               	goto	l2676
  4404     0F83                     l2682:
  4405                           
  4406                           ;main.c: 578:         PORTB = PORTB | 0x07;
  4407     0F83  1283               	bcf	3,5	;RP0=0, select bank0
  4408     0F84  1303               	bcf	3,6	;RP1=0, select bank0
  4409     0F85  0806               	movf	6,w	;volatile
  4410     0F86  3807               	iorlw	7
  4411     0F87  0086               	movwf	6	;volatile
  4412     0F88                     l2684:
  4413                           
  4414                           ;main.c: 579:         PORTB &= colMask[colScan];
  4415     0F88  0877               	movf	_colScan,w
  4416     0F89  3E11               	addlw	low ((_colMask-__stringbase)| (0+32768))
  4417     0F8A  0084               	movwf	4
  4418     0F8B  120A  158A  200A  120A  158A  	fcall	stringdir
  4419     0F90  00D3               	movwf	??_KeyPadReader
  4420     0F91  0853               	movf	??_KeyPadReader,w
  4421     0F92  0586               	andwf	6,f	;volatile
  4422     0F93                     l2686:
  4423                           
  4424                           ;main.c: 582:         for (rowScan = 0; rowScan < 4; rowScan++) {
  4425     0F93  01F6               	clrf	_rowScan
  4426     0F94                     l2688:
  4427     0F94  3004               	movlw	4
  4428     0F95  0276               	subwf	_rowScan,w
  4429     0F96  1C03               	skipc
  4430     0F97  2F99               	goto	u3071
  4431     0F98  2F9A               	goto	u3070
  4432     0F99                     u3071:
  4433     0F99  2F9B               	goto	l2692
  4434     0F9A                     u3070:
  4435     0F9A  2FFA               	goto	l2724
  4436     0F9B                     l2692:
  4437                           
  4438                           ;main.c: 583:             if (!(PORTD & rowMask[rowScan]) && (old_btn)) {
  4439     0F9B  0876               	movf	_rowScan,w
  4440     0F9C  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  4441     0F9D  0084               	movwf	4
  4442     0F9E  120A  158A  200A  120A  158A  	fcall	stringdir
  4443     0FA3  0508               	andwf	8,w	;volatile
  4444     0FA4  1D03               	btfss	3,2
  4445     0FA5  2FA7               	goto	u3081
  4446     0FA6  2FA8               	goto	u3080
  4447     0FA7                     u3081:
  4448     0FA7  2FB1               	goto	l2700
  4449     0FA8                     u3080:
  4450     0FA8                     l2694:
  4451     0FA8  1C78               	btfss	_old_btn/(0+8),_old_btn& (0+7)
  4452     0FA9  2FAB               	goto	u3091
  4453     0FAA  2FAC               	goto	u3090
  4454     0FAB                     u3091:
  4455     0FAB  2FB1               	goto	l2700
  4456     0FAC                     u3090:
  4457     0FAC                     l2696:
  4458                           
  4459                           ;main.c: 584:                 old_btn = 0;
  4460     0FAC  1078               	bcf	_old_btn/(0+8),_old_btn& (0+7)
  4461     0FAD                     l2698:
  4462                           
  4463                           ;main.c: 585:                 stato++;
  4464     0FAD  3001               	movlw	1
  4465     0FAE  00D3               	movwf	??_KeyPadReader
  4466     0FAF  0853               	movf	??_KeyPadReader,w
  4467     0FB0  07F5               	addwf	_stato,f
  4468     0FB1                     l2700:
  4469                           
  4470                           ;main.c: 587:             if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  4471     0FB1  0876               	movf	_rowScan,w
  4472     0FB2  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  4473     0FB3  0084               	movwf	4
  4474     0FB4  120A  158A  200A  120A  158A  	fcall	stringdir
  4475     0FB9  0508               	andwf	8,w	;volatile
  4476     0FBA  1903               	btfsc	3,2
  4477     0FBB  2FBD               	goto	u3101
  4478     0FBC  2FBE               	goto	u3100
  4479     0FBD                     u3101:
  4480     0FBD  2FE1               	goto	l2712
  4481     0FBE                     u3100:
  4482     0FBE                     l2702:
  4483     0FBE  1878               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  4484     0FBF  2FC1               	goto	u3111
  4485     0FC0  2FC2               	goto	u3110
  4486     0FC1                     u3111:
  4487     0FC1  2FE1               	goto	l2712
  4488     0FC2                     u3110:
  4489     0FC2                     l2704:
  4490                           
  4491                           ;main.c: 588:                 _delay((unsigned long)((10)*(20000000/4000.0)));
  4492     0FC2  3041               	movlw	65
  4493     0FC3  1283               	bcf	3,5	;RP0=0, select bank0
  4494     0FC4  1303               	bcf	3,6	;RP1=0, select bank0
  4495     0FC5  00D4               	movwf	??_KeyPadReader+1
  4496     0FC6  30ED               	movlw	237
  4497     0FC7  00D3               	movwf	??_KeyPadReader
  4498     0FC8                     u3997:
  4499     0FC8  0BD3               	decfsz	??_KeyPadReader,f
  4500     0FC9  2FC8               	goto	u3997
  4501     0FCA  0BD4               	decfsz	??_KeyPadReader+1,f
  4502     0FCB  2FC8               	goto	u3997
  4503     0FCC  2FCD               	nop2
  4504     0FCD                     l2706:
  4505                           
  4506                           ;main.c: 589:                 if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  4507     0FCD  0876               	movf	_rowScan,w
  4508     0FCE  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  4509     0FCF  0084               	movwf	4
  4510     0FD0  120A  158A  200A  120A  158A  	fcall	stringdir
  4511     0FD5  1283               	bcf	3,5	;RP0=0, select bank0
  4512     0FD6  1303               	bcf	3,6	;RP1=0, select bank0
  4513     0FD7  0508               	andwf	8,w	;volatile
  4514     0FD8  1903               	btfsc	3,2
  4515     0FD9  2FDB               	goto	u3121
  4516     0FDA  2FDC               	goto	u3120
  4517     0FDB                     u3121:
  4518     0FDB  2FE1               	goto	l2712
  4519     0FDC                     u3120:
  4520     0FDC                     l2708:
  4521     0FDC  1878               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  4522     0FDD  2FDF               	goto	u3131
  4523     0FDE  2FE0               	goto	u3130
  4524     0FDF                     u3131:
  4525     0FDF  2FE1               	goto	l2712
  4526     0FE0                     u3130:
  4527     0FE0                     l2710:
  4528                           
  4529                           ;main.c: 590:                     old_btn = 1;
  4530     0FE0  1478               	bsf	_old_btn/(0+8),_old_btn& (0+7)
  4531     0FE1                     l2712:
  4532                           
  4533                           ;main.c: 593:             if (stato != old_stato) {
  4534     0FE1  0875               	movf	_stato,w
  4535     0FE2  0648               	xorwf	_old_stato,w
  4536     0FE3  1903               	skipnz
  4537     0FE4  2FE6               	goto	u3141
  4538     0FE5  2FE7               	goto	u3140
  4539     0FE6                     u3141:
  4540     0FE6  2FF5               	goto	l2720
  4541     0FE7                     u3140:
  4542     0FE7                     l2714:
  4543                           
  4544                           ;main.c: 594:                 keypressed = rowScan + (4 * colScan);
  4545     0FE7  0877               	movf	_colScan,w
  4546     0FE8  00D3               	movwf	??_KeyPadReader
  4547     0FE9  3002               	movlw	2
  4548     0FEA                     u3155:
  4549     0FEA  1003               	clrc
  4550     0FEB  0DD3               	rlf	??_KeyPadReader,f
  4551     0FEC  3EFF               	addlw	-1
  4552     0FED  1D03               	skipz
  4553     0FEE  2FEA               	goto	u3155
  4554     0FEF  0876               	movf	_rowScan,w
  4555     0FF0  0753               	addwf	??_KeyPadReader,w
  4556     0FF1  00CA               	movwf	_keypressed
  4557     0FF2                     l2716:
  4558                           
  4559                           ;main.c: 597:                 old_stato = stato;
  4560     0FF2  0875               	movf	_stato,w
  4561     0FF3  00C8               	movwf	_old_stato
  4562     0FF4  2FFF               	goto	l328
  4563     0FF5                     l2720:
  4564                           
  4565                           ;main.c: 600:         }
  4566     0FF5  3001               	movlw	1
  4567     0FF6  00D3               	movwf	??_KeyPadReader
  4568     0FF7  0853               	movf	??_KeyPadReader,w
  4569     0FF8  07F6               	addwf	_rowScan,f
  4570     0FF9  2F94               	goto	l2688
  4571     0FFA                     l2724:
  4572                           
  4573                           ;main.c: 601:     }
  4574     0FFA  3001               	movlw	1
  4575     0FFB  00D3               	movwf	??_KeyPadReader
  4576     0FFC  0853               	movf	??_KeyPadReader,w
  4577     0FFD  07F7               	addwf	_colScan,f
  4578     0FFE  2F7C               	goto	l2678
  4579     0FFF                     l328:
  4580     0FFF  0008               	return
  4581     1000                     __end_of_KeyPadReader:
  4582                           
  4583                           	psect	text17
  4584     0D4F                     __ptext17:	
  4585 ;; *************** function _GenerateRandomNumber *****************
  4586 ;; Defined at:
  4587 ;;		line 563 in file "main.c"
  4588 ;; Parameters:    Size  Location     Type
  4589 ;;		None
  4590 ;; Auto vars:     Size  Location     Type
  4591 ;;  count           2    1[BANK0 ] unsigned int 
  4592 ;;  randomNum       1    0[BANK0 ] unsigned char 
  4593 ;; Return value:  Size  Location     Type
  4594 ;;                  1    wreg      unsigned char 
  4595 ;; Registers used:
  4596 ;;		wreg, status,2, status,0
  4597 ;; Tracked objects:
  4598 ;;		On entry : 0/0
  4599 ;;		On exit  : 0/0
  4600 ;;		Unchanged: 0/0
  4601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4602 ;;      Params:         0       0       0       0       0
  4603 ;;      Locals:         0       3       0       0       0
  4604 ;;      Temps:          0       0       0       0       0
  4605 ;;      Totals:         0       3       0       0       0
  4606 ;;Total ram usage:        3 bytes
  4607 ;; Hardware stack levels used: 1
  4608 ;; Hardware stack levels required when called: 2
  4609 ;; This function calls:
  4610 ;;		Nothing
  4611 ;; This function is called by:
  4612 ;;		_main
  4613 ;; This function uses a non-reentrant model
  4614 ;;
  4615                           
  4616     0D4F                     _GenerateRandomNumber:	
  4617                           ;psect for function _GenerateRandomNumber
  4618                           
  4619     0D4F                     l2662:	
  4620                           ;incstack = 0
  4621                           ; Regs used in _GenerateRandomNumber: [wreg+status,2+status,0]
  4622                           
  4623                           
  4624                           ;main.c: 564:     unsigned int count = 0;
  4625     0D4F  1283               	bcf	3,5	;RP0=0, select bank0
  4626     0D50  1303               	bcf	3,6	;RP1=0, select bank0
  4627     0D51  01D4               	clrf	GenerateRandomNumber@count
  4628     0D52  01D5               	clrf	GenerateRandomNumber@count+1
  4629                           
  4630                           ;main.c: 565:     while (count != 186){
  4631     0D53  2D5A               	goto	l2666
  4632     0D54                     l2664:
  4633                           
  4634                           ;main.c: 566:         count++;
  4635     0D54  3001               	movlw	1
  4636     0D55  07D4               	addwf	GenerateRandomNumber@count,f
  4637     0D56  1803               	skipnc
  4638     0D57  0AD5               	incf	GenerateRandomNumber@count+1,f
  4639     0D58  3000               	movlw	0
  4640     0D59  07D5               	addwf	GenerateRandomNumber@count+1,f
  4641     0D5A                     l2666:
  4642                           
  4643                           ;main.c: 565:     while (count != 186){
  4644     0D5A  30BA               	movlw	186
  4645     0D5B  0654               	xorwf	GenerateRandomNumber@count,w
  4646     0D5C  0455               	iorwf	GenerateRandomNumber@count+1,w
  4647     0D5D  1D03               	btfss	3,2
  4648     0D5E  2D60               	goto	u3051
  4649     0D5F  2D61               	goto	u3050
  4650     0D60                     u3051:
  4651     0D60  2D54               	goto	l2664
  4652     0D61                     u3050:
  4653     0D61                     l2668:
  4654                           
  4655                           ;main.c: 568:     unsigned char randomNum = TMR0;
  4656     0D61  0801               	movf	1,w	;volatile
  4657     0D62  00D3               	movwf	GenerateRandomNumber@randomNum
  4658     0D63                     l2670:
  4659                           
  4660                           ;main.c: 569:     TMR0IF = 0;
  4661     0D63  110B               	bcf	11,2	;volatile
  4662                           
  4663                           ;main.c: 570:     return randomNum;
  4664     0D64  0853               	movf	GenerateRandomNumber@randomNum,w
  4665     0D65                     l316:
  4666     0D65  0008               	return
  4667     0D66                     __end_of_GenerateRandomNumber:
  4668                           
  4669                           	psect	text18
  4670     06EC                     __ptext18:	
  4671 ;; *************** function _ISR *****************
  4672 ;; Defined at:
  4673 ;;		line 456 in file "main.c"
  4674 ;; Parameters:    Size  Location     Type
  4675 ;;		None
  4676 ;; Auto vars:     Size  Location     Type
  4677 ;;		None
  4678 ;; Return value:  Size  Location     Type
  4679 ;;                  1    wreg      void 
  4680 ;; Registers used:
  4681 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4682 ;; Tracked objects:
  4683 ;;		On entry : 0/0
  4684 ;;		On exit  : 0/0
  4685 ;;		Unchanged: 0/0
  4686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4687 ;;      Params:         0       0       0       0       0
  4688 ;;      Locals:         0       0       0       0       0
  4689 ;;      Temps:          5       0       0       0       0
  4690 ;;      Totals:         5       0       0       0       0
  4691 ;;Total ram usage:        5 bytes
  4692 ;; Hardware stack levels used: 2
  4693 ;; This function calls:
  4694 ;;		Nothing
  4695 ;; This function is called by:
  4696 ;;		Interrupt level 1
  4697 ;; This function uses a non-reentrant model
  4698 ;;
  4699                           
  4700     06EC                     _ISR:	
  4701                           ;psect for function _ISR
  4702                           
  4703     06EC                     i1l2398:
  4704     06EC                     i1l253:	
  4705                           ;main.c: 459:     }
  4706                           
  4707                           
  4708                           ;main.c: 457:     while (!TMR0IF){
  4709     06EC  1D0B               	btfss	11,2	;volatile
  4710     06ED  2EEF               	goto	u250_21
  4711     06EE  2EF0               	goto	u250_20
  4712     06EF                     u250_21:
  4713     06EF  2EEC               	goto	i1l253
  4714     06F0                     u250_20:
  4715     06F0                     i1l255:
  4716                           
  4717                           ;main.c: 460:     TMR0IF = 0;
  4718     06F0  110B               	bcf	11,2	;volatile
  4719     06F1                     i1l256:	
  4720                           ;main.c: 463:     }
  4721                           
  4722                           
  4723                           ;main.c: 461:     while (!TMR0IF){
  4724     06F1  1D0B               	btfss	11,2	;volatile
  4725     06F2  2EF4               	goto	u251_21
  4726     06F3  2EF5               	goto	u251_20
  4727     06F4                     u251_21:
  4728     06F4  2EF1               	goto	i1l256
  4729     06F5                     u251_20:
  4730     06F5                     i1l258:
  4731                           
  4732                           ;main.c: 464:     TMR0IF = 0;
  4733     06F5  110B               	bcf	11,2	;volatile
  4734     06F6                     i1l259:	
  4735                           ;main.c: 467:     }
  4736                           
  4737                           
  4738                           ;main.c: 465:     while (!TMR0IF){
  4739     06F6  1D0B               	btfss	11,2	;volatile
  4740     06F7  2EF9               	goto	u252_21
  4741     06F8  2EFA               	goto	u252_20
  4742     06F9                     u252_21:
  4743     06F9  2EF6               	goto	i1l259
  4744     06FA                     u252_20:
  4745     06FA                     i1l261:
  4746                           
  4747                           ;main.c: 468:     TMR0IF = 0;
  4748     06FA  110B               	bcf	11,2	;volatile
  4749     06FB                     i1l262:	
  4750                           ;main.c: 471:     }
  4751                           
  4752                           
  4753                           ;main.c: 469:     while (!TMR0IF){
  4754     06FB  1D0B               	btfss	11,2	;volatile
  4755     06FC  2EFE               	goto	u253_21
  4756     06FD  2EFF               	goto	u253_20
  4757     06FE                     u253_21:
  4758     06FE  2EFB               	goto	i1l262
  4759     06FF                     u253_20:
  4760     06FF                     i1l264:
  4761                           
  4762                           ;main.c: 472:     TMR0IF = 0;
  4763     06FF  110B               	bcf	11,2	;volatile
  4764     0700                     i1l265:	
  4765                           ;main.c: 475:     }
  4766                           
  4767                           
  4768                           ;main.c: 473:     while (!TMR0IF){
  4769     0700  1D0B               	btfss	11,2	;volatile
  4770     0701  2F03               	goto	u254_21
  4771     0702  2F04               	goto	u254_20
  4772     0703                     u254_21:
  4773     0703  2F00               	goto	i1l265
  4774     0704                     u254_20:
  4775     0704                     i1l267:
  4776                           
  4777                           ;main.c: 476:     TMR0IF = 0;
  4778     0704  110B               	bcf	11,2	;volatile
  4779     0705                     i1l268:	
  4780                           ;main.c: 479:     }
  4781                           
  4782                           
  4783                           ;main.c: 477:     while (!TMR0IF){
  4784     0705  1D0B               	btfss	11,2	;volatile
  4785     0706  2F08               	goto	u255_21
  4786     0707  2F09               	goto	u255_20
  4787     0708                     u255_21:
  4788     0708  2F05               	goto	i1l268
  4789     0709                     u255_20:
  4790     0709                     i1l270:
  4791                           
  4792                           ;main.c: 480:     TMR0IF = 0;
  4793     0709  110B               	bcf	11,2	;volatile
  4794     070A                     i1l271:	
  4795                           ;main.c: 483:     }
  4796                           
  4797                           
  4798                           ;main.c: 481:     while (!TMR0IF){
  4799     070A  1D0B               	btfss	11,2	;volatile
  4800     070B  2F0D               	goto	u256_21
  4801     070C  2F0E               	goto	u256_20
  4802     070D                     u256_21:
  4803     070D  2F0A               	goto	i1l271
  4804     070E                     u256_20:
  4805     070E                     i1l273:
  4806                           
  4807                           ;main.c: 484:     TMR0IF = 0;
  4808     070E  110B               	bcf	11,2	;volatile
  4809     070F                     i1l274:	
  4810                           ;main.c: 487:     }
  4811                           
  4812                           
  4813                           ;main.c: 485:     while (!TMR0IF){
  4814     070F  1D0B               	btfss	11,2	;volatile
  4815     0710  2F12               	goto	u257_21
  4816     0711  2F13               	goto	u257_20
  4817     0712                     u257_21:
  4818     0712  2F0F               	goto	i1l274
  4819     0713                     u257_20:
  4820     0713                     i1l276:
  4821                           
  4822                           ;main.c: 488:     TMR0IF = 0;
  4823     0713  110B               	bcf	11,2	;volatile
  4824     0714                     i1l277:	
  4825                           ;main.c: 491:     }
  4826                           
  4827                           
  4828                           ;main.c: 489:     while (!TMR0IF){
  4829     0714  1D0B               	btfss	11,2	;volatile
  4830     0715  2F17               	goto	u258_21
  4831     0716  2F18               	goto	u258_20
  4832     0717                     u258_21:
  4833     0717  2F14               	goto	i1l277
  4834     0718                     u258_20:
  4835     0718                     i1l279:
  4836                           
  4837                           ;main.c: 492:     TMR0IF = 0;
  4838     0718  110B               	bcf	11,2	;volatile
  4839     0719                     i1l280:	
  4840                           ;main.c: 495:     }
  4841                           
  4842                           
  4843                           ;main.c: 493:     while (!TMR0IF){
  4844     0719  1D0B               	btfss	11,2	;volatile
  4845     071A  2F1C               	goto	u259_21
  4846     071B  2F1D               	goto	u259_20
  4847     071C                     u259_21:
  4848     071C  2F19               	goto	i1l280
  4849     071D                     u259_20:
  4850     071D                     i1l282:
  4851                           
  4852                           ;main.c: 496:     TMR0IF = 0;
  4853     071D  110B               	bcf	11,2	;volatile
  4854     071E                     i1l283:	
  4855                           ;main.c: 499:     }
  4856                           
  4857                           
  4858                           ;main.c: 497:     while (!TMR0IF){
  4859     071E  1D0B               	btfss	11,2	;volatile
  4860     071F  2F21               	goto	u260_21
  4861     0720  2F22               	goto	u260_20
  4862     0721                     u260_21:
  4863     0721  2F1E               	goto	i1l283
  4864     0722                     u260_20:
  4865     0722                     i1l285:
  4866                           
  4867                           ;main.c: 500:     TMR0IF = 0;
  4868     0722  110B               	bcf	11,2	;volatile
  4869     0723                     i1l286:	
  4870                           ;main.c: 503:     }
  4871                           
  4872                           
  4873                           ;main.c: 501:     while (!TMR0IF){
  4874     0723  1D0B               	btfss	11,2	;volatile
  4875     0724  2F26               	goto	u261_21
  4876     0725  2F27               	goto	u261_20
  4877     0726                     u261_21:
  4878     0726  2F23               	goto	i1l286
  4879     0727                     u261_20:
  4880     0727                     i1l288:
  4881                           
  4882                           ;main.c: 504:     TMR0IF = 0;
  4883     0727  110B               	bcf	11,2	;volatile
  4884     0728                     i1l289:	
  4885                           ;main.c: 507:     }
  4886                           
  4887                           
  4888                           ;main.c: 505:     while (!TMR0IF){
  4889     0728  1D0B               	btfss	11,2	;volatile
  4890     0729  2F2B               	goto	u262_21
  4891     072A  2F2C               	goto	u262_20
  4892     072B                     u262_21:
  4893     072B  2F28               	goto	i1l289
  4894     072C                     u262_20:
  4895     072C                     i1l291:
  4896                           
  4897                           ;main.c: 508:     TMR0IF = 0;
  4898     072C  110B               	bcf	11,2	;volatile
  4899     072D                     i1l292:	
  4900                           ;main.c: 511:     }
  4901                           
  4902                           
  4903                           ;main.c: 509:     while (!TMR0IF){
  4904     072D  1D0B               	btfss	11,2	;volatile
  4905     072E  2F30               	goto	u263_21
  4906     072F  2F31               	goto	u263_20
  4907     0730                     u263_21:
  4908     0730  2F2D               	goto	i1l292
  4909     0731                     u263_20:
  4910     0731                     i1l294:
  4911                           
  4912                           ;main.c: 512:     TMR0IF = 0;
  4913     0731  110B               	bcf	11,2	;volatile
  4914     0732                     i1l295:	
  4915                           ;main.c: 515:     }
  4916                           
  4917                           
  4918                           ;main.c: 513:     while (!TMR0IF){
  4919     0732  1D0B               	btfss	11,2	;volatile
  4920     0733  2F35               	goto	u264_21
  4921     0734  2F36               	goto	u264_20
  4922     0735                     u264_21:
  4923     0735  2F32               	goto	i1l295
  4924     0736                     u264_20:
  4925     0736                     i1l297:
  4926                           
  4927                           ;main.c: 516:     TMR0IF = 0;
  4928     0736  110B               	bcf	11,2	;volatile
  4929     0737                     i1l2400:
  4930                           
  4931                           ;main.c: 517:     if(flag == 1){
  4932     0737  1283               	bcf	3,5	;RP0=0, select bank0
  4933     0738  1303               	bcf	3,6	;RP1=0, select bank0
  4934     0739  0340               	decf	_flag,w
  4935     073A  0441               	iorwf	_flag+1,w
  4936     073B  1D03               	btfss	3,2
  4937     073C  2F3E               	goto	u265_21
  4938     073D  2F3F               	goto	u265_20
  4939     073E                     u265_21:
  4940     073E  2FC2               	goto	i1l307
  4941     073F                     u265_20:
  4942     073F                     i1l2402:
  4943                           
  4944                           ;main.c: 518:         TRISD |= 0x0F;
  4945     073F  300F               	movlw	15
  4946     0740  00F0               	movwf	??_ISR
  4947     0741  0870               	movf	??_ISR,w
  4948     0742  1683               	bsf	3,5	;RP0=1, select bank1
  4949     0743  1303               	bcf	3,6	;RP1=0, select bank1
  4950     0744  0488               	iorwf	8,f	;volatile
  4951     0745                     i1l2404:
  4952                           
  4953                           ;main.c: 520:         for (colScan = 0; colScan < 3; colScan++) {
  4954     0745  01F7               	clrf	_colScan
  4955     0746                     i1l2406:
  4956     0746  3003               	movlw	3
  4957     0747  0277               	subwf	_colScan,w
  4958     0748  1C03               	skipc
  4959     0749  2F4B               	goto	u266_21
  4960     074A  2F4C               	goto	u266_20
  4961     074B                     u266_21:
  4962     074B  2F4D               	goto	i1l2410
  4963     074C                     u266_20:
  4964     074C  2FBF               	goto	i1l2450
  4965     074D                     i1l2410:
  4966                           
  4967                           ;main.c: 521:             PORTB = PORTB | 0x07;
  4968     074D  1283               	bcf	3,5	;RP0=0, select bank0
  4969     074E  0806               	movf	6,w	;volatile
  4970     074F  3807               	iorlw	7
  4971     0750  0086               	movwf	6	;volatile
  4972     0751                     i1l2412:
  4973                           
  4974                           ;main.c: 522:             PORTB &= colMask[colScan];
  4975     0751  0877               	movf	_colScan,w
  4976     0752  3E11               	addlw	low ((_colMask-__stringbase)| (0+32768))
  4977     0753  0084               	movwf	4
  4978     0754  120A  158A  200A  120A  118A  	fcall	stringdir
  4979     0759  00F0               	movwf	??_ISR
  4980     075A  0870               	movf	??_ISR,w
  4981     075B  0586               	andwf	6,f	;volatile
  4982     075C                     i1l2414:
  4983                           
  4984                           ;main.c: 525:             for (rowScan = 0; rowScan < 4; rowScan++) {
  4985     075C  01F6               	clrf	_rowScan
  4986     075D                     i1l2416:
  4987     075D  3004               	movlw	4
  4988     075E  0276               	subwf	_rowScan,w
  4989     075F  1C03               	skipc
  4990     0760  2F62               	goto	u267_21
  4991     0761  2F63               	goto	u267_20
  4992     0762                     u267_21:
  4993     0762  2F64               	goto	i1l2420
  4994     0763                     u267_20:
  4995     0763  2FBA               	goto	i1l2446
  4996     0764                     i1l2420:
  4997                           
  4998                           ;main.c: 526:                 if (!(PORTD & rowMask[rowScan]) && (old_btn)) {
  4999     0764  0876               	movf	_rowScan,w
  5000     0765  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  5001     0766  0084               	movwf	4
  5002     0767  120A  158A  200A  120A  118A  	fcall	stringdir
  5003     076C  0508               	andwf	8,w	;volatile
  5004     076D  1D03               	btfss	3,2
  5005     076E  2F70               	goto	u268_21
  5006     076F  2F71               	goto	u268_20
  5007     0770                     u268_21:
  5008     0770  2F7A               	goto	i1l2428
  5009     0771                     u268_20:
  5010     0771                     i1l2422:
  5011     0771  1C78               	btfss	_old_btn/(0+8),_old_btn& (0+7)
  5012     0772  2F74               	goto	u269_21
  5013     0773  2F75               	goto	u269_20
  5014     0774                     u269_21:
  5015     0774  2F7A               	goto	i1l2428
  5016     0775                     u269_20:
  5017     0775                     i1l2424:
  5018                           
  5019                           ;main.c: 527:                     old_btn = 0;
  5020     0775  1078               	bcf	_old_btn/(0+8),_old_btn& (0+7)
  5021     0776                     i1l2426:
  5022                           
  5023                           ;main.c: 528:                     stato++;
  5024     0776  3001               	movlw	1
  5025     0777  00F0               	movwf	??_ISR
  5026     0778  0870               	movf	??_ISR,w
  5027     0779  07F5               	addwf	_stato,f
  5028     077A                     i1l2428:
  5029                           
  5030                           ;main.c: 530:                 if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  5031     077A  0876               	movf	_rowScan,w
  5032     077B  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  5033     077C  0084               	movwf	4
  5034     077D  120A  158A  200A  120A  118A  	fcall	stringdir
  5035     0782  0508               	andwf	8,w	;volatile
  5036     0783  1903               	btfsc	3,2
  5037     0784  2F86               	goto	u270_21
  5038     0785  2F87               	goto	u270_20
  5039     0786                     u270_21:
  5040     0786  2F9D               	goto	i1l2438
  5041     0787                     u270_20:
  5042     0787                     i1l2430:
  5043     0787  1878               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  5044     0788  2F8A               	goto	u271_21
  5045     0789  2F8B               	goto	u271_20
  5046     078A                     u271_21:
  5047     078A  2F9D               	goto	i1l2438
  5048     078B                     u271_20:
  5049     078B                     i1l2432:
  5050                           
  5051                           ;main.c: 532:                     if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  5052     078B  0876               	movf	_rowScan,w
  5053     078C  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  5054     078D  0084               	movwf	4
  5055     078E  120A  158A  200A  120A  118A  	fcall	stringdir
  5056     0793  0508               	andwf	8,w	;volatile
  5057     0794  1903               	btfsc	3,2
  5058     0795  2F97               	goto	u272_21
  5059     0796  2F98               	goto	u272_20
  5060     0797                     u272_21:
  5061     0797  2F9D               	goto	i1l2438
  5062     0798                     u272_20:
  5063     0798                     i1l2434:
  5064     0798  1878               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  5065     0799  2F9B               	goto	u273_21
  5066     079A  2F9C               	goto	u273_20
  5067     079B                     u273_21:
  5068     079B  2F9D               	goto	i1l2438
  5069     079C                     u273_20:
  5070     079C                     i1l2436:
  5071                           
  5072                           ;main.c: 533:                         old_btn = 1;
  5073     079C  1478               	bsf	_old_btn/(0+8),_old_btn& (0+7)
  5074     079D                     i1l2438:
  5075                           
  5076                           ;main.c: 536:                 if (stato != old_stato) {
  5077     079D  0875               	movf	_stato,w
  5078     079E  0648               	xorwf	_old_stato,w
  5079     079F  1903               	skipnz
  5080     07A0  2FA2               	goto	u274_21
  5081     07A1  2FA3               	goto	u274_20
  5082     07A2                     u274_21:
  5083     07A2  2FB0               	goto	i1l2444
  5084     07A3                     u274_20:
  5085     07A3                     i1l2440:
  5086                           
  5087                           ;main.c: 537:                     keypressed = rowScan + (4 * colScan);
  5088     07A3  0877               	movf	_colScan,w
  5089     07A4  00F0               	movwf	??_ISR
  5090     07A5  3002               	movlw	2
  5091     07A6                     u275_25:
  5092     07A6  1003               	clrc
  5093     07A7  0DF0               	rlf	??_ISR,f
  5094     07A8  3EFF               	addlw	-1
  5095     07A9  1D03               	skipz
  5096     07AA  2FA6               	goto	u275_25
  5097     07AB  0876               	movf	_rowScan,w
  5098     07AC  0770               	addwf	??_ISR,w
  5099     07AD  00CA               	movwf	_keypressed
  5100     07AE                     i1l2442:
  5101                           
  5102                           ;main.c: 540:                     old_stato = stato;
  5103     07AE  0875               	movf	_stato,w
  5104     07AF  00C8               	movwf	_old_stato
  5105     07B0                     i1l2444:
  5106                           
  5107                           ;main.c: 542:             }
  5108     07B0  3001               	movlw	1
  5109     07B1  00F0               	movwf	??_ISR
  5110     07B2  0870               	movf	??_ISR,w
  5111     07B3  07F6               	addwf	_rowScan,f
  5112     07B4  3004               	movlw	4
  5113     07B5  0276               	subwf	_rowScan,w
  5114     07B6  1C03               	skipc
  5115     07B7  2FB9               	goto	u276_21
  5116     07B8  2FBA               	goto	u276_20
  5117     07B9                     u276_21:
  5118     07B9  2F64               	goto	i1l2420
  5119     07BA                     u276_20:
  5120     07BA                     i1l2446:
  5121                           
  5122                           ;main.c: 543:         }
  5123     07BA  3001               	movlw	1
  5124     07BB  00F0               	movwf	??_ISR
  5125     07BC  0870               	movf	??_ISR,w
  5126     07BD  07F7               	addwf	_colScan,f
  5127     07BE  2F46               	goto	i1l2406
  5128     07BF                     i1l2450:
  5129                           
  5130                           ;main.c: 544:         TRISD |= 0x00;
  5131     07BF  1683               	bsf	3,5	;RP0=1, select bank1
  5132     07C0  1303               	bcf	3,6	;RP1=0, select bank1
  5133     07C1  0808               	movf	8,w	;volatile
  5134     07C2                     i1l307:
  5135     07C2  0874               	movf	??_ISR+4,w
  5136     07C3  00FF               	movwf	btemp+1
  5137     07C4  0873               	movf	??_ISR+3,w
  5138     07C5  008A               	movwf	10
  5139     07C6  0872               	movf	??_ISR+2,w
  5140     07C7  0084               	movwf	4
  5141     07C8  0E71               	swapf	??_ISR+1,w
  5142     07C9  0083               	movwf	3
  5143     07CA  0EFE               	swapf	btemp,f
  5144     07CB  0E7E               	swapf	btemp,w
  5145     07CC  0009               	retfie
  5146     07CD                     __end_of_ISR:
  5147     007E                     btemp	set	126	;btemp
  5148     007E                     wtemp0	set	126
  5149                           
  5150                           	psect	intentry
  5151     0004                     __pintentry:	
  5152                           ;incstack = 0
  5153                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath]
  5154                           
  5155     0004                     interrupt_function:
  5156     007E                     saved_w	set	btemp
  5157     0004  00FE               	movwf	btemp
  5158     0005  0E03               	swapf	3,w
  5159     0006  00F1               	movwf	??_ISR+1
  5160     0007  0804               	movf	4,w
  5161     0008  00F2               	movwf	??_ISR+2
  5162     0009  080A               	movf	10,w
  5163     000A  00F3               	movwf	??_ISR+3
  5164     000B  087F               	movf	btemp+1,w
  5165     000C  00F4               	movwf	??_ISR+4
  5166     000D  120A  118A  2EEC   	ljmp	_ISR
  5167                           
  5168                           	psect	idloc
  5169                           
  5170                           ;Config register IDLOC0 @ 0x2000
  5171                           ;	unspecified, using default values
  5172     2000                     	org	8192
  5173     2000  3FFF               	dw	16383
  5174                           
  5175                           ;Config register IDLOC1 @ 0x2001
  5176                           ;	unspecified, using default values
  5177     2001                     	org	8193
  5178     2001  3FFF               	dw	16383
  5179                           
  5180                           ;Config register IDLOC2 @ 0x2002
  5181                           ;	unspecified, using default values
  5182     2002                     	org	8194
  5183     2002  3FFF               	dw	16383
  5184                           
  5185                           ;Config register IDLOC3 @ 0x2003
  5186                           ;	unspecified, using default values
  5187     2003                     	org	8195
  5188     2003  3FFF               	dw	16383
  5189                           
  5190                           	psect	config
  5191                           
  5192                           ;Config register CONFIG @ 0x2007
  5193                           ;	Oscillator Selection bits
  5194                           ;	FOSC = HS, HS oscillator
  5195                           ;	Watchdog Timer Enable bit
  5196                           ;	WDTE = OFF, WDT disabled
  5197                           ;	Power-up Timer Enable bit
  5198                           ;	PWRTE = OFF, PWRT disabled
  5199                           ;	Brown-out Reset Enable bit
  5200                           ;	BOREN = OFF, BOR disabled
  5201                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5202                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  5203                           ;	Data EEPROM Memory Code Protection bit
  5204                           ;	CPD = OFF, Data EEPROM code protection off
  5205                           ;	Flash Program Memory Write Enable bits
  5206                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  5207                           ;	In-Circuit Debugger Mode bit
  5208                           ;	DEBUG = 0x1, unprogrammed default
  5209                           ;	Flash Program Memory Code Protection bit
  5210                           ;	CP = OFF, Code protection off
  5211     2007                     	org	8199
  5212     2007  3F3A               	dw	16186

Data Sizes:
    Strings     116
    Constant    19
    Data        2
    BSS         54
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     28      80
    BANK1            80      4       4
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    intToString@str	PTR unsigned char  size(1) Largest target is 3
		 -> print_countdown(BANK0[3]), 

    lcdPrint@str	PTR unsigned char  size(2) Largest target is 15
		 -> STR_11(CODE[15]), STR_10(CODE[8]), STR_9(CODE[14]), STR_8(CODE[11]), 
		 -> print_countdown(BANK0[3]), STR_7(CODE[10]), STR_6(CODE[14]), STR_5(CODE[13]), 
		 -> STR_4(CODE[12]), STR_3(CODE[11]), STR_2(CODE[10]), STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _initLCD->_lcdSend
    _UART_Read2->_intToString
    _UART_Read1->_intToString
    _lcdPrint->_lcdSend
    _intToString->___awdiv
    _potenza->___bmul
    ___awdiv->_potenza

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_UART_Read1

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   40659
               _GenerateRandomNumber
                       _KeyPadReader
                     _RS485_RxEnable
                     _RS485_TxEnable
                        _Timer0_Init
                          _UART_Init
                         _UART_Read1
                         _UART_Read2
                         _UART_Write
                            _initLCD
                           _lcdPrint
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0    4112
                                              2 BANK0      2     2      0
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _UART_Read2                                           4     4      0   13152
                                              0 BANK1      3     3      0
                        _intToString
                           _lcdPrint
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _UART_Read1                                           4     4      0   13499
                                              0 BANK1      4     4      0
                     _RS485_RxEnable
                     _RS485_TxEnable
                         _UART_Write
                        _intToString
                           _lcdPrint
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _lcdPrint                                             7     5      2    5682
                                              2 BANK0      7     5      2
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _lcdSend                                              2     1      1    4112
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _intToString                                          9     6      3    3346
                                             19 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                            _potenza
 ---------------------------------------------------------------------------------
 (3) _potenza                                              6     5      1     573
                                              4 BANK0      6     5      1
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     226
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     613
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     805
                                             10 BANK0      9     5      4
                            _potenza (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RS485_TxEnable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RS485_RxEnable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _KeyPadReader                                         2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _GenerateRandomNumber                                 3     3      0      71
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GenerateRandomNumber
   _KeyPadReader
   _RS485_RxEnable
   _RS485_TxEnable
   _Timer0_Init
   _UART_Init
   _UART_Read1
     _RS485_RxEnable
     _RS485_TxEnable
     _UART_Write
     _intToString
       ___awdiv
         _potenza (ARG)
           ___bmul
       ___awmod
       _potenza
     _lcdPrint
       _lcdSend
     _lcdSend
   _UART_Read2
     _intToString
     _lcdPrint
     _lcdSend
   _UART_Write
   _initLCD
     _lcdSend
   _lcdPrint
   _lcdSend

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      4       4       7        5.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1C      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       1       0        7.1%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5E      12        0.0%
ABS                  0      0      5E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Jun 28 22:17:10 2023

                            pc 0002                 ___bmul@product 0055                   ___awdiv@sign 0063  
                           fsr 0004                            l202 0D18                            l211 06C2  
                          l213 05F7                            l310 0D27                            l206 054B  
                          l242 0D4E                            l218 06B6                            l235 0549  
                          l219 06EB                            l316 0D65                            l190 0D39  
                          l335 07F8                            l239 0EF6                            l328 0FFF  
                          l344 0F72                            l248 0DC4                            l193 07FD  
                          l196 0D06                            l199 0D12                            l456 0D7C  
                          l583 0E88                            l596 0E1F                            _GIE 005F  
                          _RC0 0038                            _RC1 0039                            _PS0 0408  
                          _PS1 0409                            _PS2 040A                            _ISR 06EC  
                          _PSA 040B                            _id1 006F                            fsr0 0004  
                          indf 0000                   ___awmod@sign 0059                           ?_ISR 0070  
                         l3000 00AD                           l3010 00D3                           l3002 00B5  
                         l3100 020C                           l3020 00FB                           l3012 00D8  
                         l3004 00BE                           l3110 022A                           l3102 0212  
                         l3030 0119                           l3022 0101                           l3014 00DF  
                         l3006 00C3                           l3120 024F                           l3112 0230  
                         l3104 0218                           l3040 0138                           l3032 011F  
                         l3024 0107                           l3016 00EB                           l3130 0271  
                         l3122 0257                           l3114 0236                           l3106 021E  
                         l3050 0160                           l3042 0144                           l3034 0125  
                         l3026 010D                           l3018 00F3                           l2500 0E27  
                         l3140 028F                           l3132 0277                           l3124 025F  
                         l3108 0224                           l3116 023C                           l3060 017E  
                         l3052 0166                           l3044 014C                           l3036 012B  
                         l3028 0113                           l2510 0E3B                           l2502 0E2C  
                         l3150 031C                           l3134 027D                           l3126 0265  
                         l3142 0295                           l3118 0243                           l3070 01A5  
                         l3062 0184                           l3054 016C                           l3046 0154  
                         l3038 0131                           l2520 0E51                           l2512 0E3D  
                         l2504 0E2E                           l2600 0F00                           l3152 0322  
                         l3144 029B                           l3136 0283                           l3128 026B  
                         l3080 01C5                           l3072 01AD                           l3056 0172  
                         l3048 015A                           l3064 018A                           l2530 0E74  
                         l2522 0E55                           l2514 0E43                           l2506 0E32  
                         l2610 0F61                           l2602 0F21                           l3154 0327  
                         l3146 0314                           l3138 0289                           l3082 01CB  
                         l3074 01B3                           l3090 01E3                           l3066 0191  
                         l3058 0178                           l2700 0FB1                           l2620 0D2F  
                         l2524 0E66                           l2516 0E46                           l2532 0E7A  
                         l2508 0E37                           l2540 0DC5                           l2460 0D74  
                         l2452 0D69                           l2604 0F23                           l2612 0F65  
                         l3148 0317                           l3092 01EA                           l3084 01D1  
                         l3076 01B9                           l3068 019D                           l2710 0FE0  
                         l2702 0FBE                           l2622 0D30                           l2534 0E7F  
                         l2526 0E6C                           l2518 0E4D                           l2550 0DD7  
                         l2542 0DC8                           l2462 0D7B                           l2454 0D6A  
                         l2614 0F6B                           l2606 0F30                           l2470 0D41  
                         l2630 0E8D                           l3094 01F6                           l3086 01D7  
                         l3078 01BF                           l2720 0FF5                           l2704 0FC2  
                         l2712 0FE1                           l2624 0D33                           l2616 0D28  
                         l2536 0E84                           l2528 0E6D                           l2560 0DF0  
                         l2552 0DDC                           l2544 0DCC                           l2456 0D6E  
                         l2608 0F4B                           l2480 0D4D                           l2472 0D42  
                         l2800 0464                           l2640 0EC0                           l2632 0E97  
                         l3096 01FE                           l3088 01DD                           l2714 0FE7  
                         l2706 0FCD                           l2626 0D36                           l2618 0D2D  
                         l2562 0DF4                           l2554 0DE2                           l2570 0E11  
                         l2546 0DD1                           l2458 0D72                           l2490 07E8  
                         l2482 07D0                           l2474 0D45                           l2466 0D3D  
                         l2810 0495                           l2802 0465                           l2730 0333  
                         l2650 0EED                           l2642 0EC9                           l2634 0E9A  
                         l3098 0206                           l2716 0FF2                           l2708 0FDC  
                         l2724 0FFA                           l2660 0D26                           l2652 0D19  
                         l2572 0E16                           l2564 0DFE                           l2556 0DE5  
                         l2548 0DD3                           l2492 07F5                           l2484 07D2  
                         l2476 0D47                           l2468 0D40                           l2580 0D82  
                         l2820 04B8                           l2812 0497                           l2804 046B  
                         l2740 0355                           l2732 0336                           l2900 0613  
                         l2644 0ED2                           l2636 0EA1                           l2628 0E89  
                         l2670 0D63                           l2662 0D4F                           l2654 0D20  
                         l2590 0D16                           l2574 0E1B                           l2566 0E04  
                         l2558 0DEC                           l2486 07D5                           l2478 0D4C  
                         l2582 0DA0                           l2830 04E0                           l2822 04C0  
                         l2806 0481                           l2750 037E                           l2742 0366  
                         l2734 033E                           l2814 04A7                           l2910 064F  
                         l2902 061C                           l2646 0EDB                           l2638 0EB5  
                         l2664 0D54                           l2656 0D24                           l2592 0D02  
                         l2496 0E20                           l2568 0E0B                           l2488 07E2  
                         l2584 0DA8                           l2840 0508                           l2832 04E6  
                         l2824 04C8                           l2816 04AC                           l2808 048A  
                         l2760 03AE                           l2752 0385                           l2744 0371  
                         l2736 0345                           l2728 0330                           l2920 067B  
                         l2912 0658                           l2904 0627                           l2648 0EE4  
                         l2666 0D5A                           l2682 0F83                           l2674 0F73  
                         l2658 0D25                           l2586 07F9                           l2498 0E23  
                         l2594 0EF7                           l2578 0D7D                           l2850 0521  
                         l2842 050A                           l2834 04EC                           l2826 04D0  
                         l2818 04B2                           l2770 03DF                           l2754 0391  
                         l2762 03B4                           l2746 0372                           l2738 034C  
                         l2930 06A4                           l2922 068C                           l2914 0663  
                         l2906 0629                           l2668 0D61                           l2692 0F9B  
                         l2684 0F88                           l2676 0F7B                           l2588 0D12  
                         l2596 0EFB                           l2852 052A                           l2844 0518  
                         l2836 04FA                           l2828 04D8                           l2780 03FF  
                         l2772 03EA                           l2764 03BA                           l2756 03A2  
                         l2748 0378                           l2932 06B2                           l2924 068F  
                         l2916 0665                           l2908 0639                           l2940 06BD  
                         l2694 0FA8                           l2686 0F93                           l2678 0F7C  
                         l2598 0EFC                           l2854 0535                           l2838 0505  
                         l2782 040B                           l2790 042E                           l2774 03EB  
                         l2766 03C2                           l2758 03AD                           l2950 06DA  
                         l2942 06C5                           l2926 0690                           l2918 0674  
                         l2870 0563                           l2696 0FAC                           l2688 0F94  
                         l2856 0538                           l2792 0434                           l2784 041C  
                         l2768 03CE                           l2776 03F1                           l2848 051C  
                         l2952 06E5                           l2936 06B7                           l2928 0699  
                         l2880 059F                           l2872 0579                           l2944 06C6  
                         l2864 054A                           l2698 0FAD                           l2858 053A  
                         l2794 043C                           l2786 0427                           l2778 03F7  
                         l2954 06E8                           l2938 06B8                           l2890 05DA  
                         l2882 05B5                           l2874 0582                           l2866 0551  
                         l2946 06CC                           l2970 0046                           l2962 0030  
                         l2796 0448                           l2788 0428                           l2948 06D1  
                         l2892 05E1                           l2884 05BE                           l2876 058D  
                         l2868 0558                           l2980 006B                           l2972 004F  
                         l2964 0037                           l2798 0459                           l2894 05F2  
                         l2886 05C9                           l2878 058F                           l2990 0089  
                         l2982 0071                           l2974 005A                           l2966 003C  
                         l2896 05F5                           l2888 05CB                           l2992 008F  
                         l2984 0077                           l2976 005F                           l2968 0041  
                         l2898 05FD                           l2994 0095                           l2986 007D  
                         l2978 0065                           l2996 009D                           l2988 0083  
                         l2998 00A5                           STR_1 0887                           STR_2 087D  
                         STR_3 0867                           STR_4 085B                           STR_5 084E  
                         STR_6 0832                           STR_7 087D                           STR_8 0872  
                         STR_9 0840                           _BRGH 04C2                           _CREN 00C4  
                         _T0CS 040D                           u3000 0DB2                           u3010 0DC4  
                         u3011 0DC3                           u3100 0FBE                           u3020 0D16  
                         u3101 0FBD                           u3021 0D15                           u3110 0FC2  
                         u3030 0F21                           u3111 0FC1                           u3031 0F20  
                         u3120 0FDC                           u3040 0F6B                           u3200 0385  
                         u3121 0FDB                           u3041 0F6A                           u3201 0384  
                         u3050 0D61                           u3130 0FE0                           u3210 03BA  
                         u3051 0D60                           u3131 0FDF                           u3211 03B9  
                         u3140 0FE7                           u3060 0F82                           u3220 03C2  
                         u3300 05FD                           u3141 0FE6                           u3061 0F81  
                         u3221 03C1                           u3301 05FC                           u3070 0F9A  
                         u3230 03F7                           u3310 067B                           u3071 0F99  
                         u3231 03F6                           u3311 067A                           u3080 0FA8  
                         u3240 03FF                           u3160 033E                           u3320 06BD  
                         u3400 0107                           u3081 0FA7                           u3241 03FE  
                         u3161 033D                           u3321 06BC                           u3401 0106  
                         u3090 0FAC                           u3250 0434                           u3170 0345  
                         u3330 06C2                           u3410 010D                           u3155 0FEA  
                         u3091 0FAB                           u3251 0433                           u3171 0344  
                         u3331 06C1                           u3411 010C                           u3260 043C  
                         u3180 034C                           u3340 06CB                           u3500 0160  
                         u3420 0113                           u3261 043B                           u3181 034B  
                         u3341 06CA                           u3501 015F                           u3421 0112  
                         u3270 0521                           u3190 037E                           u3350 06D1  
                         u3510 0166                           u3430 0119                           u3271 0520  
                         u3191 037D                           u3351 06D0                           u3511 0165  
                         u3431 0118                           u2800 0E27                           u3280 0551  
                         u3600 01B9                           u3520 016C                           u3440 011F  
                         u3360 00D2                           u2801 0E26                           u3281 0550  
                         u3601 01B8                           u3521 016B                           u3441 011E  
                         u3361 00D1                           u2810 0E32                           u3290 05E1  
                         u3610 01BF                           u3530 0172                           u3450 0125  
                         u3370 00D8                           u2811 0E31                           u3291 05E0  
                         u3611 01BE                           u3531 0171                           u3451 0124  
                         u3371 00D7                           u2820 0E43                           u2900 0DCC  
                         u3700 0212                           u3620 01C5                           u3540 0178  
                         u3460 012B                           u3380 00FB                           u2821 0E42  
                         u2901 0DCB                           u3701 0211                           u3621 01C4  
                         u3541 0177                           u3461 012A                           u3381 00FA  
                         u2910 0DD7                           u3710 0218                           u3630 01CB  
                         u3550 017E                           u3470 0131                           u3390 0101  
                         u2911 0DD6                           u3711 0217                           u3631 01CA  
                         u3551 017D                           u3471 0130                           u3391 0100  
                         u2840 0E55                           u2920 0DE2                           u3800 026B  
                         u3720 021E                           u3640 01D1                           u3560 0184  
                         u3480 0154                           u2841 0E54                           u2921 0DE1  
                         u3801 026A                           u3721 021D                           u3641 01D0  
                         u3561 0183                           u3481 0153                           u2770 0D6E  
                         u3810 0271                           u3730 0224                           u3650 01D7  
                         u3570 018A                           u3490 015A                           u2835 0E47  
                         u2771 0D6D                           u3811 0270                           u3731 0223  
                         u3651 01D6                           u3571 0189                           u3491 0159  
                         u2860 0E66                           u2940 0DF4                           u2780 0D7B  
                         u3820 0277                           u3740 022A                           u3660 01DD  
                         u3580 01AD                           u2861 0E65                           u2941 0DF3  
                         u2781 0D7A                           u3821 0276                           u3741 0229  
                         u3661 01DC                           u3581 01AC                           u2950 0DFE  
                         u2790 07F5                           u3830 027D                           u3750 0230  
                         u3670 01E3                           u3590 01B3                           u2855 0E56  
                         u2951 0DFD                           u2935 0DE6                           u2791 07F4  
                         u3831 027C                           u3751 022F                           u3671 01E2  
                         u3591 01B2                           u2880 0E7A                           u3840 0283  
                         u3760 0236                           u3680 0206                           u2881 0E79  
                         u2865 0E62                           u3841 0282                           u3761 0235  
                         u3681 0205                           u2890 0E7F                           u2970 0E11  
                         u3850 0289                           u3770 023C                           u3690 020C  
                         u2891 0E7E                           u2875 0E6E                           u2971 0E10  
                         u2955 0DFA                           u2795 07F1                           u3907 0EBB  
                         u3851 0288                           u3771 023B                           u3691 020B  
                         u2980 0E16                           u3860 028F                           u3780 025F  
                         _RCIF 0065                           u2981 0E15                           u2965 0E05  
                         u3917 0597                           u3861 028E                           u3781 025E  
                         u2990 0D8E                           u3870 0295                           u3790 0265  
                         u3927 05D3                           u3871 0294                           u3791 0264  
                         u3937 0631                           u3947 066D                           u3957 06AC  
                         u3967 049F                           u3887 0E93                           u3977 0512  
                         u3897 0EA7                           u3987 0542                           u3997 0FC8  
               ??_KeyPadReader 0053                           _TMR0 0001                           _SPEN 00C7  
                         _TXEN 04C5                           _TXIF 0064                           _SYNC 04C4  
                         _data 0030                           _flag 0040                           _main 0030  
                         _num1 004F                           _num2 004E                           _num3 004D  
                         _keys 0810                           _num4 004C                           _num5 004B  
                         btemp 007E                           _type 0044                           start 0010  
            ___bmul@multiplier 0056                          ??_ISR 0070                   ?_intToString 0066  
                        ?_main 0070                __end_of___awdiv 0E89                          STR_10 088F  
                        STR_11 0823                __end_of___awmod 0E20                ___awdiv@divisor 005D  
                        i1l307 07C2                          i1l261 06FA                          i1l253 06EC  
                        i1l270 0709                          i1l262 06FB                          i1l271 070A  
                        i1l255 06F0                          i1l280 0719                          i1l264 06FF  
                        i1l256 06F1                          i1l273 070E                          i1l265 0700  
                        i1l282 071D                          i1l274 070F                          i1l258 06F5  
                        i1l291 072C                          i1l283 071E                          i1l267 0704  
                        i1l259 06F6                          i1l292 072D                          i1l276 0713  
                        i1l268 0705                          i1l285 0722                          i1l277 0714  
                        i1l294 0731                          i1l286 0723                          i1l295 0732  
                        i1l279 0718                          i1l288 0727                          i1l297 0736  
                        i1l289 0728                ___awdiv@counter 0062                          _RCREG 001A  
                        _SPBRG 0099                          _PORTB 0006                          _PORTD 0008  
                        _TRISA 0085                          _TRISB 0086                          _TRISC 0087  
                        _TRISD 0088                          _TRISE 0089                          _TXREG 0019  
                  ?_UART_Read1 0070                    ?_UART_Read2 0070                __end_of_colMask 0823  
              __end_of_lcdSend 0D4F                    ?_UART_Write 0070                __end_of_initLCD 0EF7  
                        _count 003C                          _index 003E                          _keyok 0049  
                        _stato 0075                 __pbitbssCOMMON 03C0                          pclath 000A  
              __end_of_rowMask 0820                __end_of_potenza 07F9                          status 0003  
                        wtemp0 007E   __end_of_GenerateRandomNumber 0D66                __initialization 0013  
                 __end_of_main 0330                   __end_of_keys 081C                         ??_main 006F  
             ___awdiv@dividend 005F                         i1l2400 0737                         i1l2410 074D  
                       i1l2402 073F                         i1l2420 0764                         i1l2412 0751  
                       i1l2404 0745                         i1l2430 0787                         i1l2422 0771  
                       i1l2414 075C                         i1l2406 0746                         i1l2440 07A3  
                       i1l2432 078B                         i1l2424 0775                         i1l2416 075D  
                       i1l2442 07AE                         i1l2434 0798                         i1l2426 0776  
                       i1l2450 07BF                         i1l2444 07B0                         i1l2436 079C  
                       i1l2428 077A                         i1l2438 079D                         i1l2446 07BA  
                       i1l2398 06EC                         u250_20 06F0                         u250_21 06EF  
                       u251_20 06F5                         u251_21 06F4                         u260_20 0722  
                       u252_20 06FA                         u260_21 0721                         u252_21 06F9  
                       u261_20 0727                         u253_20 06FF                         u261_21 0726  
                       u253_21 06FE                         u270_20 0787                         u262_20 072C  
                       u254_20 0704                         u270_21 0786                         u262_21 072B  
                       u254_21 0703                         u271_20 078B                         u263_20 0731  
                       u255_20 0709                         u271_21 078A                         u263_21 0730  
                       u255_21 0708                         u272_20 0798                         u264_20 0736  
                       u256_20 070E                         u272_21 0797                         u264_21 0735  
                       u256_21 070D                         u273_20 079C                         u265_20 073F  
                       u257_20 0713                         u273_21 079B                         u265_21 073E  
                       u257_21 0712                         u274_20 07A3                         u266_20 074C  
                       u258_20 0718                         u274_21 07A2                         u266_21 074B  
                       u258_21 0717                         u267_20 0763                         u259_20 071D  
                       u267_21 0762                         u259_21 071C                         u275_25 07A6  
                       u276_20 07BA                         u268_20 0771                         u276_21 07B9  
                       u268_21 0770                         u269_20 0775                         u269_21 0774  
                       _TMR0IE 005D                         _TMR0IF 005A                         _TRISC6 043E  
                       _TRISC7 043F                  ??_Timer0_Init 0053               __end_of_lcdPrint 0DC5  
            __end_of_UART_Init 0D3A                         ___bmul 0D66                      ??___awdiv 0061  
                    ??___awmod 0057                         _codice 0036               ___awdiv@quotient 0064  
              ___awmod@divisor 0053           __end_of_KeyPadReader 1000                ___awmod@counter 0058  
                    ??_lcdSend 0054                      ??_initLCD 0055                   __pdataCOMMON 0079  
                       saved_w 007E                      ??_potenza 0058        __end_of__initialization 002C  
             intToString@cifre 006D            ___bmul@multiplicand 0053                 __pcstackCOMMON 0070  
                 __pidataBANK0 07FF            __end_of_Timer0_Init 0D28           _GenerateRandomNumber 0D4F  
                   __pbssBANK0 0020                     __pmaintext 0030                        ?___bmul 0053  
                   __pintentry 0004                   ??_UART_Read1 00A0                   ??_UART_Read2 00A0  
        ?_GenerateRandomNumber 0070                   ??_UART_Write 0053                      ?_lcdPrint 0055  
                   __stringtab 0800                   intToString@i 006E                   intToString@n 0066  
                 intToString@t 006C                    _Timer0_Init 0D19             __end_of_UART_Read1 054A  
           __end_of_UART_Read2 06EC                 _RS485_RxEnable 0D02                        ___awdiv 0E20  
                      ___awmod 0DC5             __end_of_UART_Write 0D19                 _RS485_TxEnable 07F9  
                      _colMask 0820                        _colScan 0077                        _lcdSend 0D3A  
                      __ptext1 0E89                        __ptext2 054A                        __ptext3 0330  
                      __ptext4 0D7D                        __ptext5 0D3A                        __ptext6 0EF7  
                      __ptext7 07CD                        __ptext8 0D66                        __ptext9 0DC5  
                      _initLCD 0E89                        _old_btn 03C0               ___awmod@dividend 0055  
                   _keypressed 004A                        _restart 0047                        _rowMask 081C  
                      _rowScan 0076                        _potenza 07CD                     ??_lcdPrint 0057  
                      clrloop0 0D08                        _stringa 0020           end_of_initialization 002C  
                 _KeyPadReader 0F73         __end_of_RS485_RxEnable 0D07         __end_of_RS485_TxEnable 07FE  
                    _UART_Init 0D28                      _PORTEbits 0009                 UART_Write@data 0053  
       ??_GenerateRandomNumber 0053                      _TRISEbits 0089                ?_RS485_RxEnable 0070  
              ?_RS485_TxEnable 0070                 __end_of___bmul 0D7D                     ?_UART_Init 0070  
                __pidataCOMMON 07FE            start_initialization 0013  GenerateRandomNumber@randomNum 0053  
                  __end_of_ISR 07CD                 _stringPosition 0042                 intToString@str 0068  
                     ??___bmul 0054                    __pdataBANK0 006F                  ??_intToString 0069  
                  __pbssCOMMON 0075                      ___latbits 0002                  __pcstackBANK0 0053  
                __pcstackBANK1 00A0                UART_Read1@count 00A3                   ?_Timer0_Init 0070  
                     ?___awdiv 005D                       ?___awmod 0053                    ??_UART_Init 0053  
                    __pstrings 0800                       ?_lcdSend 0053                       ?_initLCD 0070  
          __end_of_intToString 0F73                      _countdown 0079                       ?_potenza 0057  
                    _randomNum 0045                      _old_stato 0048              interrupt_function 0004  
                    clear_ram0 0D07                _print_countdown 0050                      lcdPrint@n 005A  
                  __stringbase 080F               ??_RS485_RxEnable 0053               ??_RS485_TxEnable 0053  
                  _intToString 0EF7             __end_of__stringtab 0810                       __ptext10 0E20  
                     __ptext11 0D0F                       __ptext12 07F9                       __ptext13 0D02  
                     __ptext14 0D28                       __ptext15 0D19                       __ptext16 0F73  
                     __ptext17 0D4F                       __ptext18 06EC                       _lcdPrint 0D7D  
                     _received 0046                       intlevel1 0000                      stringcode 080A  
                     potenza@b 0059                       potenza@e 0057                       potenza@i 005A  
                     potenza@n 005C                    lcdSend@dato 0054                    lcdSend@tipo 0053  
                   _UART_Read1 0330                     _UART_Read2 054A                       stringdir 080A  
                     stringtab 0800                     _UART_Write 0D0F      GenerateRandomNumber@count 0054  
                  lcdPrint@str 0055                  ?_KeyPadReader 0070  
