

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Jun 28 18:28:03 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40     0000                     
    41                           ; Generated 22/03/2023 GMT
    42                           ; 
    43                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F877A Definitions
    73                           ; 
    74                           ; SFR Addresses
    75     0000                     	;# 
    76     0001                     	;# 
    77     0002                     	;# 
    78     0003                     	;# 
    79     0004                     	;# 
    80     0005                     	;# 
    81     0006                     	;# 
    82     0007                     	;# 
    83     0008                     	;# 
    84     0009                     	;# 
    85     000A                     	;# 
    86     000B                     	;# 
    87     000C                     	;# 
    88     000D                     	;# 
    89     000E                     	;# 
    90     000E                     	;# 
    91     000F                     	;# 
    92     0010                     	;# 
    93     0011                     	;# 
    94     0012                     	;# 
    95     0013                     	;# 
    96     0014                     	;# 
    97     0015                     	;# 
    98     0015                     	;# 
    99     0016                     	;# 
   100     0017                     	;# 
   101     0018                     	;# 
   102     0019                     	;# 
   103     001A                     	;# 
   104     001B                     	;# 
   105     001B                     	;# 
   106     001C                     	;# 
   107     001D                     	;# 
   108     001E                     	;# 
   109     001F                     	;# 
   110     0081                     	;# 
   111     0085                     	;# 
   112     0086                     	;# 
   113     0087                     	;# 
   114     0088                     	;# 
   115     0089                     	;# 
   116     008C                     	;# 
   117     008D                     	;# 
   118     008E                     	;# 
   119     0091                     	;# 
   120     0092                     	;# 
   121     0093                     	;# 
   122     0094                     	;# 
   123     0098                     	;# 
   124     0099                     	;# 
   125     009C                     	;# 
   126     009D                     	;# 
   127     009E                     	;# 
   128     009F                     	;# 
   129     010C                     	;# 
   130     010D                     	;# 
   131     010E                     	;# 
   132     010F                     	;# 
   133     018C                     	;# 
   134     018D                     	;# 
   135     0000                     	;# 
   136     0001                     	;# 
   137     0002                     	;# 
   138     0003                     	;# 
   139     0004                     	;# 
   140     0005                     	;# 
   141     0006                     	;# 
   142     0007                     	;# 
   143     0008                     	;# 
   144     0009                     	;# 
   145     000A                     	;# 
   146     000B                     	;# 
   147     000C                     	;# 
   148     000D                     	;# 
   149     000E                     	;# 
   150     000E                     	;# 
   151     000F                     	;# 
   152     0010                     	;# 
   153     0011                     	;# 
   154     0012                     	;# 
   155     0013                     	;# 
   156     0014                     	;# 
   157     0015                     	;# 
   158     0015                     	;# 
   159     0016                     	;# 
   160     0017                     	;# 
   161     0018                     	;# 
   162     0019                     	;# 
   163     001A                     	;# 
   164     001B                     	;# 
   165     001B                     	;# 
   166     001C                     	;# 
   167     001D                     	;# 
   168     001E                     	;# 
   169     001F                     	;# 
   170     0081                     	;# 
   171     0085                     	;# 
   172     0086                     	;# 
   173     0087                     	;# 
   174     0088                     	;# 
   175     0089                     	;# 
   176     008C                     	;# 
   177     008D                     	;# 
   178     008E                     	;# 
   179     0091                     	;# 
   180     0092                     	;# 
   181     0093                     	;# 
   182     0094                     	;# 
   183     0098                     	;# 
   184     0099                     	;# 
   185     009C                     	;# 
   186     009D                     	;# 
   187     009E                     	;# 
   188     009F                     	;# 
   189     010C                     	;# 
   190     010D                     	;# 
   191     010E                     	;# 
   192     010F                     	;# 
   193     018C                     	;# 
   194     018D                     	;# 
   195                           
   196                           	psect	idataCOMMON
   197     0003                     __pidataCOMMON:
   198                           
   199                           ;initializer for _countdown
   200     0003  343C               	retlw	60
   201                           
   202                           	psect	idataBANK0
   203     0C0D                     __pidataBANK0:
   204                           
   205                           ;initializer for _id2
   206     0C0D  3431               	retlw	49
   207                           
   208                           ;initializer for _id1
   209     0C0E  3430               	retlw	48
   210                           
   211                           	psect	strings
   212     074F                     __pstrings:
   213     074F                     stringtab:
   214     074F                     __stringtab:
   215                           
   216                           ;	String table - string pointers are 1 byte each
   217     074F  1BFF               	btfsc	btemp+1,7
   218     0750  2F59               	ljmp	stringcode
   219     0751  1383               	bcf	3,7
   220     0752  187F               	btfsc	btemp+1,0
   221     0753  1783               	bsf	3,7
   222     0754  0800               	movf	0,w
   223     0755  0A84               	incf	4,f
   224     0756  1903               	skipnz
   225     0757  0AFF               	incf	btemp+1,f
   226     0758  0008               	return
   227     0759                     stringcode:
   228     0759                     stringdir:
   229     0759  3007               	movlw	high stringdir
   230     075A  008A               	movwf	10
   231     075B  0804               	movf	4,w
   232     075C  0A84               	incf	4,f
   233     075D  0782               	addwf	2,f
   234     075E                     __stringbase:
   235     075E  3400               	retlw	0
   236     075F                     __end_of__stringtab:
   237     075F                     _keys:
   238     075F  3423               	retlw	35
   239     0760  3437               	retlw	55
   240     0761  3434               	retlw	52
   241     0762  3431               	retlw	49
   242     0763  342A               	retlw	42
   243     0764  3438               	retlw	56
   244     0765  3435               	retlw	53
   245     0766  3432               	retlw	50
   246     0767  3430               	retlw	48
   247     0768  3439               	retlw	57
   248     0769  3436               	retlw	54
   249     076A  3433               	retlw	51
   250     076B                     __end_of_keys:
   251     076B                     _rowMask:
   252     076B  3401               	retlw	1
   253     076C  3402               	retlw	2
   254     076D  3404               	retlw	4
   255     076E  3408               	retlw	8
   256     076F                     __end_of_rowMask:
   257     076F                     _colMask:
   258     076F  34FE               	retlw	254
   259     0770  34FD               	retlw	253
   260     0771  34FB               	retlw	251
   261     0772                     __end_of_colMask:
   262     0001                     _TMR0	set	1
   263     0006                     _PORTB	set	6
   264     0008                     _PORTD	set	8
   265     0009                     _PORTEbits	set	9
   266     001A                     _RCREG	set	26
   267     0019                     _TXREG	set	25
   268     005F                     _GIE	set	95
   269     005D                     _TMR0IE	set	93
   270     005A                     _TMR0IF	set	90
   271     0065                     _RCIF	set	101
   272     0064                     _TXIF	set	100
   273     0039                     _RC1	set	57
   274     0038                     _RC0	set	56
   275     00C4                     _CREN	set	196
   276     00C7                     _SPEN	set	199
   277     0089                     _TRISEbits	set	137
   278     0099                     _SPBRG	set	153
   279     0089                     _TRISE	set	137
   280     0088                     _TRISD	set	136
   281     0087                     _TRISC	set	135
   282     0086                     _TRISB	set	134
   283     0085                     _TRISA	set	133
   284     0408                     _PS0	set	1032
   285     0409                     _PS1	set	1033
   286     040A                     _PS2	set	1034
   287     040B                     _PSA	set	1035
   288     040D                     _T0CS	set	1037
   289     04C5                     _TXEN	set	1221
   290     04C4                     _SYNC	set	1220
   291     04C2                     _BRGH	set	1218
   292     043F                     _TRISC7	set	1087
   293     043E                     _TRISC6	set	1086
   294     0772                     STR_11:
   295     0772  3443               	retlw	67	;'C'
   296     0773  346F               	retlw	111	;'o'
   297     0774  3464               	retlw	100	;'d'
   298     0775  3469               	retlw	105	;'i'
   299     0776  3463               	retlw	99	;'c'
   300     0777  3465               	retlw	101	;'e'
   301     0778  3420               	retlw	32	;' '
   302     0779  3453               	retlw	83	;'S'
   303     077A  3463               	retlw	99	;'c'
   304     077B  3461               	retlw	97	;'a'
   305     077C  3464               	retlw	100	;'d'
   306     077D  3475               	retlw	117	;'u'
   307     077E  3474               	retlw	116	;'t'
   308     077F  346F               	retlw	111	;'o'
   309     0780  3400               	retlw	0
   310     0781                     STR_6:
   311     0781  3441               	retlw	65	;'A'
   312     0782  3474               	retlw	116	;'t'
   313     0783  3474               	retlw	116	;'t'
   314     0784  3465               	retlw	101	;'e'
   315     0785  346E               	retlw	110	;'n'
   316     0786  3464               	retlw	100	;'d'
   317     0787  3465               	retlw	101	;'e'
   318     0788  3472               	retlw	114	;'r'
   319     0789  3465               	retlw	101	;'e'
   320     078A  342E               	retlw	46	;'.'
   321     078B  342E               	retlw	46	;'.'
   322     078C  342E               	retlw	46	;'.'
   323     078D  342E               	retlw	46	;'.'
   324     078E  3400               	retlw	0
   325     078F                     STR_9:
   326     078F  3454               	retlw	84	;'T'
   327     0790  3465               	retlw	101	;'e'
   328     0791  346D               	retlw	109	;'m'
   329     0792  3470               	retlw	112	;'p'
   330     0793  346F               	retlw	111	;'o'
   331     0794  3420               	retlw	32	;' '
   332     0795  3453               	retlw	83	;'S'
   333     0796  3463               	retlw	99	;'c'
   334     0797  3461               	retlw	97	;'a'
   335     0798  3464               	retlw	100	;'d'
   336     0799  3475               	retlw	117	;'u'
   337     079A  3474               	retlw	116	;'t'
   338     079B  346F               	retlw	111	;'o'
   339     079C  3400               	retlw	0
   340     079D                     STR_5:
   341     079D  3441               	retlw	65	;'A'
   342     079E  3474               	retlw	116	;'t'
   343     079F  3474               	retlw	116	;'t'
   344     07A0  3465               	retlw	101	;'e'
   345     07A1  346E               	retlw	110	;'n'
   346     07A2  3464               	retlw	100	;'d'
   347     07A3  3465               	retlw	101	;'e'
   348     07A4  3472               	retlw	114	;'r'
   349     07A5  3465               	retlw	101	;'e'
   350     07A6  342E               	retlw	46	;'.'
   351     07A7  342E               	retlw	46	;'.'
   352     07A8  342E               	retlw	46	;'.'
   353     07A9  3400               	retlw	0
   354     07AA                     STR_4:
   355     07AA  3441               	retlw	65	;'A'
   356     07AB  3474               	retlw	116	;'t'
   357     07AC  3474               	retlw	116	;'t'
   358     07AD  3465               	retlw	101	;'e'
   359     07AE  346E               	retlw	110	;'n'
   360     07AF  3464               	retlw	100	;'d'
   361     07B0  3465               	retlw	101	;'e'
   362     07B1  3472               	retlw	114	;'r'
   363     07B2  3465               	retlw	101	;'e'
   364     07B3  342E               	retlw	46	;'.'
   365     07B4  342E               	retlw	46	;'.'
   366     07B5  3400               	retlw	0
   367     07B6                     STR_3:
   368     07B6  3441               	retlw	65	;'A'
   369     07B7  3474               	retlw	116	;'t'
   370     07B8  3474               	retlw	116	;'t'
   371     07B9  3465               	retlw	101	;'e'
   372     07BA  346E               	retlw	110	;'n'
   373     07BB  3464               	retlw	100	;'d'
   374     07BC  3465               	retlw	101	;'e'
   375     07BD  3472               	retlw	114	;'r'
   376     07BE  3465               	retlw	101	;'e'
   377     07BF  342E               	retlw	46	;'.'
   378     07C0  3400               	retlw	0
   379     07C1                     STR_2:
   380     07C1  3441               	retlw	65	;'A'
   381     07C2  3474               	retlw	116	;'t'
   382     07C3  3474               	retlw	116	;'t'
   383     07C4  3465               	retlw	101	;'e'
   384     07C5  346E               	retlw	110	;'n'
   385     07C6  3464               	retlw	100	;'d'
   386     07C7  3465               	retlw	101	;'e'
   387     07C8  3472               	retlw	114	;'r'
   388     07C9  3465               	retlw	101	;'e'
   389     07CA  3400               	retlw	0
   390     07CB                     STR_1:
   391     07CB  3450               	retlw	80	;'P'
   392     07CC  3472               	retlw	114	;'r'
   393     07CD  3465               	retlw	101	;'e'
   394     07CE  346D               	retlw	109	;'m'
   395     07CF  3469               	retlw	105	;'i'
   396     07D0  3420               	retlw	32	;' '
   397     07D1  342A               	retlw	42	;'*'
   398     07D2  3400               	retlw	0
   399     07D3                     STR_10:
   400     07D3  344D               	retlw	77	;'M'
   401     07D4  3461               	retlw	97	;'a'
   402     07D5  346E               	retlw	110	;'n'
   403     07D6  3464               	retlw	100	;'d'
   404     07D7  3461               	retlw	97	;'a'
   405     07D8  3474               	retlw	116	;'t'
   406     07D9  346F               	retlw	111	;'o'
   407     07DA  3400               	retlw	0
   408     07DB                     STR_8:
   409     07DB  3446               	retlw	70	;'F'
   410     07DC  3441               	retlw	65	;'A'
   411     07DD  3454               	retlw	84	;'T'
   412     07DE  3454               	retlw	84	;'T'
   413     07DF  3441               	retlw	65	;'A'
   414     07E0  3400               	retlw	0
   415     07C1                     
   416                           	psect	cinit
   417     0013                     start_initialization:	
   418                           ; #config settings
   419                           
   420     0013                     __initialization:
   421                           
   422                           ; Initialize objects allocated to BANK0
   423     0013  120A  158A  240D  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   424     0018  00E3               	movwf	__pdataBANK0& (0+127)
   425     0019  120A  158A  240E  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   426     001E  00E4               	movwf	(__pdataBANK0+1)& (0+127)
   427                           
   428                           ; Initialize objects allocated to COMMON
   429     001F  120A  118A  2003  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   430     0024  00F9               	movwf	__pdataCOMMON& (0+127)
   431                           
   432                           ; Clear objects allocated to BANK1
   433     0025  1383               	bcf	3,7	;select IRP bank0
   434     0026  30A0               	movlw	low __pbssBANK1
   435     0027  0084               	movwf	4
   436     0028  30B0               	movlw	low (__pbssBANK1+16)
   437     0029  120A  118A  27F8  120A  118A  	fcall	clear_ram0
   438                           
   439                           ; Clear objects allocated to BANK0
   440     002E  3020               	movlw	low __pbssBANK0
   441     002F  0084               	movwf	4
   442     0030  3043               	movlw	low (__pbssBANK0+35)
   443     0031  120A  118A  27F8  120A  118A  	fcall	clear_ram0
   444                           
   445                           ; Clear objects allocated to COMMON
   446     0036  01F5               	clrf	__pbssCOMMON& (0+127)
   447     0037  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   448     0038  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   449                           
   450                           ; Clear objects allocated to BITCOMMON
   451     0039  01F8               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   452     003A                     end_of_initialization:	
   453                           ;End of C runtime variable initialization code
   454                           
   455     003A                     __end_of__initialization:
   456     003A  0183               	clrf	3
   457     003B  120A  118A  283E   	ljmp	_main	;jump to C main() function
   458                           
   459                           	psect	bitbssCOMMON
   460     03C0                     __pbitbssCOMMON:
   461     03C0                     _old_btn:
   462     03C0                     	ds	1
   463                           
   464                           	psect	bssCOMMON
   465     0075                     __pbssCOMMON:
   466     0075                     _stato:
   467     0075                     	ds	1
   468     0076                     _rowScan:
   469     0076                     	ds	1
   470     0077                     _colScan:
   471     0077                     	ds	1
   472                           
   473                           	psect	dataCOMMON
   474     0079                     __pdataCOMMON:
   475     0079                     _countdown:
   476     0079                     	ds	1
   477                           
   478                           	psect	bssBANK0
   479     0020                     __pbssBANK0:
   480     0020                     _data:
   481     0020                     	ds	6
   482     0026                     _codice:
   483     0026                     	ds	6
   484     002C                     _count:
   485     002C                     	ds	2
   486     002E                     _index:
   487     002E                     	ds	2
   488     0030                     _flag:
   489     0030                     	ds	2
   490     0032                     _stringPosition:
   491     0032                     	ds	2
   492     0034                     _type:
   493     0034                     	ds	1
   494     0035                     _randomNum:
   495     0035                     	ds	1
   496     0036                     _received:
   497     0036                     	ds	1
   498     0037                     _restart:
   499     0037                     	ds	1
   500     0038                     _old_stato:
   501     0038                     	ds	1
   502     0039                     _keyok:
   503     0039                     	ds	1
   504     003A                     _keypressed:
   505     003A                     	ds	1
   506     003B                     _num5:
   507     003B                     	ds	1
   508     003C                     _num4:
   509     003C                     	ds	1
   510     003D                     _num3:
   511     003D                     	ds	1
   512     003E                     _num2:
   513     003E                     	ds	1
   514     003F                     _num1:
   515     003F                     	ds	1
   516     0040                     _print_countdown:
   517     0040                     	ds	3
   518                           
   519                           	psect	dataBANK0
   520     0063                     __pdataBANK0:
   521     0063                     _id2:
   522     0063                     	ds	1
   523     0064                     _id1:
   524     0064                     	ds	1
   525                           
   526                           	psect	bssBANK1
   527     00A0                     __pbssBANK1:
   528     00A0                     _stringa:
   529     00A0                     	ds	16
   530                           
   531                           	psect	clrtext
   532     07F8                     clear_ram0:	
   533                           ;	Called with FSR containing the base address, and
   534                           ;	W with the last address+1
   535                           
   536     07F8  0064               	clrwdt	;clear the watchdog before getting into this loop
   537     07F9                     clrloop0:
   538     07F9  0180               	clrf	0	;clear RAM location pointed to by FSR
   539     07FA  0A84               	incf	4,f	;increment pointer
   540     07FB  0604               	xorwf	4,w	;XOR with final address
   541     07FC  1903               	btfsc	3,2	;have we reached the end yet?
   542     07FD  3400               	retlw	0	;all done for this memory range, return
   543     07FE  0604               	xorwf	4,w	;XOR again to restore value
   544     07FF  2FF9               	goto	clrloop0	;do the next byte
   545                           
   546                           	psect	cstackCOMMON
   547     0070                     __pcstackCOMMON:
   548     0070                     ?_UART_Init:
   549     0070                     ?_initLCD:	
   550                           ; 1 bytes @ 0x0
   551                           
   552     0070                     ?_Timer0_Init:	
   553                           ; 1 bytes @ 0x0
   554                           
   555     0070                     ?_RS485_TxEnable:	
   556                           ; 1 bytes @ 0x0
   557                           
   558     0070                     ?_UART_Write:	
   559                           ; 1 bytes @ 0x0
   560                           
   561     0070                     ?_GenerateRandomNumber:	
   562                           ; 1 bytes @ 0x0
   563                           
   564     0070                     ?_KeyPadReader:	
   565                           ; 1 bytes @ 0x0
   566                           
   567     0070                     ?_RS485_RxEnable:	
   568                           ; 1 bytes @ 0x0
   569                           
   570     0070                     ?_UART_Read1:	
   571                           ; 1 bytes @ 0x0
   572                           
   573     0070                     ?_UART_Read2:	
   574                           ; 1 bytes @ 0x0
   575                           
   576     0070                     ?_main:	
   577                           ; 1 bytes @ 0x0
   578                           
   579     0070                     ?_ISR:	
   580                           ; 1 bytes @ 0x0
   581                           
   582     0070                     ??_ISR:	
   583                           ; 1 bytes @ 0x0
   584                           
   585                           
   586                           ; 1 bytes @ 0x0
   587     0070                     	ds	5
   588                           
   589                           	psect	cstackBANK0
   590     0043                     __pcstackBANK0:
   591     0043                     ??_UART_Init:
   592     0043                     ??_Timer0_Init:	
   593                           ; 1 bytes @ 0x0
   594                           
   595     0043                     ?_lcdSend:	
   596                           ; 1 bytes @ 0x0
   597                           
   598     0043                     ??_RS485_TxEnable:	
   599                           ; 1 bytes @ 0x0
   600                           
   601     0043                     ??_UART_Write:	
   602                           ; 1 bytes @ 0x0
   603                           
   604     0043                     ??_GenerateRandomNumber:	
   605                           ; 1 bytes @ 0x0
   606                           
   607     0043                     ??_KeyPadReader:	
   608                           ; 1 bytes @ 0x0
   609                           
   610     0043                     ??_RS485_RxEnable:	
   611                           ; 1 bytes @ 0x0
   612                           
   613     0043                     ?___bmul:	
   614                           ; 1 bytes @ 0x0
   615                           
   616     0043                     ?___awmod:	
   617                           ; 1 bytes @ 0x0
   618                           
   619     0043                     UART_Write@data:	
   620                           ; 2 bytes @ 0x0
   621                           
   622     0043                     lcdSend@tipo:	
   623                           ; 1 bytes @ 0x0
   624                           
   625     0043                     GenerateRandomNumber@randomNum:	
   626                           ; 1 bytes @ 0x0
   627                           
   628     0043                     ___bmul@multiplicand:	
   629                           ; 1 bytes @ 0x0
   630                           
   631     0043                     ___awmod@divisor:	
   632                           ; 1 bytes @ 0x0
   633                           
   634                           
   635                           ; 2 bytes @ 0x0
   636     0043                     	ds	1
   637     0044                     ??_lcdSend:
   638     0044                     ??___bmul:	
   639                           ; 1 bytes @ 0x1
   640                           
   641     0044                     lcdSend@dato:	
   642                           ; 1 bytes @ 0x1
   643                           
   644     0044                     GenerateRandomNumber@count:	
   645                           ; 1 bytes @ 0x1
   646                           
   647                           
   648                           ; 2 bytes @ 0x1
   649     0044                     	ds	1
   650     0045                     ??_initLCD:
   651     0045                     ?_lcdPrint:	
   652                           ; 1 bytes @ 0x2
   653                           
   654     0045                     ___bmul@product:	
   655                           ; 1 bytes @ 0x2
   656                           
   657     0045                     lcdPrint@str:	
   658                           ; 1 bytes @ 0x2
   659                           
   660     0045                     ___awmod@dividend:	
   661                           ; 2 bytes @ 0x2
   662                           
   663                           
   664                           ; 2 bytes @ 0x2
   665     0045                     	ds	1
   666     0046                     ___bmul@multiplier:
   667                           
   668                           ; 1 bytes @ 0x3
   669     0046                     	ds	1
   670     0047                     ??_lcdPrint:
   671     0047                     ?_potenza:	
   672                           ; 1 bytes @ 0x4
   673                           
   674     0047                     ??___awmod:	
   675                           ; 1 bytes @ 0x4
   676                           
   677     0047                     potenza@e:	
   678                           ; 1 bytes @ 0x4
   679                           
   680                           
   681                           ; 1 bytes @ 0x4
   682     0047                     	ds	1
   683     0048                     ??_potenza:
   684     0048                     ___awmod@counter:	
   685                           ; 1 bytes @ 0x5
   686                           
   687                           
   688                           ; 1 bytes @ 0x5
   689     0048                     	ds	1
   690     0049                     potenza@b:
   691     0049                     ___awmod@sign:	
   692                           ; 1 bytes @ 0x6
   693                           
   694                           
   695                           ; 1 bytes @ 0x6
   696     0049                     	ds	1
   697     004A                     lcdPrint@n:
   698     004A                     potenza@i:	
   699                           ; 2 bytes @ 0x7
   700                           
   701                           
   702                           ; 2 bytes @ 0x7
   703     004A                     	ds	2
   704     004C                     potenza@n:
   705                           
   706                           ; 1 bytes @ 0x9
   707     004C                     	ds	1
   708     004D                     ?___awdiv:
   709     004D                     ___awdiv@divisor:	
   710                           ; 2 bytes @ 0xA
   711                           
   712                           
   713                           ; 2 bytes @ 0xA
   714     004D                     	ds	2
   715     004F                     ___awdiv@dividend:
   716                           
   717                           ; 2 bytes @ 0xC
   718     004F                     	ds	2
   719     0051                     ??___awdiv:
   720                           
   721                           ; 1 bytes @ 0xE
   722     0051                     	ds	1
   723     0052                     ___awdiv@counter:
   724                           
   725                           ; 1 bytes @ 0xF
   726     0052                     	ds	1
   727     0053                     ___awdiv@sign:
   728                           
   729                           ; 1 bytes @ 0x10
   730     0053                     	ds	1
   731     0054                     ___awdiv@quotient:
   732                           
   733                           ; 2 bytes @ 0x11
   734     0054                     	ds	2
   735     0056                     ?_intToString:
   736     0056                     intToString@n:	
   737                           ; 1 bytes @ 0x13
   738                           
   739                           
   740                           ; 2 bytes @ 0x13
   741     0056                     	ds	2
   742     0058                     intToString@str:
   743                           
   744                           ; 1 bytes @ 0x15
   745     0058                     	ds	1
   746     0059                     ??_intToString:
   747                           
   748                           ; 1 bytes @ 0x16
   749     0059                     	ds	3
   750     005C                     intToString@t:
   751                           
   752                           ; 1 bytes @ 0x19
   753     005C                     	ds	1
   754     005D                     intToString@cifre:
   755                           
   756                           ; 1 bytes @ 0x1A
   757     005D                     	ds	1
   758     005E                     intToString@i:
   759                           
   760                           ; 1 bytes @ 0x1B
   761     005E                     	ds	1
   762     005F                     ??_UART_Read1:
   763     005F                     ??_UART_Read2:	
   764                           ; 1 bytes @ 0x1C
   765                           
   766                           
   767                           ; 1 bytes @ 0x1C
   768     005F                     	ds	3
   769     0062                     UART_Read1@count:
   770                           
   771                           ; 1 bytes @ 0x1F
   772     0062                     	ds	1
   773     0063                     ??_main:
   774                           
   775                           	psect	maintext
   776     003E                     __pmaintext:	
   777                           ; 1 bytes @ 0x20
   778 ;;
   779 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   780 ;;
   781 ;; *************** function _main *****************
   782 ;; Defined at:
   783 ;;		line 107 in file "main.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;		None
   786 ;; Auto vars:     Size  Location     Type
   787 ;;		None
   788 ;; Return value:  Size  Location     Type
   789 ;;                  1    wreg      void 
   790 ;; Registers used:
   791 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   792 ;; Tracked objects:
   793 ;;		On entry : B00/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   797 ;;      Params:         0       0       0       0       0
   798 ;;      Locals:         0       0       0       0       0
   799 ;;      Temps:          0       0       0       0       0
   800 ;;      Totals:         0       0       0       0       0
   801 ;;Total ram usage:        0 bytes
   802 ;; Hardware stack levels required when called: 6
   803 ;; This function calls:
   804 ;;		_GenerateRandomNumber
   805 ;;		_KeyPadReader
   806 ;;		_RS485_RxEnable
   807 ;;		_RS485_TxEnable
   808 ;;		_Timer0_Init
   809 ;;		_UART_Init
   810 ;;		_UART_Read1
   811 ;;		_UART_Read2
   812 ;;		_UART_Write
   813 ;;		_initLCD
   814 ;;		_lcdPrint
   815 ;;		_lcdSend
   816 ;; This function is called by:
   817 ;;		Startup code after reset
   818 ;; This function uses a non-reentrant model
   819 ;;
   820                           
   821     003E                     _main:	
   822                           ;psect for function _main
   823                           
   824     003E                     l3093:	
   825                           ;incstack = 0
   826                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   827                           
   828                           
   829                           ;main.c: 109:     TRISA=0x00;
   830     003E  1683               	bsf	3,5	;RP0=1, select bank1
   831     003F  1303               	bcf	3,6	;RP1=0, select bank1
   832     0040  0185               	clrf	5	;volatile
   833                           
   834                           ;main.c: 110:  TRISB=0x00;
   835     0041  0186               	clrf	6	;volatile
   836                           
   837                           ;main.c: 111:  TRISC=0x00;
   838     0042  0187               	clrf	7	;volatile
   839                           
   840                           ;main.c: 112:  TRISD=0x00;
   841     0043  0188               	clrf	8	;volatile
   842                           
   843                           ;main.c: 113:     TRISE=0X00;
   844     0044  0189               	clrf	9	;volatile
   845     0045                     l3095:
   846                           
   847                           ;main.c: 114:     UART_Init();
   848     0045  120A  158A  2432  120A  118A  	fcall	_UART_Init
   849     004A                     l3097:
   850                           
   851                           ;main.c: 115:     initLCD();
   852     004A  120A  158A  25A8  120A  118A  	fcall	_initLCD
   853     004F                     l3099:
   854                           
   855                           ;main.c: 116:     Timer0_Init();
   856     004F  120A  158A  2423  120A  118A  	fcall	_Timer0_Init
   857     0054                     l3101:
   858                           
   859                           ;main.c: 118:     {;main.c: 119:         lcdSend(0x01, 0);
   860     0054  1283               	bcf	3,5	;RP0=0, select bank0
   861     0055  1303               	bcf	3,6	;RP1=0, select bank0
   862     0056  01C3               	clrf	lcdSend@tipo
   863     0057  3001               	movlw	1
   864     0058  120A  158A  2444  120A  118A  	fcall	_lcdSend
   865     005D                     l3103:
   866                           
   867                           ;main.c: 120:         lcdPrint("Premi *");
   868     005D  306D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   869     005E  1283               	bcf	3,5	;RP0=0, select bank0
   870     005F  1303               	bcf	3,6	;RP1=0, select bank0
   871     0060  00C5               	movwf	lcdPrint@str
   872     0061  3080               	movlw	128
   873     0062  00C6               	movwf	lcdPrint@str+1
   874     0063  120A  158A  249C  120A  118A  	fcall	_lcdPrint
   875     0068                     l3105:
   876                           
   877                           ;main.c: 121:         RS485_TxEnable();
   878     0068  120A  158A  2414  120A  118A  	fcall	_RS485_TxEnable
   879     006D                     l3107:
   880                           
   881                           ;main.c: 122:         UART_Write('P');
   882     006D  3050               	movlw	80
   883     006E  120A  158A  2419  120A  118A  	fcall	_UART_Write
   884     0073                     l3109:
   885                           
   886                           ;main.c: 123:         UART_Write('r');
   887     0073  3072               	movlw	114
   888     0074  120A  158A  2419  120A  118A  	fcall	_UART_Write
   889     0079                     l3111:
   890                           
   891                           ;main.c: 124:         UART_Write('e');
   892     0079  3065               	movlw	101
   893     007A  120A  158A  2419  120A  118A  	fcall	_UART_Write
   894     007F                     l3113:
   895                           
   896                           ;main.c: 125:         UART_Write('m');
   897     007F  306D               	movlw	109
   898     0080  120A  158A  2419  120A  118A  	fcall	_UART_Write
   899     0085                     l3115:
   900                           
   901                           ;main.c: 126:         UART_Write('i');
   902     0085  3069               	movlw	105
   903     0086  120A  158A  2419  120A  118A  	fcall	_UART_Write
   904     008B                     l3117:
   905                           
   906                           ;main.c: 127:         UART_Write(' ');
   907     008B  3020               	movlw	32
   908     008C  120A  158A  2419  120A  118A  	fcall	_UART_Write
   909     0091                     l3119:
   910                           
   911                           ;main.c: 128:         UART_Write('*');
   912     0091  302A               	movlw	42
   913     0092  120A  158A  2419  120A  118A  	fcall	_UART_Write
   914     0097                     l3121:
   915                           
   916                           ;main.c: 129:         UART_Write('\r');
   917     0097  300D               	movlw	13
   918     0098  120A  158A  2419  120A  118A  	fcall	_UART_Write
   919     009D                     l3123:
   920                           
   921                           ;main.c: 130:         UART_Write('\n');
   922     009D  300A               	movlw	10
   923     009E  120A  158A  2419  120A  118A  	fcall	_UART_Write
   924     00A3                     l3125:
   925                           
   926                           ;main.c: 131:         num1 = GenerateRandomNumber();
   927     00A3  120A  158A  2459  120A  118A  	fcall	_GenerateRandomNumber
   928     00A8  1283               	bcf	3,5	;RP0=0, select bank0
   929     00A9  1303               	bcf	3,6	;RP1=0, select bank0
   930     00AA  00BF               	movwf	_num1
   931     00AB                     l3127:
   932                           
   933                           ;main.c: 132:         num2 = GenerateRandomNumber();
   934     00AB  120A  158A  2459  120A  118A  	fcall	_GenerateRandomNumber
   935     00B0  1283               	bcf	3,5	;RP0=0, select bank0
   936     00B1  1303               	bcf	3,6	;RP1=0, select bank0
   937     00B2  00BE               	movwf	_num2
   938     00B3                     l3129:
   939                           
   940                           ;main.c: 133:         num3 = GenerateRandomNumber();
   941     00B3  120A  158A  2459  120A  118A  	fcall	_GenerateRandomNumber
   942     00B8  1283               	bcf	3,5	;RP0=0, select bank0
   943     00B9  1303               	bcf	3,6	;RP1=0, select bank0
   944     00BA  00BD               	movwf	_num3
   945     00BB                     l3131:
   946                           
   947                           ;main.c: 134:         num4 = GenerateRandomNumber();
   948     00BB  120A  158A  2459  120A  118A  	fcall	_GenerateRandomNumber
   949     00C0  1283               	bcf	3,5	;RP0=0, select bank0
   950     00C1  1303               	bcf	3,6	;RP1=0, select bank0
   951     00C2  00BC               	movwf	_num4
   952     00C3                     l3133:
   953                           
   954                           ;main.c: 135:         num5 = GenerateRandomNumber();
   955     00C3  120A  158A  2459  120A  118A  	fcall	_GenerateRandomNumber
   956     00C8  1283               	bcf	3,5	;RP0=0, select bank0
   957     00C9  1303               	bcf	3,6	;RP1=0, select bank0
   958     00CA  00BB               	movwf	_num5
   959                           
   960                           ;main.c: 136:         while (codice[0] == '\0')
   961     00CB  28E1               	goto	l3141
   962     00CC                     l3135:
   963                           
   964                           ;main.c: 137:         {;main.c: 138:             KeyPadReader();
   965     00CC  120A  158A  2692  120A  118A  	fcall	_KeyPadReader
   966     00D1                     l3137:
   967                           
   968                           ;main.c: 139:             if (keys[keypressed] == '*'){
   969     00D1  1283               	bcf	3,5	;RP0=0, select bank0
   970     00D2  1303               	bcf	3,6	;RP1=0, select bank0
   971     00D3  083A               	movf	_keypressed,w
   972     00D4  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
   973     00D5  0084               	movwf	4
   974     00D6  120A  118A  2759  120A  118A  	fcall	stringdir
   975     00DB  3A2A               	xorlw	42
   976     00DC  1D03               	skipz
   977     00DD  28DF               	goto	u3381
   978     00DE  28E0               	goto	u3380
   979     00DF                     u3381:
   980     00DF  28E1               	goto	l3141
   981     00E0                     u3380:
   982     00E0  28E6               	goto	l3143
   983     00E1                     l3141:
   984                           
   985                           ;main.c: 136:         while (codice[0] == '\0')
   986     00E1  0826               	movf	_codice,w
   987     00E2  1903               	btfsc	3,2
   988     00E3  28E5               	goto	u3391
   989     00E4  28E6               	goto	u3390
   990     00E5                     u3391:
   991     00E5  28CC               	goto	l3135
   992     00E6                     u3390:
   993     00E6                     l3143:
   994                           
   995                           ;main.c: 143:         lcdSend(0x01, 0);
   996     00E6  01C3               	clrf	lcdSend@tipo
   997     00E7  3001               	movlw	1
   998     00E8  120A  158A  2444  120A  118A  	fcall	_lcdSend
   999     00ED                     l3145:
  1000                           
  1001                           ;main.c: 144:         lcdPrint("Attendere");
  1002     00ED  3063               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1003     00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1004     00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1005     00F0  00C5               	movwf	lcdPrint@str
  1006     00F1  3080               	movlw	128
  1007     00F2  00C6               	movwf	lcdPrint@str+1
  1008     00F3  120A  158A  249C  120A  118A  	fcall	_lcdPrint
  1009                           
  1010                           ;main.c: 145:         while(num1 != 0x30 && num1 != 0x31 && num1 != 0x32 && num1 != 0x33
      +                           &&
  1011     00F8  2901               	goto	l3149
  1012     00F9                     l3147:
  1013                           
  1014                           ;main.c: 147:               num1 != 0x38 && num1 != 0x39){;main.c: 148:         num1 = G
      +                          enerateRandomNumber();
  1015     00F9  120A  158A  2459  120A  118A  	fcall	_GenerateRandomNumber
  1016     00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1017     00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1018     0100  00BF               	movwf	_num1
  1019     0101                     l3149:
  1020                           
  1021                           ;main.c: 145:         while(num1 != 0x30 && num1 != 0x31 && num1 != 0x32 && num1 != 0x33
      +                           &&
  1022     0101  3030               	movlw	48
  1023     0102  1283               	bcf	3,5	;RP0=0, select bank0
  1024     0103  1303               	bcf	3,6	;RP1=0, select bank0
  1025     0104  063F               	xorwf	_num1,w
  1026     0105  1903               	btfsc	3,2
  1027     0106  2908               	goto	u3401
  1028     0107  2909               	goto	u3400
  1029     0108                     u3401:
  1030     0108  293F               	goto	l3169
  1031     0109                     u3400:
  1032     0109                     l3151:
  1033     0109  3031               	movlw	49
  1034     010A  063F               	xorwf	_num1,w
  1035     010B  1903               	btfsc	3,2
  1036     010C  290E               	goto	u3411
  1037     010D  290F               	goto	u3410
  1038     010E                     u3411:
  1039     010E  293F               	goto	l3169
  1040     010F                     u3410:
  1041     010F                     l3153:
  1042     010F  3032               	movlw	50
  1043     0110  063F               	xorwf	_num1,w
  1044     0111  1903               	btfsc	3,2
  1045     0112  2914               	goto	u3421
  1046     0113  2915               	goto	u3420
  1047     0114                     u3421:
  1048     0114  293F               	goto	l3169
  1049     0115                     u3420:
  1050     0115                     l3155:
  1051     0115  3033               	movlw	51
  1052     0116  063F               	xorwf	_num1,w
  1053     0117  1903               	btfsc	3,2
  1054     0118  291A               	goto	u3431
  1055     0119  291B               	goto	u3430
  1056     011A                     u3431:
  1057     011A  293F               	goto	l3169
  1058     011B                     u3430:
  1059     011B                     l3157:
  1060     011B  3034               	movlw	52
  1061     011C  063F               	xorwf	_num1,w
  1062     011D  1903               	btfsc	3,2
  1063     011E  2920               	goto	u3441
  1064     011F  2921               	goto	u3440
  1065     0120                     u3441:
  1066     0120  293F               	goto	l3169
  1067     0121                     u3440:
  1068     0121                     l3159:
  1069     0121  3035               	movlw	53
  1070     0122  063F               	xorwf	_num1,w
  1071     0123  1903               	btfsc	3,2
  1072     0124  2926               	goto	u3451
  1073     0125  2927               	goto	u3450
  1074     0126                     u3451:
  1075     0126  293F               	goto	l3169
  1076     0127                     u3450:
  1077     0127                     l3161:
  1078     0127  3036               	movlw	54
  1079     0128  063F               	xorwf	_num1,w
  1080     0129  1903               	btfsc	3,2
  1081     012A  292C               	goto	u3461
  1082     012B  292D               	goto	u3460
  1083     012C                     u3461:
  1084     012C  293F               	goto	l3169
  1085     012D                     u3460:
  1086     012D                     l3163:
  1087     012D  3037               	movlw	55
  1088     012E  063F               	xorwf	_num1,w
  1089     012F  1903               	btfsc	3,2
  1090     0130  2932               	goto	u3471
  1091     0131  2933               	goto	u3470
  1092     0132                     u3471:
  1093     0132  293F               	goto	l3169
  1094     0133                     u3470:
  1095     0133                     l3165:
  1096     0133  3038               	movlw	56
  1097     0134  063F               	xorwf	_num1,w
  1098     0135  1903               	btfsc	3,2
  1099     0136  2938               	goto	u3481
  1100     0137  2939               	goto	u3480
  1101     0138                     u3481:
  1102     0138  293F               	goto	l3169
  1103     0139                     u3480:
  1104     0139                     l3167:
  1105     0139  3039               	movlw	57
  1106     013A  063F               	xorwf	_num1,w
  1107     013B  1D03               	btfss	3,2
  1108     013C  293E               	goto	u3491
  1109     013D  293F               	goto	u3490
  1110     013E                     u3491:
  1111     013E  28F9               	goto	l3147
  1112     013F                     u3490:
  1113     013F                     l3169:
  1114                           
  1115                           ;main.c: 150:         lcdSend(0x01, 0);
  1116     013F  01C3               	clrf	lcdSend@tipo
  1117     0140  3001               	movlw	1
  1118     0141  120A  158A  2444  120A  118A  	fcall	_lcdSend
  1119     0146                     l3171:
  1120                           
  1121                           ;main.c: 151:         lcdPrint("Attendere.");
  1122     0146  3058               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1123     0147  1283               	bcf	3,5	;RP0=0, select bank0
  1124     0148  1303               	bcf	3,6	;RP1=0, select bank0
  1125     0149  00C5               	movwf	lcdPrint@str
  1126     014A  3080               	movlw	128
  1127     014B  00C6               	movwf	lcdPrint@str+1
  1128     014C  120A  158A  249C  120A  118A  	fcall	_lcdPrint
  1129                           
  1130                           ;main.c: 152:         while(num2 != 0x30 && num2 != 0x31 && num2 != 0x32 && num2 != 0x33
      +                           &&
  1131     0151  295A               	goto	l3175
  1132     0152                     l3173:
  1133                           
  1134                           ;main.c: 154:               num2 != 0x38 && num2 != 0x39){;main.c: 155:         num2 = G
      +                          enerateRandomNumber();
  1135     0152  120A  158A  2459  120A  118A  	fcall	_GenerateRandomNumber
  1136     0157  1283               	bcf	3,5	;RP0=0, select bank0
  1137     0158  1303               	bcf	3,6	;RP1=0, select bank0
  1138     0159  00BE               	movwf	_num2
  1139     015A                     l3175:
  1140                           
  1141                           ;main.c: 152:         while(num2 != 0x30 && num2 != 0x31 && num2 != 0x32 && num2 != 0x33
      +                           &&
  1142     015A  3030               	movlw	48
  1143     015B  1283               	bcf	3,5	;RP0=0, select bank0
  1144     015C  1303               	bcf	3,6	;RP1=0, select bank0
  1145     015D  063E               	xorwf	_num2,w
  1146     015E  1903               	btfsc	3,2
  1147     015F  2961               	goto	u3501
  1148     0160  2962               	goto	u3500
  1149     0161                     u3501:
  1150     0161  2998               	goto	l3195
  1151     0162                     u3500:
  1152     0162                     l3177:
  1153     0162  3031               	movlw	49
  1154     0163  063E               	xorwf	_num2,w
  1155     0164  1903               	btfsc	3,2
  1156     0165  2967               	goto	u3511
  1157     0166  2968               	goto	u3510
  1158     0167                     u3511:
  1159     0167  2998               	goto	l3195
  1160     0168                     u3510:
  1161     0168                     l3179:
  1162     0168  3032               	movlw	50
  1163     0169  063E               	xorwf	_num2,w
  1164     016A  1903               	btfsc	3,2
  1165     016B  296D               	goto	u3521
  1166     016C  296E               	goto	u3520
  1167     016D                     u3521:
  1168     016D  2998               	goto	l3195
  1169     016E                     u3520:
  1170     016E                     l3181:
  1171     016E  3033               	movlw	51
  1172     016F  063E               	xorwf	_num2,w
  1173     0170  1903               	btfsc	3,2
  1174     0171  2973               	goto	u3531
  1175     0172  2974               	goto	u3530
  1176     0173                     u3531:
  1177     0173  2998               	goto	l3195
  1178     0174                     u3530:
  1179     0174                     l3183:
  1180     0174  3034               	movlw	52
  1181     0175  063E               	xorwf	_num2,w
  1182     0176  1903               	btfsc	3,2
  1183     0177  2979               	goto	u3541
  1184     0178  297A               	goto	u3540
  1185     0179                     u3541:
  1186     0179  2998               	goto	l3195
  1187     017A                     u3540:
  1188     017A                     l3185:
  1189     017A  3035               	movlw	53
  1190     017B  063E               	xorwf	_num2,w
  1191     017C  1903               	btfsc	3,2
  1192     017D  297F               	goto	u3551
  1193     017E  2980               	goto	u3550
  1194     017F                     u3551:
  1195     017F  2998               	goto	l3195
  1196     0180                     u3550:
  1197     0180                     l3187:
  1198     0180  3036               	movlw	54
  1199     0181  063E               	xorwf	_num2,w
  1200     0182  1903               	btfsc	3,2
  1201     0183  2985               	goto	u3561
  1202     0184  2986               	goto	u3560
  1203     0185                     u3561:
  1204     0185  2998               	goto	l3195
  1205     0186                     u3560:
  1206     0186                     l3189:
  1207     0186  3037               	movlw	55
  1208     0187  063E               	xorwf	_num2,w
  1209     0188  1903               	btfsc	3,2
  1210     0189  298B               	goto	u3571
  1211     018A  298C               	goto	u3570
  1212     018B                     u3571:
  1213     018B  2998               	goto	l3195
  1214     018C                     u3570:
  1215     018C                     l3191:
  1216     018C  3038               	movlw	56
  1217     018D  063E               	xorwf	_num2,w
  1218     018E  1903               	btfsc	3,2
  1219     018F  2991               	goto	u3581
  1220     0190  2992               	goto	u3580
  1221     0191                     u3581:
  1222     0191  2998               	goto	l3195
  1223     0192                     u3580:
  1224     0192                     l3193:
  1225     0192  3039               	movlw	57
  1226     0193  063E               	xorwf	_num2,w
  1227     0194  1D03               	btfss	3,2
  1228     0195  2997               	goto	u3591
  1229     0196  2998               	goto	u3590
  1230     0197                     u3591:
  1231     0197  2952               	goto	l3173
  1232     0198                     u3590:
  1233     0198                     l3195:
  1234                           
  1235                           ;main.c: 157:         lcdSend(0x01, 0);
  1236     0198  01C3               	clrf	lcdSend@tipo
  1237     0199  3001               	movlw	1
  1238     019A  120A  158A  2444  120A  118A  	fcall	_lcdSend
  1239     019F                     l3197:
  1240                           
  1241                           ;main.c: 158:         lcdPrint("Attendere..");
  1242     019F  304C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1243     01A0  1283               	bcf	3,5	;RP0=0, select bank0
  1244     01A1  1303               	bcf	3,6	;RP1=0, select bank0
  1245     01A2  00C5               	movwf	lcdPrint@str
  1246     01A3  3080               	movlw	128
  1247     01A4  00C6               	movwf	lcdPrint@str+1
  1248     01A5  120A  158A  249C  120A  118A  	fcall	_lcdPrint
  1249                           
  1250                           ;main.c: 159:         while(num3 != 0x30 && num3 != 0x31 && num3 != 0x32 && num3 != 0x33
      +                           &&
  1251     01AA  29B3               	goto	l3201
  1252     01AB                     l3199:
  1253                           
  1254                           ;main.c: 161:               num3 != 0x38 && num3 != 0x39){;main.c: 162:         num3 = G
      +                          enerateRandomNumber();
  1255     01AB  120A  158A  2459  120A  118A  	fcall	_GenerateRandomNumber
  1256     01B0  1283               	bcf	3,5	;RP0=0, select bank0
  1257     01B1  1303               	bcf	3,6	;RP1=0, select bank0
  1258     01B2  00BD               	movwf	_num3
  1259     01B3                     l3201:
  1260                           
  1261                           ;main.c: 159:         while(num3 != 0x30 && num3 != 0x31 && num3 != 0x32 && num3 != 0x33
      +                           &&
  1262     01B3  3030               	movlw	48
  1263     01B4  1283               	bcf	3,5	;RP0=0, select bank0
  1264     01B5  1303               	bcf	3,6	;RP1=0, select bank0
  1265     01B6  063D               	xorwf	_num3,w
  1266     01B7  1903               	btfsc	3,2
  1267     01B8  29BA               	goto	u3601
  1268     01B9  29BB               	goto	u3600
  1269     01BA                     u3601:
  1270     01BA  29F1               	goto	l3221
  1271     01BB                     u3600:
  1272     01BB                     l3203:
  1273     01BB  3031               	movlw	49
  1274     01BC  063D               	xorwf	_num3,w
  1275     01BD  1903               	btfsc	3,2
  1276     01BE  29C0               	goto	u3611
  1277     01BF  29C1               	goto	u3610
  1278     01C0                     u3611:
  1279     01C0  29F1               	goto	l3221
  1280     01C1                     u3610:
  1281     01C1                     l3205:
  1282     01C1  3032               	movlw	50
  1283     01C2  063D               	xorwf	_num3,w
  1284     01C3  1903               	btfsc	3,2
  1285     01C4  29C6               	goto	u3621
  1286     01C5  29C7               	goto	u3620
  1287     01C6                     u3621:
  1288     01C6  29F1               	goto	l3221
  1289     01C7                     u3620:
  1290     01C7                     l3207:
  1291     01C7  3033               	movlw	51
  1292     01C8  063D               	xorwf	_num3,w
  1293     01C9  1903               	btfsc	3,2
  1294     01CA  29CC               	goto	u3631
  1295     01CB  29CD               	goto	u3630
  1296     01CC                     u3631:
  1297     01CC  29F1               	goto	l3221
  1298     01CD                     u3630:
  1299     01CD                     l3209:
  1300     01CD  3034               	movlw	52
  1301     01CE  063D               	xorwf	_num3,w
  1302     01CF  1903               	btfsc	3,2
  1303     01D0  29D2               	goto	u3641
  1304     01D1  29D3               	goto	u3640
  1305     01D2                     u3641:
  1306     01D2  29F1               	goto	l3221
  1307     01D3                     u3640:
  1308     01D3                     l3211:
  1309     01D3  3035               	movlw	53
  1310     01D4  063D               	xorwf	_num3,w
  1311     01D5  1903               	btfsc	3,2
  1312     01D6  29D8               	goto	u3651
  1313     01D7  29D9               	goto	u3650
  1314     01D8                     u3651:
  1315     01D8  29F1               	goto	l3221
  1316     01D9                     u3650:
  1317     01D9                     l3213:
  1318     01D9  3036               	movlw	54
  1319     01DA  063D               	xorwf	_num3,w
  1320     01DB  1903               	btfsc	3,2
  1321     01DC  29DE               	goto	u3661
  1322     01DD  29DF               	goto	u3660
  1323     01DE                     u3661:
  1324     01DE  29F1               	goto	l3221
  1325     01DF                     u3660:
  1326     01DF                     l3215:
  1327     01DF  3037               	movlw	55
  1328     01E0  063D               	xorwf	_num3,w
  1329     01E1  1903               	btfsc	3,2
  1330     01E2  29E4               	goto	u3671
  1331     01E3  29E5               	goto	u3670
  1332     01E4                     u3671:
  1333     01E4  29F1               	goto	l3221
  1334     01E5                     u3670:
  1335     01E5                     l3217:
  1336     01E5  3038               	movlw	56
  1337     01E6  063D               	xorwf	_num3,w
  1338     01E7  1903               	btfsc	3,2
  1339     01E8  29EA               	goto	u3681
  1340     01E9  29EB               	goto	u3680
  1341     01EA                     u3681:
  1342     01EA  29F1               	goto	l3221
  1343     01EB                     u3680:
  1344     01EB                     l3219:
  1345     01EB  3039               	movlw	57
  1346     01EC  063D               	xorwf	_num3,w
  1347     01ED  1D03               	btfss	3,2
  1348     01EE  29F0               	goto	u3691
  1349     01EF  29F1               	goto	u3690
  1350     01F0                     u3691:
  1351     01F0  29AB               	goto	l3199
  1352     01F1                     u3690:
  1353     01F1                     l3221:
  1354                           
  1355                           ;main.c: 164:         lcdSend(0x01, 0);
  1356     01F1  01C3               	clrf	lcdSend@tipo
  1357     01F2  3001               	movlw	1
  1358     01F3  120A  158A  2444  120A  118A  	fcall	_lcdSend
  1359     01F8                     l3223:
  1360                           
  1361                           ;main.c: 165:         lcdPrint("Attendere...");
  1362     01F8  303F               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1363     01F9  1283               	bcf	3,5	;RP0=0, select bank0
  1364     01FA  1303               	bcf	3,6	;RP1=0, select bank0
  1365     01FB  00C5               	movwf	lcdPrint@str
  1366     01FC  3080               	movlw	128
  1367     01FD  00C6               	movwf	lcdPrint@str+1
  1368     01FE  120A  158A  249C  120A  118A  	fcall	_lcdPrint
  1369                           
  1370                           ;main.c: 166:         while(num4 != 0x30 && num4 != 0x31 && num4 != 0x32 && num4 != 0x33
      +                           &&
  1371     0203  2A0C               	goto	l3227
  1372     0204                     l3225:
  1373                           
  1374                           ;main.c: 168:               num4 != 0x38 && num4 != 0x39){;main.c: 169:         num4 = G
      +                          enerateRandomNumber();
  1375     0204  120A  158A  2459  120A  118A  	fcall	_GenerateRandomNumber
  1376     0209  1283               	bcf	3,5	;RP0=0, select bank0
  1377     020A  1303               	bcf	3,6	;RP1=0, select bank0
  1378     020B  00BC               	movwf	_num4
  1379     020C                     l3227:
  1380                           
  1381                           ;main.c: 166:         while(num4 != 0x30 && num4 != 0x31 && num4 != 0x32 && num4 != 0x33
      +                           &&
  1382     020C  3030               	movlw	48
  1383     020D  1283               	bcf	3,5	;RP0=0, select bank0
  1384     020E  1303               	bcf	3,6	;RP1=0, select bank0
  1385     020F  063C               	xorwf	_num4,w
  1386     0210  1903               	btfsc	3,2
  1387     0211  2A13               	goto	u3701
  1388     0212  2A14               	goto	u3700
  1389     0213                     u3701:
  1390     0213  2A4A               	goto	l3247
  1391     0214                     u3700:
  1392     0214                     l3229:
  1393     0214  3031               	movlw	49
  1394     0215  063C               	xorwf	_num4,w
  1395     0216  1903               	btfsc	3,2
  1396     0217  2A19               	goto	u3711
  1397     0218  2A1A               	goto	u3710
  1398     0219                     u3711:
  1399     0219  2A4A               	goto	l3247
  1400     021A                     u3710:
  1401     021A                     l3231:
  1402     021A  3032               	movlw	50
  1403     021B  063C               	xorwf	_num4,w
  1404     021C  1903               	btfsc	3,2
  1405     021D  2A1F               	goto	u3721
  1406     021E  2A20               	goto	u3720
  1407     021F                     u3721:
  1408     021F  2A4A               	goto	l3247
  1409     0220                     u3720:
  1410     0220                     l3233:
  1411     0220  3033               	movlw	51
  1412     0221  063C               	xorwf	_num4,w
  1413     0222  1903               	btfsc	3,2
  1414     0223  2A25               	goto	u3731
  1415     0224  2A26               	goto	u3730
  1416     0225                     u3731:
  1417     0225  2A4A               	goto	l3247
  1418     0226                     u3730:
  1419     0226                     l3235:
  1420     0226  3034               	movlw	52
  1421     0227  063C               	xorwf	_num4,w
  1422     0228  1903               	btfsc	3,2
  1423     0229  2A2B               	goto	u3741
  1424     022A  2A2C               	goto	u3740
  1425     022B                     u3741:
  1426     022B  2A4A               	goto	l3247
  1427     022C                     u3740:
  1428     022C                     l3237:
  1429     022C  3035               	movlw	53
  1430     022D  063C               	xorwf	_num4,w
  1431     022E  1903               	btfsc	3,2
  1432     022F  2A31               	goto	u3751
  1433     0230  2A32               	goto	u3750
  1434     0231                     u3751:
  1435     0231  2A4A               	goto	l3247
  1436     0232                     u3750:
  1437     0232                     l3239:
  1438     0232  3036               	movlw	54
  1439     0233  063C               	xorwf	_num4,w
  1440     0234  1903               	btfsc	3,2
  1441     0235  2A37               	goto	u3761
  1442     0236  2A38               	goto	u3760
  1443     0237                     u3761:
  1444     0237  2A4A               	goto	l3247
  1445     0238                     u3760:
  1446     0238                     l3241:
  1447     0238  3037               	movlw	55
  1448     0239  063C               	xorwf	_num4,w
  1449     023A  1903               	btfsc	3,2
  1450     023B  2A3D               	goto	u3771
  1451     023C  2A3E               	goto	u3770
  1452     023D                     u3771:
  1453     023D  2A4A               	goto	l3247
  1454     023E                     u3770:
  1455     023E                     l3243:
  1456     023E  3038               	movlw	56
  1457     023F  063C               	xorwf	_num4,w
  1458     0240  1903               	btfsc	3,2
  1459     0241  2A43               	goto	u3781
  1460     0242  2A44               	goto	u3780
  1461     0243                     u3781:
  1462     0243  2A4A               	goto	l3247
  1463     0244                     u3780:
  1464     0244                     l3245:
  1465     0244  3039               	movlw	57
  1466     0245  063C               	xorwf	_num4,w
  1467     0246  1D03               	btfss	3,2
  1468     0247  2A49               	goto	u3791
  1469     0248  2A4A               	goto	u3790
  1470     0249                     u3791:
  1471     0249  2A04               	goto	l3225
  1472     024A                     u3790:
  1473     024A                     l3247:
  1474                           
  1475                           ;main.c: 171:         lcdSend(0x01, 0);
  1476     024A  01C3               	clrf	lcdSend@tipo
  1477     024B  3001               	movlw	1
  1478     024C  120A  158A  2444  120A  118A  	fcall	_lcdSend
  1479     0251                     l3249:
  1480                           
  1481                           ;main.c: 172:         lcdPrint("Attendere....");
  1482     0251  3023               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1483     0252  1283               	bcf	3,5	;RP0=0, select bank0
  1484     0253  1303               	bcf	3,6	;RP1=0, select bank0
  1485     0254  00C5               	movwf	lcdPrint@str
  1486     0255  3080               	movlw	128
  1487     0256  00C6               	movwf	lcdPrint@str+1
  1488     0257  120A  158A  249C  120A  118A  	fcall	_lcdPrint
  1489                           
  1490                           ;main.c: 173:         while(num5 != 0x30 && num5 != 0x31 && num5 != 0x32 && num5 != 0x33
      +                           &&
  1491     025C  2A65               	goto	l3253
  1492     025D                     l3251:
  1493                           
  1494                           ;main.c: 175:               num5 != 0x38 && num5 != 0x39){;main.c: 176:         num5 = G
      +                          enerateRandomNumber();
  1495     025D  120A  158A  2459  120A  118A  	fcall	_GenerateRandomNumber
  1496     0262  1283               	bcf	3,5	;RP0=0, select bank0
  1497     0263  1303               	bcf	3,6	;RP1=0, select bank0
  1498     0264  00BB               	movwf	_num5
  1499     0265                     l3253:
  1500                           
  1501                           ;main.c: 173:         while(num5 != 0x30 && num5 != 0x31 && num5 != 0x32 && num5 != 0x33
      +                           &&
  1502     0265  3030               	movlw	48
  1503     0266  1283               	bcf	3,5	;RP0=0, select bank0
  1504     0267  1303               	bcf	3,6	;RP1=0, select bank0
  1505     0268  063B               	xorwf	_num5,w
  1506     0269  1903               	btfsc	3,2
  1507     026A  2A6C               	goto	u3801
  1508     026B  2A6D               	goto	u3800
  1509     026C                     u3801:
  1510     026C  2AA3               	goto	l3273
  1511     026D                     u3800:
  1512     026D                     l3255:
  1513     026D  3031               	movlw	49
  1514     026E  063B               	xorwf	_num5,w
  1515     026F  1903               	btfsc	3,2
  1516     0270  2A72               	goto	u3811
  1517     0271  2A73               	goto	u3810
  1518     0272                     u3811:
  1519     0272  2AA3               	goto	l3273
  1520     0273                     u3810:
  1521     0273                     l3257:
  1522     0273  3032               	movlw	50
  1523     0274  063B               	xorwf	_num5,w
  1524     0275  1903               	btfsc	3,2
  1525     0276  2A78               	goto	u3821
  1526     0277  2A79               	goto	u3820
  1527     0278                     u3821:
  1528     0278  2AA3               	goto	l3273
  1529     0279                     u3820:
  1530     0279                     l3259:
  1531     0279  3033               	movlw	51
  1532     027A  063B               	xorwf	_num5,w
  1533     027B  1903               	btfsc	3,2
  1534     027C  2A7E               	goto	u3831
  1535     027D  2A7F               	goto	u3830
  1536     027E                     u3831:
  1537     027E  2AA3               	goto	l3273
  1538     027F                     u3830:
  1539     027F                     l3261:
  1540     027F  3034               	movlw	52
  1541     0280  063B               	xorwf	_num5,w
  1542     0281  1903               	btfsc	3,2
  1543     0282  2A84               	goto	u3841
  1544     0283  2A85               	goto	u3840
  1545     0284                     u3841:
  1546     0284  2AA3               	goto	l3273
  1547     0285                     u3840:
  1548     0285                     l3263:
  1549     0285  3035               	movlw	53
  1550     0286  063B               	xorwf	_num5,w
  1551     0287  1903               	btfsc	3,2
  1552     0288  2A8A               	goto	u3851
  1553     0289  2A8B               	goto	u3850
  1554     028A                     u3851:
  1555     028A  2AA3               	goto	l3273
  1556     028B                     u3850:
  1557     028B                     l3265:
  1558     028B  3036               	movlw	54
  1559     028C  063B               	xorwf	_num5,w
  1560     028D  1903               	btfsc	3,2
  1561     028E  2A90               	goto	u3861
  1562     028F  2A91               	goto	u3860
  1563     0290                     u3861:
  1564     0290  2AA3               	goto	l3273
  1565     0291                     u3860:
  1566     0291                     l3267:
  1567     0291  3037               	movlw	55
  1568     0292  063B               	xorwf	_num5,w
  1569     0293  1903               	btfsc	3,2
  1570     0294  2A96               	goto	u3871
  1571     0295  2A97               	goto	u3870
  1572     0296                     u3871:
  1573     0296  2AA3               	goto	l3273
  1574     0297                     u3870:
  1575     0297                     l3269:
  1576     0297  3038               	movlw	56
  1577     0298  063B               	xorwf	_num5,w
  1578     0299  1903               	btfsc	3,2
  1579     029A  2A9C               	goto	u3881
  1580     029B  2A9D               	goto	u3880
  1581     029C                     u3881:
  1582     029C  2AA3               	goto	l3273
  1583     029D                     u3880:
  1584     029D                     l3271:
  1585     029D  3039               	movlw	57
  1586     029E  063B               	xorwf	_num5,w
  1587     029F  1D03               	btfss	3,2
  1588     02A0  2AA2               	goto	u3891
  1589     02A1  2AA3               	goto	u3890
  1590     02A2                     u3891:
  1591     02A2  2A5D               	goto	l3251
  1592     02A3                     u3890:
  1593     02A3                     l3273:
  1594                           
  1595                           ;main.c: 178:         UART_Write(id1);
  1596     02A3  3030               	movlw	48
  1597     02A4  120A  158A  2419  120A  118A  	fcall	_UART_Write
  1598                           
  1599                           ;main.c: 179:         UART_Write(id2);
  1600     02A9  3031               	movlw	49
  1601     02AA  120A  158A  2419  120A  118A  	fcall	_UART_Write
  1602     02AF                     l3275:
  1603                           
  1604                           ;main.c: 180:         type = 0x31;
  1605     02AF  3031               	movlw	49
  1606     02B0  1283               	bcf	3,5	;RP0=0, select bank0
  1607     02B1  1303               	bcf	3,6	;RP1=0, select bank0
  1608     02B2  00B4               	movwf	_type
  1609     02B3                     l3277:
  1610                           
  1611                           ;main.c: 181:         UART_Write(type);
  1612     02B3  3031               	movlw	49
  1613     02B4  120A  158A  2419  120A  118A  	fcall	_UART_Write
  1614     02B9                     l3279:
  1615                           
  1616                           ;main.c: 182:         UART_Write(num1);
  1617     02B9  1283               	bcf	3,5	;RP0=0, select bank0
  1618     02BA  1303               	bcf	3,6	;RP1=0, select bank0
  1619     02BB  083F               	movf	_num1,w
  1620     02BC  120A  158A  2419  120A  118A  	fcall	_UART_Write
  1621     02C1                     l3281:
  1622                           
  1623                           ;main.c: 183:         UART_Write(num2);
  1624     02C1  1283               	bcf	3,5	;RP0=0, select bank0
  1625     02C2  1303               	bcf	3,6	;RP1=0, select bank0
  1626     02C3  083E               	movf	_num2,w
  1627     02C4  120A  158A  2419  120A  118A  	fcall	_UART_Write
  1628     02C9                     l3283:
  1629                           
  1630                           ;main.c: 184:         UART_Write(num3);
  1631     02C9  1283               	bcf	3,5	;RP0=0, select bank0
  1632     02CA  1303               	bcf	3,6	;RP1=0, select bank0
  1633     02CB  083D               	movf	_num3,w
  1634     02CC  120A  158A  2419  120A  118A  	fcall	_UART_Write
  1635     02D1                     l3285:
  1636                           
  1637                           ;main.c: 185:         UART_Write(num4);
  1638     02D1  1283               	bcf	3,5	;RP0=0, select bank0
  1639     02D2  1303               	bcf	3,6	;RP1=0, select bank0
  1640     02D3  083C               	movf	_num4,w
  1641     02D4  120A  158A  2419  120A  118A  	fcall	_UART_Write
  1642     02D9                     l3287:
  1643                           
  1644                           ;main.c: 186:         UART_Write(num5);
  1645     02D9  1283               	bcf	3,5	;RP0=0, select bank0
  1646     02DA  1303               	bcf	3,6	;RP1=0, select bank0
  1647     02DB  083B               	movf	_num5,w
  1648     02DC  120A  158A  2419  120A  118A  	fcall	_UART_Write
  1649     02E1                     l3289:
  1650                           
  1651                           ;main.c: 187:         UART_Write('\r');
  1652     02E1  300D               	movlw	13
  1653     02E2  120A  158A  2419  120A  118A  	fcall	_UART_Write
  1654     02E7                     l3291:
  1655                           
  1656                           ;main.c: 188:         UART_Write('\n');
  1657     02E7  300A               	movlw	10
  1658     02E8  120A  158A  2419  120A  118A  	fcall	_UART_Write
  1659     02ED                     l3293:
  1660                           
  1661                           ;main.c: 189:         lcdSend(0x01, 0);
  1662     02ED  1283               	bcf	3,5	;RP0=0, select bank0
  1663     02EE  1303               	bcf	3,6	;RP1=0, select bank0
  1664     02EF  01C3               	clrf	lcdSend@tipo
  1665     02F0  3001               	movlw	1
  1666     02F1  120A  158A  2444  120A  118A  	fcall	_lcdSend
  1667     02F6                     l3295:
  1668                           
  1669                           ;main.c: 190:         lcdSend(num1, 1);
  1670     02F6  1283               	bcf	3,5	;RP0=0, select bank0
  1671     02F7  1303               	bcf	3,6	;RP1=0, select bank0
  1672     02F8  01C3               	clrf	lcdSend@tipo
  1673     02F9  0AC3               	incf	lcdSend@tipo,f
  1674     02FA  083F               	movf	_num1,w
  1675     02FB  120A  158A  2444  120A  118A  	fcall	_lcdSend
  1676     0300                     l3297:
  1677                           
  1678                           ;main.c: 191:         lcdSend(num2, 1);
  1679     0300  1283               	bcf	3,5	;RP0=0, select bank0
  1680     0301  1303               	bcf	3,6	;RP1=0, select bank0
  1681     0302  01C3               	clrf	lcdSend@tipo
  1682     0303  0AC3               	incf	lcdSend@tipo,f
  1683     0304  083E               	movf	_num2,w
  1684     0305  120A  158A  2444  120A  118A  	fcall	_lcdSend
  1685     030A                     l3299:
  1686                           
  1687                           ;main.c: 192:         lcdSend(num3, 1);
  1688     030A  1283               	bcf	3,5	;RP0=0, select bank0
  1689     030B  1303               	bcf	3,6	;RP1=0, select bank0
  1690     030C  01C3               	clrf	lcdSend@tipo
  1691     030D  0AC3               	incf	lcdSend@tipo,f
  1692     030E  083D               	movf	_num3,w
  1693     030F  120A  158A  2444  120A  118A  	fcall	_lcdSend
  1694     0314                     l3301:
  1695                           
  1696                           ;main.c: 193:         lcdSend(num4, 1);
  1697     0314  1283               	bcf	3,5	;RP0=0, select bank0
  1698     0315  1303               	bcf	3,6	;RP1=0, select bank0
  1699     0316  01C3               	clrf	lcdSend@tipo
  1700     0317  0AC3               	incf	lcdSend@tipo,f
  1701     0318  083C               	movf	_num4,w
  1702     0319  120A  158A  2444  120A  118A  	fcall	_lcdSend
  1703     031E                     l3303:
  1704                           
  1705                           ;main.c: 194:         lcdSend(num5, 1);
  1706     031E  1283               	bcf	3,5	;RP0=0, select bank0
  1707     031F  1303               	bcf	3,6	;RP1=0, select bank0
  1708     0320  01C3               	clrf	lcdSend@tipo
  1709     0321  0AC3               	incf	lcdSend@tipo,f
  1710     0322  083B               	movf	_num5,w
  1711     0323  120A  158A  2444  120A  118A  	fcall	_lcdSend
  1712     0328                     l3305:
  1713                           
  1714                           ;main.c: 195:         keypressed = 0;
  1715     0328  1283               	bcf	3,5	;RP0=0, select bank0
  1716     0329  1303               	bcf	3,6	;RP1=0, select bank0
  1717     032A  01BA               	clrf	_keypressed
  1718     032B                     l3307:
  1719                           
  1720                           ;main.c: 196:         RS485_RxEnable();
  1721     032B  120A  158A  240F  120A  118A  	fcall	_RS485_RxEnable
  1722     0330                     l3309:
  1723                           
  1724                           ;main.c: 197:         flag = 1;
  1725     0330  3001               	movlw	1
  1726     0331  1283               	bcf	3,5	;RP0=0, select bank0
  1727     0332  1303               	bcf	3,6	;RP1=0, select bank0
  1728     0333  00B0               	movwf	_flag
  1729     0334  3000               	movlw	0
  1730     0335  00B1               	movwf	_flag+1
  1731     0336                     l3311:
  1732                           
  1733                           ;main.c: 198:         UART_Read1();
  1734     0336  120A  118A  2563  120A  118A  	fcall	_UART_Read1
  1735     033B                     l3313:
  1736                           
  1737                           ;main.c: 199:         UART_Read2();
  1738     033B  120A  118A  2344  120A  118A  	fcall	_UART_Read2
  1739     0340  2854               	goto	l3101
  1740     0341  120A  118A  2810   	ljmp	start
  1741     0344                     __end_of_main:
  1742                           
  1743                           	psect	text1
  1744     0DA8                     __ptext1:	
  1745 ;; *************** function _initLCD *****************
  1746 ;; Defined at:
  1747 ;;		line 411 in file "main.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;		None
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;		None
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  1    wreg      void 
  1754 ;; Registers used:
  1755 ;;		wreg, status,2, status,0, pclath, cstack
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1761 ;;      Params:         0       0       0       0       0
  1762 ;;      Locals:         0       0       0       0       0
  1763 ;;      Temps:          0       2       0       0       0
  1764 ;;      Totals:         0       2       0       0       0
  1765 ;;Total ram usage:        2 bytes
  1766 ;; Hardware stack levels used: 1
  1767 ;; Hardware stack levels required when called: 3
  1768 ;; This function calls:
  1769 ;;		_lcdSend
  1770 ;; This function is called by:
  1771 ;;		_main
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775     0DA8                     _initLCD:	
  1776                           ;psect for function _initLCD
  1777                           
  1778     0DA8                     l2723:	
  1779                           ;incstack = 0
  1780                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  1781                           
  1782                           
  1783                           ;main.c: 412:     PORTEbits.RE2 = 0;
  1784     0DA8  1283               	bcf	3,5	;RP0=0, select bank0
  1785     0DA9  1303               	bcf	3,6	;RP1=0, select bank0
  1786     0DAA  1109               	bcf	9,2	;volatile
  1787                           
  1788                           ;main.c: 413:     PORTEbits.RE1 = 0;
  1789     0DAB  1089               	bcf	9,1	;volatile
  1790     0DAC                     l2725:
  1791                           
  1792                           ;main.c: 414:     _delay((unsigned long)((20)*(20000000/4000.0)));
  1793     0DAC  3082               	movlw	130
  1794     0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  1795     0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  1796     0DAF  00C6               	movwf	??_initLCD+1
  1797     0DB0  30DD               	movlw	221
  1798     0DB1  00C5               	movwf	??_initLCD
  1799     0DB2                     u3907:
  1800     0DB2  0BC5               	decfsz	??_initLCD,f
  1801     0DB3  2DB2               	goto	u3907
  1802     0DB4  0BC6               	decfsz	??_initLCD+1,f
  1803     0DB5  2DB2               	goto	u3907
  1804     0DB6                     l2727:
  1805                           
  1806                           ;main.c: 415:     PORTEbits.RE1 = 1;
  1807     0DB6  1283               	bcf	3,5	;RP0=0, select bank0
  1808     0DB7  1303               	bcf	3,6	;RP1=0, select bank0
  1809     0DB8  1489               	bsf	9,1	;volatile
  1810     0DB9                     l2729:
  1811                           
  1812                           ;main.c: 416:     lcdSend(0x38, 0);
  1813     0DB9  01C3               	clrf	lcdSend@tipo
  1814     0DBA  3038               	movlw	56
  1815     0DBB  120A  158A  2444  120A  158A  	fcall	_lcdSend
  1816     0DC0                     l2731:
  1817                           
  1818                           ;main.c: 417:     _delay((unsigned long)((5)*(20000000/4000.0)));
  1819     0DC0  3021               	movlw	33
  1820     0DC1  1283               	bcf	3,5	;RP0=0, select bank0
  1821     0DC2  1303               	bcf	3,6	;RP1=0, select bank0
  1822     0DC3  00C6               	movwf	??_initLCD+1
  1823     0DC4  3075               	movlw	117
  1824     0DC5  00C5               	movwf	??_initLCD
  1825     0DC6                     u3917:
  1826     0DC6  0BC5               	decfsz	??_initLCD,f
  1827     0DC7  2DC6               	goto	u3917
  1828     0DC8  0BC6               	decfsz	??_initLCD+1,f
  1829     0DC9  2DC6               	goto	u3917
  1830     0DCA  2DCB               	nop2
  1831                           
  1832                           ;main.c: 418:     lcdSend(0x38, 0);
  1833     0DCB  1283               	bcf	3,5	;RP0=0, select bank0
  1834     0DCC  1303               	bcf	3,6	;RP1=0, select bank0
  1835     0DCD  01C3               	clrf	lcdSend@tipo
  1836     0DCE  3038               	movlw	56
  1837     0DCF  120A  158A  2444  120A  158A  	fcall	_lcdSend
  1838     0DD4                     l2733:
  1839                           
  1840                           ;main.c: 419:     _delay((unsigned long)((1)*(20000000/4000.0)));
  1841     0DD4  3007               	movlw	7
  1842     0DD5  1283               	bcf	3,5	;RP0=0, select bank0
  1843     0DD6  1303               	bcf	3,6	;RP1=0, select bank0
  1844     0DD7  00C6               	movwf	??_initLCD+1
  1845     0DD8  307C               	movlw	124
  1846     0DD9  00C5               	movwf	??_initLCD
  1847     0DDA                     u3927:
  1848     0DDA  0BC5               	decfsz	??_initLCD,f
  1849     0DDB  2DDA               	goto	u3927
  1850     0DDC  0BC6               	decfsz	??_initLCD+1,f
  1851     0DDD  2DDA               	goto	u3927
  1852     0DDE  0000               	nop
  1853     0DDF                     l2735:
  1854                           
  1855                           ;main.c: 420:     lcdSend(0x38, 0);
  1856     0DDF  1283               	bcf	3,5	;RP0=0, select bank0
  1857     0DE0  1303               	bcf	3,6	;RP1=0, select bank0
  1858     0DE1  01C3               	clrf	lcdSend@tipo
  1859     0DE2  3038               	movlw	56
  1860     0DE3  120A  158A  2444  120A  158A  	fcall	_lcdSend
  1861     0DE8                     l2737:
  1862                           
  1863                           ;main.c: 421:     lcdSend(0x08, 0);
  1864     0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  1865     0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  1866     0DEA  01C3               	clrf	lcdSend@tipo
  1867     0DEB  3008               	movlw	8
  1868     0DEC  120A  158A  2444  120A  158A  	fcall	_lcdSend
  1869     0DF1                     l2739:
  1870                           
  1871                           ;main.c: 422:     lcdSend(0x0F, 0);
  1872     0DF1  1283               	bcf	3,5	;RP0=0, select bank0
  1873     0DF2  1303               	bcf	3,6	;RP1=0, select bank0
  1874     0DF3  01C3               	clrf	lcdSend@tipo
  1875     0DF4  300F               	movlw	15
  1876     0DF5  120A  158A  2444  120A  158A  	fcall	_lcdSend
  1877     0DFA                     l2741:
  1878                           
  1879                           ;main.c: 423:     lcdSend(0x01, 0);
  1880     0DFA  1283               	bcf	3,5	;RP0=0, select bank0
  1881     0DFB  1303               	bcf	3,6	;RP1=0, select bank0
  1882     0DFC  01C3               	clrf	lcdSend@tipo
  1883     0DFD  3001               	movlw	1
  1884     0DFE  120A  158A  2444  120A  158A  	fcall	_lcdSend
  1885     0E03                     l2743:
  1886                           
  1887                           ;main.c: 424:     lcdSend(0x0C, 0);
  1888     0E03  1283               	bcf	3,5	;RP0=0, select bank0
  1889     0E04  1303               	bcf	3,6	;RP1=0, select bank0
  1890     0E05  01C3               	clrf	lcdSend@tipo
  1891     0E06  300C               	movlw	12
  1892     0E07  120A  158A  2444  120A  158A  	fcall	_lcdSend
  1893     0E0C                     l2745:
  1894                           
  1895                           ;main.c: 425:     lcdSend(0x80, 0);
  1896     0E0C  1283               	bcf	3,5	;RP0=0, select bank0
  1897     0E0D  1303               	bcf	3,6	;RP1=0, select bank0
  1898     0E0E  01C3               	clrf	lcdSend@tipo
  1899     0E0F  3080               	movlw	128
  1900     0E10  120A  158A  2444  120A  158A  	fcall	_lcdSend
  1901     0E15                     l250:
  1902     0E15  0008               	return
  1903     0E16                     __end_of_initLCD:
  1904                           
  1905                           	psect	text2
  1906     0344                     __ptext2:	
  1907 ;; *************** function _UART_Read2 *****************
  1908 ;; Defined at:
  1909 ;;		line 237 in file "main.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;		None
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;  trash           1    0        unsigned char 
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  1    wreg      unsigned char 
  1916 ;; Registers used:
  1917 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1923 ;;      Params:         0       0       0       0       0
  1924 ;;      Locals:         0       0       0       0       0
  1925 ;;      Temps:          0       3       0       0       0
  1926 ;;      Totals:         0       3       0       0       0
  1927 ;;Total ram usage:        3 bytes
  1928 ;; Hardware stack levels used: 1
  1929 ;; Hardware stack levels required when called: 5
  1930 ;; This function calls:
  1931 ;;		_intToString
  1932 ;;		_lcdPrint
  1933 ;;		_lcdSend
  1934 ;; This function is called by:
  1935 ;;		_main
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939     0344                     _UART_Read2:	
  1940                           ;psect for function _UART_Read2
  1941                           
  1942     0344                     l2961:	
  1943                           ;incstack = 0
  1944                           ; Regs used in _UART_Read2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1945                           
  1946                           
  1947                           ;main.c: 238:     char trash;;main.c: 239:     while (countdown != 0){
  1948     0344  2D43               	goto	l3077
  1949     0345                     l208:
  1950                           
  1951                           ;main.c: 240:         if (!RCIF){
  1952     0345  1283               	bcf	3,5	;RP0=0, select bank0
  1953     0346  1303               	bcf	3,6	;RP1=0, select bank0
  1954     0347  1A8C               	btfsc	12,5	;volatile
  1955     0348  2B4A               	goto	u3261
  1956     0349  2B4B               	goto	u3260
  1957     034A                     u3261:
  1958     034A  2D3D               	goto	l3075
  1959     034B                     u3260:
  1960     034B                     l2963:
  1961                           
  1962                           ;main.c: 241:             lcdSend(0x01, 0);
  1963     034B  01C3               	clrf	lcdSend@tipo
  1964     034C  3001               	movlw	1
  1965     034D  120A  158A  2444  120A  118A  	fcall	_lcdSend
  1966     0352                     l2965:
  1967                           
  1968                           ;main.c: 242:             lcdPrint("Attendere");
  1969     0352  3063               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1970     0353  1283               	bcf	3,5	;RP0=0, select bank0
  1971     0354  1303               	bcf	3,6	;RP1=0, select bank0
  1972     0355  00C5               	movwf	lcdPrint@str
  1973     0356  3080               	movlw	128
  1974     0357  00C6               	movwf	lcdPrint@str+1
  1975     0358  120A  158A  249C  120A  118A  	fcall	_lcdPrint
  1976     035D                     l2967:
  1977                           
  1978                           ;main.c: 243:             intToString(countdown, print_countdown);
  1979     035D  0879               	movf	_countdown,w
  1980     035E  1283               	bcf	3,5	;RP0=0, select bank0
  1981     035F  1303               	bcf	3,6	;RP1=0, select bank0
  1982     0360  00DF               	movwf	??_UART_Read2
  1983     0361  01E0               	clrf	??_UART_Read2+1
  1984     0362  085F               	movf	??_UART_Read2,w
  1985     0363  00D6               	movwf	intToString@n
  1986     0364  0860               	movf	??_UART_Read2+1,w
  1987     0365  00D7               	movwf	intToString@n+1
  1988     0366  3040               	movlw	(low (_print_countdown| 0))& (0+255)
  1989     0367  00D8               	movwf	intToString@str
  1990     0368  120A  158A  2616  120A  118A  	fcall	_intToString
  1991     036D                     l2969:
  1992                           
  1993                           ;main.c: 244:             lcdSend(0xC0, 0);
  1994     036D  1283               	bcf	3,5	;RP0=0, select bank0
  1995     036E  1303               	bcf	3,6	;RP1=0, select bank0
  1996     036F  01C3               	clrf	lcdSend@tipo
  1997     0370  30C0               	movlw	192
  1998     0371  120A  158A  2444  120A  118A  	fcall	_lcdSend
  1999     0376                     l2971:
  2000                           
  2001                           ;main.c: 245:             lcdPrint(print_countdown);
  2002     0376  3040               	movlw	(low (_print_countdown| 0))& (0+255)
  2003     0377  1283               	bcf	3,5	;RP0=0, select bank0
  2004     0378  1303               	bcf	3,6	;RP1=0, select bank0
  2005     0379  00C5               	movwf	lcdPrint@str
  2006     037A  3000               	movlw	0
  2007     037B  00C6               	movwf	lcdPrint@str+1
  2008     037C  120A  158A  249C  120A  118A  	fcall	_lcdPrint
  2009     0381                     l2973:
  2010                           
  2011                           ;main.c: 246:             countdown --;
  2012     0381  3001               	movlw	1
  2013     0382  02F9               	subwf	_countdown,f
  2014     0383                     l2975:
  2015                           
  2016                           ;main.c: 247:             _delay((unsigned long)((60)*(20000000/4000.0)));
  2017     0383  3002               	movlw	2
  2018     0384  1283               	bcf	3,5	;RP0=0, select bank0
  2019     0385  1303               	bcf	3,6	;RP1=0, select bank0
  2020     0386  00E1               	movwf	??_UART_Read2+2
  2021     0387  3086               	movlw	134
  2022     0388  00E0               	movwf	??_UART_Read2+1
  2023     0389  3098               	movlw	152
  2024     038A  00DF               	movwf	??_UART_Read2
  2025     038B                     u3937:
  2026     038B  0BDF               	decfsz	??_UART_Read2,f
  2027     038C  2B8B               	goto	u3937
  2028     038D  0BE0               	decfsz	??_UART_Read2+1,f
  2029     038E  2B8B               	goto	u3937
  2030     038F  0BE1               	decfsz	??_UART_Read2+2,f
  2031     0390  2B8B               	goto	u3937
  2032     0391  0000               	nop
  2033                           
  2034                           ;main.c: 248:         }
  2035     0392  2D43               	goto	l3077
  2036     0393                     l2977:
  2037                           
  2038                           ;main.c: 251:                 intToString(countdown, print_countdown);
  2039     0393  0879               	movf	_countdown,w
  2040     0394  00DF               	movwf	??_UART_Read2
  2041     0395  01E0               	clrf	??_UART_Read2+1
  2042     0396  085F               	movf	??_UART_Read2,w
  2043     0397  00D6               	movwf	intToString@n
  2044     0398  0860               	movf	??_UART_Read2+1,w
  2045     0399  00D7               	movwf	intToString@n+1
  2046     039A  3040               	movlw	(low (_print_countdown| 0))& (0+255)
  2047     039B  00D8               	movwf	intToString@str
  2048     039C  120A  158A  2616  120A  118A  	fcall	_intToString
  2049     03A1                     l2979:
  2050                           
  2051                           ;main.c: 252:                 lcdSend(0xC0, 0);
  2052     03A1  1283               	bcf	3,5	;RP0=0, select bank0
  2053     03A2  1303               	bcf	3,6	;RP1=0, select bank0
  2054     03A3  01C3               	clrf	lcdSend@tipo
  2055     03A4  30C0               	movlw	192
  2056     03A5  120A  158A  2444  120A  118A  	fcall	_lcdSend
  2057     03AA                     l2981:
  2058                           
  2059                           ;main.c: 253:                 lcdPrint(print_countdown);
  2060     03AA  3040               	movlw	(low (_print_countdown| 0))& (0+255)
  2061     03AB  1283               	bcf	3,5	;RP0=0, select bank0
  2062     03AC  1303               	bcf	3,6	;RP1=0, select bank0
  2063     03AD  00C5               	movwf	lcdPrint@str
  2064     03AE  3000               	movlw	0
  2065     03AF  00C6               	movwf	lcdPrint@str+1
  2066     03B0  120A  158A  249C  120A  118A  	fcall	_lcdPrint
  2067     03B5                     l2983:
  2068                           
  2069                           ;main.c: 254:                 countdown --;
  2070     03B5  3001               	movlw	1
  2071     03B6  02F9               	subwf	_countdown,f
  2072     03B7                     l2985:
  2073                           
  2074                           ;main.c: 255:                 _delay((unsigned long)((60)*(20000000/4000.0)));
  2075     03B7  3002               	movlw	2
  2076     03B8  1283               	bcf	3,5	;RP0=0, select bank0
  2077     03B9  1303               	bcf	3,6	;RP1=0, select bank0
  2078     03BA  00E1               	movwf	??_UART_Read2+2
  2079     03BB  3086               	movlw	134
  2080     03BC  00E0               	movwf	??_UART_Read2+1
  2081     03BD  3098               	movlw	152
  2082     03BE  00DF               	movwf	??_UART_Read2
  2083     03BF                     u3947:
  2084     03BF  0BDF               	decfsz	??_UART_Read2,f
  2085     03C0  2BBF               	goto	u3947
  2086     03C1  0BE0               	decfsz	??_UART_Read2+1,f
  2087     03C2  2BBF               	goto	u3947
  2088     03C3  0BE1               	decfsz	??_UART_Read2+2,f
  2089     03C4  2BBF               	goto	u3947
  2090     03C5  0000               	nop
  2091     03C6                     l2987:
  2092                           
  2093                           ;main.c: 256:                 if(RCREG == id1){
  2094     03C6  3030               	movlw	48
  2095     03C7  1283               	bcf	3,5	;RP0=0, select bank0
  2096     03C8  1303               	bcf	3,6	;RP1=0, select bank0
  2097     03C9  061A               	xorwf	26,w	;volatile
  2098     03CA  1D03               	btfss	3,2
  2099     03CB  2BCD               	goto	u3271
  2100     03CC  2BCE               	goto	u3270
  2101     03CD                     u3271:
  2102     03CD  2D39               	goto	l213
  2103     03CE                     u3270:
  2104     03CE                     l2989:
  2105                           
  2106                           ;main.c: 257:                     lcdSend(0x01, 0);
  2107     03CE  01C3               	clrf	lcdSend@tipo
  2108     03CF  3001               	movlw	1
  2109     03D0  120A  158A  2444  120A  118A  	fcall	_lcdSend
  2110                           
  2111                           ;main.c: 258:                     lcdSend(RCREG, 1);
  2112     03D5  1283               	bcf	3,5	;RP0=0, select bank0
  2113     03D6  1303               	bcf	3,6	;RP1=0, select bank0
  2114     03D7  01C3               	clrf	lcdSend@tipo
  2115     03D8  0AC3               	incf	lcdSend@tipo,f
  2116     03D9  081A               	movf	26,w	;volatile
  2117     03DA  120A  158A  2444  120A  118A  	fcall	_lcdSend
  2118     03DF                     l2991:
  2119                           
  2120                           ;main.c: 259:                     RCIF = 0;
  2121     03DF  1283               	bcf	3,5	;RP0=0, select bank0
  2122     03E0  1303               	bcf	3,6	;RP1=0, select bank0
  2123     03E1  128C               	bcf	12,5	;volatile
  2124     03E2                     l2993:
  2125     03E2  081A               	movf	26,w	;volatile
  2126                           
  2127                           ;main.c: 261:                     while (countdown != 0){
  2128     03E3  2D34               	goto	l3071
  2129     03E4                     l215:
  2130                           
  2131                           ;main.c: 262:                         if (!RCIF){
  2132     03E4  1283               	bcf	3,5	;RP0=0, select bank0
  2133     03E5  1303               	bcf	3,6	;RP1=0, select bank0
  2134     03E6  1A8C               	btfsc	12,5	;volatile
  2135     03E7  2BE9               	goto	u3281
  2136     03E8  2BEA               	goto	u3280
  2137     03E9                     u3281:
  2138     03E9  2D2F               	goto	l3069
  2139     03EA                     u3280:
  2140     03EA                     l2995:
  2141                           
  2142                           ;main.c: 263:                             intToString(countdown, print_countdown);
  2143     03EA  0879               	movf	_countdown,w
  2144     03EB  00DF               	movwf	??_UART_Read2
  2145     03EC  01E0               	clrf	??_UART_Read2+1
  2146     03ED  085F               	movf	??_UART_Read2,w
  2147     03EE  00D6               	movwf	intToString@n
  2148     03EF  0860               	movf	??_UART_Read2+1,w
  2149     03F0  00D7               	movwf	intToString@n+1
  2150     03F1  3040               	movlw	(low (_print_countdown| 0))& (0+255)
  2151     03F2  00D8               	movwf	intToString@str
  2152     03F3  120A  158A  2616  120A  118A  	fcall	_intToString
  2153     03F8                     l2997:
  2154                           
  2155                           ;main.c: 264:                             lcdSend(0xC0, 0);
  2156     03F8  1283               	bcf	3,5	;RP0=0, select bank0
  2157     03F9  1303               	bcf	3,6	;RP1=0, select bank0
  2158     03FA  01C3               	clrf	lcdSend@tipo
  2159     03FB  30C0               	movlw	192
  2160     03FC  120A  158A  2444  120A  118A  	fcall	_lcdSend
  2161     0401                     l2999:
  2162                           
  2163                           ;main.c: 265:                             lcdPrint(print_countdown);
  2164     0401  3040               	movlw	(low (_print_countdown| 0))& (0+255)
  2165     0402  1283               	bcf	3,5	;RP0=0, select bank0
  2166     0403  1303               	bcf	3,6	;RP1=0, select bank0
  2167     0404  00C5               	movwf	lcdPrint@str
  2168     0405  3000               	movlw	0
  2169     0406  00C6               	movwf	lcdPrint@str+1
  2170     0407  120A  158A  249C  120A  118A  	fcall	_lcdPrint
  2171     040C                     l3001:
  2172                           
  2173                           ;main.c: 266:                             countdown --;
  2174     040C  3001               	movlw	1
  2175     040D  02F9               	subwf	_countdown,f
  2176     040E                     l3003:
  2177                           
  2178                           ;main.c: 267:                             _delay((unsigned long)((60)*(20000000/4000.0))
      +                          );
  2179     040E  3002               	movlw	2
  2180     040F  1283               	bcf	3,5	;RP0=0, select bank0
  2181     0410  1303               	bcf	3,6	;RP1=0, select bank0
  2182     0411  00E1               	movwf	??_UART_Read2+2
  2183     0412  3086               	movlw	134
  2184     0413  00E0               	movwf	??_UART_Read2+1
  2185     0414  3098               	movlw	152
  2186     0415  00DF               	movwf	??_UART_Read2
  2187     0416                     u3957:
  2188     0416  0BDF               	decfsz	??_UART_Read2,f
  2189     0417  2C16               	goto	u3957
  2190     0418  0BE0               	decfsz	??_UART_Read2+1,f
  2191     0419  2C16               	goto	u3957
  2192     041A  0BE1               	decfsz	??_UART_Read2+2,f
  2193     041B  2C16               	goto	u3957
  2194     041C  0000               	nop
  2195                           
  2196                           ;main.c: 268:                         }
  2197     041D  2D34               	goto	l3071
  2198     041E                     l3005:
  2199                           
  2200                           ;main.c: 271:                                 intToString(countdown, print_countdown);
  2201     041E  0879               	movf	_countdown,w
  2202     041F  00DF               	movwf	??_UART_Read2
  2203     0420  01E0               	clrf	??_UART_Read2+1
  2204     0421  085F               	movf	??_UART_Read2,w
  2205     0422  00D6               	movwf	intToString@n
  2206     0423  0860               	movf	??_UART_Read2+1,w
  2207     0424  00D7               	movwf	intToString@n+1
  2208     0425  3040               	movlw	(low (_print_countdown| 0))& (0+255)
  2209     0426  00D8               	movwf	intToString@str
  2210     0427  120A  158A  2616  120A  118A  	fcall	_intToString
  2211     042C                     l3007:
  2212                           
  2213                           ;main.c: 272:                                 lcdSend(0xC0, 0);
  2214     042C  1283               	bcf	3,5	;RP0=0, select bank0
  2215     042D  1303               	bcf	3,6	;RP1=0, select bank0
  2216     042E  01C3               	clrf	lcdSend@tipo
  2217     042F  30C0               	movlw	192
  2218     0430  120A  158A  2444  120A  118A  	fcall	_lcdSend
  2219     0435                     l3009:
  2220                           
  2221                           ;main.c: 273:                                 lcdPrint(print_countdown);
  2222     0435  3040               	movlw	(low (_print_countdown| 0))& (0+255)
  2223     0436  1283               	bcf	3,5	;RP0=0, select bank0
  2224     0437  1303               	bcf	3,6	;RP1=0, select bank0
  2225     0438  00C5               	movwf	lcdPrint@str
  2226     0439  3000               	movlw	0
  2227     043A  00C6               	movwf	lcdPrint@str+1
  2228     043B  120A  158A  249C  120A  118A  	fcall	_lcdPrint
  2229     0440                     l3011:
  2230                           
  2231                           ;main.c: 274:                                 countdown --;
  2232     0440  3001               	movlw	1
  2233     0441  02F9               	subwf	_countdown,f
  2234     0442                     l3013:
  2235                           
  2236                           ;main.c: 275:                                 _delay((unsigned long)((60)*(20000000/4000
      +                          .0)));
  2237     0442  3002               	movlw	2
  2238     0443  1283               	bcf	3,5	;RP0=0, select bank0
  2239     0444  1303               	bcf	3,6	;RP1=0, select bank0
  2240     0445  00E1               	movwf	??_UART_Read2+2
  2241     0446  3086               	movlw	134
  2242     0447  00E0               	movwf	??_UART_Read2+1
  2243     0448  3098               	movlw	152
  2244     0449  00DF               	movwf	??_UART_Read2
  2245     044A                     u3967:
  2246     044A  0BDF               	decfsz	??_UART_Read2,f
  2247     044B  2C4A               	goto	u3967
  2248     044C  0BE0               	decfsz	??_UART_Read2+1,f
  2249     044D  2C4A               	goto	u3967
  2250     044E  0BE1               	decfsz	??_UART_Read2+2,f
  2251     044F  2C4A               	goto	u3967
  2252     0450  0000               	nop
  2253     0451                     l3015:
  2254                           
  2255                           ;main.c: 276:                                 if(RCREG == id2){
  2256     0451  3031               	movlw	49
  2257     0452  1283               	bcf	3,5	;RP0=0, select bank0
  2258     0453  1303               	bcf	3,6	;RP1=0, select bank0
  2259     0454  061A               	xorwf	26,w	;volatile
  2260     0455  1D03               	btfss	3,2
  2261     0456  2C58               	goto	u3291
  2262     0457  2C59               	goto	u3290
  2263     0458                     u3291:
  2264     0458  2D2B               	goto	l220
  2265     0459                     u3290:
  2266     0459                     l3017:
  2267                           
  2268                           ;main.c: 277:                                     lcdSend(0x80 + 1, 0);
  2269     0459  01C3               	clrf	lcdSend@tipo
  2270     045A  3081               	movlw	129
  2271     045B  120A  158A  2444  120A  118A  	fcall	_lcdSend
  2272                           
  2273                           ;main.c: 278:                                     lcdSend(RCREG, 1);
  2274     0460  1283               	bcf	3,5	;RP0=0, select bank0
  2275     0461  1303               	bcf	3,6	;RP1=0, select bank0
  2276     0462  01C3               	clrf	lcdSend@tipo
  2277     0463  0AC3               	incf	lcdSend@tipo,f
  2278     0464  081A               	movf	26,w	;volatile
  2279     0465  120A  158A  2444  120A  118A  	fcall	_lcdSend
  2280     046A                     l3019:
  2281                           
  2282                           ;main.c: 279:                                     RCIF = 0;
  2283     046A  1283               	bcf	3,5	;RP0=0, select bank0
  2284     046B  1303               	bcf	3,6	;RP1=0, select bank0
  2285     046C  128C               	bcf	12,5	;volatile
  2286     046D                     l3021:
  2287     046D  081A               	movf	26,w	;volatile
  2288                           
  2289                           ;main.c: 281:                                     while (countdown != 0){
  2290     046E  2D26               	goto	l3065
  2291     046F                     l222:
  2292                           
  2293                           ;main.c: 282:                                         if (!RCIF){
  2294     046F  1283               	bcf	3,5	;RP0=0, select bank0
  2295     0470  1303               	bcf	3,6	;RP1=0, select bank0
  2296     0471  1A8C               	btfsc	12,5	;volatile
  2297     0472  2C74               	goto	u3301
  2298     0473  2C75               	goto	u3300
  2299     0474                     u3301:
  2300     0474  2D21               	goto	l3063
  2301     0475                     u3300:
  2302     0475                     l3023:
  2303                           
  2304                           ;main.c: 283:                                             intToString(countdown, print_c
      +                          ountdown);
  2305     0475  0879               	movf	_countdown,w
  2306     0476  00DF               	movwf	??_UART_Read2
  2307     0477  01E0               	clrf	??_UART_Read2+1
  2308     0478  085F               	movf	??_UART_Read2,w
  2309     0479  00D6               	movwf	intToString@n
  2310     047A  0860               	movf	??_UART_Read2+1,w
  2311     047B  00D7               	movwf	intToString@n+1
  2312     047C  3040               	movlw	(low (_print_countdown| 0))& (0+255)
  2313     047D  00D8               	movwf	intToString@str
  2314     047E  120A  158A  2616  120A  118A  	fcall	_intToString
  2315     0483                     l3025:
  2316                           
  2317                           ;main.c: 284:                                             lcdSend(0xC0, 0);
  2318     0483  1283               	bcf	3,5	;RP0=0, select bank0
  2319     0484  1303               	bcf	3,6	;RP1=0, select bank0
  2320     0485  01C3               	clrf	lcdSend@tipo
  2321     0486  30C0               	movlw	192
  2322     0487  120A  158A  2444  120A  118A  	fcall	_lcdSend
  2323     048C                     l3027:
  2324                           
  2325                           ;main.c: 285:                                             lcdPrint(print_countdown);
  2326     048C  3040               	movlw	(low (_print_countdown| 0))& (0+255)
  2327     048D  1283               	bcf	3,5	;RP0=0, select bank0
  2328     048E  1303               	bcf	3,6	;RP1=0, select bank0
  2329     048F  00C5               	movwf	lcdPrint@str
  2330     0490  3000               	movlw	0
  2331     0491  00C6               	movwf	lcdPrint@str+1
  2332     0492  120A  158A  249C  120A  118A  	fcall	_lcdPrint
  2333     0497                     l3029:
  2334                           
  2335                           ;main.c: 286:                                             countdown --;
  2336     0497  3001               	movlw	1
  2337     0498  02F9               	subwf	_countdown,f
  2338     0499                     l3031:
  2339                           
  2340                           ;main.c: 287:                                             _delay((unsigned long)((60)*(2
      +                          0000000/4000.0)));
  2341     0499  3002               	movlw	2
  2342     049A  1283               	bcf	3,5	;RP0=0, select bank0
  2343     049B  1303               	bcf	3,6	;RP1=0, select bank0
  2344     049C  00E1               	movwf	??_UART_Read2+2
  2345     049D  3086               	movlw	134
  2346     049E  00E0               	movwf	??_UART_Read2+1
  2347     049F  3098               	movlw	152
  2348     04A0  00DF               	movwf	??_UART_Read2
  2349     04A1                     u3977:
  2350     04A1  0BDF               	decfsz	??_UART_Read2,f
  2351     04A2  2CA1               	goto	u3977
  2352     04A3  0BE0               	decfsz	??_UART_Read2+1,f
  2353     04A4  2CA1               	goto	u3977
  2354     04A5  0BE1               	decfsz	??_UART_Read2+2,f
  2355     04A6  2CA1               	goto	u3977
  2356     04A7  0000               	nop
  2357                           
  2358                           ;main.c: 288:                                         }
  2359     04A8  2D26               	goto	l3065
  2360     04A9                     l3033:
  2361                           
  2362                           ;main.c: 291:                                                 intToString(countdown, pri
      +                          nt_countdown);
  2363     04A9  0879               	movf	_countdown,w
  2364     04AA  00DF               	movwf	??_UART_Read2
  2365     04AB  01E0               	clrf	??_UART_Read2+1
  2366     04AC  085F               	movf	??_UART_Read2,w
  2367     04AD  00D6               	movwf	intToString@n
  2368     04AE  0860               	movf	??_UART_Read2+1,w
  2369     04AF  00D7               	movwf	intToString@n+1
  2370     04B0  3040               	movlw	(low (_print_countdown| 0))& (0+255)
  2371     04B1  00D8               	movwf	intToString@str
  2372     04B2  120A  158A  2616  120A  118A  	fcall	_intToString
  2373     04B7                     l3035:
  2374                           
  2375                           ;main.c: 292:                                                 lcdSend(0xC0, 0);
  2376     04B7  1283               	bcf	3,5	;RP0=0, select bank0
  2377     04B8  1303               	bcf	3,6	;RP1=0, select bank0
  2378     04B9  01C3               	clrf	lcdSend@tipo
  2379     04BA  30C0               	movlw	192
  2380     04BB  120A  158A  2444  120A  118A  	fcall	_lcdSend
  2381     04C0                     l3037:
  2382                           
  2383                           ;main.c: 293:                                                 lcdPrint(print_countdown);
  2384     04C0  3040               	movlw	(low (_print_countdown| 0))& (0+255)
  2385     04C1  1283               	bcf	3,5	;RP0=0, select bank0
  2386     04C2  1303               	bcf	3,6	;RP1=0, select bank0
  2387     04C3  00C5               	movwf	lcdPrint@str
  2388     04C4  3000               	movlw	0
  2389     04C5  00C6               	movwf	lcdPrint@str+1
  2390     04C6  120A  158A  249C  120A  118A  	fcall	_lcdPrint
  2391     04CB                     l3039:
  2392                           
  2393                           ;main.c: 294:                                                 countdown --;
  2394     04CB  3001               	movlw	1
  2395     04CC  02F9               	subwf	_countdown,f
  2396     04CD                     l3041:
  2397                           
  2398                           ;main.c: 295:                                                 _delay((unsigned long)((60
      +                          )*(20000000/4000.0)));
  2399     04CD  3002               	movlw	2
  2400     04CE  1283               	bcf	3,5	;RP0=0, select bank0
  2401     04CF  1303               	bcf	3,6	;RP1=0, select bank0
  2402     04D0  00E1               	movwf	??_UART_Read2+2
  2403     04D1  3086               	movlw	134
  2404     04D2  00E0               	movwf	??_UART_Read2+1
  2405     04D3  3098               	movlw	152
  2406     04D4  00DF               	movwf	??_UART_Read2
  2407     04D5                     u3987:
  2408     04D5  0BDF               	decfsz	??_UART_Read2,f
  2409     04D6  2CD5               	goto	u3987
  2410     04D7  0BE0               	decfsz	??_UART_Read2+1,f
  2411     04D8  2CD5               	goto	u3987
  2412     04D9  0BE1               	decfsz	??_UART_Read2+2,f
  2413     04DA  2CD5               	goto	u3987
  2414     04DB  0000               	nop
  2415     04DC                     l3043:
  2416                           
  2417                           ;main.c: 296:                                                 if(RCREG == 0x33){
  2418     04DC  3033               	movlw	51
  2419     04DD  1283               	bcf	3,5	;RP0=0, select bank0
  2420     04DE  1303               	bcf	3,6	;RP1=0, select bank0
  2421     04DF  061A               	xorwf	26,w	;volatile
  2422     04E0  1D03               	btfss	3,2
  2423     04E1  2CE3               	goto	u3311
  2424     04E2  2CE4               	goto	u3310
  2425     04E3                     u3311:
  2426     04E3  2D1F               	goto	l227
  2427     04E4                     u3310:
  2428     04E4                     l3045:
  2429                           
  2430                           ;main.c: 297:                                                     lcdSend(0x80 + 2, 0);
  2431     04E4  01C3               	clrf	lcdSend@tipo
  2432     04E5  3082               	movlw	130
  2433     04E6  120A  158A  2444  120A  118A  	fcall	_lcdSend
  2434                           
  2435                           ;main.c: 298:                                                     lcdSend(RCREG, 1);
  2436     04EB  1283               	bcf	3,5	;RP0=0, select bank0
  2437     04EC  1303               	bcf	3,6	;RP1=0, select bank0
  2438     04ED  01C3               	clrf	lcdSend@tipo
  2439     04EE  0AC3               	incf	lcdSend@tipo,f
  2440     04EF  081A               	movf	26,w	;volatile
  2441     04F0  120A  158A  2444  120A  118A  	fcall	_lcdSend
  2442     04F5                     l3047:
  2443                           
  2444                           ;main.c: 299:                                                     RCIF = 0;
  2445     04F5  1283               	bcf	3,5	;RP0=0, select bank0
  2446     04F6  1303               	bcf	3,6	;RP1=0, select bank0
  2447     04F7  128C               	bcf	12,5	;volatile
  2448     04F8                     l3049:
  2449     04F8  081A               	movf	26,w	;volatile
  2450     04F9                     l3051:
  2451                           
  2452                           ;main.c: 301:                                                     countdown = 60;
  2453     04F9  303C               	movlw	60
  2454     04FA  00F9               	movwf	_countdown
  2455                           
  2456                           ;main.c: 302:                                                     lcdSend(0xC0, 0);
  2457     04FB  01C3               	clrf	lcdSend@tipo
  2458     04FC  30C0               	movlw	192
  2459     04FD  120A  158A  2444  120A  118A  	fcall	_lcdSend
  2460     0502                     l3053:
  2461                           
  2462                           ;main.c: 303:                                                     lcdPrint("FATTA");
  2463     0502  307D               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2464     0503  1283               	bcf	3,5	;RP0=0, select bank0
  2465     0504  1303               	bcf	3,6	;RP1=0, select bank0
  2466     0505  00C5               	movwf	lcdPrint@str
  2467     0506  3080               	movlw	128
  2468     0507  00C6               	movwf	lcdPrint@str+1
  2469     0508  120A  158A  249C  120A  118A  	fcall	_lcdPrint
  2470     050D                     l3055:
  2471                           
  2472                           ;main.c: 304:                                                     _delay((unsigned long)
      +                          ((200)*(20000000/4000.0)));
  2473     050D  3006               	movlw	6
  2474     050E  1283               	bcf	3,5	;RP0=0, select bank0
  2475     050F  1303               	bcf	3,6	;RP1=0, select bank0
  2476     0510  00E1               	movwf	??_UART_Read2+2
  2477     0511  3013               	movlw	19
  2478     0512  00E0               	movwf	??_UART_Read2+1
  2479     0513  30AD               	movlw	173
  2480     0514  00DF               	movwf	??_UART_Read2
  2481     0515                     u3997:
  2482     0515  0BDF               	decfsz	??_UART_Read2,f
  2483     0516  2D15               	goto	u3997
  2484     0517  0BE0               	decfsz	??_UART_Read2+1,f
  2485     0518  2D15               	goto	u3997
  2486     0519  0BE1               	decfsz	??_UART_Read2+2,f
  2487     051A  2D15               	goto	u3997
  2488     051B                     l3057:
  2489                           
  2490                           ;main.c: 305:                                                     return RCREG;;	Return 
      +                          value of _UART_Read2 is never used
  2491     051B  1283               	bcf	3,5	;RP0=0, select bank0
  2492     051C  1303               	bcf	3,6	;RP1=0, select bank0
  2493     051D  081A               	movf	26,w	;volatile
  2494     051E  2D62               	goto	l228
  2495     051F                     l227:	
  2496                           ;main.c: 306:                                                 }
  2497                           
  2498                           
  2499                           ;main.c: 307:                                                 RCIF = 0;
  2500     051F  128C               	bcf	12,5	;volatile
  2501     0520                     l3061:
  2502     0520  081A               	movf	26,w	;volatile
  2503     0521                     l3063:
  2504                           
  2505                           ;main.c: 290:                                             while (countdown != 0){
  2506     0521  0879               	movf	_countdown,w
  2507     0522  1D03               	btfss	3,2
  2508     0523  2D25               	goto	u3321
  2509     0524  2D26               	goto	u3320
  2510     0525                     u3321:
  2511     0525  2CA9               	goto	l3033
  2512     0526                     u3320:
  2513     0526                     l3065:
  2514                           
  2515                           ;main.c: 281:                                     while (countdown != 0){
  2516     0526  0879               	movf	_countdown,w
  2517     0527  1D03               	btfss	3,2
  2518     0528  2D2A               	goto	u3331
  2519     0529  2D2B               	goto	u3330
  2520     052A                     u3331:
  2521     052A  2C6F               	goto	l222
  2522     052B                     u3330:
  2523     052B                     l220:	
  2524                           ;main.c: 312:                                 }
  2525                           
  2526                           
  2527                           ;main.c: 313:                                 RCIF = 0;
  2528     052B  1283               	bcf	3,5	;RP0=0, select bank0
  2529     052C  1303               	bcf	3,6	;RP1=0, select bank0
  2530     052D  128C               	bcf	12,5	;volatile
  2531     052E                     l3067:
  2532     052E  081A               	movf	26,w	;volatile
  2533     052F                     l3069:
  2534                           
  2535                           ;main.c: 270:                             while (countdown != 0){
  2536     052F  0879               	movf	_countdown,w
  2537     0530  1D03               	btfss	3,2
  2538     0531  2D33               	goto	u3341
  2539     0532  2D34               	goto	u3340
  2540     0533                     u3341:
  2541     0533  2C1E               	goto	l3005
  2542     0534                     u3340:
  2543     0534                     l3071:
  2544                           
  2545                           ;main.c: 261:                     while (countdown != 0){
  2546     0534  0879               	movf	_countdown,w
  2547     0535  1D03               	btfss	3,2
  2548     0536  2D38               	goto	u3351
  2549     0537  2D39               	goto	u3350
  2550     0538                     u3351:
  2551     0538  2BE4               	goto	l215
  2552     0539                     u3350:
  2553     0539                     l213:	
  2554                           ;main.c: 318:                 }
  2555                           
  2556                           
  2557                           ;main.c: 319:                 RCIF = 0;
  2558     0539  1283               	bcf	3,5	;RP0=0, select bank0
  2559     053A  1303               	bcf	3,6	;RP1=0, select bank0
  2560     053B  128C               	bcf	12,5	;volatile
  2561     053C                     l3073:
  2562     053C  081A               	movf	26,w	;volatile
  2563     053D                     l3075:
  2564                           
  2565                           ;main.c: 250:             while (countdown != 0){
  2566     053D  0879               	movf	_countdown,w
  2567     053E  1D03               	btfss	3,2
  2568     053F  2D41               	goto	u3361
  2569     0540  2D42               	goto	u3360
  2570     0541                     u3361:
  2571     0541  2B93               	goto	l2977
  2572     0542                     u3360:
  2573     0542  2B44               	goto	l2961
  2574     0543                     l3077:
  2575                           
  2576                           ;main.c: 239:     while (countdown != 0){
  2577     0543  0879               	movf	_countdown,w
  2578     0544  1D03               	btfss	3,2
  2579     0545  2D47               	goto	u3371
  2580     0546  2D48               	goto	u3370
  2581     0547                     u3371:
  2582     0547  2B45               	goto	l208
  2583     0548                     u3370:
  2584     0548                     l3079:
  2585                           
  2586                           ;main.c: 324:     lcdSend(0x01, 0);
  2587     0548  1283               	bcf	3,5	;RP0=0, select bank0
  2588     0549  1303               	bcf	3,6	;RP1=0, select bank0
  2589     054A  01C3               	clrf	lcdSend@tipo
  2590     054B  3001               	movlw	1
  2591     054C  120A  158A  2444  120A  118A  	fcall	_lcdSend
  2592     0551                     l3081:
  2593                           
  2594                           ;main.c: 325:     lcdPrint("Tempo Scaduto");
  2595     0551  3031               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2596     0552  1283               	bcf	3,5	;RP0=0, select bank0
  2597     0553  1303               	bcf	3,6	;RP1=0, select bank0
  2598     0554  00C5               	movwf	lcdPrint@str
  2599     0555  3080               	movlw	128
  2600     0556  00C6               	movwf	lcdPrint@str+1
  2601     0557  120A  158A  249C  120A  118A  	fcall	_lcdPrint
  2602     055C                     l3083:
  2603                           
  2604                           ;main.c: 326:     RCIF = 0;
  2605     055C  1283               	bcf	3,5	;RP0=0, select bank0
  2606     055D  1303               	bcf	3,6	;RP1=0, select bank0
  2607     055E  128C               	bcf	12,5	;volatile
  2608     055F                     l3085:
  2609                           
  2610                           ;main.c: 327:     countdown = 60;
  2611     055F  303C               	movlw	60
  2612     0560  00F9               	movwf	_countdown
  2613     0561  2D0D               	goto	l3055
  2614     0562                     l228:
  2615     0562  0008               	return
  2616     0563                     __end_of_UART_Read2:
  2617                           
  2618                           	psect	text3
  2619     0563                     __ptext3:	
  2620 ;; *************** function _UART_Read1 *****************
  2621 ;; Defined at:
  2622 ;;		line 334 in file "main.c"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;		None
  2625 ;; Auto vars:     Size  Location     Type
  2626 ;;  count           1   31[BANK0 ] unsigned char 
  2627 ;; Return value:  Size  Location     Type
  2628 ;;                  1    wreg      unsigned char 
  2629 ;; Registers used:
  2630 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2631 ;; Tracked objects:
  2632 ;;		On entry : 0/0
  2633 ;;		On exit  : 0/0
  2634 ;;		Unchanged: 0/0
  2635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2636 ;;      Params:         0       0       0       0       0
  2637 ;;      Locals:         0       1       0       0       0
  2638 ;;      Temps:          0       3       0       0       0
  2639 ;;      Totals:         0       4       0       0       0
  2640 ;;Total ram usage:        4 bytes
  2641 ;; Hardware stack levels used: 1
  2642 ;; Hardware stack levels required when called: 5
  2643 ;; This function calls:
  2644 ;;		_RS485_RxEnable
  2645 ;;		_RS485_TxEnable
  2646 ;;		_UART_Write
  2647 ;;		_intToString
  2648 ;;		_lcdPrint
  2649 ;;		_lcdSend
  2650 ;; This function is called by:
  2651 ;;		_main
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655     0563                     _UART_Read1:	
  2656                           ;psect for function _UART_Read1
  2657                           
  2658     0563                     l2823:	
  2659                           ;incstack = 0
  2660                           ; Regs used in _UART_Read1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2661                           
  2662                           
  2663                           ;main.c: 335:     char count = 0;
  2664     0563  1283               	bcf	3,5	;RP0=0, select bank0
  2665     0564  1303               	bcf	3,6	;RP1=0, select bank0
  2666     0565  01E2               	clrf	UART_Read1@count
  2667     0566                     l2825:
  2668                           
  2669                           ;main.c: 336:     countdown = 60;
  2670     0566  303C               	movlw	60
  2671     0567  00F9               	movwf	_countdown
  2672                           
  2673                           ;main.c: 337:     while (countdown != 0){
  2674     0568  2F21               	goto	l2945
  2675     0569                     l2827:
  2676                           
  2677                           ;main.c: 338:         if (count != 5){
  2678     0569  3005               	movlw	5
  2679     056A  1283               	bcf	3,5	;RP0=0, select bank0
  2680     056B  1303               	bcf	3,6	;RP1=0, select bank0
  2681     056C  0662               	xorwf	UART_Read1@count,w
  2682     056D  1903               	btfsc	3,2
  2683     056E  2D70               	goto	u3141
  2684     056F  2D71               	goto	u3140
  2685     0570                     u3141:
  2686     0570  2EA6               	goto	l2909
  2687     0571                     u3140:
  2688     0571                     l2829:
  2689                           
  2690                           ;main.c: 339:             if(keypressed != 0 && count == 0){
  2691     0571  083A               	movf	_keypressed,w
  2692     0572  1903               	btfsc	3,2
  2693     0573  2D75               	goto	u3151
  2694     0574  2D76               	goto	u3150
  2695     0575                     u3151:
  2696     0575  2DA3               	goto	l2843
  2697     0576                     u3150:
  2698     0576                     l2831:
  2699     0576  0862               	movf	UART_Read1@count,w
  2700     0577  1D03               	btfss	3,2
  2701     0578  2D7A               	goto	u3161
  2702     0579  2D7B               	goto	u3160
  2703     057A                     u3161:
  2704     057A  2DA3               	goto	l2843
  2705     057B                     u3160:
  2706     057B                     l2833:
  2707                           
  2708                           ;main.c: 340:                 lcdSend(0x01, 0);
  2709     057B  01C3               	clrf	lcdSend@tipo
  2710     057C  3001               	movlw	1
  2711     057D  120A  158A  2444  120A  118A  	fcall	_lcdSend
  2712     0582                     l2835:
  2713                           
  2714                           ;main.c: 341:                 lcdSend(keys[keypressed], 1);
  2715     0582  1283               	bcf	3,5	;RP0=0, select bank0
  2716     0583  1303               	bcf	3,6	;RP1=0, select bank0
  2717     0584  01C3               	clrf	lcdSend@tipo
  2718     0585  0AC3               	incf	lcdSend@tipo,f
  2719     0586  083A               	movf	_keypressed,w
  2720     0587  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2721     0588  0084               	movwf	4
  2722     0589  120A  118A  2759  120A  118A  	fcall	stringdir
  2723     058E  120A  158A  2444  120A  118A  	fcall	_lcdSend
  2724     0593                     l2837:
  2725                           
  2726                           ;main.c: 342:                 num1 = keys[keypressed];
  2727     0593  1283               	bcf	3,5	;RP0=0, select bank0
  2728     0594  1303               	bcf	3,6	;RP1=0, select bank0
  2729     0595  083A               	movf	_keypressed,w
  2730     0596  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2731     0597  0084               	movwf	4
  2732     0598  120A  118A  2759  120A  118A  	fcall	stringdir
  2733     059D  00BF               	movwf	_num1
  2734     059E                     l2839:
  2735                           
  2736                           ;main.c: 343:                 keypressed = 0;
  2737     059E  01BA               	clrf	_keypressed
  2738     059F                     l2841:
  2739                           
  2740                           ;main.c: 344:                 count ++;
  2741     059F  3001               	movlw	1
  2742     05A0  00DF               	movwf	??_UART_Read1
  2743     05A1  085F               	movf	??_UART_Read1,w
  2744     05A2  07E2               	addwf	UART_Read1@count,f
  2745     05A3                     l2843:
  2746                           
  2747                           ;main.c: 346:             if(keypressed != 0 && count == 1){
  2748     05A3  083A               	movf	_keypressed,w
  2749     05A4  1903               	btfsc	3,2
  2750     05A5  2DA7               	goto	u3171
  2751     05A6  2DA8               	goto	u3170
  2752     05A7                     u3171:
  2753     05A7  2DD6               	goto	l2857
  2754     05A8                     u3170:
  2755     05A8                     l2845:
  2756     05A8  0362               	decf	UART_Read1@count,w
  2757     05A9  1D03               	btfss	3,2
  2758     05AA  2DAC               	goto	u3181
  2759     05AB  2DAD               	goto	u3180
  2760     05AC                     u3181:
  2761     05AC  2DD6               	goto	l2857
  2762     05AD                     u3180:
  2763     05AD                     l2847:
  2764                           
  2765                           ;main.c: 347:                 lcdSend(0x80 + count, 0);
  2766     05AD  01C3               	clrf	lcdSend@tipo
  2767     05AE  0862               	movf	UART_Read1@count,w
  2768     05AF  3E80               	addlw	128
  2769     05B0  120A  158A  2444  120A  118A  	fcall	_lcdSend
  2770     05B5                     l2849:
  2771                           
  2772                           ;main.c: 348:                 lcdSend(keys[keypressed], 1);
  2773     05B5  1283               	bcf	3,5	;RP0=0, select bank0
  2774     05B6  1303               	bcf	3,6	;RP1=0, select bank0
  2775     05B7  01C3               	clrf	lcdSend@tipo
  2776     05B8  0AC3               	incf	lcdSend@tipo,f
  2777     05B9  083A               	movf	_keypressed,w
  2778     05BA  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2779     05BB  0084               	movwf	4
  2780     05BC  120A  118A  2759  120A  118A  	fcall	stringdir
  2781     05C1  120A  158A  2444  120A  118A  	fcall	_lcdSend
  2782     05C6                     l2851:
  2783                           
  2784                           ;main.c: 349:                 num2 = keys[keypressed];
  2785     05C6  1283               	bcf	3,5	;RP0=0, select bank0
  2786     05C7  1303               	bcf	3,6	;RP1=0, select bank0
  2787     05C8  083A               	movf	_keypressed,w
  2788     05C9  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2789     05CA  0084               	movwf	4
  2790     05CB  120A  118A  2759  120A  118A  	fcall	stringdir
  2791     05D0  00BE               	movwf	_num2
  2792     05D1                     l2853:
  2793                           
  2794                           ;main.c: 350:                 keypressed = 0;
  2795     05D1  01BA               	clrf	_keypressed
  2796     05D2                     l2855:
  2797                           
  2798                           ;main.c: 351:                 count ++;
  2799     05D2  3001               	movlw	1
  2800     05D3  00DF               	movwf	??_UART_Read1
  2801     05D4  085F               	movf	??_UART_Read1,w
  2802     05D5  07E2               	addwf	UART_Read1@count,f
  2803     05D6                     l2857:
  2804                           
  2805                           ;main.c: 353:             if(keypressed != 0 && count == 2){
  2806     05D6  083A               	movf	_keypressed,w
  2807     05D7  1903               	btfsc	3,2
  2808     05D8  2DDA               	goto	u3191
  2809     05D9  2DDB               	goto	u3190
  2810     05DA                     u3191:
  2811     05DA  2E0A               	goto	l2871
  2812     05DB                     u3190:
  2813     05DB                     l2859:
  2814     05DB  3002               	movlw	2
  2815     05DC  0662               	xorwf	UART_Read1@count,w
  2816     05DD  1D03               	btfss	3,2
  2817     05DE  2DE0               	goto	u3201
  2818     05DF  2DE1               	goto	u3200
  2819     05E0                     u3201:
  2820     05E0  2E0A               	goto	l2871
  2821     05E1                     u3200:
  2822     05E1                     l2861:
  2823                           
  2824                           ;main.c: 354:                 lcdSend(0x80 + count, 0);
  2825     05E1  01C3               	clrf	lcdSend@tipo
  2826     05E2  0862               	movf	UART_Read1@count,w
  2827     05E3  3E80               	addlw	128
  2828     05E4  120A  158A  2444  120A  118A  	fcall	_lcdSend
  2829     05E9                     l2863:
  2830                           
  2831                           ;main.c: 355:                 lcdSend(keys[keypressed], 1);
  2832     05E9  1283               	bcf	3,5	;RP0=0, select bank0
  2833     05EA  1303               	bcf	3,6	;RP1=0, select bank0
  2834     05EB  01C3               	clrf	lcdSend@tipo
  2835     05EC  0AC3               	incf	lcdSend@tipo,f
  2836     05ED  083A               	movf	_keypressed,w
  2837     05EE  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2838     05EF  0084               	movwf	4
  2839     05F0  120A  118A  2759  120A  118A  	fcall	stringdir
  2840     05F5  120A  158A  2444  120A  118A  	fcall	_lcdSend
  2841     05FA                     l2865:
  2842                           
  2843                           ;main.c: 356:                 num3 = keys[keypressed];
  2844     05FA  1283               	bcf	3,5	;RP0=0, select bank0
  2845     05FB  1303               	bcf	3,6	;RP1=0, select bank0
  2846     05FC  083A               	movf	_keypressed,w
  2847     05FD  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2848     05FE  0084               	movwf	4
  2849     05FF  120A  118A  2759  120A  118A  	fcall	stringdir
  2850     0604  00BD               	movwf	_num3
  2851     0605                     l2867:
  2852                           
  2853                           ;main.c: 357:                 keypressed = 0;
  2854     0605  01BA               	clrf	_keypressed
  2855     0606                     l2869:
  2856                           
  2857                           ;main.c: 358:                 count ++;
  2858     0606  3001               	movlw	1
  2859     0607  00DF               	movwf	??_UART_Read1
  2860     0608  085F               	movf	??_UART_Read1,w
  2861     0609  07E2               	addwf	UART_Read1@count,f
  2862     060A                     l2871:
  2863                           
  2864                           ;main.c: 360:             if(keypressed != 0 && count == 3){
  2865     060A  083A               	movf	_keypressed,w
  2866     060B  1903               	btfsc	3,2
  2867     060C  2E0E               	goto	u3211
  2868     060D  2E0F               	goto	u3210
  2869     060E                     u3211:
  2870     060E  2E3E               	goto	l2885
  2871     060F                     u3210:
  2872     060F                     l2873:
  2873     060F  3003               	movlw	3
  2874     0610  0662               	xorwf	UART_Read1@count,w
  2875     0611  1D03               	btfss	3,2
  2876     0612  2E14               	goto	u3221
  2877     0613  2E15               	goto	u3220
  2878     0614                     u3221:
  2879     0614  2E3E               	goto	l2885
  2880     0615                     u3220:
  2881     0615                     l2875:
  2882                           
  2883                           ;main.c: 361:                 lcdSend(0x80 + count, 0);
  2884     0615  01C3               	clrf	lcdSend@tipo
  2885     0616  0862               	movf	UART_Read1@count,w
  2886     0617  3E80               	addlw	128
  2887     0618  120A  158A  2444  120A  118A  	fcall	_lcdSend
  2888     061D                     l2877:
  2889                           
  2890                           ;main.c: 362:                 lcdSend(keys[keypressed], 1);
  2891     061D  1283               	bcf	3,5	;RP0=0, select bank0
  2892     061E  1303               	bcf	3,6	;RP1=0, select bank0
  2893     061F  01C3               	clrf	lcdSend@tipo
  2894     0620  0AC3               	incf	lcdSend@tipo,f
  2895     0621  083A               	movf	_keypressed,w
  2896     0622  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2897     0623  0084               	movwf	4
  2898     0624  120A  118A  2759  120A  118A  	fcall	stringdir
  2899     0629  120A  158A  2444  120A  118A  	fcall	_lcdSend
  2900     062E                     l2879:
  2901                           
  2902                           ;main.c: 363:                 num4 = keys[keypressed];
  2903     062E  1283               	bcf	3,5	;RP0=0, select bank0
  2904     062F  1303               	bcf	3,6	;RP1=0, select bank0
  2905     0630  083A               	movf	_keypressed,w
  2906     0631  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2907     0632  0084               	movwf	4
  2908     0633  120A  118A  2759  120A  118A  	fcall	stringdir
  2909     0638  00BC               	movwf	_num4
  2910     0639                     l2881:
  2911                           
  2912                           ;main.c: 364:                 keypressed = 0;
  2913     0639  01BA               	clrf	_keypressed
  2914     063A                     l2883:
  2915                           
  2916                           ;main.c: 365:                 count ++;
  2917     063A  3001               	movlw	1
  2918     063B  00DF               	movwf	??_UART_Read1
  2919     063C  085F               	movf	??_UART_Read1,w
  2920     063D  07E2               	addwf	UART_Read1@count,f
  2921     063E                     l2885:
  2922                           
  2923                           ;main.c: 367:             if(keypressed != 0 && count == 4){
  2924     063E  083A               	movf	_keypressed,w
  2925     063F  1903               	btfsc	3,2
  2926     0640  2E42               	goto	u3231
  2927     0641  2E43               	goto	u3230
  2928     0642                     u3231:
  2929     0642  2E72               	goto	l2899
  2930     0643                     u3230:
  2931     0643                     l2887:
  2932     0643  3004               	movlw	4
  2933     0644  0662               	xorwf	UART_Read1@count,w
  2934     0645  1D03               	btfss	3,2
  2935     0646  2E48               	goto	u3241
  2936     0647  2E49               	goto	u3240
  2937     0648                     u3241:
  2938     0648  2E72               	goto	l2899
  2939     0649                     u3240:
  2940     0649                     l2889:
  2941                           
  2942                           ;main.c: 368:                 lcdSend(0x80 + count, 0);
  2943     0649  01C3               	clrf	lcdSend@tipo
  2944     064A  0862               	movf	UART_Read1@count,w
  2945     064B  3E80               	addlw	128
  2946     064C  120A  158A  2444  120A  118A  	fcall	_lcdSend
  2947     0651                     l2891:
  2948                           
  2949                           ;main.c: 369:                 lcdSend(keys[keypressed], 1);
  2950     0651  1283               	bcf	3,5	;RP0=0, select bank0
  2951     0652  1303               	bcf	3,6	;RP1=0, select bank0
  2952     0653  01C3               	clrf	lcdSend@tipo
  2953     0654  0AC3               	incf	lcdSend@tipo,f
  2954     0655  083A               	movf	_keypressed,w
  2955     0656  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2956     0657  0084               	movwf	4
  2957     0658  120A  118A  2759  120A  118A  	fcall	stringdir
  2958     065D  120A  158A  2444  120A  118A  	fcall	_lcdSend
  2959     0662                     l2893:
  2960                           
  2961                           ;main.c: 370:                 num5 = keys[keypressed];
  2962     0662  1283               	bcf	3,5	;RP0=0, select bank0
  2963     0663  1303               	bcf	3,6	;RP1=0, select bank0
  2964     0664  083A               	movf	_keypressed,w
  2965     0665  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2966     0666  0084               	movwf	4
  2967     0667  120A  118A  2759  120A  118A  	fcall	stringdir
  2968     066C  00BB               	movwf	_num5
  2969     066D                     l2895:
  2970                           
  2971                           ;main.c: 371:                 keypressed = 0;
  2972     066D  01BA               	clrf	_keypressed
  2973     066E                     l2897:
  2974                           
  2975                           ;main.c: 372:                 count ++;
  2976     066E  3001               	movlw	1
  2977     066F  00DF               	movwf	??_UART_Read1
  2978     0670  085F               	movf	??_UART_Read1,w
  2979     0671  07E2               	addwf	UART_Read1@count,f
  2980     0672                     l2899:
  2981                           
  2982                           ;main.c: 374:             intToString(countdown, print_countdown);
  2983     0672  0879               	movf	_countdown,w
  2984     0673  00DF               	movwf	??_UART_Read1
  2985     0674  01E0               	clrf	??_UART_Read1+1
  2986     0675  085F               	movf	??_UART_Read1,w
  2987     0676  00D6               	movwf	intToString@n
  2988     0677  0860               	movf	??_UART_Read1+1,w
  2989     0678  00D7               	movwf	intToString@n+1
  2990     0679  3040               	movlw	(low (_print_countdown| 0))& (0+255)
  2991     067A  00D8               	movwf	intToString@str
  2992     067B  120A  158A  2616  120A  118A  	fcall	_intToString
  2993     0680                     l2901:
  2994                           
  2995                           ;main.c: 375:             lcdSend(0xC0, 0);
  2996     0680  1283               	bcf	3,5	;RP0=0, select bank0
  2997     0681  1303               	bcf	3,6	;RP1=0, select bank0
  2998     0682  01C3               	clrf	lcdSend@tipo
  2999     0683  30C0               	movlw	192
  3000     0684  120A  158A  2444  120A  118A  	fcall	_lcdSend
  3001     0689                     l2903:
  3002                           
  3003                           ;main.c: 376:             lcdPrint(print_countdown);
  3004     0689  3040               	movlw	(low (_print_countdown| 0))& (0+255)
  3005     068A  1283               	bcf	3,5	;RP0=0, select bank0
  3006     068B  1303               	bcf	3,6	;RP1=0, select bank0
  3007     068C  00C5               	movwf	lcdPrint@str
  3008     068D  3000               	movlw	0
  3009     068E  00C6               	movwf	lcdPrint@str+1
  3010     068F  120A  158A  249C  120A  118A  	fcall	_lcdPrint
  3011     0694                     l2905:
  3012                           
  3013                           ;main.c: 377:             countdown --;
  3014     0694  3001               	movlw	1
  3015     0695  02F9               	subwf	_countdown,f
  3016     0696                     l2907:
  3017                           
  3018                           ;main.c: 378:             _delay((unsigned long)((80)*(20000000/4000.0)));
  3019     0696  3003               	movlw	3
  3020     0697  1283               	bcf	3,5	;RP0=0, select bank0
  3021     0698  1303               	bcf	3,6	;RP1=0, select bank0
  3022     0699  00E1               	movwf	??_UART_Read1+2
  3023     069A  3008               	movlw	8
  3024     069B  00E0               	movwf	??_UART_Read1+1
  3025     069C  3076               	movlw	118
  3026     069D  00DF               	movwf	??_UART_Read1
  3027     069E                     u4007:
  3028     069E  0BDF               	decfsz	??_UART_Read1,f
  3029     069F  2E9E               	goto	u4007
  3030     06A0  0BE0               	decfsz	??_UART_Read1+1,f
  3031     06A1  2E9E               	goto	u4007
  3032     06A2  0BE1               	decfsz	??_UART_Read1+2,f
  3033     06A3  2E9E               	goto	u4007
  3034     06A4  0000               	nop
  3035                           
  3036                           ;main.c: 379:         }
  3037     06A5  2F21               	goto	l2945
  3038     06A6                     l2909:
  3039                           
  3040                           ;main.c: 381:             RS485_TxEnable();
  3041     06A6  120A  158A  2414  120A  118A  	fcall	_RS485_TxEnable
  3042     06AB                     l2911:
  3043                           
  3044                           ;main.c: 382:             UART_Write(id1);
  3045     06AB  3030               	movlw	48
  3046     06AC  120A  158A  2419  120A  118A  	fcall	_UART_Write
  3047     06B1                     l2913:
  3048                           
  3049                           ;main.c: 383:             UART_Write(id2);
  3050     06B1  3031               	movlw	49
  3051     06B2  120A  158A  2419  120A  118A  	fcall	_UART_Write
  3052     06B7                     l2915:
  3053                           
  3054                           ;main.c: 384:             UART_Write(0x32);
  3055     06B7  3032               	movlw	50
  3056     06B8  120A  158A  2419  120A  118A  	fcall	_UART_Write
  3057     06BD                     l2917:
  3058                           
  3059                           ;main.c: 385:             UART_Write(num1);
  3060     06BD  1283               	bcf	3,5	;RP0=0, select bank0
  3061     06BE  1303               	bcf	3,6	;RP1=0, select bank0
  3062     06BF  083F               	movf	_num1,w
  3063     06C0  120A  158A  2419  120A  118A  	fcall	_UART_Write
  3064     06C5                     l2919:
  3065                           
  3066                           ;main.c: 386:             UART_Write(num2);
  3067     06C5  1283               	bcf	3,5	;RP0=0, select bank0
  3068     06C6  1303               	bcf	3,6	;RP1=0, select bank0
  3069     06C7  083E               	movf	_num2,w
  3070     06C8  120A  158A  2419  120A  118A  	fcall	_UART_Write
  3071     06CD                     l2921:
  3072                           
  3073                           ;main.c: 387:             UART_Write(num3);
  3074     06CD  1283               	bcf	3,5	;RP0=0, select bank0
  3075     06CE  1303               	bcf	3,6	;RP1=0, select bank0
  3076     06CF  083D               	movf	_num3,w
  3077     06D0  120A  158A  2419  120A  118A  	fcall	_UART_Write
  3078     06D5                     l2923:
  3079                           
  3080                           ;main.c: 388:             UART_Write(num4);
  3081     06D5  1283               	bcf	3,5	;RP0=0, select bank0
  3082     06D6  1303               	bcf	3,6	;RP1=0, select bank0
  3083     06D7  083C               	movf	_num4,w
  3084     06D8  120A  158A  2419  120A  118A  	fcall	_UART_Write
  3085     06DD                     l2925:
  3086                           
  3087                           ;main.c: 389:             UART_Write(num5);
  3088     06DD  1283               	bcf	3,5	;RP0=0, select bank0
  3089     06DE  1303               	bcf	3,6	;RP1=0, select bank0
  3090     06DF  083B               	movf	_num5,w
  3091     06E0  120A  158A  2419  120A  118A  	fcall	_UART_Write
  3092     06E5                     l2927:
  3093                           
  3094                           ;main.c: 390:             UART_Write('\r');
  3095     06E5  300D               	movlw	13
  3096     06E6  120A  158A  2419  120A  118A  	fcall	_UART_Write
  3097     06EB                     l2929:
  3098                           
  3099                           ;main.c: 391:             UART_Write('\n');
  3100     06EB  300A               	movlw	10
  3101     06EC  120A  158A  2419  120A  118A  	fcall	_UART_Write
  3102                           
  3103                           ;main.c: 392:             RS485_RxEnable();
  3104     06F1  120A  158A  240F  120A  118A  	fcall	_RS485_RxEnable
  3105     06F6                     l2931:
  3106                           
  3107                           ;main.c: 393:             lcdSend(0x01, 0);
  3108     06F6  1283               	bcf	3,5	;RP0=0, select bank0
  3109     06F7  1303               	bcf	3,6	;RP1=0, select bank0
  3110     06F8  01C3               	clrf	lcdSend@tipo
  3111     06F9  3001               	movlw	1
  3112     06FA  120A  158A  2444  120A  118A  	fcall	_lcdSend
  3113     06FF                     l2933:
  3114                           
  3115                           ;main.c: 394:             lcdPrint("Mandato");
  3116     06FF  3075               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  3117     0700  1283               	bcf	3,5	;RP0=0, select bank0
  3118     0701  1303               	bcf	3,6	;RP1=0, select bank0
  3119     0702  00C5               	movwf	lcdPrint@str
  3120     0703  3080               	movlw	128
  3121     0704  00C6               	movwf	lcdPrint@str+1
  3122     0705  120A  158A  249C  120A  118A  	fcall	_lcdPrint
  3123     070A                     l2935:
  3124                           
  3125                           ;main.c: 395:             RCIF = 0;
  3126     070A  1283               	bcf	3,5	;RP0=0, select bank0
  3127     070B  1303               	bcf	3,6	;RP1=0, select bank0
  3128     070C  128C               	bcf	12,5	;volatile
  3129     070D                     l2937:
  3130                           
  3131                           ;main.c: 396:             countdown = 60;
  3132     070D  303C               	movlw	60
  3133     070E  00F9               	movwf	_countdown
  3134     070F                     l2939:
  3135                           
  3136                           ;main.c: 397:             _delay((unsigned long)((100)*(20000000/4000.0)));
  3137     070F  3003               	movlw	3
  3138     0710  1283               	bcf	3,5	;RP0=0, select bank0
  3139     0711  1303               	bcf	3,6	;RP1=0, select bank0
  3140     0712  00E1               	movwf	??_UART_Read1+2
  3141     0713  308A               	movlw	138
  3142     0714  00E0               	movwf	??_UART_Read1+1
  3143     0715  3055               	movlw	85
  3144     0716  00DF               	movwf	??_UART_Read1
  3145     0717                     u4017:
  3146     0717  0BDF               	decfsz	??_UART_Read1,f
  3147     0718  2F17               	goto	u4017
  3148     0719  0BE0               	decfsz	??_UART_Read1+1,f
  3149     071A  2F17               	goto	u4017
  3150     071B  0BE1               	decfsz	??_UART_Read1+2,f
  3151     071C  2F17               	goto	u4017
  3152     071D                     l2941:
  3153                           
  3154                           ;main.c: 398:             return RCREG;;	Return value of _UART_Read1 is never used
  3155     071D  1283               	bcf	3,5	;RP0=0, select bank0
  3156     071E  1303               	bcf	3,6	;RP1=0, select bank0
  3157     071F  081A               	movf	26,w	;volatile
  3158     0720  2F4E               	goto	l246
  3159     0721                     l2945:
  3160                           
  3161                           ;main.c: 337:     while (countdown != 0){
  3162     0721  0879               	movf	_countdown,w
  3163     0722  1D03               	btfss	3,2
  3164     0723  2F25               	goto	u3251
  3165     0724  2F26               	goto	u3250
  3166     0725                     u3251:
  3167     0725  2D69               	goto	l2827
  3168     0726                     u3250:
  3169     0726                     l2947:
  3170                           
  3171                           ;main.c: 401:     lcdSend(0x01, 0);
  3172     0726  1283               	bcf	3,5	;RP0=0, select bank0
  3173     0727  1303               	bcf	3,6	;RP1=0, select bank0
  3174     0728  01C3               	clrf	lcdSend@tipo
  3175     0729  3001               	movlw	1
  3176     072A  120A  158A  2444  120A  118A  	fcall	_lcdSend
  3177     072F                     l2949:
  3178                           
  3179                           ;main.c: 402:     lcdPrint("Codice Scaduto");
  3180     072F  3014               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  3181     0730  1283               	bcf	3,5	;RP0=0, select bank0
  3182     0731  1303               	bcf	3,6	;RP1=0, select bank0
  3183     0732  00C5               	movwf	lcdPrint@str
  3184     0733  3080               	movlw	128
  3185     0734  00C6               	movwf	lcdPrint@str+1
  3186     0735  120A  158A  249C  120A  118A  	fcall	_lcdPrint
  3187     073A                     l2951:
  3188                           
  3189                           ;main.c: 403:     RCIF = 0;
  3190     073A  1283               	bcf	3,5	;RP0=0, select bank0
  3191     073B  1303               	bcf	3,6	;RP1=0, select bank0
  3192     073C  128C               	bcf	12,5	;volatile
  3193     073D                     l2953:
  3194                           
  3195                           ;main.c: 404:     countdown = 60;
  3196     073D  303C               	movlw	60
  3197     073E  00F9               	movwf	_countdown
  3198     073F                     l2955:
  3199                           
  3200                           ;main.c: 405:     _delay((unsigned long)((200)*(20000000/4000.0)));
  3201     073F  3006               	movlw	6
  3202     0740  1283               	bcf	3,5	;RP0=0, select bank0
  3203     0741  1303               	bcf	3,6	;RP1=0, select bank0
  3204     0742  00E1               	movwf	??_UART_Read1+2
  3205     0743  3013               	movlw	19
  3206     0744  00E0               	movwf	??_UART_Read1+1
  3207     0745  30AD               	movlw	173
  3208     0746  00DF               	movwf	??_UART_Read1
  3209     0747                     u4027:
  3210     0747  0BDF               	decfsz	??_UART_Read1,f
  3211     0748  2F47               	goto	u4027
  3212     0749  0BE0               	decfsz	??_UART_Read1+1,f
  3213     074A  2F47               	goto	u4027
  3214     074B  0BE1               	decfsz	??_UART_Read1+2,f
  3215     074C  2F47               	goto	u4027
  3216     074D  2F1D               	goto	l2941
  3217     074E                     l246:
  3218     074E  0008               	return
  3219     074F                     __end_of_UART_Read1:
  3220                           
  3221                           	psect	text4
  3222     0C9C                     __ptext4:	
  3223 ;; *************** function _lcdPrint *****************
  3224 ;; Defined at:
  3225 ;;		line 449 in file "main.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;  str             2    2[BANK0 ] PTR unsigned char 
  3228 ;;		 -> STR_11(15), STR_10(8), STR_9(14), STR_8(6), 
  3229 ;;		 -> print_countdown(3), STR_7(10), STR_6(14), STR_5(13), 
  3230 ;;		 -> STR_4(12), STR_3(11), STR_2(10), STR_1(8), 
  3231 ;; Auto vars:     Size  Location     Type
  3232 ;;  n               2    7[BANK0 ] int 
  3233 ;; Return value:  Size  Location     Type
  3234 ;;                  1    wreg      void 
  3235 ;; Registers used:
  3236 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3237 ;; Tracked objects:
  3238 ;;		On entry : 0/0
  3239 ;;		On exit  : 0/0
  3240 ;;		Unchanged: 0/0
  3241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3242 ;;      Params:         0       2       0       0       0
  3243 ;;      Locals:         0       2       0       0       0
  3244 ;;      Temps:          0       3       0       0       0
  3245 ;;      Totals:         0       7       0       0       0
  3246 ;;Total ram usage:        7 bytes
  3247 ;; Hardware stack levels used: 1
  3248 ;; Hardware stack levels required when called: 3
  3249 ;; This function calls:
  3250 ;;		_lcdSend
  3251 ;; This function is called by:
  3252 ;;		_main
  3253 ;;		_UART_Read2
  3254 ;;		_UART_Read1
  3255 ;; This function uses a non-reentrant model
  3256 ;;
  3257                           
  3258     0C9C                     _lcdPrint:	
  3259                           ;psect for function _lcdPrint
  3260                           
  3261     0C9C                     l2673:	
  3262                           ;incstack = 0
  3263                           ; Regs used in _lcdPrint: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3264                           
  3265                           
  3266                           ;main.c: 450:     int n = 0;
  3267     0C9C  1283               	bcf	3,5	;RP0=0, select bank0
  3268     0C9D  1303               	bcf	3,6	;RP1=0, select bank0
  3269     0C9E  01CA               	clrf	lcdPrint@n
  3270     0C9F  01CB               	clrf	lcdPrint@n+1
  3271                           
  3272                           ;main.c: 451:     while (str[n] != '\0') {
  3273     0CA0  2CC7               	goto	l2679
  3274     0CA1                     l2675:
  3275                           
  3276                           ;main.c: 452:         lcdSend(str[n++], 1);
  3277     0CA1  01C3               	clrf	lcdSend@tipo
  3278     0CA2  0AC3               	incf	lcdSend@tipo,f
  3279     0CA3  084A               	movf	lcdPrint@n,w
  3280     0CA4  0745               	addwf	lcdPrint@str,w
  3281     0CA5  00C8               	movwf	??_lcdPrint+1
  3282     0CA6  0846               	movf	lcdPrint@str+1,w
  3283     0CA7  00C7               	movwf	??_lcdPrint
  3284     0CA8  1803               	skipnc
  3285     0CA9  0AC7               	incf	??_lcdPrint,f
  3286     0CAA  1FCA               	btfss	lcdPrint@n,7
  3287     0CAB  2CAD               	goto	u2970
  3288     0CAC  03C7               	decf	??_lcdPrint,f
  3289     0CAD                     u2970:
  3290     0CAD  1283               	bcf	3,5	;RP0=0, select bank0
  3291     0CAE  1303               	bcf	3,6	;RP1=0, select bank0
  3292     0CAF  0847               	movf	??_lcdPrint,w
  3293     0CB0  00C9               	movwf	??_lcdPrint+2
  3294     0CB1  0849               	movf	??_lcdPrint+2,w
  3295     0CB2  00FF               	movwf	btemp+1
  3296     0CB3  0848               	movf	??_lcdPrint+1,w
  3297     0CB4  0084               	movwf	4
  3298     0CB5  120A  118A  274F  120A  158A  	fcall	stringtab
  3299     0CBA  120A  158A  2444  120A  158A  	fcall	_lcdSend
  3300     0CBF                     l2677:
  3301     0CBF  3001               	movlw	1
  3302     0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  3303     0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  3304     0CC2  07CA               	addwf	lcdPrint@n,f
  3305     0CC3  1803               	skipnc
  3306     0CC4  0ACB               	incf	lcdPrint@n+1,f
  3307     0CC5  3000               	movlw	0
  3308     0CC6  07CB               	addwf	lcdPrint@n+1,f
  3309     0CC7                     l2679:
  3310                           
  3311                           ;main.c: 451:     while (str[n] != '\0') {
  3312     0CC7  084A               	movf	lcdPrint@n,w
  3313     0CC8  0745               	addwf	lcdPrint@str,w
  3314     0CC9  00C8               	movwf	??_lcdPrint+1
  3315     0CCA  0846               	movf	lcdPrint@str+1,w
  3316     0CCB  00C7               	movwf	??_lcdPrint
  3317     0CCC  1803               	skipnc
  3318     0CCD  0AC7               	incf	??_lcdPrint,f
  3319     0CCE  1FCA               	btfss	lcdPrint@n,7
  3320     0CCF  2CD1               	goto	u2980
  3321     0CD0  03C7               	decf	??_lcdPrint,f
  3322     0CD1                     u2980:
  3323     0CD1  1283               	bcf	3,5	;RP0=0, select bank0
  3324     0CD2  1303               	bcf	3,6	;RP1=0, select bank0
  3325     0CD3  0847               	movf	??_lcdPrint,w
  3326     0CD4  00C9               	movwf	??_lcdPrint+2
  3327     0CD5  0849               	movf	??_lcdPrint+2,w
  3328     0CD6  00FF               	movwf	btemp+1
  3329     0CD7  0848               	movf	??_lcdPrint+1,w
  3330     0CD8  0084               	movwf	4
  3331     0CD9  120A  118A  274F  120A  158A  	fcall	stringtab
  3332     0CDE  3A00               	xorlw	0
  3333     0CDF  1D03               	skipz
  3334     0CE0  2CE2               	goto	u2991
  3335     0CE1  2CE3               	goto	u2990
  3336     0CE2                     u2991:
  3337     0CE2  2CA1               	goto	l2675
  3338     0CE3                     u2990:
  3339     0CE3                     l259:
  3340     0CE3  0008               	return
  3341     0CE4                     __end_of_lcdPrint:
  3342                           
  3343                           	psect	text5
  3344     0C44                     __ptext5:	
  3345 ;; *************** function _lcdSend *****************
  3346 ;; Defined at:
  3347 ;;		line 428 in file "main.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;  dato            1    wreg     unsigned char 
  3350 ;;  tipo            1    0[BANK0 ] unsigned char 
  3351 ;; Auto vars:     Size  Location     Type
  3352 ;;  dato            1    1[BANK0 ] unsigned char 
  3353 ;; Return value:  Size  Location     Type
  3354 ;;                  1    wreg      void 
  3355 ;; Registers used:
  3356 ;;		wreg, status,2, status,0
  3357 ;; Tracked objects:
  3358 ;;		On entry : 0/0
  3359 ;;		On exit  : 0/0
  3360 ;;		Unchanged: 0/0
  3361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3362 ;;      Params:         0       1       0       0       0
  3363 ;;      Locals:         0       1       0       0       0
  3364 ;;      Temps:          0       0       0       0       0
  3365 ;;      Totals:         0       2       0       0       0
  3366 ;;Total ram usage:        2 bytes
  3367 ;; Hardware stack levels used: 1
  3368 ;; Hardware stack levels required when called: 2
  3369 ;; This function calls:
  3370 ;;		Nothing
  3371 ;; This function is called by:
  3372 ;;		_main
  3373 ;;		_UART_Read2
  3374 ;;		_UART_Read1
  3375 ;;		_initLCD
  3376 ;;		_lcdPrint
  3377 ;; This function uses a non-reentrant model
  3378 ;;
  3379                           
  3380     0C44                     _lcdSend:	
  3381                           ;psect for function _lcdSend
  3382                           
  3383                           
  3384                           ;incstack = 0
  3385                           ; Regs used in _lcdSend: [wreg+status,2+status,0]
  3386                           ;lcdSend@dato stored from wreg
  3387     0C44  1283               	bcf	3,5	;RP0=0, select bank0
  3388     0C45  1303               	bcf	3,6	;RP1=0, select bank0
  3389     0C46  00C4               	movwf	lcdSend@dato
  3390     0C47                     l2605:
  3391                           
  3392                           ;main.c: 432:     TRISD = 0x00;
  3393     0C47  1683               	bsf	3,5	;RP0=1, select bank1
  3394     0C48  1303               	bcf	3,6	;RP1=0, select bank1
  3395     0C49  0188               	clrf	8	;volatile
  3396     0C4A                     l2607:
  3397                           
  3398                           ;main.c: 433:     TRISEbits.TRISE1 = 0;
  3399     0C4A  1089               	bcf	9,1	;volatile
  3400     0C4B                     l2609:
  3401                           
  3402                           ;main.c: 434:     TRISEbits.TRISE2 = 0;
  3403     0C4B  1109               	bcf	9,2	;volatile
  3404     0C4C                     l2611:
  3405                           
  3406                           ;main.c: 439:     PORTEbits.RE1 = 1;
  3407     0C4C  1283               	bcf	3,5	;RP0=0, select bank0
  3408     0C4D  1303               	bcf	3,6	;RP1=0, select bank0
  3409     0C4E  1489               	bsf	9,1	;volatile
  3410     0C4F                     l2613:
  3411                           
  3412                           ;main.c: 441:     PORTD = dato;
  3413     0C4F  0844               	movf	lcdSend@dato,w
  3414     0C50  0088               	movwf	8	;volatile
  3415     0C51                     l2615:
  3416                           
  3417                           ;main.c: 442:     PORTEbits.RE2 = tipo;
  3418     0C51  0C43               	rrf	lcdSend@tipo,w
  3419     0C52  1C03               	skipc
  3420     0C53  1109               	bcf	9,2	;volatile
  3421     0C54  1803               	skipnc
  3422     0C55  1509               	bsf	9,2	;volatile
  3423     0C56                     l2617:
  3424                           
  3425                           ;main.c: 444:     PORTEbits.RE1 = 0;
  3426     0C56  1089               	bcf	9,1	;volatile
  3427     0C57                     l2619:
  3428                           
  3429                           ;main.c: 446:     PORTEbits.RE1 = 1;
  3430     0C57  1489               	bsf	9,1	;volatile
  3431     0C58                     l253:
  3432     0C58  0008               	return
  3433     0C59                     __end_of_lcdSend:
  3434                           
  3435                           	psect	text6
  3436     0E16                     __ptext6:	
  3437 ;; *************** function _intToString *****************
  3438 ;; Defined at:
  3439 ;;		line 663 in file "main.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;  n               2   19[BANK0 ] int 
  3442 ;;  str             1   21[BANK0 ] PTR unsigned char 
  3443 ;;		 -> print_countdown(3), 
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;  t               1   25[BANK0 ] unsigned char 
  3446 ;;  i               1   27[BANK0 ] unsigned char 
  3447 ;;  cifre           1   26[BANK0 ] unsigned char 
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  1    wreg      void 
  3450 ;; Registers used:
  3451 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3457 ;;      Params:         0       3       0       0       0
  3458 ;;      Locals:         0       3       0       0       0
  3459 ;;      Temps:          0       3       0       0       0
  3460 ;;      Totals:         0       9       0       0       0
  3461 ;;Total ram usage:        9 bytes
  3462 ;; Hardware stack levels used: 1
  3463 ;; Hardware stack levels required when called: 4
  3464 ;; This function calls:
  3465 ;;		___awdiv
  3466 ;;		___awmod
  3467 ;;		_potenza
  3468 ;; This function is called by:
  3469 ;;		_UART_Read2
  3470 ;;		_UART_Read1
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           
  3474     0E16                     _intToString:	
  3475                           ;psect for function _intToString
  3476                           
  3477     0E16                     l2689:	
  3478                           ;incstack = 0
  3479                           ; Regs used in _intToString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3480                           
  3481                           
  3482                           ;main.c: 666:     char cifre = 1;
  3483     0E16  1283               	bcf	3,5	;RP0=0, select bank0
  3484     0E17  1303               	bcf	3,6	;RP1=0, select bank0
  3485     0E18  01DD               	clrf	intToString@cifre
  3486     0E19  0ADD               	incf	intToString@cifre,f
  3487     0E1A                     l2691:
  3488                           
  3489                           ;main.c: 669:     while (n / potenza(10, cifre)) cifre++;
  3490     0E1A  2E1F               	goto	l2695
  3491     0E1B                     l2693:
  3492     0E1B  3001               	movlw	1
  3493     0E1C  00D9               	movwf	??_intToString
  3494     0E1D  0859               	movf	??_intToString,w
  3495     0E1E  07DD               	addwf	intToString@cifre,f
  3496     0E1F                     l2695:
  3497     0E1F  085D               	movf	intToString@cifre,w
  3498     0E20  00C7               	movwf	potenza@e
  3499     0E21  300A               	movlw	10
  3500     0E22  120A  158A  2470  120A  158A  	fcall	_potenza
  3501     0E27  1283               	bcf	3,5	;RP0=0, select bank0
  3502     0E28  1303               	bcf	3,6	;RP1=0, select bank0
  3503     0E29  00D9               	movwf	??_intToString
  3504     0E2A  01DA               	clrf	??_intToString+1
  3505     0E2B  0859               	movf	??_intToString,w
  3506     0E2C  00CD               	movwf	___awdiv@divisor
  3507     0E2D  085A               	movf	??_intToString+1,w
  3508     0E2E  00CE               	movwf	___awdiv@divisor+1
  3509     0E2F  0857               	movf	intToString@n+1,w
  3510     0E30  00D0               	movwf	___awdiv@dividend+1
  3511     0E31  0856               	movf	intToString@n,w
  3512     0E32  00CF               	movwf	___awdiv@dividend
  3513     0E33  120A  158A  253F  120A  158A  	fcall	___awdiv
  3514     0E38  1283               	bcf	3,5	;RP0=0, select bank0
  3515     0E39  1303               	bcf	3,6	;RP1=0, select bank0
  3516     0E3A  084D               	movf	?___awdiv,w
  3517     0E3B  044E               	iorwf	?___awdiv+1,w
  3518     0E3C  1D03               	btfss	3,2
  3519     0E3D  2E3F               	goto	u3011
  3520     0E3E  2E40               	goto	u3010
  3521     0E3F                     u3011:
  3522     0E3F  2E1B               	goto	l2693
  3523     0E40                     u3010:
  3524     0E40                     l2697:
  3525                           
  3526                           ;main.c: 671:     for (i = 0; i < cifre; i++) {
  3527     0E40  01DE               	clrf	intToString@i
  3528     0E41  2E84               	goto	l2707
  3529     0E42                     l2699:
  3530                           
  3531                           ;main.c: 672:         char t = potenza(10, cifre - 1 - i);
  3532     0E42  085E               	movf	intToString@i,w
  3533     0E43  025D               	subwf	intToString@cifre,w
  3534     0E44  3EFF               	addlw	255
  3535     0E45  00C7               	movwf	potenza@e
  3536     0E46  300A               	movlw	10
  3537     0E47  120A  158A  2470  120A  158A  	fcall	_potenza
  3538     0E4C  1283               	bcf	3,5	;RP0=0, select bank0
  3539     0E4D  1303               	bcf	3,6	;RP1=0, select bank0
  3540     0E4E  00DC               	movwf	intToString@t
  3541     0E4F                     l2701:
  3542                           
  3543                           ;main.c: 673:         str[i] = '0' + (char) (n / t);
  3544     0E4F  085E               	movf	intToString@i,w
  3545     0E50  0758               	addwf	intToString@str,w
  3546     0E51  00D9               	movwf	??_intToString
  3547     0E52  0859               	movf	??_intToString,w
  3548     0E53  0084               	movwf	4
  3549     0E54  085C               	movf	intToString@t,w
  3550     0E55  00DA               	movwf	??_intToString+1
  3551     0E56  01DB               	clrf	??_intToString+2
  3552     0E57  085A               	movf	??_intToString+1,w
  3553     0E58  00CD               	movwf	___awdiv@divisor
  3554     0E59  085B               	movf	??_intToString+2,w
  3555     0E5A  00CE               	movwf	___awdiv@divisor+1
  3556     0E5B  0857               	movf	intToString@n+1,w
  3557     0E5C  00D0               	movwf	___awdiv@dividend+1
  3558     0E5D  0856               	movf	intToString@n,w
  3559     0E5E  00CF               	movwf	___awdiv@dividend
  3560     0E5F  120A  158A  253F  120A  158A  	fcall	___awdiv
  3561     0E64  1283               	bcf	3,5	;RP0=0, select bank0
  3562     0E65  1303               	bcf	3,6	;RP1=0, select bank0
  3563     0E66  084D               	movf	?___awdiv,w
  3564     0E67  3E30               	addlw	48
  3565     0E68  1383               	bcf	3,7	;select IRP bank0
  3566     0E69  0080               	movwf	0
  3567     0E6A                     l2703:
  3568                           
  3569                           ;main.c: 674:         n = n % t;
  3570     0E6A  085C               	movf	intToString@t,w
  3571     0E6B  00D9               	movwf	??_intToString
  3572     0E6C  01DA               	clrf	??_intToString+1
  3573     0E6D  0859               	movf	??_intToString,w
  3574     0E6E  00C3               	movwf	___awmod@divisor
  3575     0E6F  085A               	movf	??_intToString+1,w
  3576     0E70  00C4               	movwf	___awmod@divisor+1
  3577     0E71  0857               	movf	intToString@n+1,w
  3578     0E72  00C6               	movwf	___awmod@dividend+1
  3579     0E73  0856               	movf	intToString@n,w
  3580     0E74  00C5               	movwf	___awmod@dividend
  3581     0E75  120A  158A  24E4  120A  158A  	fcall	___awmod
  3582     0E7A  1283               	bcf	3,5	;RP0=0, select bank0
  3583     0E7B  1303               	bcf	3,6	;RP1=0, select bank0
  3584     0E7C  0844               	movf	?___awmod+1,w
  3585     0E7D  00D7               	movwf	intToString@n+1
  3586     0E7E  0843               	movf	?___awmod,w
  3587     0E7F  00D6               	movwf	intToString@n
  3588     0E80                     l2705:
  3589                           
  3590                           ;main.c: 675:     }
  3591     0E80  3001               	movlw	1
  3592     0E81  00D9               	movwf	??_intToString
  3593     0E82  0859               	movf	??_intToString,w
  3594     0E83  07DE               	addwf	intToString@i,f
  3595     0E84                     l2707:
  3596     0E84  085D               	movf	intToString@cifre,w
  3597     0E85  025E               	subwf	intToString@i,w
  3598     0E86  1C03               	skipc
  3599     0E87  2E89               	goto	u3021
  3600     0E88  2E8A               	goto	u3020
  3601     0E89                     u3021:
  3602     0E89  2E42               	goto	l2699
  3603     0E8A                     u3020:
  3604     0E8A                     l2709:
  3605                           
  3606                           ;main.c: 677:     str[i] = '\0';
  3607     0E8A  085E               	movf	intToString@i,w
  3608     0E8B  0758               	addwf	intToString@str,w
  3609     0E8C  00D9               	movwf	??_intToString
  3610     0E8D  0859               	movf	??_intToString,w
  3611     0E8E  0084               	movwf	4
  3612     0E8F  1383               	bcf	3,7	;select IRP bank0
  3613     0E90  0180               	clrf	0
  3614     0E91                     l355:
  3615     0E91  0008               	return
  3616     0E92                     __end_of_intToString:
  3617                           
  3618                           	psect	text7
  3619     0C70                     __ptext7:	
  3620 ;; *************** function _potenza *****************
  3621 ;; Defined at:
  3622 ;;		line 655 in file "main.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;  b               1    wreg     unsigned char 
  3625 ;;  e               1    4[BANK0 ] unsigned char 
  3626 ;; Auto vars:     Size  Location     Type
  3627 ;;  b               1    6[BANK0 ] unsigned char 
  3628 ;;  i               2    7[BANK0 ] int 
  3629 ;;  n               1    9[BANK0 ] unsigned char 
  3630 ;; Return value:  Size  Location     Type
  3631 ;;                  1    wreg      unsigned char 
  3632 ;; Registers used:
  3633 ;;		wreg, status,2, status,0, pclath, cstack
  3634 ;; Tracked objects:
  3635 ;;		On entry : 0/0
  3636 ;;		On exit  : 0/0
  3637 ;;		Unchanged: 0/0
  3638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3639 ;;      Params:         0       1       0       0       0
  3640 ;;      Locals:         0       4       0       0       0
  3641 ;;      Temps:          0       1       0       0       0
  3642 ;;      Totals:         0       6       0       0       0
  3643 ;;Total ram usage:        6 bytes
  3644 ;; Hardware stack levels used: 1
  3645 ;; Hardware stack levels required when called: 3
  3646 ;; This function calls:
  3647 ;;		___bmul
  3648 ;; This function is called by:
  3649 ;;		_intToString
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653     0C70                     _potenza:	
  3654                           ;psect for function _potenza
  3655                           
  3656                           
  3657                           ;incstack = 0
  3658                           ; Regs used in _potenza: [wreg+status,2+status,0+pclath+cstack]
  3659                           ;potenza@b stored from wreg
  3660     0C70  1283               	bcf	3,5	;RP0=0, select bank0
  3661     0C71  1303               	bcf	3,6	;RP1=0, select bank0
  3662     0C72  00C9               	movwf	potenza@b
  3663     0C73                     l2621:
  3664                           
  3665                           ;main.c: 656:     char n = 1;
  3666     0C73  01CC               	clrf	potenza@n
  3667     0C74  0ACC               	incf	potenza@n,f
  3668     0C75                     l2623:
  3669                           
  3670                           ;main.c: 657:     for (int i = 0; i < e; i++) {
  3671     0C75  01CA               	clrf	potenza@i
  3672     0C76  01CB               	clrf	potenza@i+1
  3673     0C77  2C8B               	goto	l2629
  3674     0C78                     l2625:
  3675                           
  3676                           ;main.c: 658:         n = n * b;
  3677     0C78  1283               	bcf	3,5	;RP0=0, select bank0
  3678     0C79  1303               	bcf	3,6	;RP1=0, select bank0
  3679     0C7A  0849               	movf	potenza@b,w
  3680     0C7B  00C3               	movwf	___bmul@multiplicand
  3681     0C7C  084C               	movf	potenza@n,w
  3682     0C7D  120A  118A  27E1  120A  158A  	fcall	___bmul
  3683     0C82  1283               	bcf	3,5	;RP0=0, select bank0
  3684     0C83  1303               	bcf	3,6	;RP1=0, select bank0
  3685     0C84  00CC               	movwf	potenza@n
  3686     0C85                     l2627:
  3687                           
  3688                           ;main.c: 659:     }
  3689     0C85  3001               	movlw	1
  3690     0C86  07CA               	addwf	potenza@i,f
  3691     0C87  1803               	skipnc
  3692     0C88  0ACB               	incf	potenza@i+1,f
  3693     0C89  3000               	movlw	0
  3694     0C8A  07CB               	addwf	potenza@i+1,f
  3695     0C8B                     l2629:
  3696     0C8B  084B               	movf	potenza@i+1,w
  3697     0C8C  3A80               	xorlw	128
  3698     0C8D  00C8               	movwf	??_potenza
  3699     0C8E  3080               	movlw	128
  3700     0C8F  0248               	subwf	??_potenza,w
  3701     0C90  1D03               	skipz
  3702     0C91  2C94               	goto	u2875
  3703     0C92  0847               	movf	potenza@e,w
  3704     0C93  024A               	subwf	potenza@i,w
  3705     0C94                     u2875:
  3706     0C94  1C03               	skipc
  3707     0C95  2C97               	goto	u2871
  3708     0C96  2C98               	goto	u2870
  3709     0C97                     u2871:
  3710     0C97  2C78               	goto	l2625
  3711     0C98                     u2870:
  3712     0C98                     l2631:
  3713                           
  3714                           ;main.c: 660:     return n;
  3715     0C98  1283               	bcf	3,5	;RP0=0, select bank0
  3716     0C99  1303               	bcf	3,6	;RP1=0, select bank0
  3717     0C9A  084C               	movf	potenza@n,w
  3718     0C9B                     l346:
  3719     0C9B  0008               	return
  3720     0C9C                     __end_of_potenza:
  3721                           
  3722                           	psect	text8
  3723     07E1                     __ptext8:	
  3724 ;; *************** function ___bmul *****************
  3725 ;; Defined at:
  3726 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;  multiplier      1    wreg     unsigned char 
  3729 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3730 ;; Auto vars:     Size  Location     Type
  3731 ;;  multiplier      1    3[BANK0 ] unsigned char 
  3732 ;;  product         1    2[BANK0 ] unsigned char 
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  1    wreg      unsigned char 
  3735 ;; Registers used:
  3736 ;;		wreg, status,2, status,0
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3742 ;;      Params:         0       1       0       0       0
  3743 ;;      Locals:         0       2       0       0       0
  3744 ;;      Temps:          0       1       0       0       0
  3745 ;;      Totals:         0       4       0       0       0
  3746 ;;Total ram usage:        4 bytes
  3747 ;; Hardware stack levels used: 1
  3748 ;; Hardware stack levels required when called: 2
  3749 ;; This function calls:
  3750 ;;		Nothing
  3751 ;; This function is called by:
  3752 ;;		_potenza
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756     07E1                     ___bmul:	
  3757                           ;psect for function ___bmul
  3758                           
  3759                           
  3760                           ;incstack = 0
  3761                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3762                           ;___bmul@multiplier stored from wreg
  3763     07E1  1283               	bcf	3,5	;RP0=0, select bank0
  3764     07E2  1303               	bcf	3,6	;RP1=0, select bank0
  3765     07E3  00C6               	movwf	___bmul@multiplier
  3766     07E4                     l2591:
  3767     07E4  01C5               	clrf	___bmul@product
  3768     07E5                     l2593:
  3769     07E5  1C46               	btfss	___bmul@multiplier,0
  3770     07E6  2FE8               	goto	u2851
  3771     07E7  2FE9               	goto	u2850
  3772     07E8                     u2851:
  3773     07E8  2FED               	goto	l2597
  3774     07E9                     u2850:
  3775     07E9                     l2595:
  3776     07E9  0843               	movf	___bmul@multiplicand,w
  3777     07EA  00C4               	movwf	??___bmul
  3778     07EB  0844               	movf	??___bmul,w
  3779     07EC  07C5               	addwf	___bmul@product,f
  3780     07ED                     l2597:
  3781     07ED  1003               	clrc
  3782     07EE  0DC3               	rlf	___bmul@multiplicand,f
  3783     07EF                     l2599:
  3784     07EF  1003               	clrc
  3785     07F0  0CC6               	rrf	___bmul@multiplier,f
  3786     07F1  0846               	movf	___bmul@multiplier,w
  3787     07F2  1D03               	btfss	3,2
  3788     07F3  2FF5               	goto	u2861
  3789     07F4  2FF6               	goto	u2860
  3790     07F5                     u2861:
  3791     07F5  2FE5               	goto	l2593
  3792     07F6                     u2860:
  3793     07F6                     l2601:
  3794     07F6  0845               	movf	___bmul@product,w
  3795     07F7                     l467:
  3796     07F7  0008               	return
  3797     07F8                     __end_of___bmul:
  3798                           
  3799                           	psect	text9
  3800     0CE4                     __ptext9:	
  3801 ;; *************** function ___awmod *****************
  3802 ;; Defined at:
  3803 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;  divisor         2    0[BANK0 ] int 
  3806 ;;  dividend        2    2[BANK0 ] int 
  3807 ;; Auto vars:     Size  Location     Type
  3808 ;;  sign            1    6[BANK0 ] unsigned char 
  3809 ;;  counter         1    5[BANK0 ] unsigned char 
  3810 ;; Return value:  Size  Location     Type
  3811 ;;                  2    0[BANK0 ] int 
  3812 ;; Registers used:
  3813 ;;		wreg, status,2, status,0
  3814 ;; Tracked objects:
  3815 ;;		On entry : 0/0
  3816 ;;		On exit  : 0/0
  3817 ;;		Unchanged: 0/0
  3818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3819 ;;      Params:         0       4       0       0       0
  3820 ;;      Locals:         0       2       0       0       0
  3821 ;;      Temps:          0       1       0       0       0
  3822 ;;      Totals:         0       7       0       0       0
  3823 ;;Total ram usage:        7 bytes
  3824 ;; Hardware stack levels used: 1
  3825 ;; Hardware stack levels required when called: 2
  3826 ;; This function calls:
  3827 ;;		Nothing
  3828 ;; This function is called by:
  3829 ;;		_intToString
  3830 ;; This function uses a non-reentrant model
  3831 ;;
  3832                           
  3833     0CE4                     ___awmod:	
  3834                           ;psect for function ___awmod
  3835                           
  3836     0CE4                     l2635:	
  3837                           ;incstack = 0
  3838                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3839                           
  3840     0CE4  1283               	bcf	3,5	;RP0=0, select bank0
  3841     0CE5  1303               	bcf	3,6	;RP1=0, select bank0
  3842     0CE6  01C9               	clrf	___awmod@sign
  3843     0CE7                     l2637:
  3844     0CE7  1FC6               	btfss	___awmod@dividend+1,7
  3845     0CE8  2CEA               	goto	u2881
  3846     0CE9  2CEB               	goto	u2880
  3847     0CEA                     u2881:
  3848     0CEA  2CF2               	goto	l2643
  3849     0CEB                     u2880:
  3850     0CEB                     l2639:
  3851     0CEB  09C5               	comf	___awmod@dividend,f
  3852     0CEC  09C6               	comf	___awmod@dividend+1,f
  3853     0CED  0AC5               	incf	___awmod@dividend,f
  3854     0CEE  1903               	skipnz
  3855     0CEF  0AC6               	incf	___awmod@dividend+1,f
  3856     0CF0                     l2641:
  3857     0CF0  01C9               	clrf	___awmod@sign
  3858     0CF1  0AC9               	incf	___awmod@sign,f
  3859     0CF2                     l2643:
  3860     0CF2  1FC4               	btfss	___awmod@divisor+1,7
  3861     0CF3  2CF5               	goto	u2891
  3862     0CF4  2CF6               	goto	u2890
  3863     0CF5                     u2891:
  3864     0CF5  2CFB               	goto	l2647
  3865     0CF6                     u2890:
  3866     0CF6                     l2645:
  3867     0CF6  09C3               	comf	___awmod@divisor,f
  3868     0CF7  09C4               	comf	___awmod@divisor+1,f
  3869     0CF8  0AC3               	incf	___awmod@divisor,f
  3870     0CF9  1903               	skipnz
  3871     0CFA  0AC4               	incf	___awmod@divisor+1,f
  3872     0CFB                     l2647:
  3873     0CFB  0843               	movf	___awmod@divisor,w
  3874     0CFC  0444               	iorwf	___awmod@divisor+1,w
  3875     0CFD  1903               	btfsc	3,2
  3876     0CFE  2D00               	goto	u2901
  3877     0CFF  2D01               	goto	u2900
  3878     0D00                     u2901:
  3879     0D00  2D30               	goto	l2665
  3880     0D01                     u2900:
  3881     0D01                     l2649:
  3882     0D01  01C8               	clrf	___awmod@counter
  3883     0D02  0AC8               	incf	___awmod@counter,f
  3884     0D03  2D0F               	goto	l2655
  3885     0D04                     l2651:
  3886     0D04  3001               	movlw	1
  3887     0D05                     u2915:
  3888     0D05  1003               	clrc
  3889     0D06  0DC3               	rlf	___awmod@divisor,f
  3890     0D07  0DC4               	rlf	___awmod@divisor+1,f
  3891     0D08  3EFF               	addlw	-1
  3892     0D09  1D03               	skipz
  3893     0D0A  2D05               	goto	u2915
  3894     0D0B                     l2653:
  3895     0D0B  3001               	movlw	1
  3896     0D0C  00C7               	movwf	??___awmod
  3897     0D0D  0847               	movf	??___awmod,w
  3898     0D0E  07C8               	addwf	___awmod@counter,f
  3899     0D0F                     l2655:
  3900     0D0F  1FC4               	btfss	___awmod@divisor+1,7
  3901     0D10  2D12               	goto	u2921
  3902     0D11  2D13               	goto	u2920
  3903     0D12                     u2921:
  3904     0D12  2D04               	goto	l2651
  3905     0D13                     u2920:
  3906     0D13                     l2657:
  3907     0D13  0844               	movf	___awmod@divisor+1,w
  3908     0D14  0246               	subwf	___awmod@dividend+1,w
  3909     0D15  1D03               	skipz
  3910     0D16  2D19               	goto	u2935
  3911     0D17  0843               	movf	___awmod@divisor,w
  3912     0D18  0245               	subwf	___awmod@dividend,w
  3913     0D19                     u2935:
  3914     0D19  1C03               	skipc
  3915     0D1A  2D1C               	goto	u2931
  3916     0D1B  2D1D               	goto	u2930
  3917     0D1C                     u2931:
  3918     0D1C  2D23               	goto	l2661
  3919     0D1D                     u2930:
  3920     0D1D                     l2659:
  3921     0D1D  0843               	movf	___awmod@divisor,w
  3922     0D1E  02C5               	subwf	___awmod@dividend,f
  3923     0D1F  0844               	movf	___awmod@divisor+1,w
  3924     0D20  1C03               	skipc
  3925     0D21  03C6               	decf	___awmod@dividend+1,f
  3926     0D22  02C6               	subwf	___awmod@dividend+1,f
  3927     0D23                     l2661:
  3928     0D23  3001               	movlw	1
  3929     0D24                     u2945:
  3930     0D24  1003               	clrc
  3931     0D25  0CC4               	rrf	___awmod@divisor+1,f
  3932     0D26  0CC3               	rrf	___awmod@divisor,f
  3933     0D27  3EFF               	addlw	-1
  3934     0D28  1D03               	skipz
  3935     0D29  2D24               	goto	u2945
  3936     0D2A                     l2663:
  3937     0D2A  3001               	movlw	1
  3938     0D2B  02C8               	subwf	___awmod@counter,f
  3939     0D2C  1D03               	btfss	3,2
  3940     0D2D  2D2F               	goto	u2951
  3941     0D2E  2D30               	goto	u2950
  3942     0D2F                     u2951:
  3943     0D2F  2D13               	goto	l2657
  3944     0D30                     u2950:
  3945     0D30                     l2665:
  3946     0D30  0849               	movf	___awmod@sign,w
  3947     0D31  1903               	btfsc	3,2
  3948     0D32  2D34               	goto	u2961
  3949     0D33  2D35               	goto	u2960
  3950     0D34                     u2961:
  3951     0D34  2D3A               	goto	l2669
  3952     0D35                     u2960:
  3953     0D35                     l2667:
  3954     0D35  09C5               	comf	___awmod@dividend,f
  3955     0D36  09C6               	comf	___awmod@dividend+1,f
  3956     0D37  0AC5               	incf	___awmod@dividend,f
  3957     0D38  1903               	skipnz
  3958     0D39  0AC6               	incf	___awmod@dividend+1,f
  3959     0D3A                     l2669:
  3960     0D3A  0846               	movf	___awmod@dividend+1,w
  3961     0D3B  00C4               	movwf	?___awmod+1
  3962     0D3C  0845               	movf	___awmod@dividend,w
  3963     0D3D  00C3               	movwf	?___awmod
  3964     0D3E                     l607:
  3965     0D3E  0008               	return
  3966     0D3F                     __end_of___awmod:
  3967                           
  3968                           	psect	text10
  3969     0D3F                     __ptext10:	
  3970 ;; *************** function ___awdiv *****************
  3971 ;; Defined at:
  3972 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  3973 ;; Parameters:    Size  Location     Type
  3974 ;;  divisor         2   10[BANK0 ] int 
  3975 ;;  dividend        2   12[BANK0 ] int 
  3976 ;; Auto vars:     Size  Location     Type
  3977 ;;  quotient        2   17[BANK0 ] int 
  3978 ;;  sign            1   16[BANK0 ] unsigned char 
  3979 ;;  counter         1   15[BANK0 ] unsigned char 
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  2   10[BANK0 ] int 
  3982 ;; Registers used:
  3983 ;;		wreg, status,2, status,0
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3989 ;;      Params:         0       4       0       0       0
  3990 ;;      Locals:         0       4       0       0       0
  3991 ;;      Temps:          0       1       0       0       0
  3992 ;;      Totals:         0       9       0       0       0
  3993 ;;Total ram usage:        9 bytes
  3994 ;; Hardware stack levels used: 1
  3995 ;; Hardware stack levels required when called: 2
  3996 ;; This function calls:
  3997 ;;		Nothing
  3998 ;; This function is called by:
  3999 ;;		_intToString
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           
  4003     0D3F                     ___awdiv:	
  4004                           ;psect for function ___awdiv
  4005                           
  4006     0D3F                     l1813:	
  4007                           ;incstack = 0
  4008                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4009                           
  4010     0D3F  1283               	bcf	3,5	;RP0=0, select bank0
  4011     0D40  1303               	bcf	3,6	;RP1=0, select bank0
  4012     0D41  01D3               	clrf	___awdiv@sign
  4013     0D42                     l1815:
  4014     0D42  1FCE               	btfss	___awdiv@divisor+1,7
  4015     0D43  2D45               	goto	u1461
  4016     0D44  2D46               	goto	u1460
  4017     0D45                     u1461:
  4018     0D45  2D4D               	goto	l1821
  4019     0D46                     u1460:
  4020     0D46                     l1817:
  4021     0D46  09CD               	comf	___awdiv@divisor,f
  4022     0D47  09CE               	comf	___awdiv@divisor+1,f
  4023     0D48  0ACD               	incf	___awdiv@divisor,f
  4024     0D49  1903               	skipnz
  4025     0D4A  0ACE               	incf	___awdiv@divisor+1,f
  4026     0D4B                     l1819:
  4027     0D4B  01D3               	clrf	___awdiv@sign
  4028     0D4C  0AD3               	incf	___awdiv@sign,f
  4029     0D4D                     l1821:
  4030     0D4D  1FD0               	btfss	___awdiv@dividend+1,7
  4031     0D4E  2D50               	goto	u1471
  4032     0D4F  2D51               	goto	u1470
  4033     0D50                     u1471:
  4034     0D50  2D5A               	goto	l1827
  4035     0D51                     u1470:
  4036     0D51                     l1823:
  4037     0D51  09CF               	comf	___awdiv@dividend,f
  4038     0D52  09D0               	comf	___awdiv@dividend+1,f
  4039     0D53  0ACF               	incf	___awdiv@dividend,f
  4040     0D54  1903               	skipnz
  4041     0D55  0AD0               	incf	___awdiv@dividend+1,f
  4042     0D56                     l1825:
  4043     0D56  3001               	movlw	1
  4044     0D57  00D1               	movwf	??___awdiv
  4045     0D58  0851               	movf	??___awdiv,w
  4046     0D59  06D3               	xorwf	___awdiv@sign,f
  4047     0D5A                     l1827:
  4048     0D5A  01D4               	clrf	___awdiv@quotient
  4049     0D5B  01D5               	clrf	___awdiv@quotient+1
  4050     0D5C                     l1829:
  4051     0D5C  084D               	movf	___awdiv@divisor,w
  4052     0D5D  044E               	iorwf	___awdiv@divisor+1,w
  4053     0D5E  1903               	btfsc	3,2
  4054     0D5F  2D61               	goto	u1481
  4055     0D60  2D62               	goto	u1480
  4056     0D61                     u1481:
  4057     0D61  2D99               	goto	l1849
  4058     0D62                     u1480:
  4059     0D62                     l1831:
  4060     0D62  01D2               	clrf	___awdiv@counter
  4061     0D63  0AD2               	incf	___awdiv@counter,f
  4062     0D64  2D70               	goto	l1837
  4063     0D65                     l1833:
  4064     0D65  3001               	movlw	1
  4065     0D66                     u1495:
  4066     0D66  1003               	clrc
  4067     0D67  0DCD               	rlf	___awdiv@divisor,f
  4068     0D68  0DCE               	rlf	___awdiv@divisor+1,f
  4069     0D69  3EFF               	addlw	-1
  4070     0D6A  1D03               	skipz
  4071     0D6B  2D66               	goto	u1495
  4072     0D6C                     l1835:
  4073     0D6C  3001               	movlw	1
  4074     0D6D  00D1               	movwf	??___awdiv
  4075     0D6E  0851               	movf	??___awdiv,w
  4076     0D6F  07D2               	addwf	___awdiv@counter,f
  4077     0D70                     l1837:
  4078     0D70  1FCE               	btfss	___awdiv@divisor+1,7
  4079     0D71  2D73               	goto	u1501
  4080     0D72  2D74               	goto	u1500
  4081     0D73                     u1501:
  4082     0D73  2D65               	goto	l1833
  4083     0D74                     u1500:
  4084     0D74                     l1839:
  4085     0D74  3001               	movlw	1
  4086     0D75                     u1515:
  4087     0D75  1003               	clrc
  4088     0D76  0DD4               	rlf	___awdiv@quotient,f
  4089     0D77  0DD5               	rlf	___awdiv@quotient+1,f
  4090     0D78  3EFF               	addlw	-1
  4091     0D79  1D03               	skipz
  4092     0D7A  2D75               	goto	u1515
  4093     0D7B  084E               	movf	___awdiv@divisor+1,w
  4094     0D7C  0250               	subwf	___awdiv@dividend+1,w
  4095     0D7D  1D03               	skipz
  4096     0D7E  2D81               	goto	u1525
  4097     0D7F  084D               	movf	___awdiv@divisor,w
  4098     0D80  024F               	subwf	___awdiv@dividend,w
  4099     0D81                     u1525:
  4100     0D81  1C03               	skipc
  4101     0D82  2D84               	goto	u1521
  4102     0D83  2D85               	goto	u1520
  4103     0D84                     u1521:
  4104     0D84  2D8C               	goto	l1845
  4105     0D85                     u1520:
  4106     0D85                     l1841:
  4107     0D85  084D               	movf	___awdiv@divisor,w
  4108     0D86  02CF               	subwf	___awdiv@dividend,f
  4109     0D87  084E               	movf	___awdiv@divisor+1,w
  4110     0D88  1C03               	skipc
  4111     0D89  03D0               	decf	___awdiv@dividend+1,f
  4112     0D8A  02D0               	subwf	___awdiv@dividend+1,f
  4113     0D8B                     l1843:
  4114     0D8B  1454               	bsf	___awdiv@quotient,0
  4115     0D8C                     l1845:
  4116     0D8C  3001               	movlw	1
  4117     0D8D                     u1535:
  4118     0D8D  1003               	clrc
  4119     0D8E  0CCE               	rrf	___awdiv@divisor+1,f
  4120     0D8F  0CCD               	rrf	___awdiv@divisor,f
  4121     0D90  3EFF               	addlw	-1
  4122     0D91  1D03               	skipz
  4123     0D92  2D8D               	goto	u1535
  4124     0D93                     l1847:
  4125     0D93  3001               	movlw	1
  4126     0D94  02D2               	subwf	___awdiv@counter,f
  4127     0D95  1D03               	btfss	3,2
  4128     0D96  2D98               	goto	u1541
  4129     0D97  2D99               	goto	u1540
  4130     0D98                     u1541:
  4131     0D98  2D74               	goto	l1839
  4132     0D99                     u1540:
  4133     0D99                     l1849:
  4134     0D99  0853               	movf	___awdiv@sign,w
  4135     0D9A  1903               	btfsc	3,2
  4136     0D9B  2D9D               	goto	u1551
  4137     0D9C  2D9E               	goto	u1550
  4138     0D9D                     u1551:
  4139     0D9D  2DA3               	goto	l1853
  4140     0D9E                     u1550:
  4141     0D9E                     l1851:
  4142     0D9E  09D4               	comf	___awdiv@quotient,f
  4143     0D9F  09D5               	comf	___awdiv@quotient+1,f
  4144     0DA0  0AD4               	incf	___awdiv@quotient,f
  4145     0DA1  1903               	skipnz
  4146     0DA2  0AD5               	incf	___awdiv@quotient+1,f
  4147     0DA3                     l1853:
  4148     0DA3  0855               	movf	___awdiv@quotient+1,w
  4149     0DA4  00CE               	movwf	?___awdiv+1
  4150     0DA5  0854               	movf	___awdiv@quotient,w
  4151     0DA6  00CD               	movwf	?___awdiv
  4152     0DA7                     l594:
  4153     0DA7  0008               	return
  4154     0DA8                     __end_of___awdiv:
  4155                           
  4156                           	psect	text11
  4157     0C19                     __ptext11:	
  4158 ;; *************** function _UART_Write *****************
  4159 ;; Defined at:
  4160 ;;		line 231 in file "main.c"
  4161 ;; Parameters:    Size  Location     Type
  4162 ;;  data            1    wreg     unsigned char 
  4163 ;; Auto vars:     Size  Location     Type
  4164 ;;  data            1    0[BANK0 ] unsigned char 
  4165 ;; Return value:  Size  Location     Type
  4166 ;;                  1    wreg      void 
  4167 ;; Registers used:
  4168 ;;		wreg
  4169 ;; Tracked objects:
  4170 ;;		On entry : 0/0
  4171 ;;		On exit  : 0/0
  4172 ;;		Unchanged: 0/0
  4173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4174 ;;      Params:         0       0       0       0       0
  4175 ;;      Locals:         0       1       0       0       0
  4176 ;;      Temps:          0       0       0       0       0
  4177 ;;      Totals:         0       1       0       0       0
  4178 ;;Total ram usage:        1 bytes
  4179 ;; Hardware stack levels used: 1
  4180 ;; Hardware stack levels required when called: 2
  4181 ;; This function calls:
  4182 ;;		Nothing
  4183 ;; This function is called by:
  4184 ;;		_main
  4185 ;;		_UART_Read1
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189     0C19                     _UART_Write:	
  4190                           ;psect for function _UART_Write
  4191                           
  4192                           
  4193                           ;incstack = 0
  4194                           ; Regs used in _UART_Write: [wreg]
  4195                           ;UART_Write@data stored from wreg
  4196     0C19  1283               	bcf	3,5	;RP0=0, select bank0
  4197     0C1A  1303               	bcf	3,6	;RP1=0, select bank0
  4198     0C1B  00C3               	movwf	UART_Write@data
  4199     0C1C                     l2683:
  4200     0C1C                     l201:	
  4201                           ;main.c: 232:     while (!TXIF)
  4202                           
  4203                           
  4204                           ;main.c: 232:     while (!TXIF)
  4205     0C1C  1E0C               	btfss	12,4	;volatile
  4206     0C1D  2C1F               	goto	u3001
  4207     0C1E  2C20               	goto	u3000
  4208     0C1F                     u3001:
  4209     0C1F  2C1C               	goto	l201
  4210     0C20                     u3000:
  4211     0C20                     l2685:
  4212                           
  4213                           ;main.c: 234:     TXREG = data;
  4214     0C20  0843               	movf	UART_Write@data,w
  4215     0C21  0099               	movwf	25	;volatile
  4216     0C22                     l204:
  4217     0C22  0008               	return
  4218     0C23                     __end_of_UART_Write:
  4219                           
  4220                           	psect	text12
  4221     0C14                     __ptext12:	
  4222 ;; *************** function _RS485_TxEnable *****************
  4223 ;; Defined at:
  4224 ;;		line 221 in file "main.c"
  4225 ;; Parameters:    Size  Location     Type
  4226 ;;		None
  4227 ;; Auto vars:     Size  Location     Type
  4228 ;;		None
  4229 ;; Return value:  Size  Location     Type
  4230 ;;                  1    wreg      void 
  4231 ;; Registers used:
  4232 ;;		None
  4233 ;; Tracked objects:
  4234 ;;		On entry : 0/0
  4235 ;;		On exit  : 0/0
  4236 ;;		Unchanged: 0/0
  4237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4238 ;;      Params:         0       0       0       0       0
  4239 ;;      Locals:         0       0       0       0       0
  4240 ;;      Temps:          0       0       0       0       0
  4241 ;;      Totals:         0       0       0       0       0
  4242 ;;Total ram usage:        0 bytes
  4243 ;; Hardware stack levels used: 1
  4244 ;; Hardware stack levels required when called: 2
  4245 ;; This function calls:
  4246 ;;		Nothing
  4247 ;; This function is called by:
  4248 ;;		_main
  4249 ;;		_UART_Read1
  4250 ;; This function uses a non-reentrant model
  4251 ;;
  4252                           
  4253     0C14                     _RS485_TxEnable:	
  4254                           ;psect for function _RS485_TxEnable
  4255                           
  4256     0C14                     l2681:	
  4257                           ;incstack = 0
  4258                           ; Regs used in _RS485_TxEnable: []
  4259                           
  4260                           
  4261                           ;main.c: 222:     RC0 = 1;
  4262     0C14  1283               	bcf	3,5	;RP0=0, select bank0
  4263     0C15  1303               	bcf	3,6	;RP1=0, select bank0
  4264     0C16  1407               	bsf	7,0	;volatile
  4265                           
  4266                           ;main.c: 223:     RC1 = 0;
  4267     0C17  1087               	bcf	7,1	;volatile
  4268     0C18                     l195:
  4269     0C18  0008               	return
  4270     0C19                     __end_of_RS485_TxEnable:
  4271                           
  4272                           	psect	text13
  4273     0C0F                     __ptext13:	
  4274 ;; *************** function _RS485_RxEnable *****************
  4275 ;; Defined at:
  4276 ;;		line 226 in file "main.c"
  4277 ;; Parameters:    Size  Location     Type
  4278 ;;		None
  4279 ;; Auto vars:     Size  Location     Type
  4280 ;;		None
  4281 ;; Return value:  Size  Location     Type
  4282 ;;                  1    wreg      void 
  4283 ;; Registers used:
  4284 ;;		None
  4285 ;; Tracked objects:
  4286 ;;		On entry : 0/0
  4287 ;;		On exit  : 0/0
  4288 ;;		Unchanged: 0/0
  4289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4290 ;;      Params:         0       0       0       0       0
  4291 ;;      Locals:         0       0       0       0       0
  4292 ;;      Temps:          0       0       0       0       0
  4293 ;;      Totals:         0       0       0       0       0
  4294 ;;Total ram usage:        0 bytes
  4295 ;; Hardware stack levels used: 1
  4296 ;; Hardware stack levels required when called: 2
  4297 ;; This function calls:
  4298 ;;		Nothing
  4299 ;; This function is called by:
  4300 ;;		_main
  4301 ;;		_UART_Read1
  4302 ;; This function uses a non-reentrant model
  4303 ;;
  4304                           
  4305     0C0F                     _RS485_RxEnable:	
  4306                           ;psect for function _RS485_RxEnable
  4307                           
  4308     0C0F                     l2687:	
  4309                           ;incstack = 0
  4310                           ; Regs used in _RS485_RxEnable: []
  4311                           
  4312                           
  4313                           ;main.c: 227:     RC0 = 0;
  4314     0C0F  1283               	bcf	3,5	;RP0=0, select bank0
  4315     0C10  1303               	bcf	3,6	;RP1=0, select bank0
  4316     0C11  1007               	bcf	7,0	;volatile
  4317                           
  4318                           ;main.c: 228:     RC1 = 1;
  4319     0C12  1487               	bsf	7,1	;volatile
  4320     0C13                     l198:
  4321     0C13  0008               	return
  4322     0C14                     __end_of_RS485_RxEnable:
  4323                           
  4324                           	psect	text14
  4325     0C32                     __ptext14:	
  4326 ;; *************** function _UART_Init *****************
  4327 ;; Defined at:
  4328 ;;		line 203 in file "main.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;		None
  4331 ;; Auto vars:     Size  Location     Type
  4332 ;;		None
  4333 ;; Return value:  Size  Location     Type
  4334 ;;                  1    wreg      void 
  4335 ;; Registers used:
  4336 ;;		wreg
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4342 ;;      Params:         0       0       0       0       0
  4343 ;;      Locals:         0       0       0       0       0
  4344 ;;      Temps:          0       0       0       0       0
  4345 ;;      Totals:         0       0       0       0       0
  4346 ;;Total ram usage:        0 bytes
  4347 ;; Hardware stack levels used: 1
  4348 ;; Hardware stack levels required when called: 2
  4349 ;; This function calls:
  4350 ;;		Nothing
  4351 ;; This function is called by:
  4352 ;;		_main
  4353 ;; This function uses a non-reentrant model
  4354 ;;
  4355                           
  4356     0C32                     _UART_Init:	
  4357                           ;psect for function _UART_Init
  4358                           
  4359     0C32                     l2711:	
  4360                           ;incstack = 0
  4361                           ; Regs used in _UART_Init: [wreg]
  4362                           
  4363                           
  4364                           ;main.c: 205:     TRISC6 = 0;
  4365     0C32  1683               	bsf	3,5	;RP0=1, select bank1
  4366     0C33  1303               	bcf	3,6	;RP1=0, select bank1
  4367     0C34  1307               	bcf	7,6	;volatile
  4368                           
  4369                           ;main.c: 206:     TRISC7 = 1;
  4370     0C35  1787               	bsf	7,7	;volatile
  4371                           
  4372                           ;main.c: 209:     BRGH = 1;
  4373     0C36  1518               	bsf	24,2	;volatile
  4374     0C37                     l2713:
  4375                           
  4376                           ;main.c: 210:     SPBRG = 51;
  4377     0C37  3033               	movlw	51
  4378     0C38  0099               	movwf	25	;volatile
  4379     0C39                     l2715:
  4380                           
  4381                           ;main.c: 213:     SYNC = 0;
  4382     0C39  1218               	bcf	24,4	;volatile
  4383     0C3A                     l2717:
  4384                           
  4385                           ;main.c: 214:     SPEN = 1;
  4386     0C3A  1283               	bcf	3,5	;RP0=0, select bank0
  4387     0C3B  1303               	bcf	3,6	;RP1=0, select bank0
  4388     0C3C  1798               	bsf	24,7	;volatile
  4389     0C3D                     l2719:
  4390                           
  4391                           ;main.c: 217:     TXEN = 1;
  4392     0C3D  1683               	bsf	3,5	;RP0=1, select bank1
  4393     0C3E  1303               	bcf	3,6	;RP1=0, select bank1
  4394     0C3F  1698               	bsf	24,5	;volatile
  4395     0C40                     l2721:
  4396                           
  4397                           ;main.c: 218:     CREN = 1;
  4398     0C40  1283               	bcf	3,5	;RP0=0, select bank0
  4399     0C41  1303               	bcf	3,6	;RP1=0, select bank0
  4400     0C42  1618               	bsf	24,4	;volatile
  4401     0C43                     l192:
  4402     0C43  0008               	return
  4403     0C44                     __end_of_UART_Init:
  4404                           
  4405                           	psect	text15
  4406     0C23                     __ptext15:	
  4407 ;; *************** function _Timer0_Init *****************
  4408 ;; Defined at:
  4409 ;;		line 548 in file "main.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;		None
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;		None
  4414 ;; Return value:  Size  Location     Type
  4415 ;;                  1    wreg      void 
  4416 ;; Registers used:
  4417 ;;		wreg
  4418 ;; Tracked objects:
  4419 ;;		On entry : 0/0
  4420 ;;		On exit  : 0/0
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4423 ;;      Params:         0       0       0       0       0
  4424 ;;      Locals:         0       0       0       0       0
  4425 ;;      Temps:          0       0       0       0       0
  4426 ;;      Totals:         0       0       0       0       0
  4427 ;;Total ram usage:        0 bytes
  4428 ;; Hardware stack levels used: 1
  4429 ;; Hardware stack levels required when called: 2
  4430 ;; This function calls:
  4431 ;;		Nothing
  4432 ;; This function is called by:
  4433 ;;		_main
  4434 ;; This function uses a non-reentrant model
  4435 ;;
  4436                           
  4437     0C23                     _Timer0_Init:	
  4438                           ;psect for function _Timer0_Init
  4439                           
  4440     0C23                     l2747:	
  4441                           ;incstack = 0
  4442                           ; Regs used in _Timer0_Init: [wreg]
  4443                           
  4444                           
  4445                           ;main.c: 550:     T0CS = 0;
  4446     0C23  1683               	bsf	3,5	;RP0=1, select bank1
  4447     0C24  1303               	bcf	3,6	;RP1=0, select bank1
  4448     0C25  1281               	bcf	1,5	;volatile
  4449                           
  4450                           ;main.c: 551:     PSA = 0;
  4451     0C26  1181               	bcf	1,3	;volatile
  4452                           
  4453                           ;main.c: 552:     PS2 = 1;
  4454     0C27  1501               	bsf	1,2	;volatile
  4455                           
  4456                           ;main.c: 553:     PS1 = 1;
  4457     0C28  1481               	bsf	1,1	;volatile
  4458                           
  4459                           ;main.c: 554:     PS0 = 1;
  4460     0C29  1401               	bsf	1,0	;volatile
  4461     0C2A                     l2749:
  4462                           
  4463                           ;main.c: 557:     TMR0 = 6;
  4464     0C2A  3006               	movlw	6
  4465     0C2B  1283               	bcf	3,5	;RP0=0, select bank0
  4466     0C2C  1303               	bcf	3,6	;RP1=0, select bank0
  4467     0C2D  0081               	movwf	1	;volatile
  4468     0C2E                     l2751:
  4469                           
  4470                           ;main.c: 558:     TMR0IF = 0;
  4471     0C2E  110B               	bcf	11,2	;volatile
  4472     0C2F                     l2753:
  4473                           
  4474                           ;main.c: 559:     TMR0IE = 1;
  4475     0C2F  168B               	bsf	11,5	;volatile
  4476     0C30                     l2755:
  4477                           
  4478                           ;main.c: 560:     GIE = 1;
  4479     0C30  178B               	bsf	11,7	;volatile
  4480     0C31                     l321:
  4481     0C31  0008               	return
  4482     0C32                     __end_of_Timer0_Init:
  4483                           
  4484                           	psect	text16
  4485     0E92                     __ptext16:	
  4486 ;; *************** function _KeyPadReader *****************
  4487 ;; Defined at:
  4488 ;;		line 573 in file "main.c"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;		None
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;		None
  4493 ;; Return value:  Size  Location     Type
  4494 ;;                  1    wreg      unsigned char 
  4495 ;; Registers used:
  4496 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4497 ;; Tracked objects:
  4498 ;;		On entry : 0/0
  4499 ;;		On exit  : 0/0
  4500 ;;		Unchanged: 0/0
  4501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4502 ;;      Params:         0       0       0       0       0
  4503 ;;      Locals:         0       0       0       0       0
  4504 ;;      Temps:          0       2       0       0       0
  4505 ;;      Totals:         0       2       0       0       0
  4506 ;;Total ram usage:        2 bytes
  4507 ;; Hardware stack levels used: 2
  4508 ;; Hardware stack levels required when called: 2
  4509 ;; This function calls:
  4510 ;;		Nothing
  4511 ;; This function is called by:
  4512 ;;		_main
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516     0E92                     _KeyPadReader:	
  4517                           ;psect for function _KeyPadReader
  4518                           
  4519     0E92                     l2769:	
  4520                           ;incstack = 0
  4521                           ; Regs used in _KeyPadReader: [wreg-fsr0h+status,2+status,0+pclath]
  4522                           
  4523                           
  4524                           ;main.c: 574:     TRISD |= 0x0F;
  4525     0E92  300F               	movlw	15
  4526     0E93  1283               	bcf	3,5	;RP0=0, select bank0
  4527     0E94  1303               	bcf	3,6	;RP1=0, select bank0
  4528     0E95  00C3               	movwf	??_KeyPadReader
  4529     0E96  0843               	movf	??_KeyPadReader,w
  4530     0E97  1683               	bsf	3,5	;RP0=1, select bank1
  4531     0E98  1303               	bcf	3,6	;RP1=0, select bank1
  4532     0E99  0488               	iorwf	8,f	;volatile
  4533     0E9A                     l2771:
  4534                           
  4535                           ;main.c: 577:     for (colScan = 0; colScan < 3; colScan++) {
  4536     0E9A  01F7               	clrf	_colScan
  4537     0E9B                     l2773:
  4538     0E9B  3003               	movlw	3
  4539     0E9C  0277               	subwf	_colScan,w
  4540     0E9D  1C03               	skipc
  4541     0E9E  2EA0               	goto	u3041
  4542     0E9F  2EA1               	goto	u3040
  4543     0EA0                     u3041:
  4544     0EA0  2EA2               	goto	l2777
  4545     0EA1                     u3040:
  4546     0EA1  2E9A               	goto	l2771
  4547     0EA2                     l2777:
  4548                           
  4549                           ;main.c: 578:         PORTB = PORTB | 0x07;
  4550     0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  4551     0EA3  1303               	bcf	3,6	;RP1=0, select bank0
  4552     0EA4  0806               	movf	6,w	;volatile
  4553     0EA5  3807               	iorlw	7
  4554     0EA6  0086               	movwf	6	;volatile
  4555     0EA7                     l2779:
  4556                           
  4557                           ;main.c: 579:         PORTB &= colMask[colScan];
  4558     0EA7  0877               	movf	_colScan,w
  4559     0EA8  3E11               	addlw	low ((_colMask-__stringbase)| (0+32768))
  4560     0EA9  0084               	movwf	4
  4561     0EAA  120A  118A  2759  120A  158A  	fcall	stringdir
  4562     0EAF  00C3               	movwf	??_KeyPadReader
  4563     0EB0  0843               	movf	??_KeyPadReader,w
  4564     0EB1  0586               	andwf	6,f	;volatile
  4565     0EB2                     l2781:
  4566                           
  4567                           ;main.c: 582:         for (rowScan = 0; rowScan < 4; rowScan++) {
  4568     0EB2  01F6               	clrf	_rowScan
  4569     0EB3                     l2783:
  4570     0EB3  3004               	movlw	4
  4571     0EB4  0276               	subwf	_rowScan,w
  4572     0EB5  1C03               	skipc
  4573     0EB6  2EB8               	goto	u3051
  4574     0EB7  2EB9               	goto	u3050
  4575     0EB8                     u3051:
  4576     0EB8  2EBA               	goto	l2787
  4577     0EB9                     u3050:
  4578     0EB9  2F19               	goto	l2819
  4579     0EBA                     l2787:
  4580                           
  4581                           ;main.c: 583:             if (!(PORTD & rowMask[rowScan]) && (old_btn)) {
  4582     0EBA  0876               	movf	_rowScan,w
  4583     0EBB  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  4584     0EBC  0084               	movwf	4
  4585     0EBD  120A  118A  2759  120A  158A  	fcall	stringdir
  4586     0EC2  0508               	andwf	8,w	;volatile
  4587     0EC3  1D03               	btfss	3,2
  4588     0EC4  2EC6               	goto	u3061
  4589     0EC5  2EC7               	goto	u3060
  4590     0EC6                     u3061:
  4591     0EC6  2ED0               	goto	l2795
  4592     0EC7                     u3060:
  4593     0EC7                     l2789:
  4594     0EC7  1C78               	btfss	_old_btn/(0+8),_old_btn& (0+7)
  4595     0EC8  2ECA               	goto	u3071
  4596     0EC9  2ECB               	goto	u3070
  4597     0ECA                     u3071:
  4598     0ECA  2ED0               	goto	l2795
  4599     0ECB                     u3070:
  4600     0ECB                     l2791:
  4601                           
  4602                           ;main.c: 584:                 old_btn = 0;
  4603     0ECB  1078               	bcf	_old_btn/(0+8),_old_btn& (0+7)
  4604     0ECC                     l2793:
  4605                           
  4606                           ;main.c: 585:                 stato++;
  4607     0ECC  3001               	movlw	1
  4608     0ECD  00C3               	movwf	??_KeyPadReader
  4609     0ECE  0843               	movf	??_KeyPadReader,w
  4610     0ECF  07F5               	addwf	_stato,f
  4611     0ED0                     l2795:
  4612                           
  4613                           ;main.c: 587:             if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  4614     0ED0  0876               	movf	_rowScan,w
  4615     0ED1  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  4616     0ED2  0084               	movwf	4
  4617     0ED3  120A  118A  2759  120A  158A  	fcall	stringdir
  4618     0ED8  0508               	andwf	8,w	;volatile
  4619     0ED9  1903               	btfsc	3,2
  4620     0EDA  2EDC               	goto	u3081
  4621     0EDB  2EDD               	goto	u3080
  4622     0EDC                     u3081:
  4623     0EDC  2F00               	goto	l2807
  4624     0EDD                     u3080:
  4625     0EDD                     l2797:
  4626     0EDD  1878               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  4627     0EDE  2EE0               	goto	u3091
  4628     0EDF  2EE1               	goto	u3090
  4629     0EE0                     u3091:
  4630     0EE0  2F00               	goto	l2807
  4631     0EE1                     u3090:
  4632     0EE1                     l2799:
  4633                           
  4634                           ;main.c: 588:                 _delay((unsigned long)((10)*(20000000/4000.0)));
  4635     0EE1  3041               	movlw	65
  4636     0EE2  1283               	bcf	3,5	;RP0=0, select bank0
  4637     0EE3  1303               	bcf	3,6	;RP1=0, select bank0
  4638     0EE4  00C4               	movwf	??_KeyPadReader+1
  4639     0EE5  30ED               	movlw	237
  4640     0EE6  00C3               	movwf	??_KeyPadReader
  4641     0EE7                     u4037:
  4642     0EE7  0BC3               	decfsz	??_KeyPadReader,f
  4643     0EE8  2EE7               	goto	u4037
  4644     0EE9  0BC4               	decfsz	??_KeyPadReader+1,f
  4645     0EEA  2EE7               	goto	u4037
  4646     0EEB  2EEC               	nop2
  4647     0EEC                     l2801:
  4648                           
  4649                           ;main.c: 589:                 if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  4650     0EEC  0876               	movf	_rowScan,w
  4651     0EED  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  4652     0EEE  0084               	movwf	4
  4653     0EEF  120A  118A  2759  120A  158A  	fcall	stringdir
  4654     0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  4655     0EF5  1303               	bcf	3,6	;RP1=0, select bank0
  4656     0EF6  0508               	andwf	8,w	;volatile
  4657     0EF7  1903               	btfsc	3,2
  4658     0EF8  2EFA               	goto	u3101
  4659     0EF9  2EFB               	goto	u3100
  4660     0EFA                     u3101:
  4661     0EFA  2F00               	goto	l2807
  4662     0EFB                     u3100:
  4663     0EFB                     l2803:
  4664     0EFB  1878               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  4665     0EFC  2EFE               	goto	u3111
  4666     0EFD  2EFF               	goto	u3110
  4667     0EFE                     u3111:
  4668     0EFE  2F00               	goto	l2807
  4669     0EFF                     u3110:
  4670     0EFF                     l2805:
  4671                           
  4672                           ;main.c: 590:                     old_btn = 1;
  4673     0EFF  1478               	bsf	_old_btn/(0+8),_old_btn& (0+7)
  4674     0F00                     l2807:
  4675                           
  4676                           ;main.c: 593:             if (stato != old_stato) {
  4677     0F00  0875               	movf	_stato,w
  4678     0F01  0638               	xorwf	_old_stato,w
  4679     0F02  1903               	skipnz
  4680     0F03  2F05               	goto	u3121
  4681     0F04  2F06               	goto	u3120
  4682     0F05                     u3121:
  4683     0F05  2F14               	goto	l2815
  4684     0F06                     u3120:
  4685     0F06                     l2809:
  4686                           
  4687                           ;main.c: 594:                 keypressed = rowScan + (4 * colScan);
  4688     0F06  0877               	movf	_colScan,w
  4689     0F07  00C3               	movwf	??_KeyPadReader
  4690     0F08  3002               	movlw	2
  4691     0F09                     u3135:
  4692     0F09  1003               	clrc
  4693     0F0A  0DC3               	rlf	??_KeyPadReader,f
  4694     0F0B  3EFF               	addlw	-1
  4695     0F0C  1D03               	skipz
  4696     0F0D  2F09               	goto	u3135
  4697     0F0E  0876               	movf	_rowScan,w
  4698     0F0F  0743               	addwf	??_KeyPadReader,w
  4699     0F10  00BA               	movwf	_keypressed
  4700     0F11                     l2811:
  4701                           
  4702                           ;main.c: 597:                 old_stato = stato;
  4703     0F11  0875               	movf	_stato,w
  4704     0F12  00B8               	movwf	_old_stato
  4705     0F13  2F1E               	goto	l339
  4706     0F14                     l2815:
  4707                           
  4708                           ;main.c: 600:         }
  4709     0F14  3001               	movlw	1
  4710     0F15  00C3               	movwf	??_KeyPadReader
  4711     0F16  0843               	movf	??_KeyPadReader,w
  4712     0F17  07F6               	addwf	_rowScan,f
  4713     0F18  2EB3               	goto	l2783
  4714     0F19                     l2819:
  4715                           
  4716                           ;main.c: 601:     }
  4717     0F19  3001               	movlw	1
  4718     0F1A  00C3               	movwf	??_KeyPadReader
  4719     0F1B  0843               	movf	??_KeyPadReader,w
  4720     0F1C  07F7               	addwf	_colScan,f
  4721     0F1D  2E9B               	goto	l2773
  4722     0F1E                     l339:
  4723     0F1E  0008               	return
  4724     0F1F                     __end_of_KeyPadReader:
  4725                           
  4726                           	psect	text17
  4727     0C59                     __ptext17:	
  4728 ;; *************** function _GenerateRandomNumber *****************
  4729 ;; Defined at:
  4730 ;;		line 563 in file "main.c"
  4731 ;; Parameters:    Size  Location     Type
  4732 ;;		None
  4733 ;; Auto vars:     Size  Location     Type
  4734 ;;  count           2    1[BANK0 ] unsigned int 
  4735 ;;  randomNum       1    0[BANK0 ] unsigned char 
  4736 ;; Return value:  Size  Location     Type
  4737 ;;                  1    wreg      unsigned char 
  4738 ;; Registers used:
  4739 ;;		wreg, status,2, status,0
  4740 ;; Tracked objects:
  4741 ;;		On entry : 0/0
  4742 ;;		On exit  : 0/0
  4743 ;;		Unchanged: 0/0
  4744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4745 ;;      Params:         0       0       0       0       0
  4746 ;;      Locals:         0       3       0       0       0
  4747 ;;      Temps:          0       0       0       0       0
  4748 ;;      Totals:         0       3       0       0       0
  4749 ;;Total ram usage:        3 bytes
  4750 ;; Hardware stack levels used: 1
  4751 ;; Hardware stack levels required when called: 2
  4752 ;; This function calls:
  4753 ;;		Nothing
  4754 ;; This function is called by:
  4755 ;;		_main
  4756 ;; This function uses a non-reentrant model
  4757 ;;
  4758                           
  4759     0C59                     _GenerateRandomNumber:	
  4760                           ;psect for function _GenerateRandomNumber
  4761                           
  4762     0C59                     l2757:	
  4763                           ;incstack = 0
  4764                           ; Regs used in _GenerateRandomNumber: [wreg+status,2+status,0]
  4765                           
  4766                           
  4767                           ;main.c: 564:     unsigned int count = 0;
  4768     0C59  1283               	bcf	3,5	;RP0=0, select bank0
  4769     0C5A  1303               	bcf	3,6	;RP1=0, select bank0
  4770     0C5B  01C4               	clrf	GenerateRandomNumber@count
  4771     0C5C  01C5               	clrf	GenerateRandomNumber@count+1
  4772                           
  4773                           ;main.c: 565:     while (count != 186){
  4774     0C5D  2C64               	goto	l2761
  4775     0C5E                     l2759:
  4776                           
  4777                           ;main.c: 566:         count++;
  4778     0C5E  3001               	movlw	1
  4779     0C5F  07C4               	addwf	GenerateRandomNumber@count,f
  4780     0C60  1803               	skipnc
  4781     0C61  0AC5               	incf	GenerateRandomNumber@count+1,f
  4782     0C62  3000               	movlw	0
  4783     0C63  07C5               	addwf	GenerateRandomNumber@count+1,f
  4784     0C64                     l2761:
  4785                           
  4786                           ;main.c: 565:     while (count != 186){
  4787     0C64  30BA               	movlw	186
  4788     0C65  0644               	xorwf	GenerateRandomNumber@count,w
  4789     0C66  0445               	iorwf	GenerateRandomNumber@count+1,w
  4790     0C67  1D03               	btfss	3,2
  4791     0C68  2C6A               	goto	u3031
  4792     0C69  2C6B               	goto	u3030
  4793     0C6A                     u3031:
  4794     0C6A  2C5E               	goto	l2759
  4795     0C6B                     u3030:
  4796     0C6B                     l2763:
  4797                           
  4798                           ;main.c: 568:     unsigned char randomNum = TMR0;
  4799     0C6B  0801               	movf	1,w	;volatile
  4800     0C6C  00C3               	movwf	GenerateRandomNumber@randomNum
  4801     0C6D                     l2765:
  4802                           
  4803                           ;main.c: 569:     TMR0IF = 0;
  4804     0C6D  110B               	bcf	11,2	;volatile
  4805                           
  4806                           ;main.c: 570:     return randomNum;
  4807     0C6E  0843               	movf	GenerateRandomNumber@randomNum,w
  4808     0C6F                     l327:
  4809     0C6F  0008               	return
  4810     0C70                     __end_of_GenerateRandomNumber:
  4811                           
  4812                           	psect	text18
  4813     0F1F                     __ptext18:	
  4814 ;; *************** function _ISR *****************
  4815 ;; Defined at:
  4816 ;;		line 456 in file "main.c"
  4817 ;; Parameters:    Size  Location     Type
  4818 ;;		None
  4819 ;; Auto vars:     Size  Location     Type
  4820 ;;		None
  4821 ;; Return value:  Size  Location     Type
  4822 ;;                  1    wreg      void 
  4823 ;; Registers used:
  4824 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4825 ;; Tracked objects:
  4826 ;;		On entry : 0/0
  4827 ;;		On exit  : 0/0
  4828 ;;		Unchanged: 0/0
  4829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4830 ;;      Params:         0       0       0       0       0
  4831 ;;      Locals:         0       0       0       0       0
  4832 ;;      Temps:          5       0       0       0       0
  4833 ;;      Totals:         5       0       0       0       0
  4834 ;;Total ram usage:        5 bytes
  4835 ;; Hardware stack levels used: 2
  4836 ;; This function calls:
  4837 ;;		Nothing
  4838 ;; This function is called by:
  4839 ;;		Interrupt level 1
  4840 ;; This function uses a non-reentrant model
  4841 ;;
  4842                           
  4843     0F1F                     _ISR:	
  4844                           ;psect for function _ISR
  4845                           
  4846     0F1F                     i1l2537:
  4847     0F1F                     i1l264:	
  4848                           ;main.c: 459:     }
  4849                           
  4850                           
  4851                           ;main.c: 457:     while (!TMR0IF){
  4852     0F1F  1D0B               	btfss	11,2	;volatile
  4853     0F20  2F22               	goto	u258_21
  4854     0F21  2F23               	goto	u258_20
  4855     0F22                     u258_21:
  4856     0F22  2F1F               	goto	i1l264
  4857     0F23                     u258_20:
  4858     0F23                     i1l266:
  4859                           
  4860                           ;main.c: 460:     TMR0IF = 0;
  4861     0F23  110B               	bcf	11,2	;volatile
  4862     0F24                     i1l267:	
  4863                           ;main.c: 463:     }
  4864                           
  4865                           
  4866                           ;main.c: 461:     while (!TMR0IF){
  4867     0F24  1D0B               	btfss	11,2	;volatile
  4868     0F25  2F27               	goto	u259_21
  4869     0F26  2F28               	goto	u259_20
  4870     0F27                     u259_21:
  4871     0F27  2F24               	goto	i1l267
  4872     0F28                     u259_20:
  4873     0F28                     i1l269:
  4874                           
  4875                           ;main.c: 464:     TMR0IF = 0;
  4876     0F28  110B               	bcf	11,2	;volatile
  4877     0F29                     i1l270:	
  4878                           ;main.c: 467:     }
  4879                           
  4880                           
  4881                           ;main.c: 465:     while (!TMR0IF){
  4882     0F29  1D0B               	btfss	11,2	;volatile
  4883     0F2A  2F2C               	goto	u260_21
  4884     0F2B  2F2D               	goto	u260_20
  4885     0F2C                     u260_21:
  4886     0F2C  2F29               	goto	i1l270
  4887     0F2D                     u260_20:
  4888     0F2D                     i1l272:
  4889                           
  4890                           ;main.c: 468:     TMR0IF = 0;
  4891     0F2D  110B               	bcf	11,2	;volatile
  4892     0F2E                     i1l273:	
  4893                           ;main.c: 471:     }
  4894                           
  4895                           
  4896                           ;main.c: 469:     while (!TMR0IF){
  4897     0F2E  1D0B               	btfss	11,2	;volatile
  4898     0F2F  2F31               	goto	u261_21
  4899     0F30  2F32               	goto	u261_20
  4900     0F31                     u261_21:
  4901     0F31  2F2E               	goto	i1l273
  4902     0F32                     u261_20:
  4903     0F32                     i1l275:
  4904                           
  4905                           ;main.c: 472:     TMR0IF = 0;
  4906     0F32  110B               	bcf	11,2	;volatile
  4907     0F33                     i1l276:	
  4908                           ;main.c: 475:     }
  4909                           
  4910                           
  4911                           ;main.c: 473:     while (!TMR0IF){
  4912     0F33  1D0B               	btfss	11,2	;volatile
  4913     0F34  2F36               	goto	u262_21
  4914     0F35  2F37               	goto	u262_20
  4915     0F36                     u262_21:
  4916     0F36  2F33               	goto	i1l276
  4917     0F37                     u262_20:
  4918     0F37                     i1l278:
  4919                           
  4920                           ;main.c: 476:     TMR0IF = 0;
  4921     0F37  110B               	bcf	11,2	;volatile
  4922     0F38                     i1l279:	
  4923                           ;main.c: 479:     }
  4924                           
  4925                           
  4926                           ;main.c: 477:     while (!TMR0IF){
  4927     0F38  1D0B               	btfss	11,2	;volatile
  4928     0F39  2F3B               	goto	u263_21
  4929     0F3A  2F3C               	goto	u263_20
  4930     0F3B                     u263_21:
  4931     0F3B  2F38               	goto	i1l279
  4932     0F3C                     u263_20:
  4933     0F3C                     i1l281:
  4934                           
  4935                           ;main.c: 480:     TMR0IF = 0;
  4936     0F3C  110B               	bcf	11,2	;volatile
  4937     0F3D                     i1l282:	
  4938                           ;main.c: 483:     }
  4939                           
  4940                           
  4941                           ;main.c: 481:     while (!TMR0IF){
  4942     0F3D  1D0B               	btfss	11,2	;volatile
  4943     0F3E  2F40               	goto	u264_21
  4944     0F3F  2F41               	goto	u264_20
  4945     0F40                     u264_21:
  4946     0F40  2F3D               	goto	i1l282
  4947     0F41                     u264_20:
  4948     0F41                     i1l284:
  4949                           
  4950                           ;main.c: 484:     TMR0IF = 0;
  4951     0F41  110B               	bcf	11,2	;volatile
  4952     0F42                     i1l285:	
  4953                           ;main.c: 487:     }
  4954                           
  4955                           
  4956                           ;main.c: 485:     while (!TMR0IF){
  4957     0F42  1D0B               	btfss	11,2	;volatile
  4958     0F43  2F45               	goto	u265_21
  4959     0F44  2F46               	goto	u265_20
  4960     0F45                     u265_21:
  4961     0F45  2F42               	goto	i1l285
  4962     0F46                     u265_20:
  4963     0F46                     i1l287:
  4964                           
  4965                           ;main.c: 488:     TMR0IF = 0;
  4966     0F46  110B               	bcf	11,2	;volatile
  4967     0F47                     i1l288:	
  4968                           ;main.c: 491:     }
  4969                           
  4970                           
  4971                           ;main.c: 489:     while (!TMR0IF){
  4972     0F47  1D0B               	btfss	11,2	;volatile
  4973     0F48  2F4A               	goto	u266_21
  4974     0F49  2F4B               	goto	u266_20
  4975     0F4A                     u266_21:
  4976     0F4A  2F47               	goto	i1l288
  4977     0F4B                     u266_20:
  4978     0F4B                     i1l290:
  4979                           
  4980                           ;main.c: 492:     TMR0IF = 0;
  4981     0F4B  110B               	bcf	11,2	;volatile
  4982     0F4C                     i1l291:	
  4983                           ;main.c: 495:     }
  4984                           
  4985                           
  4986                           ;main.c: 493:     while (!TMR0IF){
  4987     0F4C  1D0B               	btfss	11,2	;volatile
  4988     0F4D  2F4F               	goto	u267_21
  4989     0F4E  2F50               	goto	u267_20
  4990     0F4F                     u267_21:
  4991     0F4F  2F4C               	goto	i1l291
  4992     0F50                     u267_20:
  4993     0F50                     i1l293:
  4994                           
  4995                           ;main.c: 496:     TMR0IF = 0;
  4996     0F50  110B               	bcf	11,2	;volatile
  4997     0F51                     i1l294:	
  4998                           ;main.c: 499:     }
  4999                           
  5000                           
  5001                           ;main.c: 497:     while (!TMR0IF){
  5002     0F51  1D0B               	btfss	11,2	;volatile
  5003     0F52  2F54               	goto	u268_21
  5004     0F53  2F55               	goto	u268_20
  5005     0F54                     u268_21:
  5006     0F54  2F51               	goto	i1l294
  5007     0F55                     u268_20:
  5008     0F55                     i1l296:
  5009                           
  5010                           ;main.c: 500:     TMR0IF = 0;
  5011     0F55  110B               	bcf	11,2	;volatile
  5012     0F56                     i1l297:	
  5013                           ;main.c: 503:     }
  5014                           
  5015                           
  5016                           ;main.c: 501:     while (!TMR0IF){
  5017     0F56  1D0B               	btfss	11,2	;volatile
  5018     0F57  2F59               	goto	u269_21
  5019     0F58  2F5A               	goto	u269_20
  5020     0F59                     u269_21:
  5021     0F59  2F56               	goto	i1l297
  5022     0F5A                     u269_20:
  5023     0F5A                     i1l299:
  5024                           
  5025                           ;main.c: 504:     TMR0IF = 0;
  5026     0F5A  110B               	bcf	11,2	;volatile
  5027     0F5B                     i1l300:	
  5028                           ;main.c: 507:     }
  5029                           
  5030                           
  5031                           ;main.c: 505:     while (!TMR0IF){
  5032     0F5B  1D0B               	btfss	11,2	;volatile
  5033     0F5C  2F5E               	goto	u270_21
  5034     0F5D  2F5F               	goto	u270_20
  5035     0F5E                     u270_21:
  5036     0F5E  2F5B               	goto	i1l300
  5037     0F5F                     u270_20:
  5038     0F5F                     i1l302:
  5039                           
  5040                           ;main.c: 508:     TMR0IF = 0;
  5041     0F5F  110B               	bcf	11,2	;volatile
  5042     0F60                     i1l303:	
  5043                           ;main.c: 511:     }
  5044                           
  5045                           
  5046                           ;main.c: 509:     while (!TMR0IF){
  5047     0F60  1D0B               	btfss	11,2	;volatile
  5048     0F61  2F63               	goto	u271_21
  5049     0F62  2F64               	goto	u271_20
  5050     0F63                     u271_21:
  5051     0F63  2F60               	goto	i1l303
  5052     0F64                     u271_20:
  5053     0F64                     i1l305:
  5054                           
  5055                           ;main.c: 512:     TMR0IF = 0;
  5056     0F64  110B               	bcf	11,2	;volatile
  5057     0F65                     i1l306:	
  5058                           ;main.c: 515:     }
  5059                           
  5060                           
  5061                           ;main.c: 513:     while (!TMR0IF){
  5062     0F65  1D0B               	btfss	11,2	;volatile
  5063     0F66  2F68               	goto	u272_21
  5064     0F67  2F69               	goto	u272_20
  5065     0F68                     u272_21:
  5066     0F68  2F65               	goto	i1l306
  5067     0F69                     u272_20:
  5068     0F69                     i1l308:
  5069                           
  5070                           ;main.c: 516:     TMR0IF = 0;
  5071     0F69  110B               	bcf	11,2	;volatile
  5072     0F6A                     i1l2539:
  5073                           
  5074                           ;main.c: 517:     if(flag == 1){
  5075     0F6A  1283               	bcf	3,5	;RP0=0, select bank0
  5076     0F6B  1303               	bcf	3,6	;RP1=0, select bank0
  5077     0F6C  0330               	decf	_flag,w
  5078     0F6D  0431               	iorwf	_flag+1,w
  5079     0F6E  1D03               	btfss	3,2
  5080     0F6F  2F71               	goto	u273_21
  5081     0F70  2F72               	goto	u273_20
  5082     0F71                     u273_21:
  5083     0F71  2FF5               	goto	i1l318
  5084     0F72                     u273_20:
  5085     0F72                     i1l2541:
  5086                           
  5087                           ;main.c: 518:         TRISD |= 0x0F;
  5088     0F72  300F               	movlw	15
  5089     0F73  00F0               	movwf	??_ISR
  5090     0F74  0870               	movf	??_ISR,w
  5091     0F75  1683               	bsf	3,5	;RP0=1, select bank1
  5092     0F76  1303               	bcf	3,6	;RP1=0, select bank1
  5093     0F77  0488               	iorwf	8,f	;volatile
  5094     0F78                     i1l2543:
  5095                           
  5096                           ;main.c: 520:         for (colScan = 0; colScan < 3; colScan++) {
  5097     0F78  01F7               	clrf	_colScan
  5098     0F79                     i1l2545:
  5099     0F79  3003               	movlw	3
  5100     0F7A  0277               	subwf	_colScan,w
  5101     0F7B  1C03               	skipc
  5102     0F7C  2F7E               	goto	u274_21
  5103     0F7D  2F7F               	goto	u274_20
  5104     0F7E                     u274_21:
  5105     0F7E  2F80               	goto	i1l2549
  5106     0F7F                     u274_20:
  5107     0F7F  2FF2               	goto	i1l2589
  5108     0F80                     i1l2549:
  5109                           
  5110                           ;main.c: 521:             PORTB = PORTB | 0x07;
  5111     0F80  1283               	bcf	3,5	;RP0=0, select bank0
  5112     0F81  0806               	movf	6,w	;volatile
  5113     0F82  3807               	iorlw	7
  5114     0F83  0086               	movwf	6	;volatile
  5115     0F84                     i1l2551:
  5116                           
  5117                           ;main.c: 522:             PORTB &= colMask[colScan];
  5118     0F84  0877               	movf	_colScan,w
  5119     0F85  3E11               	addlw	low ((_colMask-__stringbase)| (0+32768))
  5120     0F86  0084               	movwf	4
  5121     0F87  120A  118A  2759  120A  158A  	fcall	stringdir
  5122     0F8C  00F0               	movwf	??_ISR
  5123     0F8D  0870               	movf	??_ISR,w
  5124     0F8E  0586               	andwf	6,f	;volatile
  5125     0F8F                     i1l2553:
  5126                           
  5127                           ;main.c: 525:             for (rowScan = 0; rowScan < 4; rowScan++) {
  5128     0F8F  01F6               	clrf	_rowScan
  5129     0F90                     i1l2555:
  5130     0F90  3004               	movlw	4
  5131     0F91  0276               	subwf	_rowScan,w
  5132     0F92  1C03               	skipc
  5133     0F93  2F95               	goto	u275_21
  5134     0F94  2F96               	goto	u275_20
  5135     0F95                     u275_21:
  5136     0F95  2F97               	goto	i1l2559
  5137     0F96                     u275_20:
  5138     0F96  2FED               	goto	i1l2585
  5139     0F97                     i1l2559:
  5140                           
  5141                           ;main.c: 526:                 if (!(PORTD & rowMask[rowScan]) && (old_btn)) {
  5142     0F97  0876               	movf	_rowScan,w
  5143     0F98  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  5144     0F99  0084               	movwf	4
  5145     0F9A  120A  118A  2759  120A  158A  	fcall	stringdir
  5146     0F9F  0508               	andwf	8,w	;volatile
  5147     0FA0  1D03               	btfss	3,2
  5148     0FA1  2FA3               	goto	u276_21
  5149     0FA2  2FA4               	goto	u276_20
  5150     0FA3                     u276_21:
  5151     0FA3  2FAD               	goto	i1l2567
  5152     0FA4                     u276_20:
  5153     0FA4                     i1l2561:
  5154     0FA4  1C78               	btfss	_old_btn/(0+8),_old_btn& (0+7)
  5155     0FA5  2FA7               	goto	u277_21
  5156     0FA6  2FA8               	goto	u277_20
  5157     0FA7                     u277_21:
  5158     0FA7  2FAD               	goto	i1l2567
  5159     0FA8                     u277_20:
  5160     0FA8                     i1l2563:
  5161                           
  5162                           ;main.c: 527:                     old_btn = 0;
  5163     0FA8  1078               	bcf	_old_btn/(0+8),_old_btn& (0+7)
  5164     0FA9                     i1l2565:
  5165                           
  5166                           ;main.c: 528:                     stato++;
  5167     0FA9  3001               	movlw	1
  5168     0FAA  00F0               	movwf	??_ISR
  5169     0FAB  0870               	movf	??_ISR,w
  5170     0FAC  07F5               	addwf	_stato,f
  5171     0FAD                     i1l2567:
  5172                           
  5173                           ;main.c: 530:                 if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  5174     0FAD  0876               	movf	_rowScan,w
  5175     0FAE  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  5176     0FAF  0084               	movwf	4
  5177     0FB0  120A  118A  2759  120A  158A  	fcall	stringdir
  5178     0FB5  0508               	andwf	8,w	;volatile
  5179     0FB6  1903               	btfsc	3,2
  5180     0FB7  2FB9               	goto	u278_21
  5181     0FB8  2FBA               	goto	u278_20
  5182     0FB9                     u278_21:
  5183     0FB9  2FD0               	goto	i1l2577
  5184     0FBA                     u278_20:
  5185     0FBA                     i1l2569:
  5186     0FBA  1878               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  5187     0FBB  2FBD               	goto	u279_21
  5188     0FBC  2FBE               	goto	u279_20
  5189     0FBD                     u279_21:
  5190     0FBD  2FD0               	goto	i1l2577
  5191     0FBE                     u279_20:
  5192     0FBE                     i1l2571:
  5193                           
  5194                           ;main.c: 532:                     if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  5195     0FBE  0876               	movf	_rowScan,w
  5196     0FBF  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  5197     0FC0  0084               	movwf	4
  5198     0FC1  120A  118A  2759  120A  158A  	fcall	stringdir
  5199     0FC6  0508               	andwf	8,w	;volatile
  5200     0FC7  1903               	btfsc	3,2
  5201     0FC8  2FCA               	goto	u280_21
  5202     0FC9  2FCB               	goto	u280_20
  5203     0FCA                     u280_21:
  5204     0FCA  2FD0               	goto	i1l2577
  5205     0FCB                     u280_20:
  5206     0FCB                     i1l2573:
  5207     0FCB  1878               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  5208     0FCC  2FCE               	goto	u281_21
  5209     0FCD  2FCF               	goto	u281_20
  5210     0FCE                     u281_21:
  5211     0FCE  2FD0               	goto	i1l2577
  5212     0FCF                     u281_20:
  5213     0FCF                     i1l2575:
  5214                           
  5215                           ;main.c: 533:                         old_btn = 1;
  5216     0FCF  1478               	bsf	_old_btn/(0+8),_old_btn& (0+7)
  5217     0FD0                     i1l2577:
  5218                           
  5219                           ;main.c: 536:                 if (stato != old_stato) {
  5220     0FD0  0875               	movf	_stato,w
  5221     0FD1  0638               	xorwf	_old_stato,w
  5222     0FD2  1903               	skipnz
  5223     0FD3  2FD5               	goto	u282_21
  5224     0FD4  2FD6               	goto	u282_20
  5225     0FD5                     u282_21:
  5226     0FD5  2FE3               	goto	i1l2583
  5227     0FD6                     u282_20:
  5228     0FD6                     i1l2579:
  5229                           
  5230                           ;main.c: 537:                     keypressed = rowScan + (4 * colScan);
  5231     0FD6  0877               	movf	_colScan,w
  5232     0FD7  00F0               	movwf	??_ISR
  5233     0FD8  3002               	movlw	2
  5234     0FD9                     u283_25:
  5235     0FD9  1003               	clrc
  5236     0FDA  0DF0               	rlf	??_ISR,f
  5237     0FDB  3EFF               	addlw	-1
  5238     0FDC  1D03               	skipz
  5239     0FDD  2FD9               	goto	u283_25
  5240     0FDE  0876               	movf	_rowScan,w
  5241     0FDF  0770               	addwf	??_ISR,w
  5242     0FE0  00BA               	movwf	_keypressed
  5243     0FE1                     i1l2581:
  5244                           
  5245                           ;main.c: 540:                     old_stato = stato;
  5246     0FE1  0875               	movf	_stato,w
  5247     0FE2  00B8               	movwf	_old_stato
  5248     0FE3                     i1l2583:
  5249                           
  5250                           ;main.c: 542:             }
  5251     0FE3  3001               	movlw	1
  5252     0FE4  00F0               	movwf	??_ISR
  5253     0FE5  0870               	movf	??_ISR,w
  5254     0FE6  07F6               	addwf	_rowScan,f
  5255     0FE7  3004               	movlw	4
  5256     0FE8  0276               	subwf	_rowScan,w
  5257     0FE9  1C03               	skipc
  5258     0FEA  2FEC               	goto	u284_21
  5259     0FEB  2FED               	goto	u284_20
  5260     0FEC                     u284_21:
  5261     0FEC  2F97               	goto	i1l2559
  5262     0FED                     u284_20:
  5263     0FED                     i1l2585:
  5264                           
  5265                           ;main.c: 543:         }
  5266     0FED  3001               	movlw	1
  5267     0FEE  00F0               	movwf	??_ISR
  5268     0FEF  0870               	movf	??_ISR,w
  5269     0FF0  07F7               	addwf	_colScan,f
  5270     0FF1  2F79               	goto	i1l2545
  5271     0FF2                     i1l2589:
  5272                           
  5273                           ;main.c: 544:         TRISD |= 0x00;
  5274     0FF2  1683               	bsf	3,5	;RP0=1, select bank1
  5275     0FF3  1303               	bcf	3,6	;RP1=0, select bank1
  5276     0FF4  0808               	movf	8,w	;volatile
  5277     0FF5                     i1l318:
  5278     0FF5  0874               	movf	??_ISR+4,w
  5279     0FF6  00FF               	movwf	btemp+1
  5280     0FF7  0873               	movf	??_ISR+3,w
  5281     0FF8  008A               	movwf	10
  5282     0FF9  0872               	movf	??_ISR+2,w
  5283     0FFA  0084               	movwf	4
  5284     0FFB  0E71               	swapf	??_ISR+1,w
  5285     0FFC  0083               	movwf	3
  5286     0FFD  0EFE               	swapf	btemp,f
  5287     0FFE  0E7E               	swapf	btemp,w
  5288     0FFF  0009               	retfie
  5289     1000                     __end_of_ISR:
  5290     007E                     btemp	set	126	;btemp
  5291     007E                     wtemp0	set	126
  5292                           
  5293                           	psect	intentry
  5294     0004                     __pintentry:	
  5295                           ;incstack = 0
  5296                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath]
  5297                           
  5298     0004                     interrupt_function:
  5299     007E                     saved_w	set	btemp
  5300     0004  00FE               	movwf	btemp
  5301     0005  0E03               	swapf	3,w
  5302     0006  00F1               	movwf	??_ISR+1
  5303     0007  0804               	movf	4,w
  5304     0008  00F2               	movwf	??_ISR+2
  5305     0009  080A               	movf	10,w
  5306     000A  00F3               	movwf	??_ISR+3
  5307     000B  087F               	movf	btemp+1,w
  5308     000C  00F4               	movwf	??_ISR+4
  5309     000D  120A  158A  2F1F   	ljmp	_ISR
  5310                           
  5311                           	psect	idloc
  5312                           
  5313                           ;Config register IDLOC0 @ 0x2000
  5314                           ;	unspecified, using default values
  5315     2000                     	org	8192
  5316     2000  3FFF               	dw	16383
  5317                           
  5318                           ;Config register IDLOC1 @ 0x2001
  5319                           ;	unspecified, using default values
  5320     2001                     	org	8193
  5321     2001  3FFF               	dw	16383
  5322                           
  5323                           ;Config register IDLOC2 @ 0x2002
  5324                           ;	unspecified, using default values
  5325     2002                     	org	8194
  5326     2002  3FFF               	dw	16383
  5327                           
  5328                           ;Config register IDLOC3 @ 0x2003
  5329                           ;	unspecified, using default values
  5330     2003                     	org	8195
  5331     2003  3FFF               	dw	16383
  5332                           
  5333                           	psect	config
  5334                           
  5335                           ;Config register CONFIG @ 0x2007
  5336                           ;	Oscillator Selection bits
  5337                           ;	FOSC = HS, HS oscillator
  5338                           ;	Watchdog Timer Enable bit
  5339                           ;	WDTE = OFF, WDT disabled
  5340                           ;	Power-up Timer Enable bit
  5341                           ;	PWRTE = OFF, PWRT disabled
  5342                           ;	Brown-out Reset Enable bit
  5343                           ;	BOREN = OFF, BOR disabled
  5344                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5345                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  5346                           ;	Data EEPROM Memory Code Protection bit
  5347                           ;	CPD = OFF, Data EEPROM code protection off
  5348                           ;	Flash Program Memory Write Enable bits
  5349                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  5350                           ;	In-Circuit Debugger Mode bit
  5351                           ;	DEBUG = 0x1, unprogrammed default
  5352                           ;	Flash Program Memory Code Protection bit
  5353                           ;	CP = OFF, Code protection off
  5354     2007                     	org	8199
  5355     2007  3F3A               	dw	16186

Data Sizes:
    Strings     111
    Constant    19
    Data        3
    BSS         54
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     32      69
    BANK1            80      0      16
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    intToString@str	PTR unsigned char  size(1) Largest target is 3
		 -> print_countdown(BANK0[3]), 

    lcdPrint@str	PTR unsigned char  size(2) Largest target is 15
		 -> STR_11(CODE[15]), STR_10(CODE[8]), STR_9(CODE[14]), STR_8(CODE[6]), 
		 -> print_countdown(BANK0[3]), STR_7(CODE[10]), STR_6(CODE[14]), STR_5(CODE[13]), 
		 -> STR_4(CODE[12]), STR_3(CODE[11]), STR_2(CODE[10]), STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_UART_Read1
    _initLCD->_lcdSend
    _UART_Read2->_intToString
    _UART_Read1->_intToString
    _lcdPrint->_lcdSend
    _intToString->___awdiv
    _potenza->___bmul
    ___awdiv->_potenza

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   44043
               _GenerateRandomNumber
                       _KeyPadReader
                     _RS485_RxEnable
                     _RS485_TxEnable
                        _Timer0_Init
                          _UART_Init
                         _UART_Read1
                         _UART_Read2
                         _UART_Write
                            _initLCD
                           _lcdPrint
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0    4472
                                              2 BANK0      2     2      0
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _UART_Read2                                           4     4      0   14217
                                             28 BANK0      3     3      0
                        _intToString
                           _lcdPrint
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _UART_Read1                                           4     4      0   14558
                                             28 BANK0      4     4      0
                     _RS485_RxEnable
                     _RS485_TxEnable
                         _UART_Write
                        _intToString
                           _lcdPrint
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _lcdPrint                                             7     5      2    6222
                                              2 BANK0      7     5      2
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _lcdSend                                              2     1      1    4472
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _intToString                                          9     6      3    3505
                                             19 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                            _potenza
 ---------------------------------------------------------------------------------
 (3) _potenza                                              6     5      1     573
                                              4 BANK0      6     5      1
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     226
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     613
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     604
                                             10 BANK0      9     5      4
                            _potenza (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RS485_TxEnable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RS485_RxEnable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _KeyPadReader                                         2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _GenerateRandomNumber                                 3     3      0      71
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GenerateRandomNumber
   _KeyPadReader
   _RS485_RxEnable
   _RS485_TxEnable
   _Timer0_Init
   _UART_Init
   _UART_Read1
     _RS485_RxEnable
     _RS485_TxEnable
     _UART_Write
     _intToString
       ___awdiv
         _potenza (ARG)
           ___bmul
       ___awmod
       _potenza
     _lcdPrint
       _lcdSend
     _lcdSend
   _UART_Read2
     _intToString
     _lcdPrint
     _lcdSend
   _UART_Write
   _initLCD
     _lcdSend
   _lcdPrint
   _lcdSend

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      10       7       20.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     20      45       5       86.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       1       0        7.1%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5F      12        0.0%
ABS                  0      0      5F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Jun 28 18:28:03 2023

                            pc 0002                 ___bmul@product 0045                   ___awdiv@sign 0053  
                           fsr 0004                            l201 0C1C                            l204 0C22  
                          l220 052B                            l213 0539                            l222 046F  
                          l215 03E4                            l208 0345                            l321 0C31  
                          l250 0E15                            l227 051F                            l228 0562  
                          l253 0C58                            l246 074E                            l327 0C6F  
                          l192 0C43                            l346 0C9B                            l339 0F1E  
                          l195 0C18                            l355 0E91                            l259 0CE3  
                          l198 0C13                            l607 0D3E                            l467 07F7  
                          l594 0DA7                            _GIE 005F                            _RC0 0038  
                          _RC1 0039                            _PS0 0408                            _PS1 0409  
                          _PS2 040A                            _ISR 0F1F                            _PSA 040B  
                          _id1 0064                            _id2 0063                            fsr0 0004  
                          indf 0000                   ___awmod@sign 0049                           ?_ISR 0070  
                         l3001 040C                           l3011 0440                           l3003 040E  
                         l3021 046D                           l3013 0442                           l3005 041E  
                         l3101 0054                           l3031 0499                           l3023 0475  
                         l3015 0451                           l3007 042C                           l3111 0079  
                         l3103 005D                           l3041 04CD                           l3033 04A9  
                         l3025 0483                           l3017 0459                           l3009 0435  
                         l3201 01B3                           l3121 0097                           l3113 007F  
                         l3105 0068                           l3051 04F9                           l3043 04DC  
                         l3035 04B7                           l3027 048C                           l3019 046A  
                         l3211 01D3                           l3203 01BB                           l3131 00BB  
                         l3123 009D                           l3115 0085                           l3107 006D  
                         l3061 0520                           l3053 0502                           l3045 04E4  
                         l3037 04C0                           l3029 0497                           l3301 0314  
                         l3213 01D9                           l3205 01C1                           l3221 01F1  
                         l3141 00E1                           l3133 00C3                           l3125 00A3  
                         l3117 008B                           l3109 0073                           l3055 050D  
                         l3047 04F5                           l3039 04CB                           l3063 0521  
                         l3071 0534                           l3311 0336                           l3303 031E  
                         l3231 021A                           l3223 01F8                           l3215 01DF  
                         l3207 01C7                           l3151 0109                           l3143 00E6  
                         l3135 00CC                           l3127 00AB                           l3119 0091  
                         l2601 07F6                           l3081 0551                           l3073 053C  
                         l3057 051B                           l3049 04F8                           l3065 0526  
                         l3313 033B                           l3305 0328                           l3241 0238  
                         l3233 0220                           l3225 0204                           l3217 01E5  
                         l3209 01CD                           l3161 0127                           l3153 010F  
                         l3145 00ED                           l3137 00D1                           l3129 00B3  
                         l2611 0C4C                           l3083 055C                           l3067 052E  
                         l3075 053D                           l3307 032B                           l3251 025D  
                         l3243 023E                           l3235 0226                           l3227 020C  
                         l3219 01EB                           l3171 0146                           l3163 012D  
                         l3155 0115                           l3147 00F9                           l1821 0D4D  
                         l1813 0D3F                           l2621 0C73                           l2701 0E4F  
                         l2613 0C4F                           l2605 0C47                           l3085 055F  
                         l3069 052F                           l3077 0543                           l3309 0330  
                         l3261 027F                           l3253 0265                           l3245 0244  
                         l3237 022C                           l3229 0214                           l3181 016E  
                         l3173 0152                           l3165 0133                           l3157 011B  
                         l3149 0101                           l3093 003E                           l2711 0C32  
                         l1831 0D62                           l1823 0D51                           l1815 0D42  
                         l2631 0C98                           l2623 0C75                           l2703 0E6A  
                         l2615 0C51                           l2607 0C4A                           l3079 0548  
                         l3271 029D                           l3263 0285                           l3255 026D  
                         l3239 0232                           l3247 024A                           l3191 018C  
                         l3183 0174                           l3175 015A                           l3167 0139  
                         l3159 0121                           l3095 0045                           l2801 0EEC  
                         l2721 0C40                           l2713 0C37                           l1841 0D85  
                         l1833 0D65                           l1825 0D56                           l1817 0D46  
                         l2641 0CF0                           l2625 0C78                           l2705 0E80  
                         l2617 0C56                           l2609 0C4B                           l3281 02C1  
                         l3265 028B                           l3257 0273                           l3273 02A3  
                         l3249 0251                           l3193 0192                           l3185 017A  
                         l3177 0162                           l3169 013F                           l3097 004A  
                         l2811 0F11                           l2803 0EFB                           l2715 0C39  
                         l1851 0D9E                           l1843 0D8B                           l1835 0D6C  
                         l1827 0D5A                           l1819 0D4B                           l2651 0D04  
                         l2643 0CF2                           l2635 0CE4                           l2627 0C85  
                         l2707 0E84                           l2619 0C57                           l2731 0DC0  
                         l2723 0DA8                           l3291 02E7                           l3283 02C9  
                         l3275 02AF                           l3267 0291                           l3259 0279  
                         l3187 0180                           l3179 0168                           l3195 0198  
                         l3099 004F                           l2805 0EFF                           l2717 0C3A  
                         l1853 0DA3                           l1845 0D8C                           l1837 0D70  
                         l1829 0D5C                           l2661 0D23                           l2653 0D0B  
                         l2645 0CF6                           l2637 0CE7                           l2629 0C8B  
                         l2709 0E8A                           l2901 0680                           l2741 0DFA  
                         l2733 0DD4                           l2725 0DAC                           l3293 02ED  
                         l3285 02D1                           l3277 02B3                           l3269 0297  
                         l3197 019F                           l3189 0186                           l2815 0F14  
                         l2807 0F00                           l2751 0C2E                           l2719 0C3D  
                         l1847 0D93                           l1839 0D74                           l2663 0D2A  
                         l2655 0D0F                           l2647 0CFB                           l2639 0CEB  
                         l2591 07E4                           l2911 06AB                           l2903 0689  
                         l2831 0576                           l2823 0563                           l2743 0E03  
                         l2735 0DDF                           l2727 0DB6                           l3295 02F6  
                         l3287 02D9                           l3279 02B9                           l3199 01AB  
                         l2761 0C64                           l2809 0F06                           l2753 0C2F  
                         l2681 0C14                           l1849 0D99                           l2657 0D13  
                         l2649 0D01                           l2665 0D30                           l2593 07E5  
                         l2673 0C9C                           l2921 06CD                           l2913 06B1  
                         l2905 0694                           l2841 059F                           l2833 057B  
                         l2825 0566                           l2745 0E0C                           l2737 0DE8  
                         l2729 0DB9                           l3297 0300                           l3289 02E1  
                         l2763 0C6B                           l2819 0F19                           l2771 0E9A  
                         l2755 0C30                           l2747 0C23                           l2683 0C1C  
                         l2667 0D35                           l2659 0D1D                           l2595 07E9  
                         l2691 0E1A                           l2675 0CA1                           l2931 06F6  
                         l2923 06D5                           l2915 06B7                           l2907 0696  
                         l2851 05C6                           l2835 0582                           l2843 05A3  
                         l2827 0569                           l2739 0DF1                           l3299 030A  
                         l2765 0C6D                           l2757 0C59                           l2781 0EB2  
                         l2773 0E9B                           l2749 0C2A                           l2685 0C20  
                         l2669 0D3A                           l2597 07ED                           l2693 0E1B  
                         l2677 0CBF                           l2941 071D                           l2933 06FF  
                         l2925 06DD                           l2917 06BD                           l2861 05E1  
                         l2853 05D1                           l2845 05A8                           l2837 0593  
                         l2829 0571                           l2909 06A6                           l2759 0C5E  
                         l2791 0ECB                           l2783 0EB3                           l2687 0C0F  
                         l2599 07EF                           l2695 0E1F                           l2679 0CC7  
                         l2951 073A                           l2935 070A                           l2927 06E5  
                         l2919 06C5                           l2863 05E9                           l2871 060A  
                         l2855 05D2                           l2847 05AD                           l2839 059E  
                         l2793 0ECC                           l2777 0EA2                           l2769 0E92  
                         l2697 0E40                           l2689 0E16                           l2953 073D  
                         l2937 070D                           l2929 06EB                           l2881 0639  
                         l2873 060F                           l2865 05FA                           l2849 05B5  
                         l2857 05D6                           l2945 0721                           l2961 0344  
                         l2795 0ED0                           l2787 0EBA                           l2779 0EA7  
                         l2699 0E42                           l2955 073F                           l2947 0726  
                         l2939 070F                           l2891 0651                           l2883 063A  
                         l2875 0615                           l2867 0605                           l2859 05DB  
                         l2971 0376                           l2963 034B                           l2797 0EDD  
                         l2789 0EC7                           l2949 072F                           l2893 0662  
                         l2877 061D                           l2885 063E                           l2869 0606  
                         l2981 03AA                           l2973 0381                           l2965 0352  
                         l2799 0EE1                           l2895 066D                           l2887 0643  
                         l2879 062E                           l2991 03DF                           l2983 03B5  
                         l2975 0383                           l2967 035D                           l2897 066E  
                         l2889 0649                           l2993 03E2                           l2985 03B7  
                         l2977 0393                           l2969 036D                           l2899 0672  
                         l2995 03EA                           l2987 03C6                           l2979 03A1  
                         l2997 03F8                           l2989 03CE                           l2999 0401  
                         STR_1 07CB                           STR_2 07C1                           STR_3 07B6  
                         STR_4 07AA                           STR_5 079D                           STR_6 0781  
                         STR_7 07C1                           STR_8 07DB                           STR_9 078F  
                         _BRGH 04C2                           _CREN 00C4                           _T0CS 040D  
                         u3000 0C20                           u3001 0C1F                           u3010 0E40  
                         u3011 0E3F                           u3100 0EFB                           u1500 0D74  
                         u3020 0E8A                           u3101 0EFA                           u1501 0D73  
                         u3021 0E89                           u3030 0C6B                           u3110 0EFF  
                         u3031 0C6A                           u3111 0EFE                           u3120 0F06  
                         u3040 0EA1                           u1520 0D85                           u3200 05E1  
                         u3121 0F05                           u3041 0EA0                           u1521 0D84  
                         u3201 05E0                           u3050 0EB9                           u3210 060F  
                         u3051 0EB8                           u1515 0D75                           u3211 060E  
                         u3060 0EC7                           u1540 0D99                           u1460 0D46  
                         u3220 0615                           u3140 0571                           u3300 0475  
                         u3061 0EC6                           u1541 0D98                           u1525 0D81  
                         u1461 0D45                           u3221 0614                           u3141 0570  
                         u3301 0474                           u3070 0ECB                           u1550 0D9E  
                         u1470 0D51                           u3230 0643                           u3150 0576  
                         u3310 04E4                           u3135 0F09                           u3071 0ECA  
                         u1551 0D9D                           u1535 0D8D                           u1471 0D50  
                         u4007 069E                           u3231 0642                           u3151 0575  
                         u3311 04E3                           u3080 0EDD                           u1480 0D62  
                         u3240 0649                           u3160 057B                           u3320 0526  
                         u3400 0109                           u3081 0EDC                           u1481 0D61  
                         u4017 0717                           u3241 0648                           u3161 057A  
                         u3321 0525                           u3401 0108                           u3090 0EE1  
                         u3250 0726                           u3170 05A8                           u3330 052B  
                         u3410 010F                           u3091 0EE0                           u4027 0747  
                         u3251 0725                           u3171 05A7                           u3331 052A  
                         u3411 010E                           u3180 05AD                           u3340 0534  
                         u3260 034B                           u3500 0162                           u3420 0115  
                         u4037 0EE7                           u3181 05AC                           u3341 0533  
                         u3261 034A                           u3501 0161                           u3421 0114  
                         u3190 05DB                           u3350 0539                           u3270 03CE  
                         u3510 0168                           u3430 011B                           u1495 0D66  
                         u3191 05DA                           u3351 0538                           u3271 03CD  
                         u3511 0167                           u3431 011A                           u3360 0542  
                         u3280 03EA                           u3600 01BB                           u3520 016E  
                         u3440 0121                           u3361 0541                           u3281 03E9  
                         u3601 01BA                           u3521 016D                           u3441 0120  
                         u3370 0548                           u3290 0459                           u3610 01C1  
                         u3530 0174                           u3450 0127                           u3371 0547  
                         u3291 0458                           u3611 01C0                           u3531 0173  
                         u3451 0126                           u2900 0D01                           u3700 0214  
                         u3620 01C7                           u3540 017A                           u3460 012D  
                         u3380 00E0                           u2901 0D00                           u3701 0213  
                         u3621 01C6                           u3541 0179                           u3461 012C  
                         u3381 00DF                           u3710 021A                           u3630 01CD  
                         u3550 0180                           u3470 0133                           u3390 00E6  
                         u3711 0219                           u3631 01CC                           u3551 017F  
                         u3471 0132                           u3391 00E5                           u2920 0D13  
                         u3800 026D                           u3720 0220                           u3640 01D3  
                         u3560 0186                           u3480 0139                           u2921 0D12  
                         u3801 026C                           u3721 021F                           u3641 01D2  
                         u3561 0185                           u3481 0138                           u2930 0D1D  
                         u2850 07E9                           u3810 0273                           u3730 0226  
                         u3650 01D9                           u3570 018C                           u3490 013F  
                         u2931 0D1C                           u2915 0D05                           u2851 07E8  
                         u3811 0272                           u3731 0225                           u3651 01D8  
                         u3571 018B                           u3491 013E                           u2860 07F6  
                         u3820 0279                           u3740 022C                           u3660 01DF  
                         u3580 0192                           u2861 07F5                           u3821 0278  
                         u3741 022B                           u3661 01DE                           u3581 0191  
                         u2950 0D30                           u2870 0C98                           u3830 027F  
                         u3750 0232                           u3670 01E5                           u3590 0198  
                         u2951 0D2F                           u2935 0D19                           u2871 0C97  
                         u3831 027E                           u3751 0231                           u3671 01E4  
                         u3591 0197                           u2960 0D35                           u2880 0CEB  
                         u3840 0285                           u3760 0238                           u3680 01EB  
                         u2961 0D34                           u2945 0D24                           u2881 0CEA  
                         u3841 0284                           u3761 0237                           u3681 01EA  
                         u2890 0CF6                           u2970 0CAD                           u3850 028B  
                         u3770 023E                           u3690 01F1                           u2891 0CF5  
                         u2875 0C94                           u3907 0DB2                           u3851 028A  
                         u3771 023D                           u3691 01F0                           u2980 0CD1  
                         u3860 0291                           u3780 0244                           _RCIF 0065  
                         u3917 0DC6                           u3861 0290                           u3781 0243  
                         u2990 0CE3                           u3870 0297                           u3790 024A  
                         u2991 0CE2                           u3927 0DDA                           u3871 0296  
                         u3791 0249                           u3880 029D                           u3937 038B  
                         u3881 029C                           u3890 02A3                           u3947 03BF  
                         u3891 02A2                           u3957 0416                           u3967 044A  
                         u3977 04A1                           u3987 04D5                           u3997 0515  
               ??_KeyPadReader 0043                           _TMR0 0001                           _SPEN 00C7  
                         _TXEN 04C5                           _TXIF 0064                           _SYNC 04C4  
                         _data 0020                           _flag 0030                           _main 003E  
                         _num1 003F                           _num2 003E                           _num3 003D  
                         _keys 075F                           _num4 003C                           _num5 003B  
                         btemp 007E                           _type 0034                           start 0010  
            ___bmul@multiplier 0046                          ??_ISR 0070                   ?_intToString 0056  
                        ?_main 0070                __end_of___awdiv 0DA8                          STR_10 07D3  
                        STR_11 0772                __end_of___awmod 0D3F                ___awdiv@divisor 004D  
                        i1l300 0F5B                          i1l302 0F5F                          i1l303 0F60  
                        i1l305 0F64                          i1l306 0F65                          i1l308 0F69  
                        i1l318 0FF5                          i1l270 0F29                          i1l272 0F2D  
                        i1l264 0F1F                          i1l281 0F3C                          i1l273 0F2E  
                        i1l290 0F4B                          i1l282 0F3D                          i1l266 0F23  
                        i1l291 0F4C                          i1l275 0F32                          i1l267 0F24  
                        i1l284 0F41                          i1l276 0F33                          i1l293 0F50  
                        i1l285 0F42                          i1l269 0F28                          i1l294 0F51  
                        i1l278 0F37                          i1l287 0F46                          i1l279 0F38  
                        i1l296 0F55                          i1l288 0F47                          i1l297 0F56  
                        i1l299 0F5A                ___awdiv@counter 0052                          _RCREG 001A  
                        _SPBRG 0099                          _PORTB 0006                          _PORTD 0008  
                        _TRISA 0085                          _TRISB 0086                          _TRISC 0087  
                        _TRISD 0088                          _TRISE 0089                          _TXREG 0019  
                  ?_UART_Read1 0070                    ?_UART_Read2 0070                __end_of_colMask 0772  
              __end_of_lcdSend 0C59                    ?_UART_Write 0070                __end_of_initLCD 0E16  
                        _count 002C                          _index 002E                          _keyok 0039  
                        _stato 0075                 __pbitbssCOMMON 03C0                          pclath 000A  
              __end_of_rowMask 076F                __end_of_potenza 0C9C                          status 0003  
                        wtemp0 007E   __end_of_GenerateRandomNumber 0C70                __initialization 0013  
                 __end_of_main 0344                   __end_of_keys 076B                         ??_main 0063  
             ___awdiv@dividend 004F                         i1l2541 0F72                         i1l2551 0F84  
                       i1l2543 0F78                         i1l2561 0FA4                         i1l2553 0F8F  
                       i1l2545 0F79                         i1l2537 0F1F                         i1l2571 0FBE  
                       i1l2563 0FA8                         i1l2555 0F90                         i1l2539 0F6A  
                       i1l2581 0FE1                         i1l2573 0FCB                         i1l2565 0FA9  
                       i1l2549 0F80                         i1l2583 0FE3                         i1l2575 0FCF  
                       i1l2567 0FAD                         i1l2559 0F97                         i1l2569 0FBA  
                       i1l2577 0FD0                         i1l2585 0FED                         i1l2579 0FD6  
                       i1l2589 0FF2                         u260_20 0F2D                         u260_21 0F2C  
                       u261_20 0F32                         u261_21 0F31                         u270_20 0F5F  
                       u262_20 0F37                         u270_21 0F5E                         u262_21 0F36  
                       u271_20 0F64                         u263_20 0F3C                         u271_21 0F63  
                       u263_21 0F3B                         u280_20 0FCB                         u272_20 0F69  
                       u264_20 0F41                         u280_21 0FCA                         u272_21 0F68  
                       u264_21 0F40                         u281_20 0FCF                         u273_20 0F72  
                       u265_20 0F46                         u281_21 0FCE                         u273_21 0F71  
                       u265_21 0F45                         u282_20 0FD6                         u274_20 0F7F  
                       u266_20 0F4B                         u258_20 0F23                         u282_21 0FD5  
                       u274_21 0F7E                         u266_21 0F4A                         u258_21 0F22  
                       u275_20 0F96                         u267_20 0F50                         u259_20 0F28  
                       u275_21 0F95                         u267_21 0F4F                         u259_21 0F27  
                       u283_25 0FD9                         u284_20 0FED                         u276_20 0FA4  
                       u268_20 0F55                         u284_21 0FEC                         u276_21 0FA3  
                       u268_21 0F54                         u277_20 0FA8                         u269_20 0F5A  
                       u277_21 0FA7                         u269_21 0F59                         u278_20 0FBA  
                       u278_21 0FB9                         u279_20 0FBE                         u279_21 0FBD  
                       _TMR0IE 005D                         _TMR0IF 005A                         _TRISC6 043E  
                       _TRISC7 043F                  ??_Timer0_Init 0043               __end_of_lcdPrint 0CE4  
            __end_of_UART_Init 0C44                         ___bmul 07E1                      ??___awdiv 0051  
                    ??___awmod 0047                         _codice 0026               ___awdiv@quotient 0054  
              ___awmod@divisor 0043           __end_of_KeyPadReader 0F1F                ___awmod@counter 0048  
                    ??_lcdSend 0044                      ??_initLCD 0045                   __pdataCOMMON 0079  
                       saved_w 007E                      ??_potenza 0048        __end_of__initialization 003A  
             intToString@cifre 005D            ___bmul@multiplicand 0043                 __pcstackCOMMON 0070  
                 __pidataBANK0 0C0D            __end_of_Timer0_Init 0C32           _GenerateRandomNumber 0C59  
                   __pbssBANK0 0020                     __pbssBANK1 00A0                     __pmaintext 003E  
                      ?___bmul 0043                     __pintentry 0004                   ??_UART_Read1 005F  
                 ??_UART_Read2 005F          ?_GenerateRandomNumber 0070                   ??_UART_Write 0043  
                    ?_lcdPrint 0045                     __stringtab 074F                   intToString@i 005E  
                 intToString@n 0056                   intToString@t 005C                    _Timer0_Init 0C23  
           __end_of_UART_Read1 074F             __end_of_UART_Read2 0563                 _RS485_RxEnable 0C0F  
                      ___awdiv 0D3F                        ___awmod 0CE4             __end_of_UART_Write 0C23  
               _RS485_TxEnable 0C14                        _colMask 076F                        _colScan 0077  
                      _lcdSend 0C44                        __ptext1 0DA8                        __ptext2 0344  
                      __ptext3 0563                        __ptext4 0C9C                        __ptext5 0C44  
                      __ptext6 0E16                        __ptext7 0C70                        __ptext8 07E1  
                      __ptext9 0CE4                        _initLCD 0DA8                        _old_btn 03C0  
             ___awmod@dividend 0045                     _keypressed 003A                        _restart 0037  
                      _rowMask 076B                        _rowScan 0076                        _potenza 0C70  
                   ??_lcdPrint 0047                        clrloop0 07F9                        _stringa 00A0  
         end_of_initialization 003A                   _KeyPadReader 0E92         __end_of_RS485_RxEnable 0C14  
       __end_of_RS485_TxEnable 0C19                      _UART_Init 0C32                      _PORTEbits 0009  
               UART_Write@data 0043         ??_GenerateRandomNumber 0043                      _TRISEbits 0089  
              ?_RS485_RxEnable 0070                ?_RS485_TxEnable 0070                 __end_of___bmul 07F8  
                   ?_UART_Init 0070                  __pidataCOMMON 0003            start_initialization 0013  
GenerateRandomNumber@randomNum 0043                    __end_of_ISR 1000                 _stringPosition 0032  
               intToString@str 0058                       ??___bmul 0044                    __pdataBANK0 0063  
                ??_intToString 0059                    __pbssCOMMON 0075                      ___latbits 0002  
                __pcstackBANK0 0043                UART_Read1@count 0062                   ?_Timer0_Init 0070  
                     ?___awdiv 004D                       ?___awmod 0043                    ??_UART_Init 0043  
                    __pstrings 074F                       ?_lcdSend 0043                       ?_initLCD 0070  
          __end_of_intToString 0E92                      _countdown 0079                       ?_potenza 0047  
                    _randomNum 0035                      _old_stato 0038              interrupt_function 0004  
                    clear_ram0 07F8                _print_countdown 0040                      lcdPrint@n 004A  
                  __stringbase 075E               ??_RS485_RxEnable 0043               ??_RS485_TxEnable 0043  
                  _intToString 0E16             __end_of__stringtab 075F                       __ptext10 0D3F  
                     __ptext11 0C19                       __ptext12 0C14                       __ptext13 0C0F  
                     __ptext14 0C32                       __ptext15 0C23                       __ptext16 0E92  
                     __ptext17 0C59                       __ptext18 0F1F                       _lcdPrint 0C9C  
                     _received 0036                       intlevel1 0000                      stringcode 0759  
                     potenza@b 0049                       potenza@e 0047                       potenza@i 004A  
                     potenza@n 004C                    lcdSend@dato 0044                    lcdSend@tipo 0043  
                   _UART_Read1 0563                     _UART_Read2 0344                       stringdir 0759  
                     stringtab 074F                     _UART_Write 0C19      GenerateRandomNumber@count 0044  
                  lcdPrint@str 0045                  ?_KeyPadReader 0070  
