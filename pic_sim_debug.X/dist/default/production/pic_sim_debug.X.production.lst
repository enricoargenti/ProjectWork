

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Jun 30 14:57:36 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36     0000                     
    37                           ; Generated 22/03/2023 GMT
    38                           ; 
    39                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F877A Definitions
    69                           ; 
    70                           ; SFR Addresses
    71     0000                     	;# 
    72     0001                     	;# 
    73     0002                     	;# 
    74     0003                     	;# 
    75     0004                     	;# 
    76     0005                     	;# 
    77     0006                     	;# 
    78     0007                     	;# 
    79     0008                     	;# 
    80     0009                     	;# 
    81     000A                     	;# 
    82     000B                     	;# 
    83     000C                     	;# 
    84     000D                     	;# 
    85     000E                     	;# 
    86     000E                     	;# 
    87     000F                     	;# 
    88     0010                     	;# 
    89     0011                     	;# 
    90     0012                     	;# 
    91     0013                     	;# 
    92     0014                     	;# 
    93     0015                     	;# 
    94     0015                     	;# 
    95     0016                     	;# 
    96     0017                     	;# 
    97     0018                     	;# 
    98     0019                     	;# 
    99     001A                     	;# 
   100     001B                     	;# 
   101     001B                     	;# 
   102     001C                     	;# 
   103     001D                     	;# 
   104     001E                     	;# 
   105     001F                     	;# 
   106     0081                     	;# 
   107     0085                     	;# 
   108     0086                     	;# 
   109     0087                     	;# 
   110     0088                     	;# 
   111     0089                     	;# 
   112     008C                     	;# 
   113     008D                     	;# 
   114     008E                     	;# 
   115     0091                     	;# 
   116     0092                     	;# 
   117     0093                     	;# 
   118     0094                     	;# 
   119     0098                     	;# 
   120     0099                     	;# 
   121     009C                     	;# 
   122     009D                     	;# 
   123     009E                     	;# 
   124     009F                     	;# 
   125     010C                     	;# 
   126     010D                     	;# 
   127     010E                     	;# 
   128     010F                     	;# 
   129     018C                     	;# 
   130     018D                     	;# 
   131     0000                     	;# 
   132     0001                     	;# 
   133     0002                     	;# 
   134     0003                     	;# 
   135     0004                     	;# 
   136     0005                     	;# 
   137     0006                     	;# 
   138     0007                     	;# 
   139     0008                     	;# 
   140     0009                     	;# 
   141     000A                     	;# 
   142     000B                     	;# 
   143     000C                     	;# 
   144     000D                     	;# 
   145     000E                     	;# 
   146     000E                     	;# 
   147     000F                     	;# 
   148     0010                     	;# 
   149     0011                     	;# 
   150     0012                     	;# 
   151     0013                     	;# 
   152     0014                     	;# 
   153     0015                     	;# 
   154     0015                     	;# 
   155     0016                     	;# 
   156     0017                     	;# 
   157     0018                     	;# 
   158     0019                     	;# 
   159     001A                     	;# 
   160     001B                     	;# 
   161     001B                     	;# 
   162     001C                     	;# 
   163     001D                     	;# 
   164     001E                     	;# 
   165     001F                     	;# 
   166     0081                     	;# 
   167     0085                     	;# 
   168     0086                     	;# 
   169     0087                     	;# 
   170     0088                     	;# 
   171     0089                     	;# 
   172     008C                     	;# 
   173     008D                     	;# 
   174     008E                     	;# 
   175     0091                     	;# 
   176     0092                     	;# 
   177     0093                     	;# 
   178     0094                     	;# 
   179     0098                     	;# 
   180     0099                     	;# 
   181     009C                     	;# 
   182     009D                     	;# 
   183     009E                     	;# 
   184     009F                     	;# 
   185     010C                     	;# 
   186     010D                     	;# 
   187     010E                     	;# 
   188     010F                     	;# 
   189     018C                     	;# 
   190     018D                     	;# 
   191                           
   192                           	psect	idataBANK0
   193     0F1E                     __pidataBANK0:
   194                           
   195                           ;initializer for _id1
   196     0F1E  3430               	retlw	48
   197                           
   198                           ;initializer for _countdown
   199     0F1F  343C               	retlw	60
   200                           
   201                           	psect	strings
   202     052A                     __pstrings:
   203     052A                     stringtab:
   204     052A                     __stringtab:
   205                           
   206                           ;	String table - string pointers are 1 byte each
   207     052A  1BFF               	btfsc	btemp+1,7
   208     052B  2D34               	ljmp	stringcode
   209     052C  1383               	bcf	3,7
   210     052D  187F               	btfsc	btemp+1,0
   211     052E  1783               	bsf	3,7
   212     052F  0800               	movf	0,w
   213     0530  0A84               	incf	4,f
   214     0531  1903               	skipnz
   215     0532  0AFF               	incf	btemp+1,f
   216     0533  0008               	return
   217     0534                     stringcode:
   218     0534                     stringdir:
   219     0534  3005               	movlw	high stringdir
   220     0535  008A               	movwf	10
   221     0536  0804               	movf	4,w
   222     0537  0A84               	incf	4,f
   223     0538  0782               	addwf	2,f
   224     0539                     __stringbase:
   225     0539  3400               	retlw	0
   226     053A                     __end_of__stringtab:
   227     053A                     _keys:
   228     053A  3423               	retlw	35
   229     053B  3437               	retlw	55
   230     053C  3434               	retlw	52
   231     053D  3431               	retlw	49
   232     053E  342A               	retlw	42
   233     053F  3438               	retlw	56
   234     0540  3435               	retlw	53
   235     0541  3432               	retlw	50
   236     0542  3430               	retlw	48
   237     0543  3439               	retlw	57
   238     0544  3436               	retlw	54
   239     0545  3433               	retlw	51
   240     0546                     __end_of_keys:
   241     0546                     _rowMask:
   242     0546  3401               	retlw	1
   243     0547  3402               	retlw	2
   244     0548  3404               	retlw	4
   245     0549  3408               	retlw	8
   246     054A                     __end_of_rowMask:
   247     054A                     _colMask:
   248     054A  34FE               	retlw	254
   249     054B  34FD               	retlw	253
   250     054C  34FB               	retlw	251
   251     054D                     __end_of_colMask:
   252     0001                     _TMR0	set	1
   253     0006                     _PORTB	set	6
   254     0008                     _PORTD	set	8
   255     0009                     _PORTEbits	set	9
   256     001A                     _RCREG	set	26
   257     0019                     _TXREG	set	25
   258     005F                     _GIE	set	95
   259     005D                     _TMR0IE	set	93
   260     005A                     _TMR0IF	set	90
   261     0065                     _RCIF	set	101
   262     0064                     _TXIF	set	100
   263     0039                     _RC1	set	57
   264     0038                     _RC0	set	56
   265     00C4                     _CREN	set	196
   266     00C7                     _SPEN	set	199
   267     0089                     _TRISEbits	set	137
   268     0099                     _SPBRG	set	153
   269     0089                     _TRISE	set	137
   270     0088                     _TRISD	set	136
   271     0087                     _TRISC	set	135
   272     0086                     _TRISB	set	134
   273     0085                     _TRISA	set	133
   274     0408                     _PS0	set	1032
   275     0409                     _PS1	set	1033
   276     040A                     _PS2	set	1034
   277     040B                     _PSA	set	1035
   278     040D                     _T0CS	set	1037
   279     04C5                     _TXEN	set	1221
   280     04C4                     _SYNC	set	1220
   281     04C2                     _BRGH	set	1218
   282     043F                     _TRISC7	set	1087
   283     043E                     _TRISC6	set	1086
   284     054D                     STR_10:
   285     054D  3443               	retlw	67	;'C'
   286     054E  346F               	retlw	111	;'o'
   287     054F  3464               	retlw	100	;'d'
   288     0550  3469               	retlw	105	;'i'
   289     0551  3463               	retlw	99	;'c'
   290     0552  3465               	retlw	101	;'e'
   291     0553  3420               	retlw	32	;' '
   292     0554  3453               	retlw	83	;'S'
   293     0555  3463               	retlw	99	;'c'
   294     0556  3461               	retlw	97	;'a'
   295     0557  3464               	retlw	100	;'d'
   296     0558  3475               	retlw	117	;'u'
   297     0559  3474               	retlw	116	;'t'
   298     055A  346F               	retlw	111	;'o'
   299     055B  3400               	retlw	0
   300     055C                     STR_5:
   301     055C  3441               	retlw	65	;'A'
   302     055D  3474               	retlw	116	;'t'
   303     055E  3474               	retlw	116	;'t'
   304     055F  3465               	retlw	101	;'e'
   305     0560  346E               	retlw	110	;'n'
   306     0561  3464               	retlw	100	;'d'
   307     0562  3465               	retlw	101	;'e'
   308     0563  3472               	retlw	114	;'r'
   309     0564  3465               	retlw	101	;'e'
   310     0565  342E               	retlw	46	;'.'
   311     0566  342E               	retlw	46	;'.'
   312     0567  342E               	retlw	46	;'.'
   313     0568  342E               	retlw	46	;'.'
   314     0569  3400               	retlw	0
   315     056A                     STR_8:
   316     056A  3454               	retlw	84	;'T'
   317     056B  3465               	retlw	101	;'e'
   318     056C  346D               	retlw	109	;'m'
   319     056D  3470               	retlw	112	;'p'
   320     056E  346F               	retlw	111	;'o'
   321     056F  3420               	retlw	32	;' '
   322     0570  3453               	retlw	83	;'S'
   323     0571  3463               	retlw	99	;'c'
   324     0572  3461               	retlw	97	;'a'
   325     0573  3464               	retlw	100	;'d'
   326     0574  3475               	retlw	117	;'u'
   327     0575  3474               	retlw	116	;'t'
   328     0576  346F               	retlw	111	;'o'
   329     0577  3400               	retlw	0
   330     0578                     STR_4:
   331     0578  3441               	retlw	65	;'A'
   332     0579  3474               	retlw	116	;'t'
   333     057A  3474               	retlw	116	;'t'
   334     057B  3465               	retlw	101	;'e'
   335     057C  346E               	retlw	110	;'n'
   336     057D  3464               	retlw	100	;'d'
   337     057E  3465               	retlw	101	;'e'
   338     057F  3472               	retlw	114	;'r'
   339     0580  3465               	retlw	101	;'e'
   340     0581  342E               	retlw	46	;'.'
   341     0582  342E               	retlw	46	;'.'
   342     0583  342E               	retlw	46	;'.'
   343     0584  3400               	retlw	0
   344     0585                     STR_3:
   345     0585  3441               	retlw	65	;'A'
   346     0586  3474               	retlw	116	;'t'
   347     0587  3474               	retlw	116	;'t'
   348     0588  3465               	retlw	101	;'e'
   349     0589  346E               	retlw	110	;'n'
   350     058A  3464               	retlw	100	;'d'
   351     058B  3465               	retlw	101	;'e'
   352     058C  3472               	retlw	114	;'r'
   353     058D  3465               	retlw	101	;'e'
   354     058E  342E               	retlw	46	;'.'
   355     058F  342E               	retlw	46	;'.'
   356     0590  3400               	retlw	0
   357     0591                     STR_2:
   358     0591  3441               	retlw	65	;'A'
   359     0592  3474               	retlw	116	;'t'
   360     0593  3474               	retlw	116	;'t'
   361     0594  3465               	retlw	101	;'e'
   362     0595  346E               	retlw	110	;'n'
   363     0596  3464               	retlw	100	;'d'
   364     0597  3465               	retlw	101	;'e'
   365     0598  3472               	retlw	114	;'r'
   366     0599  3465               	retlw	101	;'e'
   367     059A  342E               	retlw	46	;'.'
   368     059B  3400               	retlw	0
   369     059C                     STR_7:
   370     059C  3441               	retlw	65	;'A'
   371     059D  3450               	retlw	80	;'P'
   372     059E  3452               	retlw	82	;'R'
   373     059F  3449               	retlw	73	;'I'
   374     05A0  3420               	retlw	32	;' '
   375     05A1  3450               	retlw	80	;'P'
   376     05A2  344F               	retlw	79	;'O'
   377     05A3  3452               	retlw	82	;'R'
   378     05A4  3454               	retlw	84	;'T'
   379     05A5  3441               	retlw	65	;'A'
   380     05A6  3400               	retlw	0
   381     05A7                     STR_1:
   382     05A7  3441               	retlw	65	;'A'
   383     05A8  3474               	retlw	116	;'t'
   384     05A9  3474               	retlw	116	;'t'
   385     05AA  3465               	retlw	101	;'e'
   386     05AB  346E               	retlw	110	;'n'
   387     05AC  3464               	retlw	100	;'d'
   388     05AD  3465               	retlw	101	;'e'
   389     05AE  3472               	retlw	114	;'r'
   390     05AF  3465               	retlw	101	;'e'
   391     05B0  3400               	retlw	0
   392     05B1                     STR_9:
   393     05B1  344D               	retlw	77	;'M'
   394     05B2  3461               	retlw	97	;'a'
   395     05B3  346E               	retlw	110	;'n'
   396     05B4  3464               	retlw	100	;'d'
   397     05B5  3461               	retlw	97	;'a'
   398     05B6  3474               	retlw	116	;'t'
   399     05B7  346F               	retlw	111	;'o'
   400     05B8  3400               	retlw	0
   401     05A7                     
   402                           	psect	cinit
   403     0013                     start_initialization:	
   404                           ; #config settings
   405                           
   406     0013                     __initialization:
   407                           
   408                           ; Initialize objects allocated to BANK0
   409     0013  120A  158A  271E  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   410     0018  00E6               	movwf	__pdataBANK0& (0+127)
   411     0019  120A  158A  271F  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   412     001E  00E7               	movwf	(__pdataBANK0+1)& (0+127)
   413                           
   414                           ; Clear objects allocated to BANK1
   415     001F  1383               	bcf	3,7	;select IRP bank0
   416     0020  30A0               	movlw	low __pbssBANK1
   417     0021  0084               	movwf	4
   418     0022  30B0               	movlw	low (__pbssBANK1+16)
   419     0023  120A  158A  2725  120A  118A  	fcall	clear_ram0
   420                           
   421                           ; Clear objects allocated to BANK0
   422     0028  3020               	movlw	low __pbssBANK0
   423     0029  0084               	movwf	4
   424     002A  3047               	movlw	low (__pbssBANK0+39)
   425     002B  120A  158A  2725  120A  118A  	fcall	clear_ram0
   426                           
   427                           ; Clear objects allocated to COMMON
   428     0030  01F5               	clrf	__pbssCOMMON& (0+127)
   429     0031  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   430     0032  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   431     0033  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   432                           
   433                           ; Clear objects allocated to BITCOMMON
   434     0034  01F9               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   435     0035                     end_of_initialization:	
   436                           ;End of C runtime variable initialization code
   437                           
   438     0035                     __end_of__initialization:
   439     0035  0183               	clrf	3
   440     0036  120A  118A  2839   	ljmp	_main	;jump to C main() function
   441                           
   442                           	psect	bitbssCOMMON
   443     03C8                     __pbitbssCOMMON:
   444     03C8                     _old_btn:
   445     03C8                     	ds	1
   446                           
   447                           	psect	bssCOMMON
   448     0075                     __pbssCOMMON:
   449     0075                     _keypressed:
   450     0075                     	ds	1
   451     0076                     _num3:
   452     0076                     	ds	1
   453     0077                     _num2:
   454     0077                     	ds	1
   455     0078                     _num1:
   456     0078                     	ds	1
   457                           
   458                           	psect	bssBANK0
   459     0020                     __pbssBANK0:
   460     0020                     _data:
   461     0020                     	ds	6
   462     0026                     _codice:
   463     0026                     	ds	6
   464     002C                     _count:
   465     002C                     	ds	2
   466     002E                     _index:
   467     002E                     	ds	2
   468     0030                     _flag:
   469     0030                     	ds	2
   470     0032                     _stringPosition:
   471     0032                     	ds	2
   472     0034                     _type:
   473     0034                     	ds	1
   474     0035                     _randomNum:
   475     0035                     	ds	1
   476     0036                     _received:
   477     0036                     	ds	1
   478     0037                     _restart:
   479     0037                     	ds	1
   480     0038                     _old_stato:
   481     0038                     	ds	1
   482     0039                     _stato:
   483     0039                     	ds	1
   484     003A                     _rowScan:
   485     003A                     	ds	1
   486     003B                     _colScan:
   487     003B                     	ds	1
   488     003C                     _keyok:
   489     003C                     	ds	1
   490     003D                     _num25:
   491     003D                     	ds	1
   492     003E                     _num24:
   493     003E                     	ds	1
   494     003F                     _num23:
   495     003F                     	ds	1
   496     0040                     _num22:
   497     0040                     	ds	1
   498     0041                     _num21:
   499     0041                     	ds	1
   500     0042                     _num5:
   501     0042                     	ds	1
   502     0043                     _num4:
   503     0043                     	ds	1
   504     0044                     _print_countdown:
   505     0044                     	ds	3
   506                           
   507                           	psect	dataBANK0
   508     0066                     __pdataBANK0:
   509     0066                     _id1:
   510     0066                     	ds	1
   511     0067                     _countdown:
   512     0067                     	ds	1
   513                           
   514                           	psect	bssBANK1
   515     00A0                     __pbssBANK1:
   516     00A0                     _stringa:
   517     00A0                     	ds	16
   518                           
   519                           	psect	clrtext
   520     0F25                     clear_ram0:	
   521                           ;	Called with FSR containing the base address, and
   522                           ;	W with the last address+1
   523                           
   524     0F25  0064               	clrwdt	;clear the watchdog before getting into this loop
   525     0F26                     clrloop0:
   526     0F26  0180               	clrf	0	;clear RAM location pointed to by FSR
   527     0F27  0A84               	incf	4,f	;increment pointer
   528     0F28  0604               	xorwf	4,w	;XOR with final address
   529     0F29  1903               	btfsc	3,2	;have we reached the end yet?
   530     0F2A  3400               	retlw	0	;all done for this memory range, return
   531     0F2B  0604               	xorwf	4,w	;XOR again to restore value
   532     0F2C  2F26               	goto	clrloop0	;do the next byte
   533                           
   534                           	psect	cstackCOMMON
   535     0070                     __pcstackCOMMON:
   536     0070                     ?_UART_Init:
   537     0070                     ?_initLCD:	
   538                           ; 1 bytes @ 0x0
   539                           
   540     0070                     ?_Timer0_Init:	
   541                           ; 1 bytes @ 0x0
   542                           
   543     0070                     ?_GenerateRandomNumber:	
   544                           ; 1 bytes @ 0x0
   545                           
   546     0070                     ?_KeyPadReader:	
   547                           ; 1 bytes @ 0x0
   548                           
   549     0070                     ?_UART_Write:	
   550                           ; 1 bytes @ 0x0
   551                           
   552     0070                     ?_RS485_RxEnable:	
   553                           ; 1 bytes @ 0x0
   554                           
   555     0070                     ?_UART_Read2:	
   556                           ; 1 bytes @ 0x0
   557                           
   558     0070                     ?_main:	
   559                           ; 1 bytes @ 0x0
   560                           
   561     0070                     ?_ISR:	
   562                           ; 1 bytes @ 0x0
   563                           
   564     0070                     ??_ISR:	
   565                           ; 1 bytes @ 0x0
   566                           
   567                           
   568                           ; 1 bytes @ 0x0
   569     0070                     	ds	5
   570                           
   571                           	psect	cstackBANK0
   572     0047                     __pcstackBANK0:
   573     0047                     ??_UART_Init:
   574     0047                     ??_Timer0_Init:	
   575                           ; 1 bytes @ 0x0
   576                           
   577     0047                     ??_GenerateRandomNumber:	
   578                           ; 1 bytes @ 0x0
   579                           
   580     0047                     ??_KeyPadReader:	
   581                           ; 1 bytes @ 0x0
   582                           
   583     0047                     ?_lcdSend:	
   584                           ; 1 bytes @ 0x0
   585                           
   586     0047                     ??_UART_Write:	
   587                           ; 1 bytes @ 0x0
   588                           
   589     0047                     ??_RS485_RxEnable:	
   590                           ; 1 bytes @ 0x0
   591                           
   592     0047                     ?___bmul:	
   593                           ; 1 bytes @ 0x0
   594                           
   595     0047                     ?___awmod:	
   596                           ; 1 bytes @ 0x0
   597                           
   598     0047                     UART_Write@data:	
   599                           ; 2 bytes @ 0x0
   600                           
   601     0047                     lcdSend@tipo:	
   602                           ; 1 bytes @ 0x0
   603                           
   604     0047                     GenerateRandomNumber@randomNum:	
   605                           ; 1 bytes @ 0x0
   606                           
   607     0047                     ___bmul@multiplicand:	
   608                           ; 1 bytes @ 0x0
   609                           
   610     0047                     ___awmod@divisor:	
   611                           ; 1 bytes @ 0x0
   612                           
   613                           
   614                           ; 2 bytes @ 0x0
   615     0047                     	ds	1
   616     0048                     ??_lcdSend:
   617     0048                     ??___bmul:	
   618                           ; 1 bytes @ 0x1
   619                           
   620     0048                     lcdSend@dato:	
   621                           ; 1 bytes @ 0x1
   622                           
   623     0048                     GenerateRandomNumber@count:	
   624                           ; 1 bytes @ 0x1
   625                           
   626                           
   627                           ; 2 bytes @ 0x1
   628     0048                     	ds	1
   629     0049                     ??_initLCD:
   630     0049                     ?_lcdPrint:	
   631                           ; 1 bytes @ 0x2
   632                           
   633     0049                     ___bmul@product:	
   634                           ; 1 bytes @ 0x2
   635                           
   636     0049                     lcdPrint@str:	
   637                           ; 1 bytes @ 0x2
   638                           
   639     0049                     ___awmod@dividend:	
   640                           ; 2 bytes @ 0x2
   641                           
   642                           
   643                           ; 2 bytes @ 0x2
   644     0049                     	ds	1
   645     004A                     ___bmul@multiplier:
   646                           
   647                           ; 1 bytes @ 0x3
   648     004A                     	ds	1
   649     004B                     ??_lcdPrint:
   650     004B                     ?_potenza:	
   651                           ; 1 bytes @ 0x4
   652                           
   653     004B                     ??___awmod:	
   654                           ; 1 bytes @ 0x4
   655                           
   656     004B                     potenza@e:	
   657                           ; 1 bytes @ 0x4
   658                           
   659                           
   660                           ; 1 bytes @ 0x4
   661     004B                     	ds	1
   662     004C                     ??_potenza:
   663     004C                     ___awmod@counter:	
   664                           ; 1 bytes @ 0x5
   665                           
   666                           
   667                           ; 1 bytes @ 0x5
   668     004C                     	ds	1
   669     004D                     potenza@b:
   670     004D                     ___awmod@sign:	
   671                           ; 1 bytes @ 0x6
   672                           
   673                           
   674                           ; 1 bytes @ 0x6
   675     004D                     	ds	1
   676     004E                     lcdPrint@n:
   677     004E                     potenza@i:	
   678                           ; 2 bytes @ 0x7
   679                           
   680                           
   681                           ; 2 bytes @ 0x7
   682     004E                     	ds	2
   683     0050                     potenza@n:
   684                           
   685                           ; 1 bytes @ 0x9
   686     0050                     	ds	1
   687     0051                     ?___awdiv:
   688     0051                     ___awdiv@divisor:	
   689                           ; 2 bytes @ 0xA
   690                           
   691                           
   692                           ; 2 bytes @ 0xA
   693     0051                     	ds	2
   694     0053                     ___awdiv@dividend:
   695                           
   696                           ; 2 bytes @ 0xC
   697     0053                     	ds	2
   698     0055                     ??___awdiv:
   699                           
   700                           ; 1 bytes @ 0xE
   701     0055                     	ds	1
   702     0056                     ___awdiv@counter:
   703                           
   704                           ; 1 bytes @ 0xF
   705     0056                     	ds	1
   706     0057                     ___awdiv@sign:
   707                           
   708                           ; 1 bytes @ 0x10
   709     0057                     	ds	1
   710     0058                     ___awdiv@quotient:
   711                           
   712                           ; 2 bytes @ 0x11
   713     0058                     	ds	2
   714     005A                     ?_intToString:
   715     005A                     intToString@n:	
   716                           ; 1 bytes @ 0x13
   717                           
   718                           
   719                           ; 2 bytes @ 0x13
   720     005A                     	ds	2
   721     005C                     intToString@str:
   722                           
   723                           ; 1 bytes @ 0x15
   724     005C                     	ds	1
   725     005D                     ??_intToString:
   726                           
   727                           ; 1 bytes @ 0x16
   728     005D                     	ds	3
   729     0060                     intToString@t:
   730                           
   731                           ; 1 bytes @ 0x19
   732     0060                     	ds	1
   733     0061                     intToString@cifre:
   734                           
   735                           ; 1 bytes @ 0x1A
   736     0061                     	ds	1
   737     0062                     intToString@i:
   738                           
   739                           ; 1 bytes @ 0x1B
   740     0062                     	ds	1
   741     0063                     ??_UART_Read2:
   742                           
   743                           ; 1 bytes @ 0x1C
   744     0063                     	ds	3
   745     0066                     ??_main:
   746                           
   747                           	psect	maintext
   748     0039                     __pmaintext:	
   749                           ; 1 bytes @ 0x1F
   750 ;;
   751 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   752 ;;
   753 ;; *************** function _main *****************
   754 ;; Defined at:
   755 ;;		line 107 in file "main.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;		None
   758 ;; Auto vars:     Size  Location     Type
   759 ;;		None
   760 ;; Return value:  Size  Location     Type
   761 ;;                  1    wreg      void 
   762 ;; Registers used:
   763 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   764 ;; Tracked objects:
   765 ;;		On entry : B00/0
   766 ;;		On exit  : 0/0
   767 ;;		Unchanged: 0/0
   768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   769 ;;      Params:         0       0       0       0       0
   770 ;;      Locals:         0       0       0       0       0
   771 ;;      Temps:          0       0       0       0       0
   772 ;;      Totals:         0       0       0       0       0
   773 ;;Total ram usage:        0 bytes
   774 ;; Hardware stack levels required when called: 6
   775 ;; This function calls:
   776 ;;		_GenerateRandomNumber
   777 ;;		_KeyPadReader
   778 ;;		_RS485_RxEnable
   779 ;;		_Timer0_Init
   780 ;;		_UART_Init
   781 ;;		_UART_Read2
   782 ;;		_UART_Write
   783 ;;		_initLCD
   784 ;;		_lcdPrint
   785 ;;		_lcdSend
   786 ;; This function is called by:
   787 ;;		Startup code after reset
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791     0039                     _main:	
   792                           ;psect for function _main
   793                           
   794     0039                     l2750:	
   795                           ;incstack = 0
   796                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   797                           
   798                           
   799                           ;main.c: 109:     TRISA=0x00;
   800     0039  1683               	bsf	3,5	;RP0=1, select bank1
   801     003A  1303               	bcf	3,6	;RP1=0, select bank1
   802     003B  0185               	clrf	5	;volatile
   803                           
   804                           ;main.c: 110:  TRISB=0x00;
   805     003C  0186               	clrf	6	;volatile
   806                           
   807                           ;main.c: 111:  TRISC=0x00;
   808     003D  0187               	clrf	7	;volatile
   809                           
   810                           ;main.c: 112:  TRISD=0x00;
   811     003E  0188               	clrf	8	;volatile
   812                           
   813                           ;main.c: 113:     TRISE=0X00;
   814     003F  0189               	clrf	9	;volatile
   815     0040                     l2752:
   816                           
   817                           ;main.c: 114:     UART_Init();
   818     0040  120A  158A  2737  120A  118A  	fcall	_UART_Init
   819     0045                     l2754:
   820                           
   821                           ;main.c: 115:     initLCD();
   822     0045  120A  118A  26C1  120A  118A  	fcall	_initLCD
   823     004A                     l2756:
   824                           
   825                           ;main.c: 116:     Timer0_Init();
   826     004A  120A  118A  27F1  120A  118A  	fcall	_Timer0_Init
   827     004F                     l2758:
   828                           
   829                           ;main.c: 118:     {;main.c: 131:         num1 = GenerateRandomNumber();
   830     004F  120A  158A  275E  120A  118A  	fcall	_GenerateRandomNumber
   831     0054  00F8               	movwf	_num1
   832     0055                     l2760:
   833                           
   834                           ;main.c: 132:         num2 = GenerateRandomNumber();
   835     0055  120A  158A  275E  120A  118A  	fcall	_GenerateRandomNumber
   836     005A  00F7               	movwf	_num2
   837     005B                     l2762:
   838                           
   839                           ;main.c: 133:         num3 = GenerateRandomNumber();
   840     005B  120A  158A  275E  120A  118A  	fcall	_GenerateRandomNumber
   841     0060  00F6               	movwf	_num3
   842     0061                     l2764:
   843                           
   844                           ;main.c: 134:         num4 = GenerateRandomNumber();
   845     0061  120A  158A  275E  120A  118A  	fcall	_GenerateRandomNumber
   846     0066  1283               	bcf	3,5	;RP0=0, select bank0
   847     0067  1303               	bcf	3,6	;RP1=0, select bank0
   848     0068  00C3               	movwf	_num4
   849     0069                     l2766:
   850                           
   851                           ;main.c: 135:         num5 = GenerateRandomNumber();
   852     0069  120A  158A  275E  120A  118A  	fcall	_GenerateRandomNumber
   853     006E  1283               	bcf	3,5	;RP0=0, select bank0
   854     006F  1303               	bcf	3,6	;RP1=0, select bank0
   855     0070  00C2               	movwf	_num5
   856                           
   857                           ;main.c: 136:         while (codice[0] == '\0')
   858     0071  2885               	goto	l2774
   859     0072                     l2768:
   860                           
   861                           ;main.c: 137:         {;main.c: 138:             KeyPadReader();
   862     0072  120A  118A  25B9  120A  118A  	fcall	_KeyPadReader
   863     0077                     l2770:
   864                           
   865                           ;main.c: 139:             if (keys[keypressed] == '*'){
   866     0077  0875               	movf	_keypressed,w
   867     0078  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
   868     0079  0084               	movwf	4
   869     007A  120A  118A  2534  120A  118A  	fcall	stringdir
   870     007F  3A2A               	xorlw	42
   871     0080  1D03               	skipz
   872     0081  2883               	goto	u3141
   873     0082  2884               	goto	u3140
   874     0083                     u3141:
   875     0083  2885               	goto	l2774
   876     0084                     u3140:
   877     0084  288C               	goto	l2776
   878     0085                     l2774:
   879                           
   880                           ;main.c: 136:         while (codice[0] == '\0')
   881     0085  1283               	bcf	3,5	;RP0=0, select bank0
   882     0086  1303               	bcf	3,6	;RP1=0, select bank0
   883     0087  0826               	movf	_codice,w
   884     0088  1903               	btfsc	3,2
   885     0089  288B               	goto	u3151
   886     008A  288C               	goto	u3150
   887     008B                     u3151:
   888     008B  2872               	goto	l2768
   889     008C                     u3150:
   890     008C                     l2776:
   891                           
   892                           ;main.c: 143:         lcdSend(0x01, 0);
   893     008C  1283               	bcf	3,5	;RP0=0, select bank0
   894     008D  1303               	bcf	3,6	;RP1=0, select bank0
   895     008E  01C7               	clrf	lcdSend@tipo
   896     008F  3001               	movlw	1
   897     0090  120A  158A  2749  120A  118A  	fcall	_lcdSend
   898     0095                     l2778:
   899                           
   900                           ;main.c: 144:         lcdPrint("Attendere");
   901     0095  306E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   902     0096  1283               	bcf	3,5	;RP0=0, select bank0
   903     0097  1303               	bcf	3,6	;RP1=0, select bank0
   904     0098  00C9               	movwf	lcdPrint@str
   905     0099  3080               	movlw	128
   906     009A  00CA               	movwf	lcdPrint@str+1
   907     009B  120A  158A  27B8  120A  118A  	fcall	_lcdPrint
   908                           
   909                           ;main.c: 145:         while(num1 != 0x30 && num1 != 0x31 && num1 != 0x32 && num1 != 0x33
      +                           &&
   910     00A0  28A7               	goto	l2782
   911     00A1                     l2780:
   912                           
   913                           ;main.c: 147:               num1 != 0x38 && num1 != 0x39){;main.c: 148:         num1 = G
      +                          enerateRandomNumber();
   914     00A1  120A  158A  275E  120A  118A  	fcall	_GenerateRandomNumber
   915     00A6  00F8               	movwf	_num1
   916     00A7                     l2782:
   917                           
   918                           ;main.c: 145:         while(num1 != 0x30 && num1 != 0x31 && num1 != 0x32 && num1 != 0x33
      +                           &&
   919     00A7  3030               	movlw	48
   920     00A8  0678               	xorwf	_num1,w
   921     00A9  1903               	btfsc	3,2
   922     00AA  28AC               	goto	u3161
   923     00AB  28AD               	goto	u3160
   924     00AC                     u3161:
   925     00AC  28E3               	goto	l2802
   926     00AD                     u3160:
   927     00AD                     l2784:
   928     00AD  3031               	movlw	49
   929     00AE  0678               	xorwf	_num1,w
   930     00AF  1903               	btfsc	3,2
   931     00B0  28B2               	goto	u3171
   932     00B1  28B3               	goto	u3170
   933     00B2                     u3171:
   934     00B2  28E3               	goto	l2802
   935     00B3                     u3170:
   936     00B3                     l2786:
   937     00B3  3032               	movlw	50
   938     00B4  0678               	xorwf	_num1,w
   939     00B5  1903               	btfsc	3,2
   940     00B6  28B8               	goto	u3181
   941     00B7  28B9               	goto	u3180
   942     00B8                     u3181:
   943     00B8  28E3               	goto	l2802
   944     00B9                     u3180:
   945     00B9                     l2788:
   946     00B9  3033               	movlw	51
   947     00BA  0678               	xorwf	_num1,w
   948     00BB  1903               	btfsc	3,2
   949     00BC  28BE               	goto	u3191
   950     00BD  28BF               	goto	u3190
   951     00BE                     u3191:
   952     00BE  28E3               	goto	l2802
   953     00BF                     u3190:
   954     00BF                     l2790:
   955     00BF  3034               	movlw	52
   956     00C0  0678               	xorwf	_num1,w
   957     00C1  1903               	btfsc	3,2
   958     00C2  28C4               	goto	u3201
   959     00C3  28C5               	goto	u3200
   960     00C4                     u3201:
   961     00C4  28E3               	goto	l2802
   962     00C5                     u3200:
   963     00C5                     l2792:
   964     00C5  3035               	movlw	53
   965     00C6  0678               	xorwf	_num1,w
   966     00C7  1903               	btfsc	3,2
   967     00C8  28CA               	goto	u3211
   968     00C9  28CB               	goto	u3210
   969     00CA                     u3211:
   970     00CA  28E3               	goto	l2802
   971     00CB                     u3210:
   972     00CB                     l2794:
   973     00CB  3036               	movlw	54
   974     00CC  0678               	xorwf	_num1,w
   975     00CD  1903               	btfsc	3,2
   976     00CE  28D0               	goto	u3221
   977     00CF  28D1               	goto	u3220
   978     00D0                     u3221:
   979     00D0  28E3               	goto	l2802
   980     00D1                     u3220:
   981     00D1                     l2796:
   982     00D1  3037               	movlw	55
   983     00D2  0678               	xorwf	_num1,w
   984     00D3  1903               	btfsc	3,2
   985     00D4  28D6               	goto	u3231
   986     00D5  28D7               	goto	u3230
   987     00D6                     u3231:
   988     00D6  28E3               	goto	l2802
   989     00D7                     u3230:
   990     00D7                     l2798:
   991     00D7  3038               	movlw	56
   992     00D8  0678               	xorwf	_num1,w
   993     00D9  1903               	btfsc	3,2
   994     00DA  28DC               	goto	u3241
   995     00DB  28DD               	goto	u3240
   996     00DC                     u3241:
   997     00DC  28E3               	goto	l2802
   998     00DD                     u3240:
   999     00DD                     l2800:
  1000     00DD  3039               	movlw	57
  1001     00DE  0678               	xorwf	_num1,w
  1002     00DF  1D03               	btfss	3,2
  1003     00E0  28E2               	goto	u3251
  1004     00E1  28E3               	goto	u3250
  1005     00E2                     u3251:
  1006     00E2  28A1               	goto	l2780
  1007     00E3                     u3250:
  1008     00E3                     l2802:
  1009                           
  1010                           ;main.c: 150:         lcdSend(0x01, 0);
  1011     00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1012     00E4  1303               	bcf	3,6	;RP1=0, select bank0
  1013     00E5  01C7               	clrf	lcdSend@tipo
  1014     00E6  3001               	movlw	1
  1015     00E7  120A  158A  2749  120A  118A  	fcall	_lcdSend
  1016     00EC                     l2804:
  1017                           
  1018                           ;main.c: 151:         lcdPrint("Attendere.");
  1019     00EC  3058               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1020     00ED  1283               	bcf	3,5	;RP0=0, select bank0
  1021     00EE  1303               	bcf	3,6	;RP1=0, select bank0
  1022     00EF  00C9               	movwf	lcdPrint@str
  1023     00F0  3080               	movlw	128
  1024     00F1  00CA               	movwf	lcdPrint@str+1
  1025     00F2  120A  158A  27B8  120A  118A  	fcall	_lcdPrint
  1026                           
  1027                           ;main.c: 152:         while(num2 != 0x30 && num2 != 0x31 && num2 != 0x32 && num2 != 0x33
      +                           &&
  1028     00F7  28FE               	goto	l2808
  1029     00F8                     l2806:
  1030                           
  1031                           ;main.c: 154:               num2 != 0x38 && num2 != 0x39){;main.c: 155:         num2 = G
      +                          enerateRandomNumber();
  1032     00F8  120A  158A  275E  120A  118A  	fcall	_GenerateRandomNumber
  1033     00FD  00F7               	movwf	_num2
  1034     00FE                     l2808:
  1035                           
  1036                           ;main.c: 152:         while(num2 != 0x30 && num2 != 0x31 && num2 != 0x32 && num2 != 0x33
      +                           &&
  1037     00FE  3030               	movlw	48
  1038     00FF  0677               	xorwf	_num2,w
  1039     0100  1903               	btfsc	3,2
  1040     0101  2903               	goto	u3261
  1041     0102  2904               	goto	u3260
  1042     0103                     u3261:
  1043     0103  293A               	goto	l2828
  1044     0104                     u3260:
  1045     0104                     l2810:
  1046     0104  3031               	movlw	49
  1047     0105  0677               	xorwf	_num2,w
  1048     0106  1903               	btfsc	3,2
  1049     0107  2909               	goto	u3271
  1050     0108  290A               	goto	u3270
  1051     0109                     u3271:
  1052     0109  293A               	goto	l2828
  1053     010A                     u3270:
  1054     010A                     l2812:
  1055     010A  3032               	movlw	50
  1056     010B  0677               	xorwf	_num2,w
  1057     010C  1903               	btfsc	3,2
  1058     010D  290F               	goto	u3281
  1059     010E  2910               	goto	u3280
  1060     010F                     u3281:
  1061     010F  293A               	goto	l2828
  1062     0110                     u3280:
  1063     0110                     l2814:
  1064     0110  3033               	movlw	51
  1065     0111  0677               	xorwf	_num2,w
  1066     0112  1903               	btfsc	3,2
  1067     0113  2915               	goto	u3291
  1068     0114  2916               	goto	u3290
  1069     0115                     u3291:
  1070     0115  293A               	goto	l2828
  1071     0116                     u3290:
  1072     0116                     l2816:
  1073     0116  3034               	movlw	52
  1074     0117  0677               	xorwf	_num2,w
  1075     0118  1903               	btfsc	3,2
  1076     0119  291B               	goto	u3301
  1077     011A  291C               	goto	u3300
  1078     011B                     u3301:
  1079     011B  293A               	goto	l2828
  1080     011C                     u3300:
  1081     011C                     l2818:
  1082     011C  3035               	movlw	53
  1083     011D  0677               	xorwf	_num2,w
  1084     011E  1903               	btfsc	3,2
  1085     011F  2921               	goto	u3311
  1086     0120  2922               	goto	u3310
  1087     0121                     u3311:
  1088     0121  293A               	goto	l2828
  1089     0122                     u3310:
  1090     0122                     l2820:
  1091     0122  3036               	movlw	54
  1092     0123  0677               	xorwf	_num2,w
  1093     0124  1903               	btfsc	3,2
  1094     0125  2927               	goto	u3321
  1095     0126  2928               	goto	u3320
  1096     0127                     u3321:
  1097     0127  293A               	goto	l2828
  1098     0128                     u3320:
  1099     0128                     l2822:
  1100     0128  3037               	movlw	55
  1101     0129  0677               	xorwf	_num2,w
  1102     012A  1903               	btfsc	3,2
  1103     012B  292D               	goto	u3331
  1104     012C  292E               	goto	u3330
  1105     012D                     u3331:
  1106     012D  293A               	goto	l2828
  1107     012E                     u3330:
  1108     012E                     l2824:
  1109     012E  3038               	movlw	56
  1110     012F  0677               	xorwf	_num2,w
  1111     0130  1903               	btfsc	3,2
  1112     0131  2933               	goto	u3341
  1113     0132  2934               	goto	u3340
  1114     0133                     u3341:
  1115     0133  293A               	goto	l2828
  1116     0134                     u3340:
  1117     0134                     l2826:
  1118     0134  3039               	movlw	57
  1119     0135  0677               	xorwf	_num2,w
  1120     0136  1D03               	btfss	3,2
  1121     0137  2939               	goto	u3351
  1122     0138  293A               	goto	u3350
  1123     0139                     u3351:
  1124     0139  28F8               	goto	l2806
  1125     013A                     u3350:
  1126     013A                     l2828:
  1127                           
  1128                           ;main.c: 157:         lcdSend(0x01, 0);
  1129     013A  1283               	bcf	3,5	;RP0=0, select bank0
  1130     013B  1303               	bcf	3,6	;RP1=0, select bank0
  1131     013C  01C7               	clrf	lcdSend@tipo
  1132     013D  3001               	movlw	1
  1133     013E  120A  158A  2749  120A  118A  	fcall	_lcdSend
  1134     0143                     l2830:
  1135                           
  1136                           ;main.c: 158:         lcdPrint("Attendere..");
  1137     0143  304C               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1138     0144  1283               	bcf	3,5	;RP0=0, select bank0
  1139     0145  1303               	bcf	3,6	;RP1=0, select bank0
  1140     0146  00C9               	movwf	lcdPrint@str
  1141     0147  3080               	movlw	128
  1142     0148  00CA               	movwf	lcdPrint@str+1
  1143     0149  120A  158A  27B8  120A  118A  	fcall	_lcdPrint
  1144                           
  1145                           ;main.c: 159:         while(num3 != 0x30 && num3 != 0x31 && num3 != 0x32 && num3 != 0x33
      +                           &&
  1146     014E  2955               	goto	l2834
  1147     014F                     l2832:
  1148                           
  1149                           ;main.c: 161:               num3 != 0x38 && num3 != 0x39){;main.c: 162:         num3 = G
      +                          enerateRandomNumber();
  1150     014F  120A  158A  275E  120A  118A  	fcall	_GenerateRandomNumber
  1151     0154  00F6               	movwf	_num3
  1152     0155                     l2834:
  1153                           
  1154                           ;main.c: 159:         while(num3 != 0x30 && num3 != 0x31 && num3 != 0x32 && num3 != 0x33
      +                           &&
  1155     0155  3030               	movlw	48
  1156     0156  0676               	xorwf	_num3,w
  1157     0157  1903               	btfsc	3,2
  1158     0158  295A               	goto	u3361
  1159     0159  295B               	goto	u3360
  1160     015A                     u3361:
  1161     015A  2991               	goto	l2854
  1162     015B                     u3360:
  1163     015B                     l2836:
  1164     015B  3031               	movlw	49
  1165     015C  0676               	xorwf	_num3,w
  1166     015D  1903               	btfsc	3,2
  1167     015E  2960               	goto	u3371
  1168     015F  2961               	goto	u3370
  1169     0160                     u3371:
  1170     0160  2991               	goto	l2854
  1171     0161                     u3370:
  1172     0161                     l2838:
  1173     0161  3032               	movlw	50
  1174     0162  0676               	xorwf	_num3,w
  1175     0163  1903               	btfsc	3,2
  1176     0164  2966               	goto	u3381
  1177     0165  2967               	goto	u3380
  1178     0166                     u3381:
  1179     0166  2991               	goto	l2854
  1180     0167                     u3380:
  1181     0167                     l2840:
  1182     0167  3033               	movlw	51
  1183     0168  0676               	xorwf	_num3,w
  1184     0169  1903               	btfsc	3,2
  1185     016A  296C               	goto	u3391
  1186     016B  296D               	goto	u3390
  1187     016C                     u3391:
  1188     016C  2991               	goto	l2854
  1189     016D                     u3390:
  1190     016D                     l2842:
  1191     016D  3034               	movlw	52
  1192     016E  0676               	xorwf	_num3,w
  1193     016F  1903               	btfsc	3,2
  1194     0170  2972               	goto	u3401
  1195     0171  2973               	goto	u3400
  1196     0172                     u3401:
  1197     0172  2991               	goto	l2854
  1198     0173                     u3400:
  1199     0173                     l2844:
  1200     0173  3035               	movlw	53
  1201     0174  0676               	xorwf	_num3,w
  1202     0175  1903               	btfsc	3,2
  1203     0176  2978               	goto	u3411
  1204     0177  2979               	goto	u3410
  1205     0178                     u3411:
  1206     0178  2991               	goto	l2854
  1207     0179                     u3410:
  1208     0179                     l2846:
  1209     0179  3036               	movlw	54
  1210     017A  0676               	xorwf	_num3,w
  1211     017B  1903               	btfsc	3,2
  1212     017C  297E               	goto	u3421
  1213     017D  297F               	goto	u3420
  1214     017E                     u3421:
  1215     017E  2991               	goto	l2854
  1216     017F                     u3420:
  1217     017F                     l2848:
  1218     017F  3037               	movlw	55
  1219     0180  0676               	xorwf	_num3,w
  1220     0181  1903               	btfsc	3,2
  1221     0182  2984               	goto	u3431
  1222     0183  2985               	goto	u3430
  1223     0184                     u3431:
  1224     0184  2991               	goto	l2854
  1225     0185                     u3430:
  1226     0185                     l2850:
  1227     0185  3038               	movlw	56
  1228     0186  0676               	xorwf	_num3,w
  1229     0187  1903               	btfsc	3,2
  1230     0188  298A               	goto	u3441
  1231     0189  298B               	goto	u3440
  1232     018A                     u3441:
  1233     018A  2991               	goto	l2854
  1234     018B                     u3440:
  1235     018B                     l2852:
  1236     018B  3039               	movlw	57
  1237     018C  0676               	xorwf	_num3,w
  1238     018D  1D03               	btfss	3,2
  1239     018E  2990               	goto	u3451
  1240     018F  2991               	goto	u3450
  1241     0190                     u3451:
  1242     0190  294F               	goto	l2832
  1243     0191                     u3450:
  1244     0191                     l2854:
  1245                           
  1246                           ;main.c: 164:         lcdSend(0x01, 0);
  1247     0191  1283               	bcf	3,5	;RP0=0, select bank0
  1248     0192  1303               	bcf	3,6	;RP1=0, select bank0
  1249     0193  01C7               	clrf	lcdSend@tipo
  1250     0194  3001               	movlw	1
  1251     0195  120A  158A  2749  120A  118A  	fcall	_lcdSend
  1252     019A                     l2856:
  1253                           
  1254                           ;main.c: 165:         lcdPrint("Attendere...");
  1255     019A  303F               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1256     019B  1283               	bcf	3,5	;RP0=0, select bank0
  1257     019C  1303               	bcf	3,6	;RP1=0, select bank0
  1258     019D  00C9               	movwf	lcdPrint@str
  1259     019E  3080               	movlw	128
  1260     019F  00CA               	movwf	lcdPrint@str+1
  1261     01A0  120A  158A  27B8  120A  118A  	fcall	_lcdPrint
  1262                           
  1263                           ;main.c: 166:         while(num4 != 0x30 && num4 != 0x31 && num4 != 0x32 && num4 != 0x33
      +                           &&
  1264     01A5  29AE               	goto	l2860
  1265     01A6                     l2858:
  1266                           
  1267                           ;main.c: 168:               num4 != 0x38 && num4 != 0x39){;main.c: 169:         num4 = G
      +                          enerateRandomNumber();
  1268     01A6  120A  158A  275E  120A  118A  	fcall	_GenerateRandomNumber
  1269     01AB  1283               	bcf	3,5	;RP0=0, select bank0
  1270     01AC  1303               	bcf	3,6	;RP1=0, select bank0
  1271     01AD  00C3               	movwf	_num4
  1272     01AE                     l2860:
  1273                           
  1274                           ;main.c: 166:         while(num4 != 0x30 && num4 != 0x31 && num4 != 0x32 && num4 != 0x33
      +                           &&
  1275     01AE  3030               	movlw	48
  1276     01AF  1283               	bcf	3,5	;RP0=0, select bank0
  1277     01B0  1303               	bcf	3,6	;RP1=0, select bank0
  1278     01B1  0643               	xorwf	_num4,w
  1279     01B2  1903               	btfsc	3,2
  1280     01B3  29B5               	goto	u3461
  1281     01B4  29B6               	goto	u3460
  1282     01B5                     u3461:
  1283     01B5  29EC               	goto	l2880
  1284     01B6                     u3460:
  1285     01B6                     l2862:
  1286     01B6  3031               	movlw	49
  1287     01B7  0643               	xorwf	_num4,w
  1288     01B8  1903               	btfsc	3,2
  1289     01B9  29BB               	goto	u3471
  1290     01BA  29BC               	goto	u3470
  1291     01BB                     u3471:
  1292     01BB  29EC               	goto	l2880
  1293     01BC                     u3470:
  1294     01BC                     l2864:
  1295     01BC  3032               	movlw	50
  1296     01BD  0643               	xorwf	_num4,w
  1297     01BE  1903               	btfsc	3,2
  1298     01BF  29C1               	goto	u3481
  1299     01C0  29C2               	goto	u3480
  1300     01C1                     u3481:
  1301     01C1  29EC               	goto	l2880
  1302     01C2                     u3480:
  1303     01C2                     l2866:
  1304     01C2  3033               	movlw	51
  1305     01C3  0643               	xorwf	_num4,w
  1306     01C4  1903               	btfsc	3,2
  1307     01C5  29C7               	goto	u3491
  1308     01C6  29C8               	goto	u3490
  1309     01C7                     u3491:
  1310     01C7  29EC               	goto	l2880
  1311     01C8                     u3490:
  1312     01C8                     l2868:
  1313     01C8  3034               	movlw	52
  1314     01C9  0643               	xorwf	_num4,w
  1315     01CA  1903               	btfsc	3,2
  1316     01CB  29CD               	goto	u3501
  1317     01CC  29CE               	goto	u3500
  1318     01CD                     u3501:
  1319     01CD  29EC               	goto	l2880
  1320     01CE                     u3500:
  1321     01CE                     l2870:
  1322     01CE  3035               	movlw	53
  1323     01CF  0643               	xorwf	_num4,w
  1324     01D0  1903               	btfsc	3,2
  1325     01D1  29D3               	goto	u3511
  1326     01D2  29D4               	goto	u3510
  1327     01D3                     u3511:
  1328     01D3  29EC               	goto	l2880
  1329     01D4                     u3510:
  1330     01D4                     l2872:
  1331     01D4  3036               	movlw	54
  1332     01D5  0643               	xorwf	_num4,w
  1333     01D6  1903               	btfsc	3,2
  1334     01D7  29D9               	goto	u3521
  1335     01D8  29DA               	goto	u3520
  1336     01D9                     u3521:
  1337     01D9  29EC               	goto	l2880
  1338     01DA                     u3520:
  1339     01DA                     l2874:
  1340     01DA  3037               	movlw	55
  1341     01DB  0643               	xorwf	_num4,w
  1342     01DC  1903               	btfsc	3,2
  1343     01DD  29DF               	goto	u3531
  1344     01DE  29E0               	goto	u3530
  1345     01DF                     u3531:
  1346     01DF  29EC               	goto	l2880
  1347     01E0                     u3530:
  1348     01E0                     l2876:
  1349     01E0  3038               	movlw	56
  1350     01E1  0643               	xorwf	_num4,w
  1351     01E2  1903               	btfsc	3,2
  1352     01E3  29E5               	goto	u3541
  1353     01E4  29E6               	goto	u3540
  1354     01E5                     u3541:
  1355     01E5  29EC               	goto	l2880
  1356     01E6                     u3540:
  1357     01E6                     l2878:
  1358     01E6  3039               	movlw	57
  1359     01E7  0643               	xorwf	_num4,w
  1360     01E8  1D03               	btfss	3,2
  1361     01E9  29EB               	goto	u3551
  1362     01EA  29EC               	goto	u3550
  1363     01EB                     u3551:
  1364     01EB  29A6               	goto	l2858
  1365     01EC                     u3550:
  1366     01EC                     l2880:
  1367                           
  1368                           ;main.c: 171:         lcdSend(0x01, 0);
  1369     01EC  01C7               	clrf	lcdSend@tipo
  1370     01ED  3001               	movlw	1
  1371     01EE  120A  158A  2749  120A  118A  	fcall	_lcdSend
  1372     01F3                     l2882:
  1373                           
  1374                           ;main.c: 172:         lcdPrint("Attendere....");
  1375     01F3  3023               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1376     01F4  1283               	bcf	3,5	;RP0=0, select bank0
  1377     01F5  1303               	bcf	3,6	;RP1=0, select bank0
  1378     01F6  00C9               	movwf	lcdPrint@str
  1379     01F7  3080               	movlw	128
  1380     01F8  00CA               	movwf	lcdPrint@str+1
  1381     01F9  120A  158A  27B8  120A  118A  	fcall	_lcdPrint
  1382                           
  1383                           ;main.c: 173:         while(num5 != 0x30 && num5 != 0x31 && num5 != 0x32 && num5 != 0x33
      +                           &&
  1384     01FE  2A07               	goto	l2886
  1385     01FF                     l2884:
  1386                           
  1387                           ;main.c: 175:               num5 != 0x38 && num5 != 0x39){;main.c: 176:         num5 = G
      +                          enerateRandomNumber();
  1388     01FF  120A  158A  275E  120A  118A  	fcall	_GenerateRandomNumber
  1389     0204  1283               	bcf	3,5	;RP0=0, select bank0
  1390     0205  1303               	bcf	3,6	;RP1=0, select bank0
  1391     0206  00C2               	movwf	_num5
  1392     0207                     l2886:
  1393                           
  1394                           ;main.c: 173:         while(num5 != 0x30 && num5 != 0x31 && num5 != 0x32 && num5 != 0x33
      +                           &&
  1395     0207  3030               	movlw	48
  1396     0208  1283               	bcf	3,5	;RP0=0, select bank0
  1397     0209  1303               	bcf	3,6	;RP1=0, select bank0
  1398     020A  0642               	xorwf	_num5,w
  1399     020B  1903               	btfsc	3,2
  1400     020C  2A0E               	goto	u3561
  1401     020D  2A0F               	goto	u3560
  1402     020E                     u3561:
  1403     020E  2A45               	goto	l2906
  1404     020F                     u3560:
  1405     020F                     l2888:
  1406     020F  3031               	movlw	49
  1407     0210  0642               	xorwf	_num5,w
  1408     0211  1903               	btfsc	3,2
  1409     0212  2A14               	goto	u3571
  1410     0213  2A15               	goto	u3570
  1411     0214                     u3571:
  1412     0214  2A45               	goto	l2906
  1413     0215                     u3570:
  1414     0215                     l2890:
  1415     0215  3032               	movlw	50
  1416     0216  0642               	xorwf	_num5,w
  1417     0217  1903               	btfsc	3,2
  1418     0218  2A1A               	goto	u3581
  1419     0219  2A1B               	goto	u3580
  1420     021A                     u3581:
  1421     021A  2A45               	goto	l2906
  1422     021B                     u3580:
  1423     021B                     l2892:
  1424     021B  3033               	movlw	51
  1425     021C  0642               	xorwf	_num5,w
  1426     021D  1903               	btfsc	3,2
  1427     021E  2A20               	goto	u3591
  1428     021F  2A21               	goto	u3590
  1429     0220                     u3591:
  1430     0220  2A45               	goto	l2906
  1431     0221                     u3590:
  1432     0221                     l2894:
  1433     0221  3034               	movlw	52
  1434     0222  0642               	xorwf	_num5,w
  1435     0223  1903               	btfsc	3,2
  1436     0224  2A26               	goto	u3601
  1437     0225  2A27               	goto	u3600
  1438     0226                     u3601:
  1439     0226  2A45               	goto	l2906
  1440     0227                     u3600:
  1441     0227                     l2896:
  1442     0227  3035               	movlw	53
  1443     0228  0642               	xorwf	_num5,w
  1444     0229  1903               	btfsc	3,2
  1445     022A  2A2C               	goto	u3611
  1446     022B  2A2D               	goto	u3610
  1447     022C                     u3611:
  1448     022C  2A45               	goto	l2906
  1449     022D                     u3610:
  1450     022D                     l2898:
  1451     022D  3036               	movlw	54
  1452     022E  0642               	xorwf	_num5,w
  1453     022F  1903               	btfsc	3,2
  1454     0230  2A32               	goto	u3621
  1455     0231  2A33               	goto	u3620
  1456     0232                     u3621:
  1457     0232  2A45               	goto	l2906
  1458     0233                     u3620:
  1459     0233                     l2900:
  1460     0233  3037               	movlw	55
  1461     0234  0642               	xorwf	_num5,w
  1462     0235  1903               	btfsc	3,2
  1463     0236  2A38               	goto	u3631
  1464     0237  2A39               	goto	u3630
  1465     0238                     u3631:
  1466     0238  2A45               	goto	l2906
  1467     0239                     u3630:
  1468     0239                     l2902:
  1469     0239  3038               	movlw	56
  1470     023A  0642               	xorwf	_num5,w
  1471     023B  1903               	btfsc	3,2
  1472     023C  2A3E               	goto	u3641
  1473     023D  2A3F               	goto	u3640
  1474     023E                     u3641:
  1475     023E  2A45               	goto	l2906
  1476     023F                     u3640:
  1477     023F                     l2904:
  1478     023F  3039               	movlw	57
  1479     0240  0642               	xorwf	_num5,w
  1480     0241  1D03               	btfss	3,2
  1481     0242  2A44               	goto	u3651
  1482     0243  2A45               	goto	u3650
  1483     0244                     u3651:
  1484     0244  29FF               	goto	l2884
  1485     0245                     u3650:
  1486     0245                     l2906:
  1487                           
  1488                           ;main.c: 178:         UART_Write(id1);
  1489     0245  3030               	movlw	48
  1490     0246  120A  158A  272D  120A  118A  	fcall	_UART_Write
  1491     024B                     l2908:
  1492                           
  1493                           ;main.c: 180:         type = 0x01;
  1494     024B  1283               	bcf	3,5	;RP0=0, select bank0
  1495     024C  1303               	bcf	3,6	;RP1=0, select bank0
  1496     024D  01B4               	clrf	_type
  1497     024E  0AB4               	incf	_type,f
  1498                           
  1499                           ;main.c: 181:         UART_Write(type);
  1500     024F  3001               	movlw	1
  1501     0250  120A  158A  272D  120A  118A  	fcall	_UART_Write
  1502                           
  1503                           ;main.c: 182:         UART_Write(num1);
  1504     0255  0878               	movf	_num1,w
  1505     0256  120A  158A  272D  120A  118A  	fcall	_UART_Write
  1506                           
  1507                           ;main.c: 183:         UART_Write(num2);
  1508     025B  0877               	movf	_num2,w
  1509     025C  120A  158A  272D  120A  118A  	fcall	_UART_Write
  1510                           
  1511                           ;main.c: 184:         UART_Write(num3);
  1512     0261  0876               	movf	_num3,w
  1513     0262  120A  158A  272D  120A  118A  	fcall	_UART_Write
  1514                           
  1515                           ;main.c: 185:         UART_Write(num4);
  1516     0267  1283               	bcf	3,5	;RP0=0, select bank0
  1517     0268  1303               	bcf	3,6	;RP1=0, select bank0
  1518     0269  0843               	movf	_num4,w
  1519     026A  120A  158A  272D  120A  118A  	fcall	_UART_Write
  1520                           
  1521                           ;main.c: 186:         UART_Write(num5);
  1522     026F  1283               	bcf	3,5	;RP0=0, select bank0
  1523     0270  1303               	bcf	3,6	;RP1=0, select bank0
  1524     0271  0842               	movf	_num5,w
  1525     0272  120A  158A  272D  120A  118A  	fcall	_UART_Write
  1526                           
  1527                           ;main.c: 187:         UART_Write('*');
  1528     0277  302A               	movlw	42
  1529     0278  120A  158A  272D  120A  118A  	fcall	_UART_Write
  1530                           
  1531                           ;main.c: 188:         lcdSend(0x01, 0);
  1532     027D  1283               	bcf	3,5	;RP0=0, select bank0
  1533     027E  1303               	bcf	3,6	;RP1=0, select bank0
  1534     027F  01C7               	clrf	lcdSend@tipo
  1535     0280  3001               	movlw	1
  1536     0281  120A  158A  2749  120A  118A  	fcall	_lcdSend
  1537                           
  1538                           ;main.c: 189:         lcdSend(num1, 1);
  1539     0286  1283               	bcf	3,5	;RP0=0, select bank0
  1540     0287  1303               	bcf	3,6	;RP1=0, select bank0
  1541     0288  01C7               	clrf	lcdSend@tipo
  1542     0289  0AC7               	incf	lcdSend@tipo,f
  1543     028A  0878               	movf	_num1,w
  1544     028B  120A  158A  2749  120A  118A  	fcall	_lcdSend
  1545                           
  1546                           ;main.c: 190:         lcdSend(num2, 1);
  1547     0290  1283               	bcf	3,5	;RP0=0, select bank0
  1548     0291  1303               	bcf	3,6	;RP1=0, select bank0
  1549     0292  01C7               	clrf	lcdSend@tipo
  1550     0293  0AC7               	incf	lcdSend@tipo,f
  1551     0294  0877               	movf	_num2,w
  1552     0295  120A  158A  2749  120A  118A  	fcall	_lcdSend
  1553                           
  1554                           ;main.c: 191:         lcdSend(num3, 1);
  1555     029A  1283               	bcf	3,5	;RP0=0, select bank0
  1556     029B  1303               	bcf	3,6	;RP1=0, select bank0
  1557     029C  01C7               	clrf	lcdSend@tipo
  1558     029D  0AC7               	incf	lcdSend@tipo,f
  1559     029E  0876               	movf	_num3,w
  1560     029F  120A  158A  2749  120A  118A  	fcall	_lcdSend
  1561                           
  1562                           ;main.c: 192:         lcdSend(num4, 1);
  1563     02A4  1283               	bcf	3,5	;RP0=0, select bank0
  1564     02A5  1303               	bcf	3,6	;RP1=0, select bank0
  1565     02A6  01C7               	clrf	lcdSend@tipo
  1566     02A7  0AC7               	incf	lcdSend@tipo,f
  1567     02A8  0843               	movf	_num4,w
  1568     02A9  120A  158A  2749  120A  118A  	fcall	_lcdSend
  1569                           
  1570                           ;main.c: 193:         lcdSend(num5, 1);
  1571     02AE  1283               	bcf	3,5	;RP0=0, select bank0
  1572     02AF  1303               	bcf	3,6	;RP1=0, select bank0
  1573     02B0  01C7               	clrf	lcdSend@tipo
  1574     02B1  0AC7               	incf	lcdSend@tipo,f
  1575     02B2  0842               	movf	_num5,w
  1576     02B3  120A  158A  2749  120A  118A  	fcall	_lcdSend
  1577     02B8                     l2910:
  1578                           
  1579                           ;main.c: 194:         keypressed = 0;
  1580     02B8  01F5               	clrf	_keypressed
  1581     02B9                     l2912:
  1582                           
  1583                           ;main.c: 195:         RS485_RxEnable();
  1584     02B9  120A  158A  2720  120A  118A  	fcall	_RS485_RxEnable
  1585     02BE                     l2914:
  1586                           
  1587                           ;main.c: 196:         flag = 1;
  1588     02BE  3001               	movlw	1
  1589     02BF  1283               	bcf	3,5	;RP0=0, select bank0
  1590     02C0  1303               	bcf	3,6	;RP1=0, select bank0
  1591     02C1  00B0               	movwf	_flag
  1592     02C2  3000               	movlw	0
  1593     02C3  00B1               	movwf	_flag+1
  1594     02C4                     l2916:
  1595                           
  1596                           ;main.c: 198:         UART_Read2();
  1597     02C4  120A  118A  22CD  120A  118A  	fcall	_UART_Read2
  1598     02C9  284F               	goto	l2758
  1599     02CA  120A  118A  2810   	ljmp	start
  1600     02CD                     __end_of_main:
  1601                           
  1602                           	psect	text1
  1603     06C1                     __ptext1:	
  1604 ;; *************** function _initLCD *****************
  1605 ;; Defined at:
  1606 ;;		line 413 in file "main.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;		None
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;		None
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  1    wreg      void 
  1613 ;; Registers used:
  1614 ;;		wreg, status,2, status,0, pclath, cstack
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1620 ;;      Params:         0       0       0       0       0
  1621 ;;      Locals:         0       0       0       0       0
  1622 ;;      Temps:          0       2       0       0       0
  1623 ;;      Totals:         0       2       0       0       0
  1624 ;;Total ram usage:        2 bytes
  1625 ;; Hardware stack levels used: 1
  1626 ;; Hardware stack levels required when called: 3
  1627 ;; This function calls:
  1628 ;;		_lcdSend
  1629 ;; This function is called by:
  1630 ;;		_main
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634     06C1                     _initLCD:	
  1635                           ;psect for function _initLCD
  1636                           
  1637     06C1                     l2546:	
  1638                           ;incstack = 0
  1639                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  1640                           
  1641                           
  1642                           ;main.c: 414:     PORTEbits.RE2 = 0;
  1643     06C1  1283               	bcf	3,5	;RP0=0, select bank0
  1644     06C2  1303               	bcf	3,6	;RP1=0, select bank0
  1645     06C3  1109               	bcf	9,2	;volatile
  1646                           
  1647                           ;main.c: 415:     PORTEbits.RE1 = 0;
  1648     06C4  1089               	bcf	9,1	;volatile
  1649     06C5                     l2548:
  1650                           
  1651                           ;main.c: 416:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1652     06C5  3034               	movlw	52
  1653     06C6  1283               	bcf	3,5	;RP0=0, select bank0
  1654     06C7  1303               	bcf	3,6	;RP1=0, select bank0
  1655     06C8  00CA               	movwf	??_initLCD+1
  1656     06C9  30F1               	movlw	241
  1657     06CA  00C9               	movwf	??_initLCD
  1658     06CB                     u3787:
  1659     06CB  0BC9               	decfsz	??_initLCD,f
  1660     06CC  2ECB               	goto	u3787
  1661     06CD  0BCA               	decfsz	??_initLCD+1,f
  1662     06CE  2ECB               	goto	u3787
  1663     06CF                     l2550:
  1664                           
  1665                           ;main.c: 417:     PORTEbits.RE1 = 1;
  1666     06CF  1283               	bcf	3,5	;RP0=0, select bank0
  1667     06D0  1303               	bcf	3,6	;RP1=0, select bank0
  1668     06D1  1489               	bsf	9,1	;volatile
  1669     06D2                     l2552:
  1670                           
  1671                           ;main.c: 418:     lcdSend(0x38, 0);
  1672     06D2  01C7               	clrf	lcdSend@tipo
  1673     06D3  3038               	movlw	56
  1674     06D4  120A  158A  2749  120A  118A  	fcall	_lcdSend
  1675     06D9                     l2554:
  1676                           
  1677                           ;main.c: 419:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1678     06D9  300D               	movlw	13
  1679     06DA  1283               	bcf	3,5	;RP0=0, select bank0
  1680     06DB  1303               	bcf	3,6	;RP1=0, select bank0
  1681     06DC  00CA               	movwf	??_initLCD+1
  1682     06DD  30FB               	movlw	251
  1683     06DE  00C9               	movwf	??_initLCD
  1684     06DF                     u3797:
  1685     06DF  0BC9               	decfsz	??_initLCD,f
  1686     06E0  2EDF               	goto	u3797
  1687     06E1  0BCA               	decfsz	??_initLCD+1,f
  1688     06E2  2EDF               	goto	u3797
  1689                           
  1690                           ;main.c: 420:     lcdSend(0x38, 0);
  1691     06E3  1283               	bcf	3,5	;RP0=0, select bank0
  1692     06E4  1303               	bcf	3,6	;RP1=0, select bank0
  1693     06E5  01C7               	clrf	lcdSend@tipo
  1694     06E6  3038               	movlw	56
  1695     06E7  120A  158A  2749  120A  118A  	fcall	_lcdSend
  1696     06EC                     l2556:
  1697                           
  1698                           ;main.c: 421:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1699     06EC  3003               	movlw	3
  1700     06ED  1283               	bcf	3,5	;RP0=0, select bank0
  1701     06EE  1303               	bcf	3,6	;RP1=0, select bank0
  1702     06EF  00CA               	movwf	??_initLCD+1
  1703     06F0  3097               	movlw	151
  1704     06F1  00C9               	movwf	??_initLCD
  1705     06F2                     u3807:
  1706     06F2  0BC9               	decfsz	??_initLCD,f
  1707     06F3  2EF2               	goto	u3807
  1708     06F4  0BCA               	decfsz	??_initLCD+1,f
  1709     06F5  2EF2               	goto	u3807
  1710     06F6                     l2558:
  1711                           
  1712                           ;main.c: 422:     lcdSend(0x38, 0);
  1713     06F6  1283               	bcf	3,5	;RP0=0, select bank0
  1714     06F7  1303               	bcf	3,6	;RP1=0, select bank0
  1715     06F8  01C7               	clrf	lcdSend@tipo
  1716     06F9  3038               	movlw	56
  1717     06FA  120A  158A  2749  120A  118A  	fcall	_lcdSend
  1718     06FF                     l2560:
  1719                           
  1720                           ;main.c: 423:     lcdSend(0x08, 0);
  1721     06FF  1283               	bcf	3,5	;RP0=0, select bank0
  1722     0700  1303               	bcf	3,6	;RP1=0, select bank0
  1723     0701  01C7               	clrf	lcdSend@tipo
  1724     0702  3008               	movlw	8
  1725     0703  120A  158A  2749  120A  118A  	fcall	_lcdSend
  1726     0708                     l2562:
  1727                           
  1728                           ;main.c: 424:     lcdSend(0x0F, 0);
  1729     0708  1283               	bcf	3,5	;RP0=0, select bank0
  1730     0709  1303               	bcf	3,6	;RP1=0, select bank0
  1731     070A  01C7               	clrf	lcdSend@tipo
  1732     070B  300F               	movlw	15
  1733     070C  120A  158A  2749  120A  118A  	fcall	_lcdSend
  1734     0711                     l2564:
  1735                           
  1736                           ;main.c: 425:     lcdSend(0x01, 0);
  1737     0711  1283               	bcf	3,5	;RP0=0, select bank0
  1738     0712  1303               	bcf	3,6	;RP1=0, select bank0
  1739     0713  01C7               	clrf	lcdSend@tipo
  1740     0714  3001               	movlw	1
  1741     0715  120A  158A  2749  120A  118A  	fcall	_lcdSend
  1742     071A                     l2566:
  1743                           
  1744                           ;main.c: 426:     lcdSend(0x0C, 0);
  1745     071A  1283               	bcf	3,5	;RP0=0, select bank0
  1746     071B  1303               	bcf	3,6	;RP1=0, select bank0
  1747     071C  01C7               	clrf	lcdSend@tipo
  1748     071D  300C               	movlw	12
  1749     071E  120A  158A  2749  120A  118A  	fcall	_lcdSend
  1750     0723                     l2568:
  1751                           
  1752                           ;main.c: 427:     lcdSend(0x80, 0);
  1753     0723  1283               	bcf	3,5	;RP0=0, select bank0
  1754     0724  1303               	bcf	3,6	;RP1=0, select bank0
  1755     0725  01C7               	clrf	lcdSend@tipo
  1756     0726  3080               	movlw	128
  1757     0727  120A  158A  2749  120A  118A  	fcall	_lcdSend
  1758     072C                     l245:
  1759     072C  0008               	return
  1760     072D                     __end_of_initLCD:
  1761                           
  1762                           	psect	text2
  1763     0F2D                     __ptext2:	
  1764 ;; *************** function _UART_Write *****************
  1765 ;; Defined at:
  1766 ;;		line 230 in file "main.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;  data            1    wreg     unsigned char 
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;  data            1    0[BANK0 ] unsigned char 
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      void 
  1773 ;; Registers used:
  1774 ;;		wreg
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1780 ;;      Params:         0       0       0       0       0
  1781 ;;      Locals:         0       1       0       0       0
  1782 ;;      Temps:          0       0       0       0       0
  1783 ;;      Totals:         0       1       0       0       0
  1784 ;;Total ram usage:        1 bytes
  1785 ;; Hardware stack levels used: 1
  1786 ;; Hardware stack levels required when called: 2
  1787 ;; This function calls:
  1788 ;;		Nothing
  1789 ;; This function is called by:
  1790 ;;		_main
  1791 ;;		_UART_Read1
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795     0F2D                     _UART_Write:	
  1796                           ;psect for function _UART_Write
  1797                           
  1798                           
  1799                           ;incstack = 0
  1800                           ; Regs used in _UART_Write: [wreg]
  1801                           ;UART_Write@data stored from wreg
  1802     0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  1803     0F2E  1303               	bcf	3,6	;RP1=0, select bank0
  1804     0F2F  00C7               	movwf	UART_Write@data
  1805     0F30                     l2646:
  1806     0F30                     l205:	
  1807                           ;main.c: 231:     while (!TXIF)
  1808                           
  1809                           
  1810                           ;main.c: 231:     while (!TXIF)
  1811     0F30  1E0C               	btfss	12,4	;volatile
  1812     0F31  2F33               	goto	u3051
  1813     0F32  2F34               	goto	u3050
  1814     0F33                     u3051:
  1815     0F33  2F30               	goto	l205
  1816     0F34                     u3050:
  1817     0F34                     l2648:
  1818                           
  1819                           ;main.c: 233:     TXREG = data;
  1820     0F34  0847               	movf	UART_Write@data,w
  1821     0F35  0099               	movwf	25	;volatile
  1822     0F36                     l208:
  1823     0F36  0008               	return
  1824     0F37                     __end_of_UART_Write:
  1825                           
  1826                           	psect	text3
  1827     02CD                     __ptext3:	
  1828 ;; *************** function _UART_Read2 *****************
  1829 ;; Defined at:
  1830 ;;		line 236 in file "main.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;		None
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;  trash           1    0        unsigned char 
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      unsigned char 
  1837 ;; Registers used:
  1838 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1844 ;;      Params:         0       0       0       0       0
  1845 ;;      Locals:         0       0       0       0       0
  1846 ;;      Temps:          0       3       0       0       0
  1847 ;;      Totals:         0       3       0       0       0
  1848 ;;Total ram usage:        3 bytes
  1849 ;; Hardware stack levels used: 1
  1850 ;; Hardware stack levels required when called: 5
  1851 ;; This function calls:
  1852 ;;		_intToString
  1853 ;;		_lcdPrint
  1854 ;;		_lcdSend
  1855 ;; This function is called by:
  1856 ;;		_main
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860     02CD                     _UART_Read2:	
  1861                           ;psect for function _UART_Read2
  1862                           
  1863     02CD                     l2652:	
  1864                           ;incstack = 0
  1865                           ; Regs used in _UART_Read2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1866                           
  1867                           
  1868                           ;main.c: 237:     char trash;;main.c: 238:     while (countdown != 0){
  1869     02CD  2C28               	goto	l2734
  1870     02CE                     l212:
  1871                           
  1872                           ;main.c: 239:         if (!RCIF){
  1873     02CE  1A8C               	btfsc	12,5	;volatile
  1874     02CF  2AD1               	goto	u3061
  1875     02D0  2AD2               	goto	u3060
  1876     02D1                     u3061:
  1877     02D1  2C22               	goto	l2732
  1878     02D2                     u3060:
  1879     02D2                     l2654:
  1880                           
  1881                           ;main.c: 240:             lcdSend(0x01, 0);
  1882     02D2  01C7               	clrf	lcdSend@tipo
  1883     02D3  3001               	movlw	1
  1884     02D4  120A  158A  2749  120A  118A  	fcall	_lcdSend
  1885     02D9                     l2656:
  1886                           
  1887                           ;main.c: 241:             lcdPrint("Attendere");
  1888     02D9  306E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1889     02DA  1283               	bcf	3,5	;RP0=0, select bank0
  1890     02DB  1303               	bcf	3,6	;RP1=0, select bank0
  1891     02DC  00C9               	movwf	lcdPrint@str
  1892     02DD  3080               	movlw	128
  1893     02DE  00CA               	movwf	lcdPrint@str+1
  1894     02DF  120A  158A  27B8  120A  118A  	fcall	_lcdPrint
  1895     02E4                     l2658:
  1896                           
  1897                           ;main.c: 242:             intToString(countdown, print_countdown);
  1898     02E4  1283               	bcf	3,5	;RP0=0, select bank0
  1899     02E5  1303               	bcf	3,6	;RP1=0, select bank0
  1900     02E6  0867               	movf	_countdown,w
  1901     02E7  00E3               	movwf	??_UART_Read2
  1902     02E8  01E4               	clrf	??_UART_Read2+1
  1903     02E9  0863               	movf	??_UART_Read2,w
  1904     02EA  00DA               	movwf	intToString@n
  1905     02EB  0864               	movf	??_UART_Read2+1,w
  1906     02EC  00DB               	movwf	intToString@n+1
  1907     02ED  3044               	movlw	(low (_print_countdown| 0))& (0+255)
  1908     02EE  00DC               	movwf	intToString@str
  1909     02EF  120A  118A  2645  120A  118A  	fcall	_intToString
  1910     02F4                     l2660:
  1911                           
  1912                           ;main.c: 243:             lcdSend(0xC0, 0);
  1913     02F4  1283               	bcf	3,5	;RP0=0, select bank0
  1914     02F5  1303               	bcf	3,6	;RP1=0, select bank0
  1915     02F6  01C7               	clrf	lcdSend@tipo
  1916     02F7  30C0               	movlw	192
  1917     02F8  120A  158A  2749  120A  118A  	fcall	_lcdSend
  1918     02FD                     l2662:
  1919                           
  1920                           ;main.c: 244:             lcdPrint(print_countdown);
  1921     02FD  3044               	movlw	(low (_print_countdown| 0))& (0+255)
  1922     02FE  1283               	bcf	3,5	;RP0=0, select bank0
  1923     02FF  1303               	bcf	3,6	;RP1=0, select bank0
  1924     0300  00C9               	movwf	lcdPrint@str
  1925     0301  3000               	movlw	0
  1926     0302  00CA               	movwf	lcdPrint@str+1
  1927     0303  120A  158A  27B8  120A  118A  	fcall	_lcdPrint
  1928     0308                     l2664:
  1929                           
  1930                           ;main.c: 245:             countdown --;
  1931     0308  3001               	movlw	1
  1932     0309  1283               	bcf	3,5	;RP0=0, select bank0
  1933     030A  1303               	bcf	3,6	;RP1=0, select bank0
  1934     030B  02E7               	subwf	_countdown,f
  1935     030C                     l2666:
  1936                           
  1937                           ;main.c: 246:             _delay((unsigned long)((60)*(8000000/4000.0)));
  1938     030C  309C               	movlw	156
  1939     030D  1283               	bcf	3,5	;RP0=0, select bank0
  1940     030E  1303               	bcf	3,6	;RP1=0, select bank0
  1941     030F  00E4               	movwf	??_UART_Read2+1
  1942     0310  30D6               	movlw	214
  1943     0311  00E3               	movwf	??_UART_Read2
  1944     0312                     u3817:
  1945     0312  0BE3               	decfsz	??_UART_Read2,f
  1946     0313  2B12               	goto	u3817
  1947     0314  0BE4               	decfsz	??_UART_Read2+1,f
  1948     0315  2B12               	goto	u3817
  1949     0316  0000               	nop
  1950                           
  1951                           ;main.c: 247:         }
  1952     0317  2C28               	goto	l2734
  1953     0318                     l2668:
  1954                           
  1955                           ;main.c: 250:                 intToString(countdown, print_countdown);
  1956     0318  0867               	movf	_countdown,w
  1957     0319  00E3               	movwf	??_UART_Read2
  1958     031A  01E4               	clrf	??_UART_Read2+1
  1959     031B  0863               	movf	??_UART_Read2,w
  1960     031C  00DA               	movwf	intToString@n
  1961     031D  0864               	movf	??_UART_Read2+1,w
  1962     031E  00DB               	movwf	intToString@n+1
  1963     031F  3044               	movlw	(low (_print_countdown| 0))& (0+255)
  1964     0320  00DC               	movwf	intToString@str
  1965     0321  120A  118A  2645  120A  118A  	fcall	_intToString
  1966     0326                     l2670:
  1967                           
  1968                           ;main.c: 251:                 lcdSend(0xC0, 0);
  1969     0326  1283               	bcf	3,5	;RP0=0, select bank0
  1970     0327  1303               	bcf	3,6	;RP1=0, select bank0
  1971     0328  01C7               	clrf	lcdSend@tipo
  1972     0329  30C0               	movlw	192
  1973     032A  120A  158A  2749  120A  118A  	fcall	_lcdSend
  1974     032F                     l2672:
  1975                           
  1976                           ;main.c: 252:                 lcdPrint(print_countdown);
  1977     032F  3044               	movlw	(low (_print_countdown| 0))& (0+255)
  1978     0330  1283               	bcf	3,5	;RP0=0, select bank0
  1979     0331  1303               	bcf	3,6	;RP1=0, select bank0
  1980     0332  00C9               	movwf	lcdPrint@str
  1981     0333  3000               	movlw	0
  1982     0334  00CA               	movwf	lcdPrint@str+1
  1983     0335  120A  158A  27B8  120A  118A  	fcall	_lcdPrint
  1984     033A                     l2674:
  1985                           
  1986                           ;main.c: 253:                 countdown --;
  1987     033A  3001               	movlw	1
  1988     033B  1283               	bcf	3,5	;RP0=0, select bank0
  1989     033C  1303               	bcf	3,6	;RP1=0, select bank0
  1990     033D  02E7               	subwf	_countdown,f
  1991     033E                     l2676:
  1992                           
  1993                           ;main.c: 254:                 _delay((unsigned long)((60)*(8000000/4000.0)));
  1994     033E  309C               	movlw	156
  1995     033F  1283               	bcf	3,5	;RP0=0, select bank0
  1996     0340  1303               	bcf	3,6	;RP1=0, select bank0
  1997     0341  00E4               	movwf	??_UART_Read2+1
  1998     0342  30D6               	movlw	214
  1999     0343  00E3               	movwf	??_UART_Read2
  2000     0344                     u3827:
  2001     0344  0BE3               	decfsz	??_UART_Read2,f
  2002     0345  2B44               	goto	u3827
  2003     0346  0BE4               	decfsz	??_UART_Read2+1,f
  2004     0347  2B44               	goto	u3827
  2005     0348  0000               	nop
  2006     0349                     l2678:
  2007                           
  2008                           ;main.c: 255:                 if(RCREG == id1){
  2009     0349  3030               	movlw	48
  2010     034A  1283               	bcf	3,5	;RP0=0, select bank0
  2011     034B  1303               	bcf	3,6	;RP1=0, select bank0
  2012     034C  061A               	xorwf	26,w	;volatile
  2013     034D  1D03               	btfss	3,2
  2014     034E  2B50               	goto	u3071
  2015     034F  2B51               	goto	u3070
  2016     0350                     u3071:
  2017     0350  2C20               	goto	l217
  2018     0351                     u3070:
  2019     0351                     l2680:
  2020                           
  2021                           ;main.c: 256:                     lcdSend(0x01, 0);
  2022     0351  01C7               	clrf	lcdSend@tipo
  2023     0352  3001               	movlw	1
  2024     0353  120A  158A  2749  120A  118A  	fcall	_lcdSend
  2025                           
  2026                           ;main.c: 257:                     lcdSend(RCREG, 1);
  2027     0358  1283               	bcf	3,5	;RP0=0, select bank0
  2028     0359  1303               	bcf	3,6	;RP1=0, select bank0
  2029     035A  01C7               	clrf	lcdSend@tipo
  2030     035B  0AC7               	incf	lcdSend@tipo,f
  2031     035C  081A               	movf	26,w	;volatile
  2032     035D  120A  158A  2749  120A  118A  	fcall	_lcdSend
  2033     0362                     l2682:
  2034                           
  2035                           ;main.c: 258:                     RCIF = 0;
  2036     0362  1283               	bcf	3,5	;RP0=0, select bank0
  2037     0363  1303               	bcf	3,6	;RP1=0, select bank0
  2038     0364  128C               	bcf	12,5	;volatile
  2039     0365                     l2684:
  2040     0365  081A               	movf	26,w	;volatile
  2041                           
  2042                           ;main.c: 260:                     while (countdown != 0){
  2043     0366  2C19               	goto	l2728
  2044     0367                     l219:
  2045                           
  2046                           ;main.c: 261:                         if (!RCIF){
  2047     0367  1A8C               	btfsc	12,5	;volatile
  2048     0368  2B6A               	goto	u3081
  2049     0369  2B6B               	goto	u3080
  2050     036A                     u3081:
  2051     036A  2C14               	goto	l2726
  2052     036B                     u3080:
  2053     036B                     l2686:
  2054                           
  2055                           ;main.c: 262:                             intToString(countdown, print_countdown);
  2056     036B  0867               	movf	_countdown,w
  2057     036C  00E3               	movwf	??_UART_Read2
  2058     036D  01E4               	clrf	??_UART_Read2+1
  2059     036E  0863               	movf	??_UART_Read2,w
  2060     036F  00DA               	movwf	intToString@n
  2061     0370  0864               	movf	??_UART_Read2+1,w
  2062     0371  00DB               	movwf	intToString@n+1
  2063     0372  3044               	movlw	(low (_print_countdown| 0))& (0+255)
  2064     0373  00DC               	movwf	intToString@str
  2065     0374  120A  118A  2645  120A  118A  	fcall	_intToString
  2066     0379                     l2688:
  2067                           
  2068                           ;main.c: 263:                             lcdSend(0xC0, 0);
  2069     0379  1283               	bcf	3,5	;RP0=0, select bank0
  2070     037A  1303               	bcf	3,6	;RP1=0, select bank0
  2071     037B  01C7               	clrf	lcdSend@tipo
  2072     037C  30C0               	movlw	192
  2073     037D  120A  158A  2749  120A  118A  	fcall	_lcdSend
  2074     0382                     l2690:
  2075                           
  2076                           ;main.c: 264:                             lcdPrint(print_countdown);
  2077     0382  3044               	movlw	(low (_print_countdown| 0))& (0+255)
  2078     0383  1283               	bcf	3,5	;RP0=0, select bank0
  2079     0384  1303               	bcf	3,6	;RP1=0, select bank0
  2080     0385  00C9               	movwf	lcdPrint@str
  2081     0386  3000               	movlw	0
  2082     0387  00CA               	movwf	lcdPrint@str+1
  2083     0388  120A  158A  27B8  120A  118A  	fcall	_lcdPrint
  2084     038D                     l2692:
  2085                           
  2086                           ;main.c: 265:                             countdown --;
  2087     038D  3001               	movlw	1
  2088     038E  1283               	bcf	3,5	;RP0=0, select bank0
  2089     038F  1303               	bcf	3,6	;RP1=0, select bank0
  2090     0390  02E7               	subwf	_countdown,f
  2091     0391                     l2694:
  2092                           
  2093                           ;main.c: 266:                             _delay((unsigned long)((60)*(8000000/4000.0)))
      +                          ;
  2094     0391  309C               	movlw	156
  2095     0392  1283               	bcf	3,5	;RP0=0, select bank0
  2096     0393  1303               	bcf	3,6	;RP1=0, select bank0
  2097     0394  00E4               	movwf	??_UART_Read2+1
  2098     0395  30D6               	movlw	214
  2099     0396  00E3               	movwf	??_UART_Read2
  2100     0397                     u3837:
  2101     0397  0BE3               	decfsz	??_UART_Read2,f
  2102     0398  2B97               	goto	u3837
  2103     0399  0BE4               	decfsz	??_UART_Read2+1,f
  2104     039A  2B97               	goto	u3837
  2105     039B  0000               	nop
  2106                           
  2107                           ;main.c: 267:                         }
  2108     039C  2C19               	goto	l2728
  2109     039D                     l2696:
  2110                           
  2111                           ;main.c: 270:                                 intToString(countdown, print_countdown);
  2112     039D  0867               	movf	_countdown,w
  2113     039E  00E3               	movwf	??_UART_Read2
  2114     039F  01E4               	clrf	??_UART_Read2+1
  2115     03A0  0863               	movf	??_UART_Read2,w
  2116     03A1  00DA               	movwf	intToString@n
  2117     03A2  0864               	movf	??_UART_Read2+1,w
  2118     03A3  00DB               	movwf	intToString@n+1
  2119     03A4  3044               	movlw	(low (_print_countdown| 0))& (0+255)
  2120     03A5  00DC               	movwf	intToString@str
  2121     03A6  120A  118A  2645  120A  118A  	fcall	_intToString
  2122     03AB                     l2698:
  2123                           
  2124                           ;main.c: 271:                                 lcdSend(0xC0, 0);
  2125     03AB  1283               	bcf	3,5	;RP0=0, select bank0
  2126     03AC  1303               	bcf	3,6	;RP1=0, select bank0
  2127     03AD  01C7               	clrf	lcdSend@tipo
  2128     03AE  30C0               	movlw	192
  2129     03AF  120A  158A  2749  120A  118A  	fcall	_lcdSend
  2130     03B4                     l2700:
  2131                           
  2132                           ;main.c: 272:                                 lcdPrint(print_countdown);
  2133     03B4  3044               	movlw	(low (_print_countdown| 0))& (0+255)
  2134     03B5  1283               	bcf	3,5	;RP0=0, select bank0
  2135     03B6  1303               	bcf	3,6	;RP1=0, select bank0
  2136     03B7  00C9               	movwf	lcdPrint@str
  2137     03B8  3000               	movlw	0
  2138     03B9  00CA               	movwf	lcdPrint@str+1
  2139     03BA  120A  158A  27B8  120A  118A  	fcall	_lcdPrint
  2140     03BF                     l2702:
  2141                           
  2142                           ;main.c: 273:                                 countdown --;
  2143     03BF  3001               	movlw	1
  2144     03C0  1283               	bcf	3,5	;RP0=0, select bank0
  2145     03C1  1303               	bcf	3,6	;RP1=0, select bank0
  2146     03C2  02E7               	subwf	_countdown,f
  2147     03C3                     l2704:
  2148                           
  2149                           ;main.c: 274:                                 _delay((unsigned long)((60)*(8000000/4000.
      +                          0)));
  2150     03C3  309C               	movlw	156
  2151     03C4  1283               	bcf	3,5	;RP0=0, select bank0
  2152     03C5  1303               	bcf	3,6	;RP1=0, select bank0
  2153     03C6  00E4               	movwf	??_UART_Read2+1
  2154     03C7  30D6               	movlw	214
  2155     03C8  00E3               	movwf	??_UART_Read2
  2156     03C9                     u3847:
  2157     03C9  0BE3               	decfsz	??_UART_Read2,f
  2158     03CA  2BC9               	goto	u3847
  2159     03CB  0BE4               	decfsz	??_UART_Read2+1,f
  2160     03CC  2BC9               	goto	u3847
  2161     03CD  0000               	nop
  2162     03CE                     l2706:
  2163                           
  2164                           ;main.c: 275:                                 if(RCREG == 0x31){
  2165     03CE  3031               	movlw	49
  2166     03CF  1283               	bcf	3,5	;RP0=0, select bank0
  2167     03D0  1303               	bcf	3,6	;RP1=0, select bank0
  2168     03D1  061A               	xorwf	26,w	;volatile
  2169     03D2  1D03               	btfss	3,2
  2170     03D3  2BD5               	goto	u3091
  2171     03D4  2BD6               	goto	u3090
  2172     03D5                     u3091:
  2173     03D5  2C12               	goto	l224
  2174     03D6                     u3090:
  2175     03D6                     l2708:
  2176                           
  2177                           ;main.c: 276:                                     lcdSend(0x80 + 1, 0);
  2178     03D6  01C7               	clrf	lcdSend@tipo
  2179     03D7  3081               	movlw	129
  2180     03D8  120A  158A  2749  120A  118A  	fcall	_lcdSend
  2181                           
  2182                           ;main.c: 277:                                     lcdSend(RCREG, 1);
  2183     03DD  1283               	bcf	3,5	;RP0=0, select bank0
  2184     03DE  1303               	bcf	3,6	;RP1=0, select bank0
  2185     03DF  01C7               	clrf	lcdSend@tipo
  2186     03E0  0AC7               	incf	lcdSend@tipo,f
  2187     03E1  081A               	movf	26,w	;volatile
  2188     03E2  120A  158A  2749  120A  118A  	fcall	_lcdSend
  2189     03E7                     l2710:
  2190                           
  2191                           ;main.c: 278:                                     RCIF = 0;
  2192     03E7  1283               	bcf	3,5	;RP0=0, select bank0
  2193     03E8  1303               	bcf	3,6	;RP1=0, select bank0
  2194     03E9  128C               	bcf	12,5	;volatile
  2195     03EA                     l2712:
  2196     03EA  081A               	movf	26,w	;volatile
  2197     03EB                     l2714:
  2198                           
  2199                           ;main.c: 280:                                     countdown = 60;
  2200     03EB  303C               	movlw	60
  2201     03EC  00E7               	movwf	_countdown
  2202                           
  2203                           ;main.c: 281:                                     lcdSend(0xC0, 0);
  2204     03ED  01C7               	clrf	lcdSend@tipo
  2205     03EE  30C0               	movlw	192
  2206     03EF  120A  158A  2749  120A  118A  	fcall	_lcdSend
  2207     03F4                     l2716:
  2208                           
  2209                           ;main.c: 282:                                     lcdPrint("APRI PORTA");
  2210     03F4  3063               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2211     03F5  1283               	bcf	3,5	;RP0=0, select bank0
  2212     03F6  1303               	bcf	3,6	;RP1=0, select bank0
  2213     03F7  00C9               	movwf	lcdPrint@str
  2214     03F8  3080               	movlw	128
  2215     03F9  00CA               	movwf	lcdPrint@str+1
  2216     03FA  120A  158A  27B8  120A  118A  	fcall	_lcdPrint
  2217     03FF                     l2718:
  2218                           
  2219                           ;main.c: 283:                                     _delay((unsigned long)((200)*(8000000/
      +                          4000.0)));
  2220     03FF  3003               	movlw	3
  2221     0400  1283               	bcf	3,5	;RP0=0, select bank0
  2222     0401  1303               	bcf	3,6	;RP1=0, select bank0
  2223     0402  00E5               	movwf	??_UART_Read2+2
  2224     0403  3008               	movlw	8
  2225     0404  00E4               	movwf	??_UART_Read2+1
  2226     0405  3076               	movlw	118
  2227     0406  00E3               	movwf	??_UART_Read2
  2228     0407                     u3857:
  2229     0407  0BE3               	decfsz	??_UART_Read2,f
  2230     0408  2C07               	goto	u3857
  2231     0409  0BE4               	decfsz	??_UART_Read2+1,f
  2232     040A  2C07               	goto	u3857
  2233     040B  0BE5               	decfsz	??_UART_Read2+2,f
  2234     040C  2C07               	goto	u3857
  2235     040D  0000               	nop
  2236     040E                     l2720:
  2237                           
  2238                           ;main.c: 284:                                     return RCREG;;	Return value of _UART_R
      +                          ead2 is never used
  2239     040E  1283               	bcf	3,5	;RP0=0, select bank0
  2240     040F  1303               	bcf	3,6	;RP1=0, select bank0
  2241     0410  081A               	movf	26,w	;volatile
  2242     0411  2C47               	goto	l225
  2243     0412                     l224:	
  2244                           ;main.c: 285:                                 }
  2245                           
  2246                           
  2247                           ;main.c: 312:                                 RCIF = 0;
  2248     0412  128C               	bcf	12,5	;volatile
  2249     0413                     l2724:
  2250     0413  081A               	movf	26,w	;volatile
  2251     0414                     l2726:
  2252                           
  2253                           ;main.c: 269:                             while (countdown != 0){
  2254     0414  0867               	movf	_countdown,w
  2255     0415  1D03               	btfss	3,2
  2256     0416  2C18               	goto	u3101
  2257     0417  2C19               	goto	u3100
  2258     0418                     u3101:
  2259     0418  2B9D               	goto	l2696
  2260     0419                     u3100:
  2261     0419                     l2728:
  2262                           
  2263                           ;main.c: 260:                     while (countdown != 0){
  2264     0419  1283               	bcf	3,5	;RP0=0, select bank0
  2265     041A  1303               	bcf	3,6	;RP1=0, select bank0
  2266     041B  0867               	movf	_countdown,w
  2267     041C  1D03               	btfss	3,2
  2268     041D  2C1F               	goto	u3111
  2269     041E  2C20               	goto	u3110
  2270     041F                     u3111:
  2271     041F  2B67               	goto	l219
  2272     0420                     u3110:
  2273     0420                     l217:	
  2274                           ;main.c: 317:                 }
  2275                           
  2276                           
  2277                           ;main.c: 318:                 RCIF = 0;
  2278     0420  128C               	bcf	12,5	;volatile
  2279     0421                     l2730:
  2280     0421  081A               	movf	26,w	;volatile
  2281     0422                     l2732:
  2282                           
  2283                           ;main.c: 249:             while (countdown != 0){
  2284     0422  0867               	movf	_countdown,w
  2285     0423  1D03               	btfss	3,2
  2286     0424  2C26               	goto	u3121
  2287     0425  2C27               	goto	u3120
  2288     0426                     u3121:
  2289     0426  2B18               	goto	l2668
  2290     0427                     u3120:
  2291     0427  2ACD               	goto	l2652
  2292     0428                     l2734:
  2293                           
  2294                           ;main.c: 238:     while (countdown != 0){
  2295     0428  1283               	bcf	3,5	;RP0=0, select bank0
  2296     0429  1303               	bcf	3,6	;RP1=0, select bank0
  2297     042A  0867               	movf	_countdown,w
  2298     042B  1D03               	btfss	3,2
  2299     042C  2C2E               	goto	u3131
  2300     042D  2C2F               	goto	u3130
  2301     042E                     u3131:
  2302     042E  2ACE               	goto	l212
  2303     042F                     u3130:
  2304     042F                     l2736:
  2305                           
  2306                           ;main.c: 323:     lcdSend(0x01, 0);
  2307     042F  01C7               	clrf	lcdSend@tipo
  2308     0430  3001               	movlw	1
  2309     0431  120A  158A  2749  120A  118A  	fcall	_lcdSend
  2310     0436                     l2738:
  2311                           
  2312                           ;main.c: 324:     lcdPrint("Tempo Scaduto");
  2313     0436  3031               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2314     0437  1283               	bcf	3,5	;RP0=0, select bank0
  2315     0438  1303               	bcf	3,6	;RP1=0, select bank0
  2316     0439  00C9               	movwf	lcdPrint@str
  2317     043A  3080               	movlw	128
  2318     043B  00CA               	movwf	lcdPrint@str+1
  2319     043C  120A  158A  27B8  120A  118A  	fcall	_lcdPrint
  2320     0441                     l2740:
  2321                           
  2322                           ;main.c: 325:     RCIF = 0;
  2323     0441  1283               	bcf	3,5	;RP0=0, select bank0
  2324     0442  1303               	bcf	3,6	;RP1=0, select bank0
  2325     0443  128C               	bcf	12,5	;volatile
  2326     0444                     l2742:
  2327                           
  2328                           ;main.c: 326:     countdown = 60;
  2329     0444  303C               	movlw	60
  2330     0445  00E7               	movwf	_countdown
  2331     0446  2BFF               	goto	l2718
  2332     0447                     l225:
  2333     0447  0008               	return
  2334     0448                     __end_of_UART_Read2:
  2335                           
  2336                           	psect	text4
  2337     0FB8                     __ptext4:	
  2338 ;; *************** function _lcdPrint *****************
  2339 ;; Defined at:
  2340 ;;		line 451 in file "main.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;  str             2    2[BANK0 ] PTR unsigned char 
  2343 ;;		 -> STR_10(15), STR_9(8), STR_8(14), STR_7(11), 
  2344 ;;		 -> print_countdown(3), STR_6(10), STR_5(14), STR_4(13), 
  2345 ;;		 -> STR_3(12), STR_2(11), STR_1(10), 
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;  n               2    7[BANK0 ] int 
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      void 
  2350 ;; Registers used:
  2351 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2357 ;;      Params:         0       2       0       0       0
  2358 ;;      Locals:         0       2       0       0       0
  2359 ;;      Temps:          0       3       0       0       0
  2360 ;;      Totals:         0       7       0       0       0
  2361 ;;Total ram usage:        7 bytes
  2362 ;; Hardware stack levels used: 1
  2363 ;; Hardware stack levels required when called: 3
  2364 ;; This function calls:
  2365 ;;		_lcdSend
  2366 ;; This function is called by:
  2367 ;;		_main
  2368 ;;		_UART_Read2
  2369 ;;		_UART_Read1
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373     0FB8                     _lcdPrint:	
  2374                           ;psect for function _lcdPrint
  2375                           
  2376     0FB8                     l2504:	
  2377                           ;incstack = 0
  2378                           ; Regs used in _lcdPrint: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2379                           
  2380                           
  2381                           ;main.c: 452:     int n = 0;
  2382     0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  2383     0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  2384     0FBA  01CE               	clrf	lcdPrint@n
  2385     0FBB  01CF               	clrf	lcdPrint@n+1
  2386                           
  2387                           ;main.c: 453:     while (str[n] != '\0') {
  2388     0FBC  2FE3               	goto	l2510
  2389     0FBD                     l2506:
  2390                           
  2391                           ;main.c: 454:         lcdSend(str[n++], 1);
  2392     0FBD  01C7               	clrf	lcdSend@tipo
  2393     0FBE  0AC7               	incf	lcdSend@tipo,f
  2394     0FBF  084E               	movf	lcdPrint@n,w
  2395     0FC0  0749               	addwf	lcdPrint@str,w
  2396     0FC1  00CC               	movwf	??_lcdPrint+1
  2397     0FC2  084A               	movf	lcdPrint@str+1,w
  2398     0FC3  00CB               	movwf	??_lcdPrint
  2399     0FC4  1803               	skipnc
  2400     0FC5  0ACB               	incf	??_lcdPrint,f
  2401     0FC6  1FCE               	btfss	lcdPrint@n,7
  2402     0FC7  2FC9               	goto	u2890
  2403     0FC8  03CB               	decf	??_lcdPrint,f
  2404     0FC9                     u2890:
  2405     0FC9  1283               	bcf	3,5	;RP0=0, select bank0
  2406     0FCA  1303               	bcf	3,6	;RP1=0, select bank0
  2407     0FCB  084B               	movf	??_lcdPrint,w
  2408     0FCC  00CD               	movwf	??_lcdPrint+2
  2409     0FCD  084D               	movf	??_lcdPrint+2,w
  2410     0FCE  00FF               	movwf	btemp+1
  2411     0FCF  084C               	movf	??_lcdPrint+1,w
  2412     0FD0  0084               	movwf	4
  2413     0FD1  120A  118A  252A  120A  158A  	fcall	stringtab
  2414     0FD6  120A  158A  2749  120A  158A  	fcall	_lcdSend
  2415     0FDB                     l2508:
  2416     0FDB  3001               	movlw	1
  2417     0FDC  1283               	bcf	3,5	;RP0=0, select bank0
  2418     0FDD  1303               	bcf	3,6	;RP1=0, select bank0
  2419     0FDE  07CE               	addwf	lcdPrint@n,f
  2420     0FDF  1803               	skipnc
  2421     0FE0  0ACF               	incf	lcdPrint@n+1,f
  2422     0FE1  3000               	movlw	0
  2423     0FE2  07CF               	addwf	lcdPrint@n+1,f
  2424     0FE3                     l2510:
  2425                           
  2426                           ;main.c: 453:     while (str[n] != '\0') {
  2427     0FE3  084E               	movf	lcdPrint@n,w
  2428     0FE4  0749               	addwf	lcdPrint@str,w
  2429     0FE5  00CC               	movwf	??_lcdPrint+1
  2430     0FE6  084A               	movf	lcdPrint@str+1,w
  2431     0FE7  00CB               	movwf	??_lcdPrint
  2432     0FE8  1803               	skipnc
  2433     0FE9  0ACB               	incf	??_lcdPrint,f
  2434     0FEA  1FCE               	btfss	lcdPrint@n,7
  2435     0FEB  2FED               	goto	u2900
  2436     0FEC  03CB               	decf	??_lcdPrint,f
  2437     0FED                     u2900:
  2438     0FED  1283               	bcf	3,5	;RP0=0, select bank0
  2439     0FEE  1303               	bcf	3,6	;RP1=0, select bank0
  2440     0FEF  084B               	movf	??_lcdPrint,w
  2441     0FF0  00CD               	movwf	??_lcdPrint+2
  2442     0FF1  084D               	movf	??_lcdPrint+2,w
  2443     0FF2  00FF               	movwf	btemp+1
  2444     0FF3  084C               	movf	??_lcdPrint+1,w
  2445     0FF4  0084               	movwf	4
  2446     0FF5  120A  118A  252A  120A  158A  	fcall	stringtab
  2447     0FFA  3A00               	xorlw	0
  2448     0FFB  1D03               	skipz
  2449     0FFC  2FFE               	goto	u2911
  2450     0FFD  2FFF               	goto	u2910
  2451     0FFE                     u2911:
  2452     0FFE  2FBD               	goto	l2506
  2453     0FFF                     u2910:
  2454     0FFF                     l254:
  2455     0FFF  0008               	return
  2456     1000                     __end_of_lcdPrint:
  2457                           
  2458                           	psect	text5
  2459     0F49                     __ptext5:	
  2460 ;; *************** function _lcdSend *****************
  2461 ;; Defined at:
  2462 ;;		line 430 in file "main.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;  dato            1    wreg     unsigned char 
  2465 ;;  tipo            1    0[BANK0 ] unsigned char 
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;  dato            1    1[BANK0 ] unsigned char 
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  1    wreg      void 
  2470 ;; Registers used:
  2471 ;;		wreg, status,2, status,0
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2477 ;;      Params:         0       1       0       0       0
  2478 ;;      Locals:         0       1       0       0       0
  2479 ;;      Temps:          0       0       0       0       0
  2480 ;;      Totals:         0       2       0       0       0
  2481 ;;Total ram usage:        2 bytes
  2482 ;; Hardware stack levels used: 1
  2483 ;; Hardware stack levels required when called: 2
  2484 ;; This function calls:
  2485 ;;		Nothing
  2486 ;; This function is called by:
  2487 ;;		_main
  2488 ;;		_UART_Read2
  2489 ;;		_initLCD
  2490 ;;		_lcdPrint
  2491 ;;		_UART_Read1
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495     0F49                     _lcdSend:	
  2496                           ;psect for function _lcdSend
  2497                           
  2498                           
  2499                           ;incstack = 0
  2500                           ; Regs used in _lcdSend: [wreg+status,2+status,0]
  2501                           ;lcdSend@dato stored from wreg
  2502     0F49  1283               	bcf	3,5	;RP0=0, select bank0
  2503     0F4A  1303               	bcf	3,6	;RP1=0, select bank0
  2504     0F4B  00C8               	movwf	lcdSend@dato
  2505     0F4C                     l2436:
  2506                           
  2507                           ;main.c: 434:     TRISD = 0x00;
  2508     0F4C  1683               	bsf	3,5	;RP0=1, select bank1
  2509     0F4D  1303               	bcf	3,6	;RP1=0, select bank1
  2510     0F4E  0188               	clrf	8	;volatile
  2511     0F4F                     l2438:
  2512                           
  2513                           ;main.c: 435:     TRISEbits.TRISE1 = 0;
  2514     0F4F  1089               	bcf	9,1	;volatile
  2515     0F50                     l2440:
  2516                           
  2517                           ;main.c: 436:     TRISEbits.TRISE2 = 0;
  2518     0F50  1109               	bcf	9,2	;volatile
  2519     0F51                     l2442:
  2520                           
  2521                           ;main.c: 441:     PORTEbits.RE1 = 1;
  2522     0F51  1283               	bcf	3,5	;RP0=0, select bank0
  2523     0F52  1303               	bcf	3,6	;RP1=0, select bank0
  2524     0F53  1489               	bsf	9,1	;volatile
  2525     0F54                     l2444:
  2526                           
  2527                           ;main.c: 443:     PORTD = dato;
  2528     0F54  0848               	movf	lcdSend@dato,w
  2529     0F55  0088               	movwf	8	;volatile
  2530     0F56                     l2446:
  2531                           
  2532                           ;main.c: 444:     PORTEbits.RE2 = tipo;
  2533     0F56  0C47               	rrf	lcdSend@tipo,w
  2534     0F57  1C03               	skipc
  2535     0F58  1109               	bcf	9,2	;volatile
  2536     0F59  1803               	skipnc
  2537     0F5A  1509               	bsf	9,2	;volatile
  2538     0F5B                     l2448:
  2539                           
  2540                           ;main.c: 446:     PORTEbits.RE1 = 0;
  2541     0F5B  1089               	bcf	9,1	;volatile
  2542     0F5C                     l2450:
  2543                           
  2544                           ;main.c: 448:     PORTEbits.RE1 = 1;
  2545     0F5C  1489               	bsf	9,1	;volatile
  2546     0F5D                     l248:
  2547     0F5D  0008               	return
  2548     0F5E                     __end_of_lcdSend:
  2549                           
  2550                           	psect	text6
  2551     0645                     __ptext6:	
  2552 ;; *************** function _intToString *****************
  2553 ;; Defined at:
  2554 ;;		line 665 in file "main.c"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;  n               2   19[BANK0 ] int 
  2557 ;;  str             1   21[BANK0 ] PTR unsigned char 
  2558 ;;		 -> print_countdown(3), 
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;  t               1   25[BANK0 ] unsigned char 
  2561 ;;  i               1   27[BANK0 ] unsigned char 
  2562 ;;  cifre           1   26[BANK0 ] unsigned char 
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  1    wreg      void 
  2565 ;; Registers used:
  2566 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2572 ;;      Params:         0       3       0       0       0
  2573 ;;      Locals:         0       3       0       0       0
  2574 ;;      Temps:          0       3       0       0       0
  2575 ;;      Totals:         0       9       0       0       0
  2576 ;;Total ram usage:        9 bytes
  2577 ;; Hardware stack levels used: 1
  2578 ;; Hardware stack levels required when called: 4
  2579 ;; This function calls:
  2580 ;;		___awdiv
  2581 ;;		___awmod
  2582 ;;		_potenza
  2583 ;; This function is called by:
  2584 ;;		_UART_Read2
  2585 ;;		_UART_Read1
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           
  2589     0645                     _intToString:	
  2590                           ;psect for function _intToString
  2591                           
  2592     0645                     l2512:	
  2593                           ;incstack = 0
  2594                           ; Regs used in _intToString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2595                           
  2596                           
  2597                           ;main.c: 668:     char cifre = 1;
  2598     0645  1283               	bcf	3,5	;RP0=0, select bank0
  2599     0646  1303               	bcf	3,6	;RP1=0, select bank0
  2600     0647  01E1               	clrf	intToString@cifre
  2601     0648  0AE1               	incf	intToString@cifre,f
  2602     0649                     l2514:
  2603                           
  2604                           ;main.c: 671:     while (n / potenza(10, cifre)) cifre++;
  2605     0649  2E4E               	goto	l2518
  2606     064A                     l2516:
  2607     064A  3001               	movlw	1
  2608     064B  00DD               	movwf	??_intToString
  2609     064C  085D               	movf	??_intToString,w
  2610     064D  07E1               	addwf	intToString@cifre,f
  2611     064E                     l2518:
  2612     064E  0861               	movf	intToString@cifre,w
  2613     064F  00CB               	movwf	potenza@e
  2614     0650  300A               	movlw	10
  2615     0651  120A  158A  278C  120A  118A  	fcall	_potenza
  2616     0656  1283               	bcf	3,5	;RP0=0, select bank0
  2617     0657  1303               	bcf	3,6	;RP1=0, select bank0
  2618     0658  00DD               	movwf	??_intToString
  2619     0659  01DE               	clrf	??_intToString+1
  2620     065A  085D               	movf	??_intToString,w
  2621     065B  00D1               	movwf	___awdiv@divisor
  2622     065C  085E               	movf	??_intToString+1,w
  2623     065D  00D2               	movwf	___awdiv@divisor+1
  2624     065E  085B               	movf	intToString@n+1,w
  2625     065F  00D4               	movwf	___awdiv@dividend+1
  2626     0660  085A               	movf	intToString@n,w
  2627     0661  00D3               	movwf	___awdiv@dividend
  2628     0662  120A  118A  272D  120A  118A  	fcall	___awdiv
  2629     0667  1283               	bcf	3,5	;RP0=0, select bank0
  2630     0668  1303               	bcf	3,6	;RP1=0, select bank0
  2631     0669  0851               	movf	?___awdiv,w
  2632     066A  0452               	iorwf	?___awdiv+1,w
  2633     066B  1D03               	btfss	3,2
  2634     066C  2E6E               	goto	u2921
  2635     066D  2E6F               	goto	u2920
  2636     066E                     u2921:
  2637     066E  2E4A               	goto	l2516
  2638     066F                     u2920:
  2639     066F                     l2520:
  2640                           
  2641                           ;main.c: 673:     for (i = 0; i < cifre; i++) {
  2642     066F  01E2               	clrf	intToString@i
  2643     0670  2EB3               	goto	l2530
  2644     0671                     l2522:
  2645                           
  2646                           ;main.c: 674:         char t = potenza(10, cifre - 1 - i);
  2647     0671  0862               	movf	intToString@i,w
  2648     0672  0261               	subwf	intToString@cifre,w
  2649     0673  3EFF               	addlw	255
  2650     0674  00CB               	movwf	potenza@e
  2651     0675  300A               	movlw	10
  2652     0676  120A  158A  278C  120A  118A  	fcall	_potenza
  2653     067B  1283               	bcf	3,5	;RP0=0, select bank0
  2654     067C  1303               	bcf	3,6	;RP1=0, select bank0
  2655     067D  00E0               	movwf	intToString@t
  2656     067E                     l2524:
  2657                           
  2658                           ;main.c: 675:         str[i] = '0' + (char) (n / t);
  2659     067E  0862               	movf	intToString@i,w
  2660     067F  075C               	addwf	intToString@str,w
  2661     0680  00DD               	movwf	??_intToString
  2662     0681  085D               	movf	??_intToString,w
  2663     0682  0084               	movwf	4
  2664     0683  0860               	movf	intToString@t,w
  2665     0684  00DE               	movwf	??_intToString+1
  2666     0685  01DF               	clrf	??_intToString+2
  2667     0686  085E               	movf	??_intToString+1,w
  2668     0687  00D1               	movwf	___awdiv@divisor
  2669     0688  085F               	movf	??_intToString+2,w
  2670     0689  00D2               	movwf	___awdiv@divisor+1
  2671     068A  085B               	movf	intToString@n+1,w
  2672     068B  00D4               	movwf	___awdiv@dividend+1
  2673     068C  085A               	movf	intToString@n,w
  2674     068D  00D3               	movwf	___awdiv@dividend
  2675     068E  120A  118A  272D  120A  118A  	fcall	___awdiv
  2676     0693  1283               	bcf	3,5	;RP0=0, select bank0
  2677     0694  1303               	bcf	3,6	;RP1=0, select bank0
  2678     0695  0851               	movf	?___awdiv,w
  2679     0696  3E30               	addlw	48
  2680     0697  1383               	bcf	3,7	;select IRP bank0
  2681     0698  0080               	movwf	0
  2682     0699                     l2526:
  2683                           
  2684                           ;main.c: 676:         n = n % t;
  2685     0699  0860               	movf	intToString@t,w
  2686     069A  00DD               	movwf	??_intToString
  2687     069B  01DE               	clrf	??_intToString+1
  2688     069C  085D               	movf	??_intToString,w
  2689     069D  00C7               	movwf	___awmod@divisor
  2690     069E  085E               	movf	??_intToString+1,w
  2691     069F  00C8               	movwf	___awmod@divisor+1
  2692     06A0  085B               	movf	intToString@n+1,w
  2693     06A1  00CA               	movwf	___awmod@dividend+1
  2694     06A2  085A               	movf	intToString@n,w
  2695     06A3  00C9               	movwf	___awmod@dividend
  2696     06A4  120A  118A  2796  120A  118A  	fcall	___awmod
  2697     06A9  1283               	bcf	3,5	;RP0=0, select bank0
  2698     06AA  1303               	bcf	3,6	;RP1=0, select bank0
  2699     06AB  0848               	movf	?___awmod+1,w
  2700     06AC  00DB               	movwf	intToString@n+1
  2701     06AD  0847               	movf	?___awmod,w
  2702     06AE  00DA               	movwf	intToString@n
  2703     06AF                     l2528:
  2704                           
  2705                           ;main.c: 677:     }
  2706     06AF  3001               	movlw	1
  2707     06B0  00DD               	movwf	??_intToString
  2708     06B1  085D               	movf	??_intToString,w
  2709     06B2  07E2               	addwf	intToString@i,f
  2710     06B3                     l2530:
  2711     06B3  0861               	movf	intToString@cifre,w
  2712     06B4  0262               	subwf	intToString@i,w
  2713     06B5  1C03               	skipc
  2714     06B6  2EB8               	goto	u2931
  2715     06B7  2EB9               	goto	u2930
  2716     06B8                     u2931:
  2717     06B8  2E71               	goto	l2522
  2718     06B9                     u2930:
  2719     06B9                     l2532:
  2720                           
  2721                           ;main.c: 679:     str[i] = '\0';
  2722     06B9  0862               	movf	intToString@i,w
  2723     06BA  075C               	addwf	intToString@str,w
  2724     06BB  00DD               	movwf	??_intToString
  2725     06BC  085D               	movf	??_intToString,w
  2726     06BD  0084               	movwf	4
  2727     06BE  1383               	bcf	3,7	;select IRP bank0
  2728     06BF  0180               	clrf	0
  2729     06C0                     l350:
  2730     06C0  0008               	return
  2731     06C1                     __end_of_intToString:
  2732                           
  2733                           	psect	text7
  2734     0F8C                     __ptext7:	
  2735 ;; *************** function _potenza *****************
  2736 ;; Defined at:
  2737 ;;		line 657 in file "main.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;  b               1    wreg     unsigned char 
  2740 ;;  e               1    4[BANK0 ] unsigned char 
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;  b               1    6[BANK0 ] unsigned char 
  2743 ;;  i               2    7[BANK0 ] int 
  2744 ;;  n               1    9[BANK0 ] unsigned char 
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  1    wreg      unsigned char 
  2747 ;; Registers used:
  2748 ;;		wreg, status,2, status,0, pclath, cstack
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2754 ;;      Params:         0       1       0       0       0
  2755 ;;      Locals:         0       4       0       0       0
  2756 ;;      Temps:          0       1       0       0       0
  2757 ;;      Totals:         0       6       0       0       0
  2758 ;;Total ram usage:        6 bytes
  2759 ;; Hardware stack levels used: 1
  2760 ;; Hardware stack levels required when called: 3
  2761 ;; This function calls:
  2762 ;;		___bmul
  2763 ;; This function is called by:
  2764 ;;		_intToString
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768     0F8C                     _potenza:	
  2769                           ;psect for function _potenza
  2770                           
  2771                           
  2772                           ;incstack = 0
  2773                           ; Regs used in _potenza: [wreg+status,2+status,0+pclath+cstack]
  2774                           ;potenza@b stored from wreg
  2775     0F8C  1283               	bcf	3,5	;RP0=0, select bank0
  2776     0F8D  1303               	bcf	3,6	;RP1=0, select bank0
  2777     0F8E  00CD               	movwf	potenza@b
  2778     0F8F                     l2452:
  2779                           
  2780                           ;main.c: 658:     char n = 1;
  2781     0F8F  01D0               	clrf	potenza@n
  2782     0F90  0AD0               	incf	potenza@n,f
  2783     0F91                     l2454:
  2784                           
  2785                           ;main.c: 659:     for (int i = 0; i < e; i++) {
  2786     0F91  01CE               	clrf	potenza@i
  2787     0F92  01CF               	clrf	potenza@i+1
  2788     0F93  2FA7               	goto	l2460
  2789     0F94                     l2456:
  2790                           
  2791                           ;main.c: 660:         n = n * b;
  2792     0F94  1283               	bcf	3,5	;RP0=0, select bank0
  2793     0F95  1303               	bcf	3,6	;RP1=0, select bank0
  2794     0F96  084D               	movf	potenza@b,w
  2795     0F97  00C7               	movwf	___bmul@multiplicand
  2796     0F98  0850               	movf	potenza@n,w
  2797     0F99  120A  158A  2775  120A  158A  	fcall	___bmul
  2798     0F9E  1283               	bcf	3,5	;RP0=0, select bank0
  2799     0F9F  1303               	bcf	3,6	;RP1=0, select bank0
  2800     0FA0  00D0               	movwf	potenza@n
  2801     0FA1                     l2458:
  2802                           
  2803                           ;main.c: 661:     }
  2804     0FA1  3001               	movlw	1
  2805     0FA2  07CE               	addwf	potenza@i,f
  2806     0FA3  1803               	skipnc
  2807     0FA4  0ACF               	incf	potenza@i+1,f
  2808     0FA5  3000               	movlw	0
  2809     0FA6  07CF               	addwf	potenza@i+1,f
  2810     0FA7                     l2460:
  2811     0FA7  084F               	movf	potenza@i+1,w
  2812     0FA8  3A80               	xorlw	128
  2813     0FA9  00CC               	movwf	??_potenza
  2814     0FAA  3080               	movlw	128
  2815     0FAB  024C               	subwf	??_potenza,w
  2816     0FAC  1D03               	skipz
  2817     0FAD  2FB0               	goto	u2795
  2818     0FAE  084B               	movf	potenza@e,w
  2819     0FAF  024E               	subwf	potenza@i,w
  2820     0FB0                     u2795:
  2821     0FB0  1C03               	skipc
  2822     0FB1  2FB3               	goto	u2791
  2823     0FB2  2FB4               	goto	u2790
  2824     0FB3                     u2791:
  2825     0FB3  2F94               	goto	l2456
  2826     0FB4                     u2790:
  2827     0FB4                     l2462:
  2828                           
  2829                           ;main.c: 662:     return n;
  2830     0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  2831     0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  2832     0FB6  0850               	movf	potenza@n,w
  2833     0FB7                     l341:
  2834     0FB7  0008               	return
  2835     0FB8                     __end_of_potenza:
  2836                           
  2837                           	psect	text8
  2838     0F75                     __ptext8:	
  2839 ;; *************** function ___bmul *****************
  2840 ;; Defined at:
  2841 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;  multiplier      1    wreg     unsigned char 
  2844 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;  multiplier      1    3[BANK0 ] unsigned char 
  2847 ;;  product         1    2[BANK0 ] unsigned char 
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  1    wreg      unsigned char 
  2850 ;; Registers used:
  2851 ;;		wreg, status,2, status,0
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2857 ;;      Params:         0       1       0       0       0
  2858 ;;      Locals:         0       2       0       0       0
  2859 ;;      Temps:          0       1       0       0       0
  2860 ;;      Totals:         0       4       0       0       0
  2861 ;;Total ram usage:        4 bytes
  2862 ;; Hardware stack levels used: 1
  2863 ;; Hardware stack levels required when called: 2
  2864 ;; This function calls:
  2865 ;;		Nothing
  2866 ;; This function is called by:
  2867 ;;		_potenza
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871     0F75                     ___bmul:	
  2872                           ;psect for function ___bmul
  2873                           
  2874                           
  2875                           ;incstack = 0
  2876                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2877                           ;___bmul@multiplier stored from wreg
  2878     0F75  1283               	bcf	3,5	;RP0=0, select bank0
  2879     0F76  1303               	bcf	3,6	;RP1=0, select bank0
  2880     0F77  00CA               	movwf	___bmul@multiplier
  2881     0F78                     l2422:
  2882     0F78  01C9               	clrf	___bmul@product
  2883     0F79                     l2424:
  2884     0F79  1C4A               	btfss	___bmul@multiplier,0
  2885     0F7A  2F7C               	goto	u2771
  2886     0F7B  2F7D               	goto	u2770
  2887     0F7C                     u2771:
  2888     0F7C  2F81               	goto	l2428
  2889     0F7D                     u2770:
  2890     0F7D                     l2426:
  2891     0F7D  0847               	movf	___bmul@multiplicand,w
  2892     0F7E  00C8               	movwf	??___bmul
  2893     0F7F  0848               	movf	??___bmul,w
  2894     0F80  07C9               	addwf	___bmul@product,f
  2895     0F81                     l2428:
  2896     0F81  1003               	clrc
  2897     0F82  0DC7               	rlf	___bmul@multiplicand,f
  2898     0F83                     l2430:
  2899     0F83  1003               	clrc
  2900     0F84  0CCA               	rrf	___bmul@multiplier,f
  2901     0F85  084A               	movf	___bmul@multiplier,w
  2902     0F86  1D03               	btfss	3,2
  2903     0F87  2F89               	goto	u2781
  2904     0F88  2F8A               	goto	u2780
  2905     0F89                     u2781:
  2906     0F89  2F79               	goto	l2424
  2907     0F8A                     u2780:
  2908     0F8A                     l2432:
  2909     0F8A  0849               	movf	___bmul@product,w
  2910     0F8B                     l462:
  2911     0F8B  0008               	return
  2912     0F8C                     __end_of___bmul:
  2913                           
  2914                           	psect	text9
  2915     0796                     __ptext9:	
  2916 ;; *************** function ___awmod *****************
  2917 ;; Defined at:
  2918 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;  divisor         2    0[BANK0 ] int 
  2921 ;;  dividend        2    2[BANK0 ] int 
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;  sign            1    6[BANK0 ] unsigned char 
  2924 ;;  counter         1    5[BANK0 ] unsigned char 
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  2    0[BANK0 ] int 
  2927 ;; Registers used:
  2928 ;;		wreg, status,2, status,0
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2934 ;;      Params:         0       4       0       0       0
  2935 ;;      Locals:         0       2       0       0       0
  2936 ;;      Temps:          0       1       0       0       0
  2937 ;;      Totals:         0       7       0       0       0
  2938 ;;Total ram usage:        7 bytes
  2939 ;; Hardware stack levels used: 1
  2940 ;; Hardware stack levels required when called: 2
  2941 ;; This function calls:
  2942 ;;		Nothing
  2943 ;; This function is called by:
  2944 ;;		_intToString
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948     0796                     ___awmod:	
  2949                           ;psect for function ___awmod
  2950                           
  2951     0796                     l2466:	
  2952                           ;incstack = 0
  2953                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2954                           
  2955     0796  1283               	bcf	3,5	;RP0=0, select bank0
  2956     0797  1303               	bcf	3,6	;RP1=0, select bank0
  2957     0798  01CD               	clrf	___awmod@sign
  2958     0799                     l2468:
  2959     0799  1FCA               	btfss	___awmod@dividend+1,7
  2960     079A  2F9C               	goto	u2801
  2961     079B  2F9D               	goto	u2800
  2962     079C                     u2801:
  2963     079C  2FA4               	goto	l2474
  2964     079D                     u2800:
  2965     079D                     l2470:
  2966     079D  09C9               	comf	___awmod@dividend,f
  2967     079E  09CA               	comf	___awmod@dividend+1,f
  2968     079F  0AC9               	incf	___awmod@dividend,f
  2969     07A0  1903               	skipnz
  2970     07A1  0ACA               	incf	___awmod@dividend+1,f
  2971     07A2                     l2472:
  2972     07A2  01CD               	clrf	___awmod@sign
  2973     07A3  0ACD               	incf	___awmod@sign,f
  2974     07A4                     l2474:
  2975     07A4  1FC8               	btfss	___awmod@divisor+1,7
  2976     07A5  2FA7               	goto	u2811
  2977     07A6  2FA8               	goto	u2810
  2978     07A7                     u2811:
  2979     07A7  2FAD               	goto	l2478
  2980     07A8                     u2810:
  2981     07A8                     l2476:
  2982     07A8  09C7               	comf	___awmod@divisor,f
  2983     07A9  09C8               	comf	___awmod@divisor+1,f
  2984     07AA  0AC7               	incf	___awmod@divisor,f
  2985     07AB  1903               	skipnz
  2986     07AC  0AC8               	incf	___awmod@divisor+1,f
  2987     07AD                     l2478:
  2988     07AD  0847               	movf	___awmod@divisor,w
  2989     07AE  0448               	iorwf	___awmod@divisor+1,w
  2990     07AF  1903               	btfsc	3,2
  2991     07B0  2FB2               	goto	u2821
  2992     07B1  2FB3               	goto	u2820
  2993     07B2                     u2821:
  2994     07B2  2FE2               	goto	l2496
  2995     07B3                     u2820:
  2996     07B3                     l2480:
  2997     07B3  01CC               	clrf	___awmod@counter
  2998     07B4  0ACC               	incf	___awmod@counter,f
  2999     07B5  2FC1               	goto	l2486
  3000     07B6                     l2482:
  3001     07B6  3001               	movlw	1
  3002     07B7                     u2835:
  3003     07B7  1003               	clrc
  3004     07B8  0DC7               	rlf	___awmod@divisor,f
  3005     07B9  0DC8               	rlf	___awmod@divisor+1,f
  3006     07BA  3EFF               	addlw	-1
  3007     07BB  1D03               	skipz
  3008     07BC  2FB7               	goto	u2835
  3009     07BD                     l2484:
  3010     07BD  3001               	movlw	1
  3011     07BE  00CB               	movwf	??___awmod
  3012     07BF  084B               	movf	??___awmod,w
  3013     07C0  07CC               	addwf	___awmod@counter,f
  3014     07C1                     l2486:
  3015     07C1  1FC8               	btfss	___awmod@divisor+1,7
  3016     07C2  2FC4               	goto	u2841
  3017     07C3  2FC5               	goto	u2840
  3018     07C4                     u2841:
  3019     07C4  2FB6               	goto	l2482
  3020     07C5                     u2840:
  3021     07C5                     l2488:
  3022     07C5  0848               	movf	___awmod@divisor+1,w
  3023     07C6  024A               	subwf	___awmod@dividend+1,w
  3024     07C7  1D03               	skipz
  3025     07C8  2FCB               	goto	u2855
  3026     07C9  0847               	movf	___awmod@divisor,w
  3027     07CA  0249               	subwf	___awmod@dividend,w
  3028     07CB                     u2855:
  3029     07CB  1C03               	skipc
  3030     07CC  2FCE               	goto	u2851
  3031     07CD  2FCF               	goto	u2850
  3032     07CE                     u2851:
  3033     07CE  2FD5               	goto	l2492
  3034     07CF                     u2850:
  3035     07CF                     l2490:
  3036     07CF  0847               	movf	___awmod@divisor,w
  3037     07D0  02C9               	subwf	___awmod@dividend,f
  3038     07D1  0848               	movf	___awmod@divisor+1,w
  3039     07D2  1C03               	skipc
  3040     07D3  03CA               	decf	___awmod@dividend+1,f
  3041     07D4  02CA               	subwf	___awmod@dividend+1,f
  3042     07D5                     l2492:
  3043     07D5  3001               	movlw	1
  3044     07D6                     u2865:
  3045     07D6  1003               	clrc
  3046     07D7  0CC8               	rrf	___awmod@divisor+1,f
  3047     07D8  0CC7               	rrf	___awmod@divisor,f
  3048     07D9  3EFF               	addlw	-1
  3049     07DA  1D03               	skipz
  3050     07DB  2FD6               	goto	u2865
  3051     07DC                     l2494:
  3052     07DC  3001               	movlw	1
  3053     07DD  02CC               	subwf	___awmod@counter,f
  3054     07DE  1D03               	btfss	3,2
  3055     07DF  2FE1               	goto	u2871
  3056     07E0  2FE2               	goto	u2870
  3057     07E1                     u2871:
  3058     07E1  2FC5               	goto	l2488
  3059     07E2                     u2870:
  3060     07E2                     l2496:
  3061     07E2  084D               	movf	___awmod@sign,w
  3062     07E3  1903               	btfsc	3,2
  3063     07E4  2FE6               	goto	u2881
  3064     07E5  2FE7               	goto	u2880
  3065     07E6                     u2881:
  3066     07E6  2FEC               	goto	l2500
  3067     07E7                     u2880:
  3068     07E7                     l2498:
  3069     07E7  09C9               	comf	___awmod@dividend,f
  3070     07E8  09CA               	comf	___awmod@dividend+1,f
  3071     07E9  0AC9               	incf	___awmod@dividend,f
  3072     07EA  1903               	skipnz
  3073     07EB  0ACA               	incf	___awmod@dividend+1,f
  3074     07EC                     l2500:
  3075     07EC  084A               	movf	___awmod@dividend+1,w
  3076     07ED  00C8               	movwf	?___awmod+1
  3077     07EE  0849               	movf	___awmod@dividend,w
  3078     07EF  00C7               	movwf	?___awmod
  3079     07F0                     l602:
  3080     07F0  0008               	return
  3081     07F1                     __end_of___awmod:
  3082                           
  3083                           	psect	text10
  3084     072D                     __ptext10:	
  3085 ;; *************** function ___awdiv *****************
  3086 ;; Defined at:
  3087 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;  divisor         2   10[BANK0 ] int 
  3090 ;;  dividend        2   12[BANK0 ] int 
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;  quotient        2   17[BANK0 ] int 
  3093 ;;  sign            1   16[BANK0 ] unsigned char 
  3094 ;;  counter         1   15[BANK0 ] unsigned char 
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  2   10[BANK0 ] int 
  3097 ;; Registers used:
  3098 ;;		wreg, status,2, status,0
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3104 ;;      Params:         0       4       0       0       0
  3105 ;;      Locals:         0       4       0       0       0
  3106 ;;      Temps:          0       1       0       0       0
  3107 ;;      Totals:         0       9       0       0       0
  3108 ;;Total ram usage:        9 bytes
  3109 ;; Hardware stack levels used: 1
  3110 ;; Hardware stack levels required when called: 2
  3111 ;; This function calls:
  3112 ;;		Nothing
  3113 ;; This function is called by:
  3114 ;;		_intToString
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118     072D                     ___awdiv:	
  3119                           ;psect for function ___awdiv
  3120                           
  3121     072D                     l1726:	
  3122                           ;incstack = 0
  3123                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3124                           
  3125     072D  1283               	bcf	3,5	;RP0=0, select bank0
  3126     072E  1303               	bcf	3,6	;RP1=0, select bank0
  3127     072F  01D7               	clrf	___awdiv@sign
  3128     0730                     l1728:
  3129     0730  1FD2               	btfss	___awdiv@divisor+1,7
  3130     0731  2F33               	goto	u1421
  3131     0732  2F34               	goto	u1420
  3132     0733                     u1421:
  3133     0733  2F3B               	goto	l1734
  3134     0734                     u1420:
  3135     0734                     l1730:
  3136     0734  09D1               	comf	___awdiv@divisor,f
  3137     0735  09D2               	comf	___awdiv@divisor+1,f
  3138     0736  0AD1               	incf	___awdiv@divisor,f
  3139     0737  1903               	skipnz
  3140     0738  0AD2               	incf	___awdiv@divisor+1,f
  3141     0739                     l1732:
  3142     0739  01D7               	clrf	___awdiv@sign
  3143     073A  0AD7               	incf	___awdiv@sign,f
  3144     073B                     l1734:
  3145     073B  1FD4               	btfss	___awdiv@dividend+1,7
  3146     073C  2F3E               	goto	u1431
  3147     073D  2F3F               	goto	u1430
  3148     073E                     u1431:
  3149     073E  2F48               	goto	l1740
  3150     073F                     u1430:
  3151     073F                     l1736:
  3152     073F  09D3               	comf	___awdiv@dividend,f
  3153     0740  09D4               	comf	___awdiv@dividend+1,f
  3154     0741  0AD3               	incf	___awdiv@dividend,f
  3155     0742  1903               	skipnz
  3156     0743  0AD4               	incf	___awdiv@dividend+1,f
  3157     0744                     l1738:
  3158     0744  3001               	movlw	1
  3159     0745  00D5               	movwf	??___awdiv
  3160     0746  0855               	movf	??___awdiv,w
  3161     0747  06D7               	xorwf	___awdiv@sign,f
  3162     0748                     l1740:
  3163     0748  01D8               	clrf	___awdiv@quotient
  3164     0749  01D9               	clrf	___awdiv@quotient+1
  3165     074A                     l1742:
  3166     074A  0851               	movf	___awdiv@divisor,w
  3167     074B  0452               	iorwf	___awdiv@divisor+1,w
  3168     074C  1903               	btfsc	3,2
  3169     074D  2F4F               	goto	u1441
  3170     074E  2F50               	goto	u1440
  3171     074F                     u1441:
  3172     074F  2F87               	goto	l1762
  3173     0750                     u1440:
  3174     0750                     l1744:
  3175     0750  01D6               	clrf	___awdiv@counter
  3176     0751  0AD6               	incf	___awdiv@counter,f
  3177     0752  2F5E               	goto	l1750
  3178     0753                     l1746:
  3179     0753  3001               	movlw	1
  3180     0754                     u1455:
  3181     0754  1003               	clrc
  3182     0755  0DD1               	rlf	___awdiv@divisor,f
  3183     0756  0DD2               	rlf	___awdiv@divisor+1,f
  3184     0757  3EFF               	addlw	-1
  3185     0758  1D03               	skipz
  3186     0759  2F54               	goto	u1455
  3187     075A                     l1748:
  3188     075A  3001               	movlw	1
  3189     075B  00D5               	movwf	??___awdiv
  3190     075C  0855               	movf	??___awdiv,w
  3191     075D  07D6               	addwf	___awdiv@counter,f
  3192     075E                     l1750:
  3193     075E  1FD2               	btfss	___awdiv@divisor+1,7
  3194     075F  2F61               	goto	u1461
  3195     0760  2F62               	goto	u1460
  3196     0761                     u1461:
  3197     0761  2F53               	goto	l1746
  3198     0762                     u1460:
  3199     0762                     l1752:
  3200     0762  3001               	movlw	1
  3201     0763                     u1475:
  3202     0763  1003               	clrc
  3203     0764  0DD8               	rlf	___awdiv@quotient,f
  3204     0765  0DD9               	rlf	___awdiv@quotient+1,f
  3205     0766  3EFF               	addlw	-1
  3206     0767  1D03               	skipz
  3207     0768  2F63               	goto	u1475
  3208     0769  0852               	movf	___awdiv@divisor+1,w
  3209     076A  0254               	subwf	___awdiv@dividend+1,w
  3210     076B  1D03               	skipz
  3211     076C  2F6F               	goto	u1485
  3212     076D  0851               	movf	___awdiv@divisor,w
  3213     076E  0253               	subwf	___awdiv@dividend,w
  3214     076F                     u1485:
  3215     076F  1C03               	skipc
  3216     0770  2F72               	goto	u1481
  3217     0771  2F73               	goto	u1480
  3218     0772                     u1481:
  3219     0772  2F7A               	goto	l1758
  3220     0773                     u1480:
  3221     0773                     l1754:
  3222     0773  0851               	movf	___awdiv@divisor,w
  3223     0774  02D3               	subwf	___awdiv@dividend,f
  3224     0775  0852               	movf	___awdiv@divisor+1,w
  3225     0776  1C03               	skipc
  3226     0777  03D4               	decf	___awdiv@dividend+1,f
  3227     0778  02D4               	subwf	___awdiv@dividend+1,f
  3228     0779                     l1756:
  3229     0779  1458               	bsf	___awdiv@quotient,0
  3230     077A                     l1758:
  3231     077A  3001               	movlw	1
  3232     077B                     u1495:
  3233     077B  1003               	clrc
  3234     077C  0CD2               	rrf	___awdiv@divisor+1,f
  3235     077D  0CD1               	rrf	___awdiv@divisor,f
  3236     077E  3EFF               	addlw	-1
  3237     077F  1D03               	skipz
  3238     0780  2F7B               	goto	u1495
  3239     0781                     l1760:
  3240     0781  3001               	movlw	1
  3241     0782  02D6               	subwf	___awdiv@counter,f
  3242     0783  1D03               	btfss	3,2
  3243     0784  2F86               	goto	u1501
  3244     0785  2F87               	goto	u1500
  3245     0786                     u1501:
  3246     0786  2F62               	goto	l1752
  3247     0787                     u1500:
  3248     0787                     l1762:
  3249     0787  0857               	movf	___awdiv@sign,w
  3250     0788  1903               	btfsc	3,2
  3251     0789  2F8B               	goto	u1511
  3252     078A  2F8C               	goto	u1510
  3253     078B                     u1511:
  3254     078B  2F91               	goto	l1766
  3255     078C                     u1510:
  3256     078C                     l1764:
  3257     078C  09D8               	comf	___awdiv@quotient,f
  3258     078D  09D9               	comf	___awdiv@quotient+1,f
  3259     078E  0AD8               	incf	___awdiv@quotient,f
  3260     078F  1903               	skipnz
  3261     0790  0AD9               	incf	___awdiv@quotient+1,f
  3262     0791                     l1766:
  3263     0791  0859               	movf	___awdiv@quotient+1,w
  3264     0792  00D2               	movwf	?___awdiv+1
  3265     0793  0858               	movf	___awdiv@quotient,w
  3266     0794  00D1               	movwf	?___awdiv
  3267     0795                     l589:
  3268     0795  0008               	return
  3269     0796                     __end_of___awdiv:
  3270                           
  3271                           	psect	text11
  3272     0F37                     __ptext11:	
  3273 ;; *************** function _UART_Init *****************
  3274 ;; Defined at:
  3275 ;;		line 202 in file "main.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;		None
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;		None
  3280 ;; Return value:  Size  Location     Type
  3281 ;;                  1    wreg      void 
  3282 ;; Registers used:
  3283 ;;		wreg
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3289 ;;      Params:         0       0       0       0       0
  3290 ;;      Locals:         0       0       0       0       0
  3291 ;;      Temps:          0       0       0       0       0
  3292 ;;      Totals:         0       0       0       0       0
  3293 ;;Total ram usage:        0 bytes
  3294 ;; Hardware stack levels used: 1
  3295 ;; Hardware stack levels required when called: 2
  3296 ;; This function calls:
  3297 ;;		Nothing
  3298 ;; This function is called by:
  3299 ;;		_main
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303     0F37                     _UART_Init:	
  3304                           ;psect for function _UART_Init
  3305                           
  3306     0F37                     l2534:	
  3307                           ;incstack = 0
  3308                           ; Regs used in _UART_Init: [wreg]
  3309                           
  3310                           
  3311                           ;main.c: 204:     TRISC6 = 0;
  3312     0F37  1683               	bsf	3,5	;RP0=1, select bank1
  3313     0F38  1303               	bcf	3,6	;RP1=0, select bank1
  3314     0F39  1307               	bcf	7,6	;volatile
  3315                           
  3316                           ;main.c: 205:     TRISC7 = 1;
  3317     0F3A  1787               	bsf	7,7	;volatile
  3318                           
  3319                           ;main.c: 208:     BRGH = 1;
  3320     0F3B  1518               	bsf	24,2	;volatile
  3321     0F3C                     l2536:
  3322                           
  3323                           ;main.c: 209:     SPBRG = 51;
  3324     0F3C  3033               	movlw	51
  3325     0F3D  0099               	movwf	25	;volatile
  3326     0F3E                     l2538:
  3327                           
  3328                           ;main.c: 212:     SYNC = 0;
  3329     0F3E  1218               	bcf	24,4	;volatile
  3330     0F3F                     l2540:
  3331                           
  3332                           ;main.c: 213:     SPEN = 1;
  3333     0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  3334     0F40  1303               	bcf	3,6	;RP1=0, select bank0
  3335     0F41  1798               	bsf	24,7	;volatile
  3336     0F42                     l2542:
  3337                           
  3338                           ;main.c: 216:     TXEN = 1;
  3339     0F42  1683               	bsf	3,5	;RP0=1, select bank1
  3340     0F43  1303               	bcf	3,6	;RP1=0, select bank1
  3341     0F44  1698               	bsf	24,5	;volatile
  3342     0F45                     l2544:
  3343                           
  3344                           ;main.c: 217:     CREN = 1;
  3345     0F45  1283               	bcf	3,5	;RP0=0, select bank0
  3346     0F46  1303               	bcf	3,6	;RP1=0, select bank0
  3347     0F47  1618               	bsf	24,4	;volatile
  3348     0F48                     l196:
  3349     0F48  0008               	return
  3350     0F49                     __end_of_UART_Init:
  3351                           
  3352                           	psect	text12
  3353     07F1                     __ptext12:	
  3354 ;; *************** function _Timer0_Init *****************
  3355 ;; Defined at:
  3356 ;;		line 550 in file "main.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;		None
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;		None
  3361 ;; Return value:  Size  Location     Type
  3362 ;;                  1    wreg      void 
  3363 ;; Registers used:
  3364 ;;		wreg
  3365 ;; Tracked objects:
  3366 ;;		On entry : 0/0
  3367 ;;		On exit  : 0/0
  3368 ;;		Unchanged: 0/0
  3369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3370 ;;      Params:         0       0       0       0       0
  3371 ;;      Locals:         0       0       0       0       0
  3372 ;;      Temps:          0       0       0       0       0
  3373 ;;      Totals:         0       0       0       0       0
  3374 ;;Total ram usage:        0 bytes
  3375 ;; Hardware stack levels used: 1
  3376 ;; Hardware stack levels required when called: 2
  3377 ;; This function calls:
  3378 ;;		Nothing
  3379 ;; This function is called by:
  3380 ;;		_main
  3381 ;; This function uses a non-reentrant model
  3382 ;;
  3383                           
  3384     07F1                     _Timer0_Init:	
  3385                           ;psect for function _Timer0_Init
  3386                           
  3387     07F1                     l2570:	
  3388                           ;incstack = 0
  3389                           ; Regs used in _Timer0_Init: [wreg]
  3390                           
  3391                           
  3392                           ;main.c: 552:     T0CS = 0;
  3393     07F1  1683               	bsf	3,5	;RP0=1, select bank1
  3394     07F2  1303               	bcf	3,6	;RP1=0, select bank1
  3395     07F3  1281               	bcf	1,5	;volatile
  3396                           
  3397                           ;main.c: 553:     PSA = 0;
  3398     07F4  1181               	bcf	1,3	;volatile
  3399                           
  3400                           ;main.c: 554:     PS2 = 1;
  3401     07F5  1501               	bsf	1,2	;volatile
  3402                           
  3403                           ;main.c: 555:     PS1 = 1;
  3404     07F6  1481               	bsf	1,1	;volatile
  3405                           
  3406                           ;main.c: 556:     PS0 = 1;
  3407     07F7  1401               	bsf	1,0	;volatile
  3408     07F8                     l2572:
  3409                           
  3410                           ;main.c: 559:     TMR0 = 6;
  3411     07F8  3006               	movlw	6
  3412     07F9  1283               	bcf	3,5	;RP0=0, select bank0
  3413     07FA  1303               	bcf	3,6	;RP1=0, select bank0
  3414     07FB  0081               	movwf	1	;volatile
  3415     07FC                     l2574:
  3416                           
  3417                           ;main.c: 560:     TMR0IF = 0;
  3418     07FC  110B               	bcf	11,2	;volatile
  3419     07FD                     l2576:
  3420                           
  3421                           ;main.c: 561:     TMR0IE = 1;
  3422     07FD  168B               	bsf	11,5	;volatile
  3423     07FE                     l2578:
  3424                           
  3425                           ;main.c: 562:     GIE = 1;
  3426     07FE  178B               	bsf	11,7	;volatile
  3427     07FF                     l316:
  3428     07FF  0008               	return
  3429     0800                     __end_of_Timer0_Init:
  3430                           
  3431                           	psect	text13
  3432     0F20                     __ptext13:	
  3433 ;; *************** function _RS485_RxEnable *****************
  3434 ;; Defined at:
  3435 ;;		line 225 in file "main.c"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;		None
  3438 ;; Auto vars:     Size  Location     Type
  3439 ;;		None
  3440 ;; Return value:  Size  Location     Type
  3441 ;;                  1    wreg      void 
  3442 ;; Registers used:
  3443 ;;		None
  3444 ;; Tracked objects:
  3445 ;;		On entry : 0/0
  3446 ;;		On exit  : 0/0
  3447 ;;		Unchanged: 0/0
  3448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3449 ;;      Params:         0       0       0       0       0
  3450 ;;      Locals:         0       0       0       0       0
  3451 ;;      Temps:          0       0       0       0       0
  3452 ;;      Totals:         0       0       0       0       0
  3453 ;;Total ram usage:        0 bytes
  3454 ;; Hardware stack levels used: 1
  3455 ;; Hardware stack levels required when called: 2
  3456 ;; This function calls:
  3457 ;;		Nothing
  3458 ;; This function is called by:
  3459 ;;		_main
  3460 ;;		_UART_Read1
  3461 ;; This function uses a non-reentrant model
  3462 ;;
  3463                           
  3464     0F20                     _RS485_RxEnable:	
  3465                           ;psect for function _RS485_RxEnable
  3466                           
  3467     0F20                     l2650:	
  3468                           ;incstack = 0
  3469                           ; Regs used in _RS485_RxEnable: []
  3470                           
  3471                           
  3472                           ;main.c: 226:     RC0 = 0;
  3473     0F20  1283               	bcf	3,5	;RP0=0, select bank0
  3474     0F21  1303               	bcf	3,6	;RP1=0, select bank0
  3475     0F22  1007               	bcf	7,0	;volatile
  3476                           
  3477                           ;main.c: 227:     RC1 = 1;
  3478     0F23  1487               	bsf	7,1	;volatile
  3479     0F24                     l202:
  3480     0F24  0008               	return
  3481     0F25                     __end_of_RS485_RxEnable:
  3482                           
  3483                           	psect	text14
  3484     05B9                     __ptext14:	
  3485 ;; *************** function _KeyPadReader *****************
  3486 ;; Defined at:
  3487 ;;		line 575 in file "main.c"
  3488 ;; Parameters:    Size  Location     Type
  3489 ;;		None
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;		None
  3492 ;; Return value:  Size  Location     Type
  3493 ;;                  1    wreg      unsigned char 
  3494 ;; Registers used:
  3495 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3496 ;; Tracked objects:
  3497 ;;		On entry : 0/0
  3498 ;;		On exit  : 0/0
  3499 ;;		Unchanged: 0/0
  3500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3501 ;;      Params:         0       0       0       0       0
  3502 ;;      Locals:         0       0       0       0       0
  3503 ;;      Temps:          0       2       0       0       0
  3504 ;;      Totals:         0       2       0       0       0
  3505 ;;Total ram usage:        2 bytes
  3506 ;; Hardware stack levels used: 2
  3507 ;; Hardware stack levels required when called: 2
  3508 ;; This function calls:
  3509 ;;		Nothing
  3510 ;; This function is called by:
  3511 ;;		_main
  3512 ;; This function uses a non-reentrant model
  3513 ;;
  3514                           
  3515     05B9                     _KeyPadReader:	
  3516                           ;psect for function _KeyPadReader
  3517                           
  3518     05B9                     l2592:	
  3519                           ;incstack = 0
  3520                           ; Regs used in _KeyPadReader: [wreg-fsr0h+status,2+status,0+pclath]
  3521                           
  3522                           
  3523                           ;main.c: 576:     TRISD |= 0x0F;
  3524     05B9  300F               	movlw	15
  3525     05BA  1283               	bcf	3,5	;RP0=0, select bank0
  3526     05BB  1303               	bcf	3,6	;RP1=0, select bank0
  3527     05BC  00C7               	movwf	??_KeyPadReader
  3528     05BD  0847               	movf	??_KeyPadReader,w
  3529     05BE  1683               	bsf	3,5	;RP0=1, select bank1
  3530     05BF  1303               	bcf	3,6	;RP1=0, select bank1
  3531     05C0  0488               	iorwf	8,f	;volatile
  3532     05C1                     l2594:
  3533                           
  3534                           ;main.c: 579:     for (colScan = 0; colScan < 3; colScan++) {
  3535     05C1  1283               	bcf	3,5	;RP0=0, select bank0
  3536     05C2  01BB               	clrf	_colScan
  3537     05C3                     l2596:
  3538     05C3  3003               	movlw	3
  3539     05C4  023B               	subwf	_colScan,w
  3540     05C5  1C03               	skipc
  3541     05C6  2DC8               	goto	u2951
  3542     05C7  2DC9               	goto	u2950
  3543     05C8                     u2951:
  3544     05C8  2DCA               	goto	l2600
  3545     05C9                     u2950:
  3546     05C9  2DC1               	goto	l2594
  3547     05CA                     l2600:
  3548                           
  3549                           ;main.c: 580:         PORTB = PORTB | 0x07;
  3550     05CA  0806               	movf	6,w	;volatile
  3551     05CB  3807               	iorlw	7
  3552     05CC  0086               	movwf	6	;volatile
  3553     05CD                     l2602:
  3554                           
  3555                           ;main.c: 581:         PORTB &= colMask[colScan];
  3556     05CD  083B               	movf	_colScan,w
  3557     05CE  3E11               	addlw	low ((_colMask-__stringbase)| (0+32768))
  3558     05CF  0084               	movwf	4
  3559     05D0  120A  118A  2534  120A  118A  	fcall	stringdir
  3560     05D5  00C7               	movwf	??_KeyPadReader
  3561     05D6  0847               	movf	??_KeyPadReader,w
  3562     05D7  0586               	andwf	6,f	;volatile
  3563     05D8                     l2604:
  3564                           
  3565                           ;main.c: 584:         for (rowScan = 0; rowScan < 4; rowScan++) {
  3566     05D8  01BA               	clrf	_rowScan
  3567     05D9                     l2606:
  3568     05D9  3004               	movlw	4
  3569     05DA  023A               	subwf	_rowScan,w
  3570     05DB  1C03               	skipc
  3571     05DC  2DDE               	goto	u2961
  3572     05DD  2DDF               	goto	u2960
  3573     05DE                     u2961:
  3574     05DE  2DE0               	goto	l2610
  3575     05DF                     u2960:
  3576     05DF  2E3F               	goto	l2642
  3577     05E0                     l2610:
  3578                           
  3579                           ;main.c: 585:             if (!(PORTD & rowMask[rowScan]) && (old_btn)) {
  3580     05E0  083A               	movf	_rowScan,w
  3581     05E1  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  3582     05E2  0084               	movwf	4
  3583     05E3  120A  118A  2534  120A  118A  	fcall	stringdir
  3584     05E8  0508               	andwf	8,w	;volatile
  3585     05E9  1D03               	btfss	3,2
  3586     05EA  2DEC               	goto	u2971
  3587     05EB  2DED               	goto	u2970
  3588     05EC                     u2971:
  3589     05EC  2DF6               	goto	l2618
  3590     05ED                     u2970:
  3591     05ED                     l2612:
  3592     05ED  1C79               	btfss	_old_btn/(0+8),_old_btn& (0+7)
  3593     05EE  2DF0               	goto	u2981
  3594     05EF  2DF1               	goto	u2980
  3595     05F0                     u2981:
  3596     05F0  2DF6               	goto	l2618
  3597     05F1                     u2980:
  3598     05F1                     l2614:
  3599                           
  3600                           ;main.c: 586:                 old_btn = 0;
  3601     05F1  1079               	bcf	_old_btn/(0+8),_old_btn& (0+7)
  3602     05F2                     l2616:
  3603                           
  3604                           ;main.c: 587:                 stato++;
  3605     05F2  3001               	movlw	1
  3606     05F3  00C7               	movwf	??_KeyPadReader
  3607     05F4  0847               	movf	??_KeyPadReader,w
  3608     05F5  07B9               	addwf	_stato,f
  3609     05F6                     l2618:
  3610                           
  3611                           ;main.c: 589:             if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  3612     05F6  083A               	movf	_rowScan,w
  3613     05F7  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  3614     05F8  0084               	movwf	4
  3615     05F9  120A  118A  2534  120A  118A  	fcall	stringdir
  3616     05FE  0508               	andwf	8,w	;volatile
  3617     05FF  1903               	btfsc	3,2
  3618     0600  2E02               	goto	u2991
  3619     0601  2E03               	goto	u2990
  3620     0602                     u2991:
  3621     0602  2E26               	goto	l2630
  3622     0603                     u2990:
  3623     0603                     l2620:
  3624     0603  1879               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  3625     0604  2E06               	goto	u3001
  3626     0605  2E07               	goto	u3000
  3627     0606                     u3001:
  3628     0606  2E26               	goto	l2630
  3629     0607                     u3000:
  3630     0607                     l2622:
  3631                           
  3632                           ;main.c: 590:                 _delay((unsigned long)((10)*(8000000/4000.0)));
  3633     0607  301A               	movlw	26
  3634     0608  1283               	bcf	3,5	;RP0=0, select bank0
  3635     0609  1303               	bcf	3,6	;RP1=0, select bank0
  3636     060A  00C8               	movwf	??_KeyPadReader+1
  3637     060B  30F7               	movlw	247
  3638     060C  00C7               	movwf	??_KeyPadReader
  3639     060D                     u3867:
  3640     060D  0BC7               	decfsz	??_KeyPadReader,f
  3641     060E  2E0D               	goto	u3867
  3642     060F  0BC8               	decfsz	??_KeyPadReader+1,f
  3643     0610  2E0D               	goto	u3867
  3644     0611  2E12               	nop2
  3645     0612                     l2624:
  3646                           
  3647                           ;main.c: 591:                 if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  3648     0612  1283               	bcf	3,5	;RP0=0, select bank0
  3649     0613  1303               	bcf	3,6	;RP1=0, select bank0
  3650     0614  083A               	movf	_rowScan,w
  3651     0615  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  3652     0616  0084               	movwf	4
  3653     0617  120A  118A  2534  120A  118A  	fcall	stringdir
  3654     061C  0508               	andwf	8,w	;volatile
  3655     061D  1903               	btfsc	3,2
  3656     061E  2E20               	goto	u3011
  3657     061F  2E21               	goto	u3010
  3658     0620                     u3011:
  3659     0620  2E26               	goto	l2630
  3660     0621                     u3010:
  3661     0621                     l2626:
  3662     0621  1879               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  3663     0622  2E24               	goto	u3021
  3664     0623  2E25               	goto	u3020
  3665     0624                     u3021:
  3666     0624  2E26               	goto	l2630
  3667     0625                     u3020:
  3668     0625                     l2628:
  3669                           
  3670                           ;main.c: 592:                     old_btn = 1;
  3671     0625  1479               	bsf	_old_btn/(0+8),_old_btn& (0+7)
  3672     0626                     l2630:
  3673                           
  3674                           ;main.c: 595:             if (stato != old_stato) {
  3675     0626  0839               	movf	_stato,w
  3676     0627  0638               	xorwf	_old_stato,w
  3677     0628  1903               	skipnz
  3678     0629  2E2B               	goto	u3031
  3679     062A  2E2C               	goto	u3030
  3680     062B                     u3031:
  3681     062B  2E3A               	goto	l2638
  3682     062C                     u3030:
  3683     062C                     l2632:
  3684                           
  3685                           ;main.c: 596:                 keypressed = rowScan + (4 * colScan);
  3686     062C  083B               	movf	_colScan,w
  3687     062D  00C7               	movwf	??_KeyPadReader
  3688     062E  3002               	movlw	2
  3689     062F                     u3045:
  3690     062F  1003               	clrc
  3691     0630  0DC7               	rlf	??_KeyPadReader,f
  3692     0631  3EFF               	addlw	-1
  3693     0632  1D03               	skipz
  3694     0633  2E2F               	goto	u3045
  3695     0634  083A               	movf	_rowScan,w
  3696     0635  0747               	addwf	??_KeyPadReader,w
  3697     0636  00F5               	movwf	_keypressed
  3698     0637                     l2634:
  3699                           
  3700                           ;main.c: 599:                 old_stato = stato;
  3701     0637  0839               	movf	_stato,w
  3702     0638  00B8               	movwf	_old_stato
  3703     0639  2E44               	goto	l334
  3704     063A                     l2638:
  3705                           
  3706                           ;main.c: 602:         }
  3707     063A  3001               	movlw	1
  3708     063B  00C7               	movwf	??_KeyPadReader
  3709     063C  0847               	movf	??_KeyPadReader,w
  3710     063D  07BA               	addwf	_rowScan,f
  3711     063E  2DD9               	goto	l2606
  3712     063F                     l2642:
  3713                           
  3714                           ;main.c: 603:     }
  3715     063F  3001               	movlw	1
  3716     0640  00C7               	movwf	??_KeyPadReader
  3717     0641  0847               	movf	??_KeyPadReader,w
  3718     0642  07BB               	addwf	_colScan,f
  3719     0643  2DC3               	goto	l2596
  3720     0644                     l334:
  3721     0644  0008               	return
  3722     0645                     __end_of_KeyPadReader:
  3723                           
  3724                           	psect	text15
  3725     0F5E                     __ptext15:	
  3726 ;; *************** function _GenerateRandomNumber *****************
  3727 ;; Defined at:
  3728 ;;		line 565 in file "main.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;		None
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;  count           2    1[BANK0 ] unsigned int 
  3733 ;;  randomNum       1    0[BANK0 ] unsigned char 
  3734 ;; Return value:  Size  Location     Type
  3735 ;;                  1    wreg      unsigned char 
  3736 ;; Registers used:
  3737 ;;		wreg, status,2, status,0
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: 0/0
  3742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3743 ;;      Params:         0       0       0       0       0
  3744 ;;      Locals:         0       3       0       0       0
  3745 ;;      Temps:          0       0       0       0       0
  3746 ;;      Totals:         0       3       0       0       0
  3747 ;;Total ram usage:        3 bytes
  3748 ;; Hardware stack levels used: 1
  3749 ;; Hardware stack levels required when called: 2
  3750 ;; This function calls:
  3751 ;;		Nothing
  3752 ;; This function is called by:
  3753 ;;		_main
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757     0F5E                     _GenerateRandomNumber:	
  3758                           ;psect for function _GenerateRandomNumber
  3759                           
  3760     0F5E                     l2580:	
  3761                           ;incstack = 0
  3762                           ; Regs used in _GenerateRandomNumber: [wreg+status,2+status,0]
  3763                           
  3764                           
  3765                           ;main.c: 566:     unsigned int count = 0;
  3766     0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  3767     0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  3768     0F60  01C8               	clrf	GenerateRandomNumber@count
  3769     0F61  01C9               	clrf	GenerateRandomNumber@count+1
  3770                           
  3771                           ;main.c: 567:     while (count != 186){
  3772     0F62  2F69               	goto	l2584
  3773     0F63                     l2582:
  3774                           
  3775                           ;main.c: 568:         count++;
  3776     0F63  3001               	movlw	1
  3777     0F64  07C8               	addwf	GenerateRandomNumber@count,f
  3778     0F65  1803               	skipnc
  3779     0F66  0AC9               	incf	GenerateRandomNumber@count+1,f
  3780     0F67  3000               	movlw	0
  3781     0F68  07C9               	addwf	GenerateRandomNumber@count+1,f
  3782     0F69                     l2584:
  3783                           
  3784                           ;main.c: 567:     while (count != 186){
  3785     0F69  30BA               	movlw	186
  3786     0F6A  0648               	xorwf	GenerateRandomNumber@count,w
  3787     0F6B  0449               	iorwf	GenerateRandomNumber@count+1,w
  3788     0F6C  1D03               	btfss	3,2
  3789     0F6D  2F6F               	goto	u2941
  3790     0F6E  2F70               	goto	u2940
  3791     0F6F                     u2941:
  3792     0F6F  2F63               	goto	l2582
  3793     0F70                     u2940:
  3794     0F70                     l2586:
  3795                           
  3796                           ;main.c: 570:     unsigned char randomNum = TMR0;
  3797     0F70  0801               	movf	1,w	;volatile
  3798     0F71  00C7               	movwf	GenerateRandomNumber@randomNum
  3799     0F72                     l2588:
  3800                           
  3801                           ;main.c: 571:     TMR0IF = 0;
  3802     0F72  110B               	bcf	11,2	;volatile
  3803                           
  3804                           ;main.c: 572:     return randomNum;
  3805     0F73  0847               	movf	GenerateRandomNumber@randomNum,w
  3806     0F74                     l322:
  3807     0F74  0008               	return
  3808     0F75                     __end_of_GenerateRandomNumber:
  3809                           
  3810                           	psect	text16
  3811     0448                     __ptext16:	
  3812 ;; *************** function _ISR *****************
  3813 ;; Defined at:
  3814 ;;		line 458 in file "main.c"
  3815 ;; Parameters:    Size  Location     Type
  3816 ;;		None
  3817 ;; Auto vars:     Size  Location     Type
  3818 ;;		None
  3819 ;; Return value:  Size  Location     Type
  3820 ;;                  1    wreg      void 
  3821 ;; Registers used:
  3822 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3823 ;; Tracked objects:
  3824 ;;		On entry : 0/0
  3825 ;;		On exit  : 0/0
  3826 ;;		Unchanged: 0/0
  3827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3828 ;;      Params:         0       0       0       0       0
  3829 ;;      Locals:         0       0       0       0       0
  3830 ;;      Temps:          5       0       0       0       0
  3831 ;;      Totals:         5       0       0       0       0
  3832 ;;Total ram usage:        5 bytes
  3833 ;; Hardware stack levels used: 2
  3834 ;; This function calls:
  3835 ;;		Nothing
  3836 ;; This function is called by:
  3837 ;;		Interrupt level 1
  3838 ;; This function uses a non-reentrant model
  3839 ;;
  3840                           
  3841     0448                     _ISR:	
  3842                           ;psect for function _ISR
  3843                           
  3844     0448                     i1l2368:
  3845     0448                     i1l259:	
  3846                           ;main.c: 461:     }
  3847                           
  3848                           
  3849                           ;main.c: 459:     while (!TMR0IF){
  3850     0448  1D0B               	btfss	11,2	;volatile
  3851     0449  2C4B               	goto	u250_21
  3852     044A  2C4C               	goto	u250_20
  3853     044B                     u250_21:
  3854     044B  2C48               	goto	i1l259
  3855     044C                     u250_20:
  3856     044C                     i1l261:
  3857                           
  3858                           ;main.c: 462:     TMR0IF = 0;
  3859     044C  110B               	bcf	11,2	;volatile
  3860     044D                     i1l262:	
  3861                           ;main.c: 465:     }
  3862                           
  3863                           
  3864                           ;main.c: 463:     while (!TMR0IF){
  3865     044D  1D0B               	btfss	11,2	;volatile
  3866     044E  2C50               	goto	u251_21
  3867     044F  2C51               	goto	u251_20
  3868     0450                     u251_21:
  3869     0450  2C4D               	goto	i1l262
  3870     0451                     u251_20:
  3871     0451                     i1l264:
  3872                           
  3873                           ;main.c: 466:     TMR0IF = 0;
  3874     0451  110B               	bcf	11,2	;volatile
  3875     0452                     i1l265:	
  3876                           ;main.c: 469:     }
  3877                           
  3878                           
  3879                           ;main.c: 467:     while (!TMR0IF){
  3880     0452  1D0B               	btfss	11,2	;volatile
  3881     0453  2C55               	goto	u252_21
  3882     0454  2C56               	goto	u252_20
  3883     0455                     u252_21:
  3884     0455  2C52               	goto	i1l265
  3885     0456                     u252_20:
  3886     0456                     i1l267:
  3887                           
  3888                           ;main.c: 470:     TMR0IF = 0;
  3889     0456  110B               	bcf	11,2	;volatile
  3890     0457                     i1l268:	
  3891                           ;main.c: 473:     }
  3892                           
  3893                           
  3894                           ;main.c: 471:     while (!TMR0IF){
  3895     0457  1D0B               	btfss	11,2	;volatile
  3896     0458  2C5A               	goto	u253_21
  3897     0459  2C5B               	goto	u253_20
  3898     045A                     u253_21:
  3899     045A  2C57               	goto	i1l268
  3900     045B                     u253_20:
  3901     045B                     i1l270:
  3902                           
  3903                           ;main.c: 474:     TMR0IF = 0;
  3904     045B  110B               	bcf	11,2	;volatile
  3905     045C                     i1l271:	
  3906                           ;main.c: 477:     }
  3907                           
  3908                           
  3909                           ;main.c: 475:     while (!TMR0IF){
  3910     045C  1D0B               	btfss	11,2	;volatile
  3911     045D  2C5F               	goto	u254_21
  3912     045E  2C60               	goto	u254_20
  3913     045F                     u254_21:
  3914     045F  2C5C               	goto	i1l271
  3915     0460                     u254_20:
  3916     0460                     i1l273:
  3917                           
  3918                           ;main.c: 478:     TMR0IF = 0;
  3919     0460  110B               	bcf	11,2	;volatile
  3920     0461                     i1l274:	
  3921                           ;main.c: 481:     }
  3922                           
  3923                           
  3924                           ;main.c: 479:     while (!TMR0IF){
  3925     0461  1D0B               	btfss	11,2	;volatile
  3926     0462  2C64               	goto	u255_21
  3927     0463  2C65               	goto	u255_20
  3928     0464                     u255_21:
  3929     0464  2C61               	goto	i1l274
  3930     0465                     u255_20:
  3931     0465                     i1l276:
  3932                           
  3933                           ;main.c: 482:     TMR0IF = 0;
  3934     0465  110B               	bcf	11,2	;volatile
  3935     0466                     i1l277:	
  3936                           ;main.c: 485:     }
  3937                           
  3938                           
  3939                           ;main.c: 483:     while (!TMR0IF){
  3940     0466  1D0B               	btfss	11,2	;volatile
  3941     0467  2C69               	goto	u256_21
  3942     0468  2C6A               	goto	u256_20
  3943     0469                     u256_21:
  3944     0469  2C66               	goto	i1l277
  3945     046A                     u256_20:
  3946     046A                     i1l279:
  3947                           
  3948                           ;main.c: 486:     TMR0IF = 0;
  3949     046A  110B               	bcf	11,2	;volatile
  3950     046B                     i1l280:	
  3951                           ;main.c: 489:     }
  3952                           
  3953                           
  3954                           ;main.c: 487:     while (!TMR0IF){
  3955     046B  1D0B               	btfss	11,2	;volatile
  3956     046C  2C6E               	goto	u257_21
  3957     046D  2C6F               	goto	u257_20
  3958     046E                     u257_21:
  3959     046E  2C6B               	goto	i1l280
  3960     046F                     u257_20:
  3961     046F                     i1l282:
  3962                           
  3963                           ;main.c: 490:     TMR0IF = 0;
  3964     046F  110B               	bcf	11,2	;volatile
  3965     0470                     i1l283:	
  3966                           ;main.c: 493:     }
  3967                           
  3968                           
  3969                           ;main.c: 491:     while (!TMR0IF){
  3970     0470  1D0B               	btfss	11,2	;volatile
  3971     0471  2C73               	goto	u258_21
  3972     0472  2C74               	goto	u258_20
  3973     0473                     u258_21:
  3974     0473  2C70               	goto	i1l283
  3975     0474                     u258_20:
  3976     0474                     i1l285:
  3977                           
  3978                           ;main.c: 494:     TMR0IF = 0;
  3979     0474  110B               	bcf	11,2	;volatile
  3980     0475                     i1l286:	
  3981                           ;main.c: 497:     }
  3982                           
  3983                           
  3984                           ;main.c: 495:     while (!TMR0IF){
  3985     0475  1D0B               	btfss	11,2	;volatile
  3986     0476  2C78               	goto	u259_21
  3987     0477  2C79               	goto	u259_20
  3988     0478                     u259_21:
  3989     0478  2C75               	goto	i1l286
  3990     0479                     u259_20:
  3991     0479                     i1l288:
  3992                           
  3993                           ;main.c: 498:     TMR0IF = 0;
  3994     0479  110B               	bcf	11,2	;volatile
  3995     047A                     i1l289:	
  3996                           ;main.c: 501:     }
  3997                           
  3998                           
  3999                           ;main.c: 499:     while (!TMR0IF){
  4000     047A  1D0B               	btfss	11,2	;volatile
  4001     047B  2C7D               	goto	u260_21
  4002     047C  2C7E               	goto	u260_20
  4003     047D                     u260_21:
  4004     047D  2C7A               	goto	i1l289
  4005     047E                     u260_20:
  4006     047E                     i1l291:
  4007                           
  4008                           ;main.c: 502:     TMR0IF = 0;
  4009     047E  110B               	bcf	11,2	;volatile
  4010     047F                     i1l292:	
  4011                           ;main.c: 505:     }
  4012                           
  4013                           
  4014                           ;main.c: 503:     while (!TMR0IF){
  4015     047F  1D0B               	btfss	11,2	;volatile
  4016     0480  2C82               	goto	u261_21
  4017     0481  2C83               	goto	u261_20
  4018     0482                     u261_21:
  4019     0482  2C7F               	goto	i1l292
  4020     0483                     u261_20:
  4021     0483                     i1l294:
  4022                           
  4023                           ;main.c: 506:     TMR0IF = 0;
  4024     0483  110B               	bcf	11,2	;volatile
  4025     0484                     i1l295:	
  4026                           ;main.c: 509:     }
  4027                           
  4028                           
  4029                           ;main.c: 507:     while (!TMR0IF){
  4030     0484  1D0B               	btfss	11,2	;volatile
  4031     0485  2C87               	goto	u262_21
  4032     0486  2C88               	goto	u262_20
  4033     0487                     u262_21:
  4034     0487  2C84               	goto	i1l295
  4035     0488                     u262_20:
  4036     0488                     i1l297:
  4037                           
  4038                           ;main.c: 510:     TMR0IF = 0;
  4039     0488  110B               	bcf	11,2	;volatile
  4040     0489                     i1l298:	
  4041                           ;main.c: 513:     }
  4042                           
  4043                           
  4044                           ;main.c: 511:     while (!TMR0IF){
  4045     0489  1D0B               	btfss	11,2	;volatile
  4046     048A  2C8C               	goto	u263_21
  4047     048B  2C8D               	goto	u263_20
  4048     048C                     u263_21:
  4049     048C  2C89               	goto	i1l298
  4050     048D                     u263_20:
  4051     048D                     i1l300:
  4052                           
  4053                           ;main.c: 514:     TMR0IF = 0;
  4054     048D  110B               	bcf	11,2	;volatile
  4055     048E                     i1l301:	
  4056                           ;main.c: 517:     }
  4057                           
  4058                           
  4059                           ;main.c: 515:     while (!TMR0IF){
  4060     048E  1D0B               	btfss	11,2	;volatile
  4061     048F  2C91               	goto	u264_21
  4062     0490  2C92               	goto	u264_20
  4063     0491                     u264_21:
  4064     0491  2C8E               	goto	i1l301
  4065     0492                     u264_20:
  4066     0492                     i1l303:
  4067                           
  4068                           ;main.c: 518:     TMR0IF = 0;
  4069     0492  110B               	bcf	11,2	;volatile
  4070     0493                     i1l2370:
  4071                           
  4072                           ;main.c: 519:     if(flag == 1){
  4073     0493  1283               	bcf	3,5	;RP0=0, select bank0
  4074     0494  1303               	bcf	3,6	;RP1=0, select bank0
  4075     0495  0330               	decf	_flag,w
  4076     0496  0431               	iorwf	_flag+1,w
  4077     0497  1D03               	btfss	3,2
  4078     0498  2C9A               	goto	u265_21
  4079     0499  2C9B               	goto	u265_20
  4080     049A                     u265_21:
  4081     049A  2D1F               	goto	i1l313
  4082     049B                     u265_20:
  4083     049B                     i1l2372:
  4084                           
  4085                           ;main.c: 520:         TRISD |= 0x0F;
  4086     049B  300F               	movlw	15
  4087     049C  00F0               	movwf	??_ISR
  4088     049D  0870               	movf	??_ISR,w
  4089     049E  1683               	bsf	3,5	;RP0=1, select bank1
  4090     049F  1303               	bcf	3,6	;RP1=0, select bank1
  4091     04A0  0488               	iorwf	8,f	;volatile
  4092     04A1                     i1l2374:
  4093                           
  4094                           ;main.c: 522:         for (colScan = 0; colScan < 3; colScan++) {
  4095     04A1  1283               	bcf	3,5	;RP0=0, select bank0
  4096     04A2  1303               	bcf	3,6	;RP1=0, select bank0
  4097     04A3  01BB               	clrf	_colScan
  4098     04A4                     i1l2376:
  4099     04A4  3003               	movlw	3
  4100     04A5  023B               	subwf	_colScan,w
  4101     04A6  1C03               	skipc
  4102     04A7  2CA9               	goto	u266_21
  4103     04A8  2CAA               	goto	u266_20
  4104     04A9                     u266_21:
  4105     04A9  2CAB               	goto	i1l2380
  4106     04AA                     u266_20:
  4107     04AA  2D1C               	goto	i1l2420
  4108     04AB                     i1l2380:
  4109                           
  4110                           ;main.c: 523:             PORTB = PORTB | 0x07;
  4111     04AB  0806               	movf	6,w	;volatile
  4112     04AC  3807               	iorlw	7
  4113     04AD  0086               	movwf	6	;volatile
  4114     04AE                     i1l2382:
  4115                           
  4116                           ;main.c: 524:             PORTB &= colMask[colScan];
  4117     04AE  083B               	movf	_colScan,w
  4118     04AF  3E11               	addlw	low ((_colMask-__stringbase)| (0+32768))
  4119     04B0  0084               	movwf	4
  4120     04B1  120A  118A  2534  120A  118A  	fcall	stringdir
  4121     04B6  00F0               	movwf	??_ISR
  4122     04B7  0870               	movf	??_ISR,w
  4123     04B8  0586               	andwf	6,f	;volatile
  4124     04B9                     i1l2384:
  4125                           
  4126                           ;main.c: 527:             for (rowScan = 0; rowScan < 4; rowScan++) {
  4127     04B9  01BA               	clrf	_rowScan
  4128     04BA                     i1l2386:
  4129     04BA  3004               	movlw	4
  4130     04BB  023A               	subwf	_rowScan,w
  4131     04BC  1C03               	skipc
  4132     04BD  2CBF               	goto	u267_21
  4133     04BE  2CC0               	goto	u267_20
  4134     04BF                     u267_21:
  4135     04BF  2CC1               	goto	i1l2390
  4136     04C0                     u267_20:
  4137     04C0  2D17               	goto	i1l2416
  4138     04C1                     i1l2390:
  4139                           
  4140                           ;main.c: 528:                 if (!(PORTD & rowMask[rowScan]) && (old_btn)) {
  4141     04C1  083A               	movf	_rowScan,w
  4142     04C2  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  4143     04C3  0084               	movwf	4
  4144     04C4  120A  118A  2534  120A  118A  	fcall	stringdir
  4145     04C9  0508               	andwf	8,w	;volatile
  4146     04CA  1D03               	btfss	3,2
  4147     04CB  2CCD               	goto	u268_21
  4148     04CC  2CCE               	goto	u268_20
  4149     04CD                     u268_21:
  4150     04CD  2CD7               	goto	i1l2398
  4151     04CE                     u268_20:
  4152     04CE                     i1l2392:
  4153     04CE  1C79               	btfss	_old_btn/(0+8),_old_btn& (0+7)
  4154     04CF  2CD1               	goto	u269_21
  4155     04D0  2CD2               	goto	u269_20
  4156     04D1                     u269_21:
  4157     04D1  2CD7               	goto	i1l2398
  4158     04D2                     u269_20:
  4159     04D2                     i1l2394:
  4160                           
  4161                           ;main.c: 529:                     old_btn = 0;
  4162     04D2  1079               	bcf	_old_btn/(0+8),_old_btn& (0+7)
  4163     04D3                     i1l2396:
  4164                           
  4165                           ;main.c: 530:                     stato++;
  4166     04D3  3001               	movlw	1
  4167     04D4  00F0               	movwf	??_ISR
  4168     04D5  0870               	movf	??_ISR,w
  4169     04D6  07B9               	addwf	_stato,f
  4170     04D7                     i1l2398:
  4171                           
  4172                           ;main.c: 532:                 if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  4173     04D7  083A               	movf	_rowScan,w
  4174     04D8  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  4175     04D9  0084               	movwf	4
  4176     04DA  120A  118A  2534  120A  118A  	fcall	stringdir
  4177     04DF  0508               	andwf	8,w	;volatile
  4178     04E0  1903               	btfsc	3,2
  4179     04E1  2CE3               	goto	u270_21
  4180     04E2  2CE4               	goto	u270_20
  4181     04E3                     u270_21:
  4182     04E3  2CFA               	goto	i1l2408
  4183     04E4                     u270_20:
  4184     04E4                     i1l2400:
  4185     04E4  1879               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  4186     04E5  2CE7               	goto	u271_21
  4187     04E6  2CE8               	goto	u271_20
  4188     04E7                     u271_21:
  4189     04E7  2CFA               	goto	i1l2408
  4190     04E8                     u271_20:
  4191     04E8                     i1l2402:
  4192                           
  4193                           ;main.c: 534:                     if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  4194     04E8  083A               	movf	_rowScan,w
  4195     04E9  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  4196     04EA  0084               	movwf	4
  4197     04EB  120A  118A  2534  120A  118A  	fcall	stringdir
  4198     04F0  0508               	andwf	8,w	;volatile
  4199     04F1  1903               	btfsc	3,2
  4200     04F2  2CF4               	goto	u272_21
  4201     04F3  2CF5               	goto	u272_20
  4202     04F4                     u272_21:
  4203     04F4  2CFA               	goto	i1l2408
  4204     04F5                     u272_20:
  4205     04F5                     i1l2404:
  4206     04F5  1879               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  4207     04F6  2CF8               	goto	u273_21
  4208     04F7  2CF9               	goto	u273_20
  4209     04F8                     u273_21:
  4210     04F8  2CFA               	goto	i1l2408
  4211     04F9                     u273_20:
  4212     04F9                     i1l2406:
  4213                           
  4214                           ;main.c: 535:                         old_btn = 1;
  4215     04F9  1479               	bsf	_old_btn/(0+8),_old_btn& (0+7)
  4216     04FA                     i1l2408:
  4217                           
  4218                           ;main.c: 538:                 if (stato != old_stato) {
  4219     04FA  0839               	movf	_stato,w
  4220     04FB  0638               	xorwf	_old_stato,w
  4221     04FC  1903               	skipnz
  4222     04FD  2CFF               	goto	u274_21
  4223     04FE  2D00               	goto	u274_20
  4224     04FF                     u274_21:
  4225     04FF  2D0D               	goto	i1l2414
  4226     0500                     u274_20:
  4227     0500                     i1l2410:
  4228                           
  4229                           ;main.c: 539:                     keypressed = rowScan + (4 * colScan);
  4230     0500  083B               	movf	_colScan,w
  4231     0501  00F0               	movwf	??_ISR
  4232     0502  3002               	movlw	2
  4233     0503                     u275_25:
  4234     0503  1003               	clrc
  4235     0504  0DF0               	rlf	??_ISR,f
  4236     0505  3EFF               	addlw	-1
  4237     0506  1D03               	skipz
  4238     0507  2D03               	goto	u275_25
  4239     0508  083A               	movf	_rowScan,w
  4240     0509  0770               	addwf	??_ISR,w
  4241     050A  00F5               	movwf	_keypressed
  4242     050B                     i1l2412:
  4243                           
  4244                           ;main.c: 542:                     old_stato = stato;
  4245     050B  0839               	movf	_stato,w
  4246     050C  00B8               	movwf	_old_stato
  4247     050D                     i1l2414:
  4248                           
  4249                           ;main.c: 544:             }
  4250     050D  3001               	movlw	1
  4251     050E  00F0               	movwf	??_ISR
  4252     050F  0870               	movf	??_ISR,w
  4253     0510  07BA               	addwf	_rowScan,f
  4254     0511  3004               	movlw	4
  4255     0512  023A               	subwf	_rowScan,w
  4256     0513  1C03               	skipc
  4257     0514  2D16               	goto	u276_21
  4258     0515  2D17               	goto	u276_20
  4259     0516                     u276_21:
  4260     0516  2CC1               	goto	i1l2390
  4261     0517                     u276_20:
  4262     0517                     i1l2416:
  4263                           
  4264                           ;main.c: 545:         }
  4265     0517  3001               	movlw	1
  4266     0518  00F0               	movwf	??_ISR
  4267     0519  0870               	movf	??_ISR,w
  4268     051A  07BB               	addwf	_colScan,f
  4269     051B  2CA4               	goto	i1l2376
  4270     051C                     i1l2420:
  4271                           
  4272                           ;main.c: 546:         TRISD |= 0x00;
  4273     051C  1683               	bsf	3,5	;RP0=1, select bank1
  4274     051D  1303               	bcf	3,6	;RP1=0, select bank1
  4275     051E  0808               	movf	8,w	;volatile
  4276     051F                     i1l313:
  4277     051F  0874               	movf	??_ISR+4,w
  4278     0520  00FF               	movwf	btemp+1
  4279     0521  0873               	movf	??_ISR+3,w
  4280     0522  008A               	movwf	10
  4281     0523  0872               	movf	??_ISR+2,w
  4282     0524  0084               	movwf	4
  4283     0525  0E71               	swapf	??_ISR+1,w
  4284     0526  0083               	movwf	3
  4285     0527  0EFE               	swapf	btemp,f
  4286     0528  0E7E               	swapf	btemp,w
  4287     0529  0009               	retfie
  4288     052A                     __end_of_ISR:
  4289     007E                     btemp	set	126	;btemp
  4290     007E                     wtemp0	set	126
  4291                           
  4292                           	psect	intentry
  4293     0004                     __pintentry:	
  4294                           ;incstack = 0
  4295                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath]
  4296                           
  4297     0004                     interrupt_function:
  4298     007E                     saved_w	set	btemp
  4299     0004  00FE               	movwf	btemp
  4300     0005  0E03               	swapf	3,w
  4301     0006  00F1               	movwf	??_ISR+1
  4302     0007  0804               	movf	4,w
  4303     0008  00F2               	movwf	??_ISR+2
  4304     0009  080A               	movf	10,w
  4305     000A  00F3               	movwf	??_ISR+3
  4306     000B  087F               	movf	btemp+1,w
  4307     000C  00F4               	movwf	??_ISR+4
  4308     000D  120A  118A  2C48   	ljmp	_ISR
  4309                           
  4310                           	psect	idloc
  4311                           
  4312                           ;Config register IDLOC0 @ 0x2000
  4313                           ;	unspecified, using default values
  4314     2000                     	org	8192
  4315     2000  3FFF               	dw	16383
  4316                           
  4317                           ;Config register IDLOC1 @ 0x2001
  4318                           ;	unspecified, using default values
  4319     2001                     	org	8193
  4320     2001  3FFF               	dw	16383
  4321                           
  4322                           ;Config register IDLOC2 @ 0x2002
  4323                           ;	unspecified, using default values
  4324     2002                     	org	8194
  4325     2002  3FFF               	dw	16383
  4326                           
  4327                           ;Config register IDLOC3 @ 0x2003
  4328                           ;	unspecified, using default values
  4329     2003                     	org	8195
  4330     2003  3FFF               	dw	16383
  4331                           
  4332                           	psect	config
  4333                           
  4334                           ;Config register CONFIG @ 0x2007
  4335                           ;	Oscillator Selection bits
  4336                           ;	FOSC = HS, HS oscillator
  4337                           ;	Watchdog Timer Enable bit
  4338                           ;	WDTE = OFF, WDT disabled
  4339                           ;	Power-up Timer Enable bit
  4340                           ;	PWRTE = OFF, PWRT disabled
  4341                           ;	Brown-out Reset Enable bit
  4342                           ;	BOREN = OFF, BOR disabled
  4343                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4344                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  4345                           ;	Data EEPROM Memory Code Protection bit
  4346                           ;	CPD = OFF, Data EEPROM code protection off
  4347                           ;	Flash Program Memory Write Enable bits
  4348                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4349                           ;	In-Circuit Debugger Mode bit
  4350                           ;	DEBUG = 0x1, unprogrammed default
  4351                           ;	Flash Program Memory Code Protection bit
  4352                           ;	CP = OFF, Code protection off
  4353     2007                     	org	8199
  4354     2007  3F3A               	dw	16186

Data Sizes:
    Strings     108
    Constant    19
    Data        2
    BSS         59
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     31      72
    BANK1            80      0      16
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    intToString@str	PTR unsigned char  size(1) Largest target is 3
		 -> print_countdown(BANK0[3]), 

    lcdPrint@str	PTR unsigned char  size(2) Largest target is 15
		 -> STR_10(CODE[15]), STR_9(CODE[8]), STR_8(CODE[14]), STR_7(CODE[11]), 
		 -> print_countdown(BANK0[3]), STR_6(CODE[10]), STR_5(CODE[14]), STR_4(CODE[13]), 
		 -> STR_3(CODE[12]), STR_2(CODE[11]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_UART_Read2
    _initLCD->_lcdSend
    _UART_Read2->_intToString
    _lcdPrint->_lcdSend
    _intToString->___awdiv
    _potenza->___bmul
    ___awdiv->_potenza

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   26329
               _GenerateRandomNumber
                       _KeyPadReader
                     _RS485_RxEnable
                        _Timer0_Init
                          _UART_Init
                         _UART_Read2
                         _UART_Write
                            _initLCD
                           _lcdPrint
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0    4022
                                              2 BANK0      2     2      0
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Read2                                           4     4      0   12681
                                             28 BANK0      3     3      0
                        _intToString
                           _lcdPrint
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _lcdPrint                                             7     5      2    5502
                                              2 BANK0      7     5      2
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _lcdSend                                              2     1      1    4022
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _intToString                                          9     6      3    3145
                                             19 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                            _potenza
 ---------------------------------------------------------------------------------
 (3) _potenza                                              6     5      1     573
                                              4 BANK0      6     5      1
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     226
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     613
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     604
                                             10 BANK0      9     5      4
                            _potenza (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RS485_RxEnable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _KeyPadReader                                         2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _GenerateRandomNumber                                 3     3      0      71
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GenerateRandomNumber
   _KeyPadReader
   _RS485_RxEnable
   _Timer0_Init
   _UART_Init
   _UART_Read2
     _intToString
       ___awdiv
         _potenza (ARG)
           ___bmul
       ___awmod
       _potenza
     _lcdPrint
       _lcdSend
     _lcdSend
   _UART_Write
   _initLCD
     _lcdSend
   _lcdPrint
   _lcdSend

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      10       7       20.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1F      48       5       90.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       1       0        7.1%
CODE                 0      0       0       0        0.0%
DATA                 0      0      62      12        0.0%
ABS                  0      0      62       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Jun 30 14:57:36 2023

                            pc 0002                 ___bmul@product 0049                   ___awdiv@sign 0057  
                           fsr 0004                            l202 0F24                            l212 02CE  
                          l205 0F30                            l224 0412                            l208 0F36  
                          l225 0447                            l217 0420                            l322 0F74  
                          l219 0367                            l316 07FF                            l341 0FB7  
                          l245 072C                            l334 0644                            l350 06C0  
                          l254 0FFF                            l248 0F5D                            l602 07F0  
                          l196 0F48                            l462 0F8B                            l589 0795  
                          _GIE 005F                            _RC0 0038                            _RC1 0039  
                          _PS0 0408                            _PS1 0409                            _PS2 040A  
                          _ISR 0448                            _PSA 040B                            _id1 0066  
                          fsr0 0004                            indf 0000                   ___awmod@sign 004D  
                         ?_ISR 0070                           l2500 07EC                           l2430 0F83  
                         l2422 0F78                           l2510 0FE3                           l2600 05CA  
                         l2432 0F8A                           l2424 0F79                           l2520 066F  
                         l2512 0645                           l2440 0F50                           l2504 0FB8  
                         l2610 05E0                           l2602 05CD                           l1730 0734  
                         l2426 0F7D                           l2522 0671                           l2530 06B3  
                         l2514 0649                           l2450 0F5C                           l2442 0F51  
                         l2506 0FBD                           l2620 0603                           l2612 05ED  
                         l2604 05D8                           l2540 0F3F                           l1740 0748  
                         l1732 0739                           l2428 0F81                           l2460 0FA7  
                         l2452 0F8F                           l2532 06B9                           l2524 067E  
                         l2516 064A                           l2444 0F54                           l2436 0F4C  
                         l2508 0FDB                           l2700 03B4                           l2622 0607  
                         l2630 0626                           l2614 05F1                           l2606 05D9  
                         l2542 0F42                           l2534 0F37                           l1750 075E  
                         l1742 074A                           l1734 073B                           l1726 072D  
                         l2470 079D                           l2462 0FB4                           l2454 0F91  
                         l2526 0699                           l2518 064E                           l2446 0F56  
                         l2438 0F4F                           l2710 03E7                           l2702 03BF  
                         l2550 06CF                           l2632 062C                           l2624 0612  
                         l2616 05F2                           l2544 0F45                           l2536 0F3C  
                         l1760 0781                           l1752 0762                           l1744 0750  
                         l1736 073F                           l1728 0730                           l2480 07B3  
                         l2472 07A2                           l2456 0F94                           l2528 06AF  
                         l2448 0F5B                           l2720 040E                           l2712 03EA  
                         l2704 03C3                           l2560 06FF                           l2552 06D2  
                         l2800 00DD                           l2634 0637                           l2626 0621  
                         l2618 05F6                           l2642 063F                           l2650 0F20  
                         l2570 07F1                           l2538 0F3E                           l1754 0773  
                         l1746 0753                           l1762 0787                           l1738 0744  
                         l2490 07CF                           l2482 07B6                           l2474 07A4  
                         l2466 0796                           l2458 0FA1                           l2730 0421  
                         l2714 03EB                           l2706 03CE                           l2562 0708  
                         l2554 06D9                           l2546 06C1                           l2810 0104  
                         l2802 00E3                           l2580 0F5E                           l2628 0625  
                         l2572 07F8                           l1764 078C                           l1756 0779  
                         l1748 075A                           l2492 07D5                           l2484 07BD  
                         l2476 07A8                           l2468 0799                           l2740 0441  
                         l2724 0413                           l2716 03F4                           l2708 03D6  
                         l2660 02F4                           l2732 0422                           l2652 02CD  
                         l2564 0711                           l2556 06EC                           l2548 06C5  
                         l2900 0233                           l2820 0122                           l2812 010A  
                         l2804 00EC                           l2582 0F63                           l2638 063A  
                         l2574 07FC                           l1766 0791                           l1758 077A  
                         l2494 07DC                           l2486 07C1                           l2478 07AD  
                         l2742 0444                           l2718 03FF                           l2726 0414  
                         l2670 0326                           l2662 02FD                           l2654 02D2  
                         l2734 0428                           l2646 0F30                           l2566 071A  
                         l2558 06F6                           l2910 02B8                           l2902 0239  
                         l2830 0143                           l2822 0128                           l2814 0110  
                         l2806 00F8                           l2750 0039                           l2584 0F69  
                         l2592 05B9                           l2576 07FD                           l2488 07C5  
                         l2496 07E2                           l2736 042F                           l2728 0419  
                         l2680 0351                           l2672 032F                           l2664 0308  
                         l2656 02D9                           l2648 0F34                           l2568 0723  
                         l2912 02B9                           l2904 023F                           l2840 0167  
                         l2832 014F                           l2824 012E                           l2816 0116  
                         l2808 00FE                           l2760 0055                           l2752 0040  
                         l2586 0F70                           l2594 05C1                           l2578 07FE  
                         l2498 07E7                           l2738 0436                           l2690 0382  
                         l2682 0362                           l2674 033A                           l2666 030C  
                         l2658 02E4                           l2914 02BE                           l2906 0245  
                         l2850 0185                           l2842 016D                           l2834 0155  
                         l2826 0134                           l2818 011C                           l2770 0077  
                         l2762 005B                           l2754 0045                           l2588 0F72  
                         l2596 05C3                           l2692 038D                           l2684 0365  
                         l2676 033E                           l2668 0318                           l2916 02C4  
                         l2908 024B                           l2860 01AE                           l2852 018B  
                         l2844 0173                           l2836 015B                           l2828 013A  
                         l2780 00A1                           l2764 0061                           l2756 004A  
                         l2694 0391                           l2686 036B                           l2678 0349  
                         l2870 01CE                           l2862 01B6                           l2846 0179  
                         l2838 0161                           l2854 0191                           l2790 00BF  
                         l2782 00A7                           l2774 0085                           l2766 0069  
                         l2758 004F                           l2696 039D                           l2688 0379  
                         l2872 01D4                           l2864 01BC                           l2880 01EC  
                         l2856 019A                           l2848 017F                           l2792 00C5  
                         l2784 00AD                           l2776 008C                           l2768 0072  
                         l2698 03AB                           l2890 0215                           l2882 01F3  
                         l2874 01DA                           l2866 01C2                           l2858 01A6  
                         l2794 00CB                           l2786 00B3                           l2778 0095  
                         l2892 021B                           l2884 01FF                           l2876 01E0  
                         l2868 01C8                           l2796 00D1                           l2788 00B9  
                         l2894 0221                           l2886 0207                           l2878 01E6  
                         l2798 00D7                           l2896 0227                           l2888 020F  
                         l2898 022D                           STR_1 05A7                           STR_2 0591  
                         STR_3 0585                           STR_4 0578                           STR_5 055C  
                         STR_6 05A7                           STR_7 059C                           STR_8 056A  
                         STR_9 05B1                           _BRGH 04C2                           _CREN 00C4  
                         _T0CS 040D                           u3000 0607                           u3001 0606  
                         u3010 0621                           u3011 0620                           u3020 0625  
                         u1500 0787                           u1420 0734                           u3100 0419  
                         u3021 0624                           u1501 0786                           u1421 0733  
                         u3101 0418                           u3030 062C                           u1510 078C  
                         u1430 073F                           u3110 0420                           u3031 062B  
                         u1511 078B                           u1431 073E                           u3111 041F  
                         u1440 0750                           u3120 0427                           u3200 00C5  
                         u1441 074F                           u3121 0426                           u3201 00C4  
                         u3130 042F                           u3050 0F34                           u3210 00CB  
                         u3131 042E                           u3051 0F33                           u3211 00CA  
                         u1460 0762                           u3060 02D2                           u3300 011C  
                         u3220 00D1                           u3140 0084                           u3045 062F  
                         u1461 0761                           u3061 02D1                           u3301 011B  
                         u3221 00D0                           u3141 0083                           u3070 0351  
                         u3310 0122                           u3230 00D7                           u3150 008C  
                         u1455 0754                           u3071 0350                           u3311 0121  
                         u3231 00D6                           u3151 008B                           u1480 0773  
                         u3080 036B                           u3400 0173                           u3320 0128  
                         u3240 00DD                           u3160 00AD                           u1481 0772  
                         u3081 036A                           u3401 0172                           u3321 0127  
                         u3241 00DC                           u3161 00AC                           u3090 03D6  
                         u3410 0179                           u3330 012E                           u3250 00E3  
                         u3170 00B3                           u1475 0763                           u3091 03D5  
                         u3411 0178                           u3331 012D                           u3251 00E2  
                         u3171 00B2                           u3500 01CE                           u3420 017F  
                         u3340 0134                           u3260 0104                           u3180 00B9  
                         u1485 076F                           u3501 01CD                           u3421 017E  
                         u3341 0133                           u3261 0103                           u3181 00B8  
                         u3510 01D4                           u3430 0185                           u3350 013A  
                         u3270 010A                           u3190 00BF                           u1495 077B  
                         u3511 01D3                           u3431 0184                           u3351 0139  
                         u3271 0109                           u3191 00BE                           u2800 079D  
                         u3600 0227                           u3520 01DA                           u3440 018B  
                         u3360 015B                           u3280 0110                           u2801 079C  
                         u3601 0226                           u3521 01D9                           u3441 018A  
                         u3361 015A                           u3281 010F                           u2810 07A8  
                         u3610 022D                           u3530 01E0                           u3450 0191  
                         u3370 0161                           u3290 0116                           u2811 07A7  
                         u3611 022C                           u3531 01DF                           u3451 0190  
                         u3371 0160                           u3291 0115                           u2820 07B3  
                         u2900 0FED                           u3620 0233                           u3540 01E6  
                         u3460 01B6                           u3380 0167                           u2821 07B2  
                         u3621 0232                           u3541 01E5                           u3461 01B5  
                         u3381 0166                           u2910 0FFF                           u3630 0239  
                         u3550 01EC                           u3470 01BC                           u3390 016D  
                         u2911 0FFE                           u3631 0238                           u3551 01EB  
                         u3471 01BB                           u3391 016C                           u2840 07C5  
                         u2920 066F                           u3640 023F                           u3560 020F  
                         u3480 01C2                           u2841 07C4                           u2921 066E  
                         u3641 023E                           u3561 020E                           u3481 01C1  
                         u2850 07CF                           u2770 0F7D                           u2930 06B9  
                         u3650 0245                           u3570 0215                           u3490 01C8  
                         u2851 07CE                           u2835 07B7                           u2771 0F7C  
                         u2931 06B8                           u3651 0244                           u3571 0214  
                         u3491 01C7                           u2940 0F70                           u2780 0F8A  
                         u3580 021B                           u2941 0F6F                           u2781 0F89  
                         u3581 021A                           u2950 05C9                           u2870 07E2  
                         u2790 0FB4                           u3590 0221                           u2951 05C8  
                         u2871 07E1                           u2855 07CB                           u2791 0FB3  
                         u3807 06F2                           u3591 0220                           u2960 05DF  
                         u2880 07E7                           u2961 05DE                           u2881 07E6  
                         u2865 07D6                           u3817 0312                           u2970 05ED  
                         u2890 0FC9                           u2971 05EC                           u2795 0FB0  
                         u3827 0344                           u2980 05F1                           _RCIF 0065  
                         u2981 05F0                           u3837 0397                           u2990 0603  
                         u2991 0602                           u3847 03C9                           u3857 0407  
                         u3867 060D                           u3787 06CB                           u3797 06DF  
               ??_KeyPadReader 0047                           _TMR0 0001                           _SPEN 00C7  
                         _TXEN 04C5                           _TXIF 0064                           _SYNC 04C4  
                         _data 0020                           _flag 0030                           _main 0039  
                         _num1 0078                           _num2 0077                           _num3 0076  
                         _keys 053A                           _num4 0043                           _num5 0042  
                         btemp 007E                           _type 0034                           start 0010  
            ___bmul@multiplier 004A                          ??_ISR 0070                   ?_intToString 005A  
                        ?_main 0070                __end_of___awdiv 0796                          STR_10 054D  
              __end_of___awmod 07F1                ___awdiv@divisor 0051                          i1l300 048D  
                        i1l301 048E                          i1l303 0492                          i1l313 051F  
                        i1l261 044C                          i1l270 045B                          i1l262 044D  
                        i1l271 045C                          i1l280 046B                          i1l264 0451  
                        i1l273 0460                          i1l265 0452                          i1l282 046F  
                        i1l274 0461                          i1l291 047E                          i1l283 0470  
                        i1l267 0456                          i1l259 0448                          i1l292 047F  
                        i1l276 0465                          i1l268 0457                          i1l285 0474  
                        i1l277 0466                          i1l294 0483                          i1l286 0475  
                        i1l295 0484                          i1l279 046A                          i1l288 0479  
                        i1l297 0488                          i1l289 047A                          i1l298 0489  
              ___awdiv@counter 0056                          _RCREG 001A                          _SPBRG 0099  
                        _PORTB 0006                          _PORTD 0008                          _TRISA 0085  
                        _TRISB 0086                          _TRISC 0087                          _TRISD 0088  
                        _TRISE 0089                          _TXREG 0019                    ?_UART_Read2 0070  
              __end_of_colMask 054D                __end_of_lcdSend 0F5E                    ?_UART_Write 0070  
              __end_of_initLCD 072D                          _count 002C                          _num21 0041  
                        _index 002E                          _num22 0040                          _num23 003F  
                        _num24 003E                          _num25 003D                          _keyok 003C  
                        _stato 0039                 __pbitbssCOMMON 03C8                          pclath 000A  
              __end_of_rowMask 054A                __end_of_potenza 0FB8                          status 0003  
                        wtemp0 007E   __end_of_GenerateRandomNumber 0F75                __initialization 0013  
                 __end_of_main 02CD                   __end_of_keys 0546                         ??_main 0066  
             ___awdiv@dividend 0053                         i1l2400 04E4                         i1l2410 0500  
                       i1l2402 04E8                         i1l2412 050B                         i1l2404 04F5  
                       i1l2420 051C                         i1l2414 050D                         i1l2406 04F9  
                       i1l2408 04FA                         i1l2416 0517                         i1l2370 0493  
                       i1l2380 04AB                         i1l2372 049B                         i1l2390 04C1  
                       i1l2382 04AE                         i1l2374 04A1                         i1l2392 04CE  
                       i1l2384 04B9                         i1l2376 04A4                         i1l2368 0448  
                       i1l2394 04D2                         i1l2386 04BA                         i1l2396 04D3  
                       i1l2398 04D7                         u250_20 044C                         u250_21 044B  
                       u251_20 0451                         u251_21 0450                         u260_20 047E  
                       u252_20 0456                         u260_21 047D                         u252_21 0455  
                       u261_20 0483                         u253_20 045B                         u261_21 0482  
                       u253_21 045A                         u270_20 04E4                         u262_20 0488  
                       u254_20 0460                         u270_21 04E3                         u262_21 0487  
                       u254_21 045F                         u271_20 04E8                         u263_20 048D  
                       u255_20 0465                         u271_21 04E7                         u263_21 048C  
                       u255_21 0464                         u272_20 04F5                         u264_20 0492  
                       u256_20 046A                         u272_21 04F4                         u264_21 0491  
                       u256_21 0469                         u273_20 04F9                         u265_20 049B  
                       u257_20 046F                         u273_21 04F8                         u265_21 049A  
                       u257_21 046E                         u274_20 0500                         u266_20 04AA  
                       u258_20 0474                         u274_21 04FF                         u266_21 04A9  
                       u258_21 0473                         u267_20 04C0                         u259_20 0479  
                       u267_21 04BF                         u259_21 0478                         u275_25 0503  
                       u276_20 0517                         u268_20 04CE                         u276_21 0516  
                       u268_21 04CD                         u269_20 04D2                         u269_21 04D1  
                       _TMR0IE 005D                         _TMR0IF 005A                         _TRISC6 043E  
                       _TRISC7 043F                  ??_Timer0_Init 0047               __end_of_lcdPrint 1000  
            __end_of_UART_Init 0F49                         ___bmul 0F75                      ??___awdiv 0055  
                    ??___awmod 004B                         _codice 0026               ___awdiv@quotient 0058  
              ___awmod@divisor 0047           __end_of_KeyPadReader 0645                ___awmod@counter 004C  
                    ??_lcdSend 0048                      ??_initLCD 0049                         saved_w 007E  
                    ??_potenza 004C        __end_of__initialization 0035               intToString@cifre 0061  
          ___bmul@multiplicand 0047                 __pcstackCOMMON 0070                   __pidataBANK0 0F1E  
          __end_of_Timer0_Init 0800           _GenerateRandomNumber 0F5E                     __pbssBANK0 0020  
                   __pbssBANK1 00A0                     __pmaintext 0039                        ?___bmul 0047  
                   __pintentry 0004                   ??_UART_Read2 0063          ?_GenerateRandomNumber 0070  
                 ??_UART_Write 0047                      ?_lcdPrint 0049                     __stringtab 052A  
                 intToString@i 0062                   intToString@n 005A                   intToString@t 0060  
                  _Timer0_Init 07F1             __end_of_UART_Read2 0448                 _RS485_RxEnable 0F20  
                      ___awdiv 072D                        ___awmod 0796             __end_of_UART_Write 0F37  
                      _colMask 054A                        _colScan 003B                        _lcdSend 0F49  
                      __ptext1 06C1                        __ptext2 0F2D                        __ptext3 02CD  
                      __ptext4 0FB8                        __ptext5 0F49                        __ptext6 0645  
                      __ptext7 0F8C                        __ptext8 0F75                        __ptext9 0796  
                      _initLCD 06C1                        _old_btn 03C8               ___awmod@dividend 0049  
                   _keypressed 0075                        _restart 0037                        _rowMask 0546  
                      _rowScan 003A                        _potenza 0F8C                     ??_lcdPrint 004B  
                      clrloop0 0F26                        _stringa 00A0           end_of_initialization 0035  
                 _KeyPadReader 05B9         __end_of_RS485_RxEnable 0F25                      _UART_Init 0F37  
                    _PORTEbits 0009                 UART_Write@data 0047         ??_GenerateRandomNumber 0047  
                    _TRISEbits 0089                ?_RS485_RxEnable 0070                 __end_of___bmul 0F8C  
                   ?_UART_Init 0070            start_initialization 0013  GenerateRandomNumber@randomNum 0047  
                  __end_of_ISR 052A                 _stringPosition 0032                 intToString@str 005C  
                     ??___bmul 0048                    __pdataBANK0 0066                  ??_intToString 005D  
                  __pbssCOMMON 0075                      ___latbits 0002                  __pcstackBANK0 0047  
                 ?_Timer0_Init 0070                       ?___awdiv 0051                       ?___awmod 0047  
                  ??_UART_Init 0047                      __pstrings 052A                       ?_lcdSend 0047  
                     ?_initLCD 0070            __end_of_intToString 06C1                      _countdown 0067  
                     ?_potenza 004B                      _randomNum 0035                      _old_stato 0038  
            interrupt_function 0004                      clear_ram0 0F25                _print_countdown 0044  
                    lcdPrint@n 004E                    __stringbase 0539               ??_RS485_RxEnable 0047  
                  _intToString 0645             __end_of__stringtab 053A                       __ptext10 072D  
                     __ptext11 0F37                       __ptext12 07F1                       __ptext13 0F20  
                     __ptext14 05B9                       __ptext15 0F5E                       __ptext16 0448  
                     _lcdPrint 0FB8                       _received 0036                       intlevel1 0000  
                    stringcode 0534                       potenza@b 004D                       potenza@e 004B  
                     potenza@i 004E                       potenza@n 0050                    lcdSend@dato 0048  
                  lcdSend@tipo 0047                     _UART_Read2 02CD                       stringdir 0534  
                     stringtab 052A                     _UART_Write 0F2D      GenerateRandomNumber@count 0048  
                  lcdPrint@str 0049                  ?_KeyPadReader 0070  
