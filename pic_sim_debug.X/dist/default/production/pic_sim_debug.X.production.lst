

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Jul 02 16:26:14 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38     0000                     
    39                           ; Generated 22/03/2023 GMT
    40                           ; 
    41                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F877A Definitions
    71                           ; 
    72                           ; SFR Addresses
    73     0000                     	;# 
    74     0001                     	;# 
    75     0002                     	;# 
    76     0003                     	;# 
    77     0004                     	;# 
    78     0005                     	;# 
    79     0006                     	;# 
    80     0007                     	;# 
    81     0008                     	;# 
    82     0009                     	;# 
    83     000A                     	;# 
    84     000B                     	;# 
    85     000C                     	;# 
    86     000D                     	;# 
    87     000E                     	;# 
    88     000E                     	;# 
    89     000F                     	;# 
    90     0010                     	;# 
    91     0011                     	;# 
    92     0012                     	;# 
    93     0013                     	;# 
    94     0014                     	;# 
    95     0015                     	;# 
    96     0015                     	;# 
    97     0016                     	;# 
    98     0017                     	;# 
    99     0018                     	;# 
   100     0019                     	;# 
   101     001A                     	;# 
   102     001B                     	;# 
   103     001B                     	;# 
   104     001C                     	;# 
   105     001D                     	;# 
   106     001E                     	;# 
   107     001F                     	;# 
   108     0081                     	;# 
   109     0085                     	;# 
   110     0086                     	;# 
   111     0087                     	;# 
   112     0088                     	;# 
   113     0089                     	;# 
   114     008C                     	;# 
   115     008D                     	;# 
   116     008E                     	;# 
   117     0091                     	;# 
   118     0092                     	;# 
   119     0093                     	;# 
   120     0094                     	;# 
   121     0098                     	;# 
   122     0099                     	;# 
   123     009C                     	;# 
   124     009D                     	;# 
   125     009E                     	;# 
   126     009F                     	;# 
   127     010C                     	;# 
   128     010D                     	;# 
   129     010E                     	;# 
   130     010F                     	;# 
   131     018C                     	;# 
   132     018D                     	;# 
   133     0000                     	;# 
   134     0001                     	;# 
   135     0002                     	;# 
   136     0003                     	;# 
   137     0004                     	;# 
   138     0005                     	;# 
   139     0006                     	;# 
   140     0007                     	;# 
   141     0008                     	;# 
   142     0009                     	;# 
   143     000A                     	;# 
   144     000B                     	;# 
   145     000C                     	;# 
   146     000D                     	;# 
   147     000E                     	;# 
   148     000E                     	;# 
   149     000F                     	;# 
   150     0010                     	;# 
   151     0011                     	;# 
   152     0012                     	;# 
   153     0013                     	;# 
   154     0014                     	;# 
   155     0015                     	;# 
   156     0015                     	;# 
   157     0016                     	;# 
   158     0017                     	;# 
   159     0018                     	;# 
   160     0019                     	;# 
   161     001A                     	;# 
   162     001B                     	;# 
   163     001B                     	;# 
   164     001C                     	;# 
   165     001D                     	;# 
   166     001E                     	;# 
   167     001F                     	;# 
   168     0081                     	;# 
   169     0085                     	;# 
   170     0086                     	;# 
   171     0087                     	;# 
   172     0088                     	;# 
   173     0089                     	;# 
   174     008C                     	;# 
   175     008D                     	;# 
   176     008E                     	;# 
   177     0091                     	;# 
   178     0092                     	;# 
   179     0093                     	;# 
   180     0094                     	;# 
   181     0098                     	;# 
   182     0099                     	;# 
   183     009C                     	;# 
   184     009D                     	;# 
   185     009E                     	;# 
   186     009F                     	;# 
   187     010C                     	;# 
   188     010D                     	;# 
   189     010E                     	;# 
   190     010F                     	;# 
   191     018C                     	;# 
   192     018D                     	;# 
   193                           
   194                           	psect	idataBANK0
   195     0DC9                     __pidataBANK0:
   196                           
   197                           ;initializer for _countdown
   198     0DC9  34B4               	retlw	180
   199     0DCA  3400               	retlw	0
   200                           
   201                           ;initializer for _id1
   202     0DCB  3430               	retlw	48
   203                           
   204                           	psect	strings
   205     070A                     __pstrings:
   206     070A                     stringtab:
   207     070A                     __stringtab:
   208                           
   209                           ;	String table - string pointers are 1 byte each
   210     070A  1BFF               	btfsc	btemp+1,7
   211     070B  2F14               	ljmp	stringcode
   212     070C  1383               	bcf	3,7
   213     070D  187F               	btfsc	btemp+1,0
   214     070E  1783               	bsf	3,7
   215     070F  0800               	movf	0,w
   216     0710  0A84               	incf	4,f
   217     0711  1903               	skipnz
   218     0712  0AFF               	incf	btemp+1,f
   219     0713  0008               	return
   220     0714                     stringcode:
   221     0714                     stringdir:
   222     0714  3007               	movlw	high stringdir
   223     0715  008A               	movwf	10
   224     0716  0804               	movf	4,w
   225     0717  0A84               	incf	4,f
   226     0718  0782               	addwf	2,f
   227     0719                     __stringbase:
   228     0719  3400               	retlw	0
   229     071A                     __end_of__stringtab:
   230     071A                     _keys:
   231     071A  3423               	retlw	35
   232     071B  3437               	retlw	55
   233     071C  3434               	retlw	52
   234     071D  3431               	retlw	49
   235     071E  342A               	retlw	42
   236     071F  3438               	retlw	56
   237     0720  3435               	retlw	53
   238     0721  3432               	retlw	50
   239     0722  3430               	retlw	48
   240     0723  3439               	retlw	57
   241     0724  3436               	retlw	54
   242     0725  3433               	retlw	51
   243     0726                     __end_of_keys:
   244     0726                     _rowMask:
   245     0726  3401               	retlw	1
   246     0727  3402               	retlw	2
   247     0728  3404               	retlw	4
   248     0729  3408               	retlw	8
   249     072A                     __end_of_rowMask:
   250     072A                     _colMask:
   251     072A  34FE               	retlw	254
   252     072B  34FD               	retlw	253
   253     072C  34FB               	retlw	251
   254     072D                     __end_of_colMask:
   255     0001                     _TMR0	set	1
   256     0006                     _PORTB	set	6
   257     0008                     _PORTD	set	8
   258     0009                     _PORTEbits	set	9
   259     001A                     _RCREG	set	26
   260     0019                     _TXREG	set	25
   261     005F                     _GIE	set	95
   262     005D                     _TMR0IE	set	93
   263     005A                     _TMR0IF	set	90
   264     0065                     _RCIF	set	101
   265     0064                     _TXIF	set	100
   266     0039                     _RC1	set	57
   267     0038                     _RC0	set	56
   268     00C4                     _CREN	set	196
   269     00C7                     _SPEN	set	199
   270     0089                     _TRISEbits	set	137
   271     0099                     _SPBRG	set	153
   272     0089                     _TRISE	set	137
   273     0088                     _TRISD	set	136
   274     0087                     _TRISC	set	135
   275     0086                     _TRISB	set	134
   276     0085                     _TRISA	set	133
   277     0408                     _PS0	set	1032
   278     0409                     _PS1	set	1033
   279     040A                     _PS2	set	1034
   280     040B                     _PSA	set	1035
   281     040D                     _T0CS	set	1037
   282     04C5                     _TXEN	set	1221
   283     04C4                     _SYNC	set	1220
   284     04C2                     _BRGH	set	1218
   285     043F                     _TRISC7	set	1087
   286     043E                     _TRISC6	set	1086
   287     072D                     STR_10:
   288     072D  3443               	retlw	67	;'C'
   289     072E  346F               	retlw	111	;'o'
   290     072F  3464               	retlw	100	;'d'
   291     0730  3469               	retlw	105	;'i'
   292     0731  3463               	retlw	99	;'c'
   293     0732  3465               	retlw	101	;'e'
   294     0733  3420               	retlw	32	;' '
   295     0734  3453               	retlw	83	;'S'
   296     0735  3463               	retlw	99	;'c'
   297     0736  3461               	retlw	97	;'a'
   298     0737  3464               	retlw	100	;'d'
   299     0738  3475               	retlw	117	;'u'
   300     0739  3474               	retlw	116	;'t'
   301     073A  346F               	retlw	111	;'o'
   302     073B  3400               	retlw	0
   303     073C                     STR_6:
   304     073C  3441               	retlw	65	;'A'
   305     073D  3474               	retlw	116	;'t'
   306     073E  3474               	retlw	116	;'t'
   307     073F  3465               	retlw	101	;'e'
   308     0740  346E               	retlw	110	;'n'
   309     0741  3464               	retlw	100	;'d'
   310     0742  3465               	retlw	101	;'e'
   311     0743  3472               	retlw	114	;'r'
   312     0744  3465               	retlw	101	;'e'
   313     0745  342E               	retlw	46	;'.'
   314     0746  342E               	retlw	46	;'.'
   315     0747  342E               	retlw	46	;'.'
   316     0748  342E               	retlw	46	;'.'
   317     0749  3400               	retlw	0
   318     074A                     STR_5:
   319     074A  3441               	retlw	65	;'A'
   320     074B  3474               	retlw	116	;'t'
   321     074C  3474               	retlw	116	;'t'
   322     074D  3465               	retlw	101	;'e'
   323     074E  346E               	retlw	110	;'n'
   324     074F  3464               	retlw	100	;'d'
   325     0750  3465               	retlw	101	;'e'
   326     0751  3472               	retlw	114	;'r'
   327     0752  3465               	retlw	101	;'e'
   328     0753  342E               	retlw	46	;'.'
   329     0754  342E               	retlw	46	;'.'
   330     0755  342E               	retlw	46	;'.'
   331     0756  3400               	retlw	0
   332     0757                     STR_4:
   333     0757  3441               	retlw	65	;'A'
   334     0758  3474               	retlw	116	;'t'
   335     0759  3474               	retlw	116	;'t'
   336     075A  3465               	retlw	101	;'e'
   337     075B  346E               	retlw	110	;'n'
   338     075C  3464               	retlw	100	;'d'
   339     075D  3465               	retlw	101	;'e'
   340     075E  3472               	retlw	114	;'r'
   341     075F  3465               	retlw	101	;'e'
   342     0760  342E               	retlw	46	;'.'
   343     0761  342E               	retlw	46	;'.'
   344     0762  3400               	retlw	0
   345     0763                     STR_3:
   346     0763  3441               	retlw	65	;'A'
   347     0764  3474               	retlw	116	;'t'
   348     0765  3474               	retlw	116	;'t'
   349     0766  3465               	retlw	101	;'e'
   350     0767  346E               	retlw	110	;'n'
   351     0768  3464               	retlw	100	;'d'
   352     0769  3465               	retlw	101	;'e'
   353     076A  3472               	retlw	114	;'r'
   354     076B  3465               	retlw	101	;'e'
   355     076C  342E               	retlw	46	;'.'
   356     076D  3400               	retlw	0
   357     076E                     STR_8:
   358     076E  3441               	retlw	65	;'A'
   359     076F  3450               	retlw	80	;'P'
   360     0770  3452               	retlw	82	;'R'
   361     0771  3449               	retlw	73	;'I'
   362     0772  3420               	retlw	32	;' '
   363     0773  3450               	retlw	80	;'P'
   364     0774  344F               	retlw	79	;'O'
   365     0775  3452               	retlw	82	;'R'
   366     0776  3454               	retlw	84	;'T'
   367     0777  3441               	retlw	65	;'A'
   368     0778  3400               	retlw	0
   369     0779                     STR_2:
   370     0779  3441               	retlw	65	;'A'
   371     077A  3474               	retlw	116	;'t'
   372     077B  3474               	retlw	116	;'t'
   373     077C  3465               	retlw	101	;'e'
   374     077D  346E               	retlw	110	;'n'
   375     077E  3464               	retlw	100	;'d'
   376     077F  3465               	retlw	101	;'e'
   377     0780  3472               	retlw	114	;'r'
   378     0781  3465               	retlw	101	;'e'
   379     0782  3400               	retlw	0
   380     0783                     STR_1:
   381     0783  3450               	retlw	80	;'P'
   382     0784  3472               	retlw	114	;'r'
   383     0785  3465               	retlw	101	;'e'
   384     0786  346D               	retlw	109	;'m'
   385     0787  3469               	retlw	105	;'i'
   386     0788  3420               	retlw	32	;' '
   387     0789  342A               	retlw	42	;'*'
   388     078A  3400               	retlw	0
   389     078B                     STR_9:
   390     078B  344D               	retlw	77	;'M'
   391     078C  3461               	retlw	97	;'a'
   392     078D  346E               	retlw	110	;'n'
   393     078E  3464               	retlw	100	;'d'
   394     078F  3461               	retlw	97	;'a'
   395     0790  3474               	retlw	116	;'t'
   396     0791  346F               	retlw	111	;'o'
   397     0792  3400               	retlw	0
   398     0779                     
   399                           	psect	cinit
   400     0013                     start_initialization:	
   401                           ; #config settings
   402                           
   403     0013                     __initialization:
   404                           
   405                           ; Initialize objects allocated to BANK0
   406     0013  120A  158A  25C9  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   407     0018  00E9               	movwf	__pdataBANK0& (0+127)
   408     0019  120A  158A  25CA  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   409     001E  00EA               	movwf	(__pdataBANK0+1)& (0+127)
   410     001F  120A  158A  25CB  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   411     0024  00EB               	movwf	(__pdataBANK0+2)& (0+127)
   412                           
   413                           ; Clear objects allocated to BANK1
   414     0025  1383               	bcf	3,7	;select IRP bank0
   415     0026  30A0               	movlw	low __pbssBANK1
   416     0027  0084               	movwf	4
   417     0028  30B0               	movlw	low (__pbssBANK1+16)
   418     0029  120A  158A  25D6  120A  118A  	fcall	clear_ram0
   419                           
   420                           ; Clear objects allocated to BANK0
   421     002E  3020               	movlw	low __pbssBANK0
   422     002F  0084               	movwf	4
   423     0030  3049               	movlw	low (__pbssBANK0+41)
   424     0031  120A  158A  25D6  120A  118A  	fcall	clear_ram0
   425                           
   426                           ; Clear objects allocated to COMMON
   427     0036  01F5               	clrf	__pbssCOMMON& (0+127)
   428     0037  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   429     0038  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   430     0039  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   431                           
   432                           ; Clear objects allocated to BITCOMMON
   433     003A  01F9               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   434     003B                     end_of_initialization:	
   435                           ;End of C runtime variable initialization code
   436                           
   437     003B                     __end_of__initialization:
   438     003B  0183               	clrf	3
   439     003C  120A  118A  283F   	ljmp	_main	;jump to C main() function
   440                           
   441                           	psect	bitbssCOMMON
   442     03C8                     __pbitbssCOMMON:
   443     03C8                     _old_btn:
   444     03C8                     	ds	1
   445                           
   446                           	psect	bssCOMMON
   447     0075                     __pbssCOMMON:
   448     0075                     _old_stato:
   449     0075                     	ds	1
   450     0076                     _stato:
   451     0076                     	ds	1
   452     0077                     _rowScan:
   453     0077                     	ds	1
   454     0078                     _colScan:
   455     0078                     	ds	1
   456                           
   457                           	psect	bssBANK0
   458     0020                     __pbssBANK0:
   459     0020                     _data:
   460     0020                     	ds	6
   461     0026                     _codice:
   462     0026                     	ds	6
   463     002C                     _message:
   464     002C                     	ds	2
   465     002E                     _count:
   466     002E                     	ds	2
   467     0030                     _index:
   468     0030                     	ds	2
   469     0032                     _flag:
   470     0032                     	ds	2
   471     0034                     _stringPosition:
   472     0034                     	ds	2
   473     0036                     _type:
   474     0036                     	ds	1
   475     0037                     _randomNum:
   476     0037                     	ds	1
   477     0038                     _received:
   478     0038                     	ds	1
   479     0039                     _restart:
   480     0039                     	ds	1
   481     003A                     _keyok:
   482     003A                     	ds	1
   483     003B                     _keypressed:
   484     003B                     	ds	1
   485     003C                     _num25:
   486     003C                     	ds	1
   487     003D                     _num24:
   488     003D                     	ds	1
   489     003E                     _num23:
   490     003E                     	ds	1
   491     003F                     _num22:
   492     003F                     	ds	1
   493     0040                     _num21:
   494     0040                     	ds	1
   495     0041                     _num5:
   496     0041                     	ds	1
   497     0042                     _num4:
   498     0042                     	ds	1
   499     0043                     _num3:
   500     0043                     	ds	1
   501     0044                     _num2:
   502     0044                     	ds	1
   503     0045                     _num1:
   504     0045                     	ds	1
   505     0046                     _print_countdown:
   506     0046                     	ds	3
   507                           
   508                           	psect	dataBANK0
   509     0069                     __pdataBANK0:
   510     0069                     _countdown:
   511     0069                     	ds	2
   512     006B                     _id1:
   513     006B                     	ds	1
   514                           
   515                           	psect	bssBANK1
   516     00A0                     __pbssBANK1:
   517     00A0                     _stringa:
   518     00A0                     	ds	16
   519                           
   520                           	psect	clrtext
   521     0DD6                     clear_ram0:	
   522                           ;	Called with FSR containing the base address, and
   523                           ;	W with the last address+1
   524                           
   525     0DD6  0064               	clrwdt	;clear the watchdog before getting into this loop
   526     0DD7                     clrloop0:
   527     0DD7  0180               	clrf	0	;clear RAM location pointed to by FSR
   528     0DD8  0A84               	incf	4,f	;increment pointer
   529     0DD9  0604               	xorwf	4,w	;XOR with final address
   530     0DDA  1903               	btfsc	3,2	;have we reached the end yet?
   531     0DDB  3400               	retlw	0	;all done for this memory range, return
   532     0DDC  0604               	xorwf	4,w	;XOR again to restore value
   533     0DDD  2DD7               	goto	clrloop0	;do the next byte
   534                           
   535                           	psect	cstackCOMMON
   536     0070                     __pcstackCOMMON:
   537     0070                     ?_UART_Init:
   538     0070                     ?_initLCD:	
   539                           ; 1 bytes @ 0x0
   540                           
   541     0070                     ?_Timer0_Init:	
   542                           ; 1 bytes @ 0x0
   543                           
   544     0070                     ?_GenerateRandomNumber:	
   545                           ; 1 bytes @ 0x0
   546                           
   547     0070                     ?_KeyPadReader:	
   548                           ; 1 bytes @ 0x0
   549                           
   550     0070                     ?_UART_Write:	
   551                           ; 1 bytes @ 0x0
   552                           
   553     0070                     ?_RS485_TxEnable:	
   554                           ; 1 bytes @ 0x0
   555                           
   556     0070                     ?_RS485_RxEnable:	
   557                           ; 1 bytes @ 0x0
   558                           
   559     0070                     ?_UART_Read1:	
   560                           ; 1 bytes @ 0x0
   561                           
   562     0070                     ?_UART_ReadFINALE:	
   563                           ; 1 bytes @ 0x0
   564                           
   565     0070                     ?_main:	
   566                           ; 1 bytes @ 0x0
   567                           
   568     0070                     ?_ISR:	
   569                           ; 1 bytes @ 0x0
   570                           
   571     0070                     ??_ISR:	
   572                           ; 1 bytes @ 0x0
   573                           
   574                           
   575                           ; 1 bytes @ 0x0
   576     0070                     	ds	5
   577                           
   578                           	psect	cstackBANK0
   579     0049                     __pcstackBANK0:
   580     0049                     ??_UART_Init:
   581     0049                     ??_Timer0_Init:	
   582                           ; 1 bytes @ 0x0
   583                           
   584     0049                     ?_lcdSend:	
   585                           ; 1 bytes @ 0x0
   586                           
   587     0049                     ??_GenerateRandomNumber:	
   588                           ; 1 bytes @ 0x0
   589                           
   590     0049                     ??_KeyPadReader:	
   591                           ; 1 bytes @ 0x0
   592                           
   593     0049                     ??_UART_Write:	
   594                           ; 1 bytes @ 0x0
   595                           
   596     0049                     ??_RS485_TxEnable:	
   597                           ; 1 bytes @ 0x0
   598                           
   599     0049                     ??_RS485_RxEnable:	
   600                           ; 1 bytes @ 0x0
   601                           
   602     0049                     ?___bmul:	
   603                           ; 1 bytes @ 0x0
   604                           
   605     0049                     ?___awmod:	
   606                           ; 1 bytes @ 0x0
   607                           
   608     0049                     UART_Write@data:	
   609                           ; 2 bytes @ 0x0
   610                           
   611     0049                     lcdSend@tipo:	
   612                           ; 1 bytes @ 0x0
   613                           
   614     0049                     GenerateRandomNumber@randomNum:	
   615                           ; 1 bytes @ 0x0
   616                           
   617     0049                     ___bmul@multiplicand:	
   618                           ; 1 bytes @ 0x0
   619                           
   620     0049                     ___awmod@divisor:	
   621                           ; 1 bytes @ 0x0
   622                           
   623                           
   624                           ; 2 bytes @ 0x0
   625     0049                     	ds	1
   626     004A                     ??_lcdSend:
   627     004A                     ??___bmul:	
   628                           ; 1 bytes @ 0x1
   629                           
   630     004A                     lcdSend@dato:	
   631                           ; 1 bytes @ 0x1
   632                           
   633     004A                     GenerateRandomNumber@count:	
   634                           ; 1 bytes @ 0x1
   635                           
   636                           
   637                           ; 2 bytes @ 0x1
   638     004A                     	ds	1
   639     004B                     ??_initLCD:
   640     004B                     ?_lcdPrint:	
   641                           ; 1 bytes @ 0x2
   642                           
   643     004B                     ___bmul@product:	
   644                           ; 1 bytes @ 0x2
   645                           
   646     004B                     lcdPrint@str:	
   647                           ; 1 bytes @ 0x2
   648                           
   649     004B                     ___awmod@dividend:	
   650                           ; 2 bytes @ 0x2
   651                           
   652                           
   653                           ; 2 bytes @ 0x2
   654     004B                     	ds	1
   655     004C                     ___bmul@multiplier:
   656                           
   657                           ; 1 bytes @ 0x3
   658     004C                     	ds	1
   659     004D                     ??_lcdPrint:
   660     004D                     ?_potenza:	
   661                           ; 1 bytes @ 0x4
   662                           
   663     004D                     ??___awmod:	
   664                           ; 1 bytes @ 0x4
   665                           
   666     004D                     potenza@e:	
   667                           ; 1 bytes @ 0x4
   668                           
   669                           
   670                           ; 1 bytes @ 0x4
   671     004D                     	ds	1
   672     004E                     ??_potenza:
   673     004E                     ___awmod@counter:	
   674                           ; 1 bytes @ 0x5
   675                           
   676                           
   677                           ; 1 bytes @ 0x5
   678     004E                     	ds	1
   679     004F                     potenza@b:
   680     004F                     ___awmod@sign:	
   681                           ; 1 bytes @ 0x6
   682                           
   683                           
   684                           ; 1 bytes @ 0x6
   685     004F                     	ds	1
   686     0050                     lcdPrint@n:
   687     0050                     potenza@i:	
   688                           ; 2 bytes @ 0x7
   689                           
   690                           
   691                           ; 2 bytes @ 0x7
   692     0050                     	ds	2
   693     0052                     potenza@n:
   694                           
   695                           ; 1 bytes @ 0x9
   696     0052                     	ds	1
   697     0053                     ?___awdiv:
   698     0053                     ___awdiv@divisor:	
   699                           ; 2 bytes @ 0xA
   700                           
   701                           
   702                           ; 2 bytes @ 0xA
   703     0053                     	ds	2
   704     0055                     ___awdiv@dividend:
   705                           
   706                           ; 2 bytes @ 0xC
   707     0055                     	ds	2
   708     0057                     ??___awdiv:
   709                           
   710                           ; 1 bytes @ 0xE
   711     0057                     	ds	1
   712     0058                     ___awdiv@counter:
   713                           
   714                           ; 1 bytes @ 0xF
   715     0058                     	ds	1
   716     0059                     ___awdiv@sign:
   717                           
   718                           ; 1 bytes @ 0x10
   719     0059                     	ds	1
   720     005A                     ___awdiv@quotient:
   721                           
   722                           ; 2 bytes @ 0x11
   723     005A                     	ds	2
   724     005C                     ?_intToString:
   725     005C                     intToString@n:	
   726                           ; 1 bytes @ 0x13
   727                           
   728                           
   729                           ; 2 bytes @ 0x13
   730     005C                     	ds	2
   731     005E                     intToString@str:
   732                           
   733                           ; 1 bytes @ 0x15
   734     005E                     	ds	1
   735     005F                     ??_intToString:
   736                           
   737                           ; 1 bytes @ 0x16
   738     005F                     	ds	3
   739     0062                     intToString@t:
   740                           
   741                           ; 1 bytes @ 0x19
   742     0062                     	ds	1
   743     0063                     intToString@cifre:
   744                           
   745                           ; 1 bytes @ 0x1A
   746     0063                     	ds	1
   747     0064                     intToString@i:
   748                           
   749                           ; 1 bytes @ 0x1B
   750     0064                     	ds	1
   751     0065                     ??_UART_Read1:
   752     0065                     ??_UART_ReadFINALE:	
   753                           ; 1 bytes @ 0x1C
   754                           
   755                           
   756                           ; 1 bytes @ 0x1C
   757     0065                     	ds	3
   758     0068                     UART_ReadFINALE@i:
   759     0068                     UART_Read1@count:	
   760                           ; 1 bytes @ 0x1F
   761                           
   762                           
   763                           ; 1 bytes @ 0x1F
   764     0068                     	ds	1
   765     0069                     ??_main:
   766                           
   767                           	psect	maintext
   768     003F                     __pmaintext:	
   769                           ; 1 bytes @ 0x20
   770 ;;
   771 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   772 ;;
   773 ;; *************** function _main *****************
   774 ;; Defined at:
   775 ;;		line 108 in file "main.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;		None
   778 ;; Auto vars:     Size  Location     Type
   779 ;;		None
   780 ;; Return value:  Size  Location     Type
   781 ;;                  1    wreg      void 
   782 ;; Registers used:
   783 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   784 ;; Tracked objects:
   785 ;;		On entry : B00/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   789 ;;      Params:         0       0       0       0       0
   790 ;;      Locals:         0       0       0       0       0
   791 ;;      Temps:          0       0       0       0       0
   792 ;;      Totals:         0       0       0       0       0
   793 ;;Total ram usage:        0 bytes
   794 ;; Hardware stack levels required when called: 6
   795 ;; This function calls:
   796 ;;		_GenerateRandomNumber
   797 ;;		_KeyPadReader
   798 ;;		_RS485_RxEnable
   799 ;;		_RS485_TxEnable
   800 ;;		_Timer0_Init
   801 ;;		_UART_Init
   802 ;;		_UART_Read1
   803 ;;		_UART_ReadFINALE
   804 ;;		_UART_Write
   805 ;;		_initLCD
   806 ;;		_lcdPrint
   807 ;;		_lcdSend
   808 ;; This function is called by:
   809 ;;		Startup code after reset
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813     003F                     _main:	
   814                           ;psect for function _main
   815                           
   816     003F                     l2776:	
   817                           ;incstack = 0
   818                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   819                           
   820                           
   821                           ;main.c: 110:     TRISA=0x00;
   822     003F  1683               	bsf	3,5	;RP0=1, select bank1
   823     0040  1303               	bcf	3,6	;RP1=0, select bank1
   824     0041  0185               	clrf	5	;volatile
   825                           
   826                           ;main.c: 111:  TRISB=0x00;
   827     0042  0186               	clrf	6	;volatile
   828                           
   829                           ;main.c: 112:  TRISC=0x00;
   830     0043  0187               	clrf	7	;volatile
   831                           
   832                           ;main.c: 113:  TRISD=0x00;
   833     0044  0188               	clrf	8	;volatile
   834                           
   835                           ;main.c: 114:     TRISE=0X00;
   836     0045  0189               	clrf	9	;volatile
   837     0046                     l2778:
   838                           
   839                           ;main.c: 115:     UART_Init();
   840     0046  120A  158A  25F7  120A  118A  	fcall	_UART_Init
   841     004B                     l2780:
   842                           
   843                           ;main.c: 116:     initLCD();
   844     004B  120A  118A  2793  120A  118A  	fcall	_initLCD
   845     0050                     l2782:
   846                           
   847                           ;main.c: 117:     Timer0_Init();
   848     0050  120A  158A  25E8  120A  118A  	fcall	_Timer0_Init
   849     0055                     l2784:
   850                           
   851                           ;main.c: 119:     {;main.c: 120:         lcdSend(0x01, 0);
   852     0055  1283               	bcf	3,5	;RP0=0, select bank0
   853     0056  1303               	bcf	3,6	;RP1=0, select bank0
   854     0057  01C9               	clrf	lcdSend@tipo
   855     0058  3001               	movlw	1
   856     0059  120A  158A  2609  120A  118A  	fcall	_lcdSend
   857     005E                     l2786:
   858                           
   859                           ;main.c: 121:         lcdPrint("Premi *");
   860     005E  306A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   861     005F  1283               	bcf	3,5	;RP0=0, select bank0
   862     0060  1303               	bcf	3,6	;RP1=0, select bank0
   863     0061  00CB               	movwf	lcdPrint@str
   864     0062  3080               	movlw	128
   865     0063  00CC               	movwf	lcdPrint@str+1
   866     0064  120A  158A  2678  120A  118A  	fcall	_lcdPrint
   867     0069                     l2788:
   868                           
   869                           ;main.c: 122:         countdown = 180;
   870     0069  30B4               	movlw	180
   871     006A  1283               	bcf	3,5	;RP0=0, select bank0
   872     006B  1303               	bcf	3,6	;RP1=0, select bank0
   873     006C  00E9               	movwf	_countdown
   874     006D  3000               	movlw	0
   875     006E  00EA               	movwf	_countdown+1
   876     006F                     l2790:
   877                           
   878                           ;main.c: 133:         num1 = GenerateRandomNumber();
   879     006F  120A  158A  261E  120A  118A  	fcall	_GenerateRandomNumber
   880     0074  1283               	bcf	3,5	;RP0=0, select bank0
   881     0075  1303               	bcf	3,6	;RP1=0, select bank0
   882     0076  00C5               	movwf	_num1
   883     0077                     l2792:
   884                           
   885                           ;main.c: 134:         num2 = GenerateRandomNumber();
   886     0077  120A  158A  261E  120A  118A  	fcall	_GenerateRandomNumber
   887     007C  1283               	bcf	3,5	;RP0=0, select bank0
   888     007D  1303               	bcf	3,6	;RP1=0, select bank0
   889     007E  00C4               	movwf	_num2
   890     007F                     l2794:
   891                           
   892                           ;main.c: 135:         num3 = GenerateRandomNumber();
   893     007F  120A  158A  261E  120A  118A  	fcall	_GenerateRandomNumber
   894     0084  1283               	bcf	3,5	;RP0=0, select bank0
   895     0085  1303               	bcf	3,6	;RP1=0, select bank0
   896     0086  00C3               	movwf	_num3
   897     0087                     l2796:
   898                           
   899                           ;main.c: 136:         num4 = GenerateRandomNumber();
   900     0087  120A  158A  261E  120A  118A  	fcall	_GenerateRandomNumber
   901     008C  1283               	bcf	3,5	;RP0=0, select bank0
   902     008D  1303               	bcf	3,6	;RP1=0, select bank0
   903     008E  00C2               	movwf	_num4
   904     008F                     l2798:
   905                           
   906                           ;main.c: 137:         num5 = GenerateRandomNumber();
   907     008F  120A  158A  261E  120A  118A  	fcall	_GenerateRandomNumber
   908     0094  1283               	bcf	3,5	;RP0=0, select bank0
   909     0095  1303               	bcf	3,6	;RP1=0, select bank0
   910     0096  00C1               	movwf	_num5
   911                           
   912                           ;main.c: 138:         while (codice[0] == '\0')
   913     0097  28AD               	goto	l2806
   914     0098                     l2800:
   915                           
   916                           ;main.c: 139:         {;main.c: 140:             KeyPadReader();
   917     0098  120A  118A  267D  120A  118A  	fcall	_KeyPadReader
   918     009D                     l2802:
   919                           
   920                           ;main.c: 141:             if (keys[keypressed] == '*'){
   921     009D  1283               	bcf	3,5	;RP0=0, select bank0
   922     009E  1303               	bcf	3,6	;RP1=0, select bank0
   923     009F  083B               	movf	_keypressed,w
   924     00A0  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
   925     00A1  0084               	movwf	4
   926     00A2  120A  118A  2714  120A  118A  	fcall	stringdir
   927     00A7  3A2A               	xorlw	42
   928     00A8  1D03               	skipz
   929     00A9  28AB               	goto	u2911
   930     00AA  28AC               	goto	u2910
   931     00AB                     u2911:
   932     00AB  28AD               	goto	l2806
   933     00AC                     u2910:
   934     00AC  28B2               	goto	l2808
   935     00AD                     l2806:
   936                           
   937                           ;main.c: 138:         while (codice[0] == '\0')
   938     00AD  0826               	movf	_codice,w
   939     00AE  1903               	btfsc	3,2
   940     00AF  28B1               	goto	u2921
   941     00B0  28B2               	goto	u2920
   942     00B1                     u2921:
   943     00B1  2898               	goto	l2800
   944     00B2                     u2920:
   945     00B2                     l2808:
   946                           
   947                           ;main.c: 145:         lcdSend(0x01, 0);
   948     00B2  01C9               	clrf	lcdSend@tipo
   949     00B3  3001               	movlw	1
   950     00B4  120A  158A  2609  120A  118A  	fcall	_lcdSend
   951     00B9                     l2810:
   952                           
   953                           ;main.c: 146:         lcdPrint("Attendere");
   954     00B9  3060               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   955     00BA  1283               	bcf	3,5	;RP0=0, select bank0
   956     00BB  1303               	bcf	3,6	;RP1=0, select bank0
   957     00BC  00CB               	movwf	lcdPrint@str
   958     00BD  3080               	movlw	128
   959     00BE  00CC               	movwf	lcdPrint@str+1
   960     00BF  120A  158A  2678  120A  118A  	fcall	_lcdPrint
   961                           
   962                           ;main.c: 147:         while(num1 != 0x30 && num1 != 0x31 && num1 != 0x32 && num1 != 0x33
      +                           &&
   963     00C4  28CD               	goto	l2814
   964     00C5                     l2812:
   965                           
   966                           ;main.c: 149:               num1 != 0x38 && num1 != 0x39){;main.c: 150:         num1 = G
      +                          enerateRandomNumber();
   967     00C5  120A  158A  261E  120A  118A  	fcall	_GenerateRandomNumber
   968     00CA  1283               	bcf	3,5	;RP0=0, select bank0
   969     00CB  1303               	bcf	3,6	;RP1=0, select bank0
   970     00CC  00C5               	movwf	_num1
   971     00CD                     l2814:
   972                           
   973                           ;main.c: 147:         while(num1 != 0x30 && num1 != 0x31 && num1 != 0x32 && num1 != 0x33
      +                           &&
   974     00CD  3030               	movlw	48
   975     00CE  1283               	bcf	3,5	;RP0=0, select bank0
   976     00CF  1303               	bcf	3,6	;RP1=0, select bank0
   977     00D0  0645               	xorwf	_num1,w
   978     00D1  1903               	btfsc	3,2
   979     00D2  28D4               	goto	u2931
   980     00D3  28D5               	goto	u2930
   981     00D4                     u2931:
   982     00D4  290B               	goto	l2834
   983     00D5                     u2930:
   984     00D5                     l2816:
   985     00D5  3031               	movlw	49
   986     00D6  0645               	xorwf	_num1,w
   987     00D7  1903               	btfsc	3,2
   988     00D8  28DA               	goto	u2941
   989     00D9  28DB               	goto	u2940
   990     00DA                     u2941:
   991     00DA  290B               	goto	l2834
   992     00DB                     u2940:
   993     00DB                     l2818:
   994     00DB  3032               	movlw	50
   995     00DC  0645               	xorwf	_num1,w
   996     00DD  1903               	btfsc	3,2
   997     00DE  28E0               	goto	u2951
   998     00DF  28E1               	goto	u2950
   999     00E0                     u2951:
  1000     00E0  290B               	goto	l2834
  1001     00E1                     u2950:
  1002     00E1                     l2820:
  1003     00E1  3033               	movlw	51
  1004     00E2  0645               	xorwf	_num1,w
  1005     00E3  1903               	btfsc	3,2
  1006     00E4  28E6               	goto	u2961
  1007     00E5  28E7               	goto	u2960
  1008     00E6                     u2961:
  1009     00E6  290B               	goto	l2834
  1010     00E7                     u2960:
  1011     00E7                     l2822:
  1012     00E7  3034               	movlw	52
  1013     00E8  0645               	xorwf	_num1,w
  1014     00E9  1903               	btfsc	3,2
  1015     00EA  28EC               	goto	u2971
  1016     00EB  28ED               	goto	u2970
  1017     00EC                     u2971:
  1018     00EC  290B               	goto	l2834
  1019     00ED                     u2970:
  1020     00ED                     l2824:
  1021     00ED  3035               	movlw	53
  1022     00EE  0645               	xorwf	_num1,w
  1023     00EF  1903               	btfsc	3,2
  1024     00F0  28F2               	goto	u2981
  1025     00F1  28F3               	goto	u2980
  1026     00F2                     u2981:
  1027     00F2  290B               	goto	l2834
  1028     00F3                     u2980:
  1029     00F3                     l2826:
  1030     00F3  3036               	movlw	54
  1031     00F4  0645               	xorwf	_num1,w
  1032     00F5  1903               	btfsc	3,2
  1033     00F6  28F8               	goto	u2991
  1034     00F7  28F9               	goto	u2990
  1035     00F8                     u2991:
  1036     00F8  290B               	goto	l2834
  1037     00F9                     u2990:
  1038     00F9                     l2828:
  1039     00F9  3037               	movlw	55
  1040     00FA  0645               	xorwf	_num1,w
  1041     00FB  1903               	btfsc	3,2
  1042     00FC  28FE               	goto	u3001
  1043     00FD  28FF               	goto	u3000
  1044     00FE                     u3001:
  1045     00FE  290B               	goto	l2834
  1046     00FF                     u3000:
  1047     00FF                     l2830:
  1048     00FF  3038               	movlw	56
  1049     0100  0645               	xorwf	_num1,w
  1050     0101  1903               	btfsc	3,2
  1051     0102  2904               	goto	u3011
  1052     0103  2905               	goto	u3010
  1053     0104                     u3011:
  1054     0104  290B               	goto	l2834
  1055     0105                     u3010:
  1056     0105                     l2832:
  1057     0105  3039               	movlw	57
  1058     0106  0645               	xorwf	_num1,w
  1059     0107  1D03               	btfss	3,2
  1060     0108  290A               	goto	u3021
  1061     0109  290B               	goto	u3020
  1062     010A                     u3021:
  1063     010A  28C5               	goto	l2812
  1064     010B                     u3020:
  1065     010B                     l2834:
  1066                           
  1067                           ;main.c: 152:         lcdSend(0x01, 0);
  1068     010B  01C9               	clrf	lcdSend@tipo
  1069     010C  3001               	movlw	1
  1070     010D  120A  158A  2609  120A  118A  	fcall	_lcdSend
  1071     0112                     l2836:
  1072                           
  1073                           ;main.c: 153:         lcdPrint("Attendere.");
  1074     0112  304A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1075     0113  1283               	bcf	3,5	;RP0=0, select bank0
  1076     0114  1303               	bcf	3,6	;RP1=0, select bank0
  1077     0115  00CB               	movwf	lcdPrint@str
  1078     0116  3080               	movlw	128
  1079     0117  00CC               	movwf	lcdPrint@str+1
  1080     0118  120A  158A  2678  120A  118A  	fcall	_lcdPrint
  1081                           
  1082                           ;main.c: 154:         while(num2 != 0x30 && num2 != 0x31 && num2 != 0x32 && num2 != 0x33
      +                           &&
  1083     011D  2926               	goto	l2840
  1084     011E                     l2838:
  1085                           
  1086                           ;main.c: 156:               num2 != 0x38 && num2 != 0x39){;main.c: 157:         num2 = G
      +                          enerateRandomNumber();
  1087     011E  120A  158A  261E  120A  118A  	fcall	_GenerateRandomNumber
  1088     0123  1283               	bcf	3,5	;RP0=0, select bank0
  1089     0124  1303               	bcf	3,6	;RP1=0, select bank0
  1090     0125  00C4               	movwf	_num2
  1091     0126                     l2840:
  1092                           
  1093                           ;main.c: 154:         while(num2 != 0x30 && num2 != 0x31 && num2 != 0x32 && num2 != 0x33
      +                           &&
  1094     0126  3030               	movlw	48
  1095     0127  1283               	bcf	3,5	;RP0=0, select bank0
  1096     0128  1303               	bcf	3,6	;RP1=0, select bank0
  1097     0129  0644               	xorwf	_num2,w
  1098     012A  1903               	btfsc	3,2
  1099     012B  292D               	goto	u3031
  1100     012C  292E               	goto	u3030
  1101     012D                     u3031:
  1102     012D  2964               	goto	l2860
  1103     012E                     u3030:
  1104     012E                     l2842:
  1105     012E  3031               	movlw	49
  1106     012F  0644               	xorwf	_num2,w
  1107     0130  1903               	btfsc	3,2
  1108     0131  2933               	goto	u3041
  1109     0132  2934               	goto	u3040
  1110     0133                     u3041:
  1111     0133  2964               	goto	l2860
  1112     0134                     u3040:
  1113     0134                     l2844:
  1114     0134  3032               	movlw	50
  1115     0135  0644               	xorwf	_num2,w
  1116     0136  1903               	btfsc	3,2
  1117     0137  2939               	goto	u3051
  1118     0138  293A               	goto	u3050
  1119     0139                     u3051:
  1120     0139  2964               	goto	l2860
  1121     013A                     u3050:
  1122     013A                     l2846:
  1123     013A  3033               	movlw	51
  1124     013B  0644               	xorwf	_num2,w
  1125     013C  1903               	btfsc	3,2
  1126     013D  293F               	goto	u3061
  1127     013E  2940               	goto	u3060
  1128     013F                     u3061:
  1129     013F  2964               	goto	l2860
  1130     0140                     u3060:
  1131     0140                     l2848:
  1132     0140  3034               	movlw	52
  1133     0141  0644               	xorwf	_num2,w
  1134     0142  1903               	btfsc	3,2
  1135     0143  2945               	goto	u3071
  1136     0144  2946               	goto	u3070
  1137     0145                     u3071:
  1138     0145  2964               	goto	l2860
  1139     0146                     u3070:
  1140     0146                     l2850:
  1141     0146  3035               	movlw	53
  1142     0147  0644               	xorwf	_num2,w
  1143     0148  1903               	btfsc	3,2
  1144     0149  294B               	goto	u3081
  1145     014A  294C               	goto	u3080
  1146     014B                     u3081:
  1147     014B  2964               	goto	l2860
  1148     014C                     u3080:
  1149     014C                     l2852:
  1150     014C  3036               	movlw	54
  1151     014D  0644               	xorwf	_num2,w
  1152     014E  1903               	btfsc	3,2
  1153     014F  2951               	goto	u3091
  1154     0150  2952               	goto	u3090
  1155     0151                     u3091:
  1156     0151  2964               	goto	l2860
  1157     0152                     u3090:
  1158     0152                     l2854:
  1159     0152  3037               	movlw	55
  1160     0153  0644               	xorwf	_num2,w
  1161     0154  1903               	btfsc	3,2
  1162     0155  2957               	goto	u3101
  1163     0156  2958               	goto	u3100
  1164     0157                     u3101:
  1165     0157  2964               	goto	l2860
  1166     0158                     u3100:
  1167     0158                     l2856:
  1168     0158  3038               	movlw	56
  1169     0159  0644               	xorwf	_num2,w
  1170     015A  1903               	btfsc	3,2
  1171     015B  295D               	goto	u3111
  1172     015C  295E               	goto	u3110
  1173     015D                     u3111:
  1174     015D  2964               	goto	l2860
  1175     015E                     u3110:
  1176     015E                     l2858:
  1177     015E  3039               	movlw	57
  1178     015F  0644               	xorwf	_num2,w
  1179     0160  1D03               	btfss	3,2
  1180     0161  2963               	goto	u3121
  1181     0162  2964               	goto	u3120
  1182     0163                     u3121:
  1183     0163  291E               	goto	l2838
  1184     0164                     u3120:
  1185     0164                     l2860:
  1186                           
  1187                           ;main.c: 159:         lcdSend(0x01, 0);
  1188     0164  01C9               	clrf	lcdSend@tipo
  1189     0165  3001               	movlw	1
  1190     0166  120A  158A  2609  120A  118A  	fcall	_lcdSend
  1191     016B                     l2862:
  1192                           
  1193                           ;main.c: 160:         lcdPrint("Attendere..");
  1194     016B  303E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1195     016C  1283               	bcf	3,5	;RP0=0, select bank0
  1196     016D  1303               	bcf	3,6	;RP1=0, select bank0
  1197     016E  00CB               	movwf	lcdPrint@str
  1198     016F  3080               	movlw	128
  1199     0170  00CC               	movwf	lcdPrint@str+1
  1200     0171  120A  158A  2678  120A  118A  	fcall	_lcdPrint
  1201                           
  1202                           ;main.c: 161:         while(num3 != 0x30 && num3 != 0x31 && num3 != 0x32 && num3 != 0x33
      +                           &&
  1203     0176  297F               	goto	l2866
  1204     0177                     l2864:
  1205                           
  1206                           ;main.c: 163:               num3 != 0x38 && num3 != 0x39){;main.c: 164:         num3 = G
      +                          enerateRandomNumber();
  1207     0177  120A  158A  261E  120A  118A  	fcall	_GenerateRandomNumber
  1208     017C  1283               	bcf	3,5	;RP0=0, select bank0
  1209     017D  1303               	bcf	3,6	;RP1=0, select bank0
  1210     017E  00C3               	movwf	_num3
  1211     017F                     l2866:
  1212                           
  1213                           ;main.c: 161:         while(num3 != 0x30 && num3 != 0x31 && num3 != 0x32 && num3 != 0x33
      +                           &&
  1214     017F  3030               	movlw	48
  1215     0180  1283               	bcf	3,5	;RP0=0, select bank0
  1216     0181  1303               	bcf	3,6	;RP1=0, select bank0
  1217     0182  0643               	xorwf	_num3,w
  1218     0183  1903               	btfsc	3,2
  1219     0184  2986               	goto	u3131
  1220     0185  2987               	goto	u3130
  1221     0186                     u3131:
  1222     0186  29BD               	goto	l2886
  1223     0187                     u3130:
  1224     0187                     l2868:
  1225     0187  3031               	movlw	49
  1226     0188  0643               	xorwf	_num3,w
  1227     0189  1903               	btfsc	3,2
  1228     018A  298C               	goto	u3141
  1229     018B  298D               	goto	u3140
  1230     018C                     u3141:
  1231     018C  29BD               	goto	l2886
  1232     018D                     u3140:
  1233     018D                     l2870:
  1234     018D  3032               	movlw	50
  1235     018E  0643               	xorwf	_num3,w
  1236     018F  1903               	btfsc	3,2
  1237     0190  2992               	goto	u3151
  1238     0191  2993               	goto	u3150
  1239     0192                     u3151:
  1240     0192  29BD               	goto	l2886
  1241     0193                     u3150:
  1242     0193                     l2872:
  1243     0193  3033               	movlw	51
  1244     0194  0643               	xorwf	_num3,w
  1245     0195  1903               	btfsc	3,2
  1246     0196  2998               	goto	u3161
  1247     0197  2999               	goto	u3160
  1248     0198                     u3161:
  1249     0198  29BD               	goto	l2886
  1250     0199                     u3160:
  1251     0199                     l2874:
  1252     0199  3034               	movlw	52
  1253     019A  0643               	xorwf	_num3,w
  1254     019B  1903               	btfsc	3,2
  1255     019C  299E               	goto	u3171
  1256     019D  299F               	goto	u3170
  1257     019E                     u3171:
  1258     019E  29BD               	goto	l2886
  1259     019F                     u3170:
  1260     019F                     l2876:
  1261     019F  3035               	movlw	53
  1262     01A0  0643               	xorwf	_num3,w
  1263     01A1  1903               	btfsc	3,2
  1264     01A2  29A4               	goto	u3181
  1265     01A3  29A5               	goto	u3180
  1266     01A4                     u3181:
  1267     01A4  29BD               	goto	l2886
  1268     01A5                     u3180:
  1269     01A5                     l2878:
  1270     01A5  3036               	movlw	54
  1271     01A6  0643               	xorwf	_num3,w
  1272     01A7  1903               	btfsc	3,2
  1273     01A8  29AA               	goto	u3191
  1274     01A9  29AB               	goto	u3190
  1275     01AA                     u3191:
  1276     01AA  29BD               	goto	l2886
  1277     01AB                     u3190:
  1278     01AB                     l2880:
  1279     01AB  3037               	movlw	55
  1280     01AC  0643               	xorwf	_num3,w
  1281     01AD  1903               	btfsc	3,2
  1282     01AE  29B0               	goto	u3201
  1283     01AF  29B1               	goto	u3200
  1284     01B0                     u3201:
  1285     01B0  29BD               	goto	l2886
  1286     01B1                     u3200:
  1287     01B1                     l2882:
  1288     01B1  3038               	movlw	56
  1289     01B2  0643               	xorwf	_num3,w
  1290     01B3  1903               	btfsc	3,2
  1291     01B4  29B6               	goto	u3211
  1292     01B5  29B7               	goto	u3210
  1293     01B6                     u3211:
  1294     01B6  29BD               	goto	l2886
  1295     01B7                     u3210:
  1296     01B7                     l2884:
  1297     01B7  3039               	movlw	57
  1298     01B8  0643               	xorwf	_num3,w
  1299     01B9  1D03               	btfss	3,2
  1300     01BA  29BC               	goto	u3221
  1301     01BB  29BD               	goto	u3220
  1302     01BC                     u3221:
  1303     01BC  2977               	goto	l2864
  1304     01BD                     u3220:
  1305     01BD                     l2886:
  1306                           
  1307                           ;main.c: 166:         lcdSend(0x01, 0);
  1308     01BD  01C9               	clrf	lcdSend@tipo
  1309     01BE  3001               	movlw	1
  1310     01BF  120A  158A  2609  120A  118A  	fcall	_lcdSend
  1311     01C4                     l2888:
  1312                           
  1313                           ;main.c: 167:         lcdPrint("Attendere...");
  1314     01C4  3031               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1315     01C5  1283               	bcf	3,5	;RP0=0, select bank0
  1316     01C6  1303               	bcf	3,6	;RP1=0, select bank0
  1317     01C7  00CB               	movwf	lcdPrint@str
  1318     01C8  3080               	movlw	128
  1319     01C9  00CC               	movwf	lcdPrint@str+1
  1320     01CA  120A  158A  2678  120A  118A  	fcall	_lcdPrint
  1321                           
  1322                           ;main.c: 168:         while(num4 != 0x30 && num4 != 0x31 && num4 != 0x32 && num4 != 0x33
      +                           &&
  1323     01CF  29D8               	goto	l2892
  1324     01D0                     l2890:
  1325                           
  1326                           ;main.c: 170:               num4 != 0x38 && num4 != 0x39){;main.c: 171:         num4 = G
      +                          enerateRandomNumber();
  1327     01D0  120A  158A  261E  120A  118A  	fcall	_GenerateRandomNumber
  1328     01D5  1283               	bcf	3,5	;RP0=0, select bank0
  1329     01D6  1303               	bcf	3,6	;RP1=0, select bank0
  1330     01D7  00C2               	movwf	_num4
  1331     01D8                     l2892:
  1332                           
  1333                           ;main.c: 168:         while(num4 != 0x30 && num4 != 0x31 && num4 != 0x32 && num4 != 0x33
      +                           &&
  1334     01D8  3030               	movlw	48
  1335     01D9  1283               	bcf	3,5	;RP0=0, select bank0
  1336     01DA  1303               	bcf	3,6	;RP1=0, select bank0
  1337     01DB  0642               	xorwf	_num4,w
  1338     01DC  1903               	btfsc	3,2
  1339     01DD  29DF               	goto	u3231
  1340     01DE  29E0               	goto	u3230
  1341     01DF                     u3231:
  1342     01DF  2A16               	goto	l2912
  1343     01E0                     u3230:
  1344     01E0                     l2894:
  1345     01E0  3031               	movlw	49
  1346     01E1  0642               	xorwf	_num4,w
  1347     01E2  1903               	btfsc	3,2
  1348     01E3  29E5               	goto	u3241
  1349     01E4  29E6               	goto	u3240
  1350     01E5                     u3241:
  1351     01E5  2A16               	goto	l2912
  1352     01E6                     u3240:
  1353     01E6                     l2896:
  1354     01E6  3032               	movlw	50
  1355     01E7  0642               	xorwf	_num4,w
  1356     01E8  1903               	btfsc	3,2
  1357     01E9  29EB               	goto	u3251
  1358     01EA  29EC               	goto	u3250
  1359     01EB                     u3251:
  1360     01EB  2A16               	goto	l2912
  1361     01EC                     u3250:
  1362     01EC                     l2898:
  1363     01EC  3033               	movlw	51
  1364     01ED  0642               	xorwf	_num4,w
  1365     01EE  1903               	btfsc	3,2
  1366     01EF  29F1               	goto	u3261
  1367     01F0  29F2               	goto	u3260
  1368     01F1                     u3261:
  1369     01F1  2A16               	goto	l2912
  1370     01F2                     u3260:
  1371     01F2                     l2900:
  1372     01F2  3034               	movlw	52
  1373     01F3  0642               	xorwf	_num4,w
  1374     01F4  1903               	btfsc	3,2
  1375     01F5  29F7               	goto	u3271
  1376     01F6  29F8               	goto	u3270
  1377     01F7                     u3271:
  1378     01F7  2A16               	goto	l2912
  1379     01F8                     u3270:
  1380     01F8                     l2902:
  1381     01F8  3035               	movlw	53
  1382     01F9  0642               	xorwf	_num4,w
  1383     01FA  1903               	btfsc	3,2
  1384     01FB  29FD               	goto	u3281
  1385     01FC  29FE               	goto	u3280
  1386     01FD                     u3281:
  1387     01FD  2A16               	goto	l2912
  1388     01FE                     u3280:
  1389     01FE                     l2904:
  1390     01FE  3036               	movlw	54
  1391     01FF  0642               	xorwf	_num4,w
  1392     0200  1903               	btfsc	3,2
  1393     0201  2A03               	goto	u3291
  1394     0202  2A04               	goto	u3290
  1395     0203                     u3291:
  1396     0203  2A16               	goto	l2912
  1397     0204                     u3290:
  1398     0204                     l2906:
  1399     0204  3037               	movlw	55
  1400     0205  0642               	xorwf	_num4,w
  1401     0206  1903               	btfsc	3,2
  1402     0207  2A09               	goto	u3301
  1403     0208  2A0A               	goto	u3300
  1404     0209                     u3301:
  1405     0209  2A16               	goto	l2912
  1406     020A                     u3300:
  1407     020A                     l2908:
  1408     020A  3038               	movlw	56
  1409     020B  0642               	xorwf	_num4,w
  1410     020C  1903               	btfsc	3,2
  1411     020D  2A0F               	goto	u3311
  1412     020E  2A10               	goto	u3310
  1413     020F                     u3311:
  1414     020F  2A16               	goto	l2912
  1415     0210                     u3310:
  1416     0210                     l2910:
  1417     0210  3039               	movlw	57
  1418     0211  0642               	xorwf	_num4,w
  1419     0212  1D03               	btfss	3,2
  1420     0213  2A15               	goto	u3321
  1421     0214  2A16               	goto	u3320
  1422     0215                     u3321:
  1423     0215  29D0               	goto	l2890
  1424     0216                     u3320:
  1425     0216                     l2912:
  1426                           
  1427                           ;main.c: 173:         lcdSend(0x01, 0);
  1428     0216  01C9               	clrf	lcdSend@tipo
  1429     0217  3001               	movlw	1
  1430     0218  120A  158A  2609  120A  118A  	fcall	_lcdSend
  1431     021D                     l2914:
  1432                           
  1433                           ;main.c: 174:         lcdPrint("Attendere....");
  1434     021D  3023               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1435     021E  1283               	bcf	3,5	;RP0=0, select bank0
  1436     021F  1303               	bcf	3,6	;RP1=0, select bank0
  1437     0220  00CB               	movwf	lcdPrint@str
  1438     0221  3080               	movlw	128
  1439     0222  00CC               	movwf	lcdPrint@str+1
  1440     0223  120A  158A  2678  120A  118A  	fcall	_lcdPrint
  1441                           
  1442                           ;main.c: 175:         while(num5 != 0x30 && num5 != 0x31 && num5 != 0x32 && num5 != 0x33
      +                           &&
  1443     0228  2A31               	goto	l2918
  1444     0229                     l2916:
  1445                           
  1446                           ;main.c: 177:               num5 != 0x38 && num5 != 0x39){;main.c: 178:         num5 = G
      +                          enerateRandomNumber();
  1447     0229  120A  158A  261E  120A  118A  	fcall	_GenerateRandomNumber
  1448     022E  1283               	bcf	3,5	;RP0=0, select bank0
  1449     022F  1303               	bcf	3,6	;RP1=0, select bank0
  1450     0230  00C1               	movwf	_num5
  1451     0231                     l2918:
  1452                           
  1453                           ;main.c: 175:         while(num5 != 0x30 && num5 != 0x31 && num5 != 0x32 && num5 != 0x33
      +                           &&
  1454     0231  3030               	movlw	48
  1455     0232  1283               	bcf	3,5	;RP0=0, select bank0
  1456     0233  1303               	bcf	3,6	;RP1=0, select bank0
  1457     0234  0641               	xorwf	_num5,w
  1458     0235  1903               	btfsc	3,2
  1459     0236  2A38               	goto	u3331
  1460     0237  2A39               	goto	u3330
  1461     0238                     u3331:
  1462     0238  2A6F               	goto	l2938
  1463     0239                     u3330:
  1464     0239                     l2920:
  1465     0239  3031               	movlw	49
  1466     023A  0641               	xorwf	_num5,w
  1467     023B  1903               	btfsc	3,2
  1468     023C  2A3E               	goto	u3341
  1469     023D  2A3F               	goto	u3340
  1470     023E                     u3341:
  1471     023E  2A6F               	goto	l2938
  1472     023F                     u3340:
  1473     023F                     l2922:
  1474     023F  3032               	movlw	50
  1475     0240  0641               	xorwf	_num5,w
  1476     0241  1903               	btfsc	3,2
  1477     0242  2A44               	goto	u3351
  1478     0243  2A45               	goto	u3350
  1479     0244                     u3351:
  1480     0244  2A6F               	goto	l2938
  1481     0245                     u3350:
  1482     0245                     l2924:
  1483     0245  3033               	movlw	51
  1484     0246  0641               	xorwf	_num5,w
  1485     0247  1903               	btfsc	3,2
  1486     0248  2A4A               	goto	u3361
  1487     0249  2A4B               	goto	u3360
  1488     024A                     u3361:
  1489     024A  2A6F               	goto	l2938
  1490     024B                     u3360:
  1491     024B                     l2926:
  1492     024B  3034               	movlw	52
  1493     024C  0641               	xorwf	_num5,w
  1494     024D  1903               	btfsc	3,2
  1495     024E  2A50               	goto	u3371
  1496     024F  2A51               	goto	u3370
  1497     0250                     u3371:
  1498     0250  2A6F               	goto	l2938
  1499     0251                     u3370:
  1500     0251                     l2928:
  1501     0251  3035               	movlw	53
  1502     0252  0641               	xorwf	_num5,w
  1503     0253  1903               	btfsc	3,2
  1504     0254  2A56               	goto	u3381
  1505     0255  2A57               	goto	u3380
  1506     0256                     u3381:
  1507     0256  2A6F               	goto	l2938
  1508     0257                     u3380:
  1509     0257                     l2930:
  1510     0257  3036               	movlw	54
  1511     0258  0641               	xorwf	_num5,w
  1512     0259  1903               	btfsc	3,2
  1513     025A  2A5C               	goto	u3391
  1514     025B  2A5D               	goto	u3390
  1515     025C                     u3391:
  1516     025C  2A6F               	goto	l2938
  1517     025D                     u3390:
  1518     025D                     l2932:
  1519     025D  3037               	movlw	55
  1520     025E  0641               	xorwf	_num5,w
  1521     025F  1903               	btfsc	3,2
  1522     0260  2A62               	goto	u3401
  1523     0261  2A63               	goto	u3400
  1524     0262                     u3401:
  1525     0262  2A6F               	goto	l2938
  1526     0263                     u3400:
  1527     0263                     l2934:
  1528     0263  3038               	movlw	56
  1529     0264  0641               	xorwf	_num5,w
  1530     0265  1903               	btfsc	3,2
  1531     0266  2A68               	goto	u3411
  1532     0267  2A69               	goto	u3410
  1533     0268                     u3411:
  1534     0268  2A6F               	goto	l2938
  1535     0269                     u3410:
  1536     0269                     l2936:
  1537     0269  3039               	movlw	57
  1538     026A  0641               	xorwf	_num5,w
  1539     026B  1D03               	btfss	3,2
  1540     026C  2A6E               	goto	u3421
  1541     026D  2A6F               	goto	u3420
  1542     026E                     u3421:
  1543     026E  2A29               	goto	l2916
  1544     026F                     u3420:
  1545     026F                     l2938:
  1546                           
  1547                           ;main.c: 180:         UART_Write(id1);
  1548     026F  3030               	movlw	48
  1549     0270  120A  158A  25DE  120A  118A  	fcall	_UART_Write
  1550     0275                     l2940:
  1551                           
  1552                           ;main.c: 181:         type = 0x01;
  1553     0275  1283               	bcf	3,5	;RP0=0, select bank0
  1554     0276  1303               	bcf	3,6	;RP1=0, select bank0
  1555     0277  01B6               	clrf	_type
  1556     0278  0AB6               	incf	_type,f
  1557     0279                     l2942:
  1558                           
  1559                           ;main.c: 182:         RS485_TxEnable();
  1560     0279  120A  158A  25D1  120A  118A  	fcall	_RS485_TxEnable
  1561     027E                     l2944:
  1562                           
  1563                           ;main.c: 183:         UART_Write(type);
  1564     027E  3001               	movlw	1
  1565     027F  120A  158A  25DE  120A  118A  	fcall	_UART_Write
  1566     0284                     l2946:
  1567                           
  1568                           ;main.c: 184:         UART_Write(num1);
  1569     0284  1283               	bcf	3,5	;RP0=0, select bank0
  1570     0285  1303               	bcf	3,6	;RP1=0, select bank0
  1571     0286  0845               	movf	_num1,w
  1572     0287  120A  158A  25DE  120A  118A  	fcall	_UART_Write
  1573     028C                     l2948:
  1574                           
  1575                           ;main.c: 185:         UART_Write(num2);
  1576     028C  1283               	bcf	3,5	;RP0=0, select bank0
  1577     028D  1303               	bcf	3,6	;RP1=0, select bank0
  1578     028E  0844               	movf	_num2,w
  1579     028F  120A  158A  25DE  120A  118A  	fcall	_UART_Write
  1580     0294                     l2950:
  1581                           
  1582                           ;main.c: 186:         UART_Write(num3);
  1583     0294  1283               	bcf	3,5	;RP0=0, select bank0
  1584     0295  1303               	bcf	3,6	;RP1=0, select bank0
  1585     0296  0843               	movf	_num3,w
  1586     0297  120A  158A  25DE  120A  118A  	fcall	_UART_Write
  1587     029C                     l2952:
  1588                           
  1589                           ;main.c: 187:         UART_Write(num4);
  1590     029C  1283               	bcf	3,5	;RP0=0, select bank0
  1591     029D  1303               	bcf	3,6	;RP1=0, select bank0
  1592     029E  0842               	movf	_num4,w
  1593     029F  120A  158A  25DE  120A  118A  	fcall	_UART_Write
  1594     02A4                     l2954:
  1595                           
  1596                           ;main.c: 188:         UART_Write(num5);
  1597     02A4  1283               	bcf	3,5	;RP0=0, select bank0
  1598     02A5  1303               	bcf	3,6	;RP1=0, select bank0
  1599     02A6  0841               	movf	_num5,w
  1600     02A7  120A  158A  25DE  120A  118A  	fcall	_UART_Write
  1601     02AC                     l2956:
  1602                           
  1603                           ;main.c: 189:         UART_Write('*');
  1604     02AC  302A               	movlw	42
  1605     02AD  120A  158A  25DE  120A  118A  	fcall	_UART_Write
  1606     02B2                     l2958:
  1607                           
  1608                           ;main.c: 190:         lcdSend(0x01, 0);
  1609     02B2  1283               	bcf	3,5	;RP0=0, select bank0
  1610     02B3  1303               	bcf	3,6	;RP1=0, select bank0
  1611     02B4  01C9               	clrf	lcdSend@tipo
  1612     02B5  3001               	movlw	1
  1613     02B6  120A  158A  2609  120A  118A  	fcall	_lcdSend
  1614     02BB                     l2960:
  1615                           
  1616                           ;main.c: 191:         lcdSend(num1, 1);
  1617     02BB  1283               	bcf	3,5	;RP0=0, select bank0
  1618     02BC  1303               	bcf	3,6	;RP1=0, select bank0
  1619     02BD  01C9               	clrf	lcdSend@tipo
  1620     02BE  0AC9               	incf	lcdSend@tipo,f
  1621     02BF  0845               	movf	_num1,w
  1622     02C0  120A  158A  2609  120A  118A  	fcall	_lcdSend
  1623     02C5                     l2962:
  1624                           
  1625                           ;main.c: 192:         lcdSend(num2, 1);
  1626     02C5  1283               	bcf	3,5	;RP0=0, select bank0
  1627     02C6  1303               	bcf	3,6	;RP1=0, select bank0
  1628     02C7  01C9               	clrf	lcdSend@tipo
  1629     02C8  0AC9               	incf	lcdSend@tipo,f
  1630     02C9  0844               	movf	_num2,w
  1631     02CA  120A  158A  2609  120A  118A  	fcall	_lcdSend
  1632     02CF                     l2964:
  1633                           
  1634                           ;main.c: 193:         lcdSend(num3, 1);
  1635     02CF  1283               	bcf	3,5	;RP0=0, select bank0
  1636     02D0  1303               	bcf	3,6	;RP1=0, select bank0
  1637     02D1  01C9               	clrf	lcdSend@tipo
  1638     02D2  0AC9               	incf	lcdSend@tipo,f
  1639     02D3  0843               	movf	_num3,w
  1640     02D4  120A  158A  2609  120A  118A  	fcall	_lcdSend
  1641     02D9                     l2966:
  1642                           
  1643                           ;main.c: 194:         lcdSend(num4, 1);
  1644     02D9  1283               	bcf	3,5	;RP0=0, select bank0
  1645     02DA  1303               	bcf	3,6	;RP1=0, select bank0
  1646     02DB  01C9               	clrf	lcdSend@tipo
  1647     02DC  0AC9               	incf	lcdSend@tipo,f
  1648     02DD  0842               	movf	_num4,w
  1649     02DE  120A  158A  2609  120A  118A  	fcall	_lcdSend
  1650     02E3                     l2968:
  1651                           
  1652                           ;main.c: 195:         lcdSend(num5, 1);
  1653     02E3  1283               	bcf	3,5	;RP0=0, select bank0
  1654     02E4  1303               	bcf	3,6	;RP1=0, select bank0
  1655     02E5  01C9               	clrf	lcdSend@tipo
  1656     02E6  0AC9               	incf	lcdSend@tipo,f
  1657     02E7  0841               	movf	_num5,w
  1658     02E8  120A  158A  2609  120A  118A  	fcall	_lcdSend
  1659     02ED                     l2970:
  1660                           
  1661                           ;main.c: 196:         keypressed = 0;
  1662     02ED  1283               	bcf	3,5	;RP0=0, select bank0
  1663     02EE  1303               	bcf	3,6	;RP1=0, select bank0
  1664     02EF  01BB               	clrf	_keypressed
  1665     02F0                     l2972:
  1666                           
  1667                           ;main.c: 197:         RS485_RxEnable();
  1668     02F0  120A  158A  25CC  120A  118A  	fcall	_RS485_RxEnable
  1669     02F5                     l2974:
  1670                           
  1671                           ;main.c: 198:         flag = 1;
  1672     02F5  3001               	movlw	1
  1673     02F6  1283               	bcf	3,5	;RP0=0, select bank0
  1674     02F7  1303               	bcf	3,6	;RP1=0, select bank0
  1675     02F8  00B2               	movwf	_flag
  1676     02F9  3000               	movlw	0
  1677     02FA  00B3               	movwf	_flag+1
  1678     02FB                     l2976:
  1679                           
  1680                           ;main.c: 199:         UART_Read1();
  1681     02FB  120A  118A  2326  120A  118A  	fcall	_UART_Read1
  1682     0300                     l2978:
  1683                           
  1684                           ;main.c: 200:         lcdSend(0x01, 0);
  1685     0300  1283               	bcf	3,5	;RP0=0, select bank0
  1686     0301  1303               	bcf	3,6	;RP1=0, select bank0
  1687     0302  01C9               	clrf	lcdSend@tipo
  1688     0303  3001               	movlw	1
  1689     0304  120A  158A  2609  120A  118A  	fcall	_lcdSend
  1690     0309                     l2980:
  1691                           
  1692                           ;main.c: 201:         lcdSend(0xC0, 0);
  1693     0309  1283               	bcf	3,5	;RP0=0, select bank0
  1694     030A  1303               	bcf	3,6	;RP1=0, select bank0
  1695     030B  01C9               	clrf	lcdSend@tipo
  1696     030C  30C0               	movlw	192
  1697     030D  120A  158A  2609  120A  118A  	fcall	_lcdSend
  1698     0312                     l2982:
  1699                           
  1700                           ;main.c: 202:         lcdPrint("Attendere");
  1701     0312  3060               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1702     0313  1283               	bcf	3,5	;RP0=0, select bank0
  1703     0314  1303               	bcf	3,6	;RP1=0, select bank0
  1704     0315  00CB               	movwf	lcdPrint@str
  1705     0316  3080               	movlw	128
  1706     0317  00CC               	movwf	lcdPrint@str+1
  1707     0318  120A  158A  2678  120A  118A  	fcall	_lcdPrint
  1708     031D                     l2984:
  1709                           
  1710                           ;main.c: 203:         UART_ReadFINALE();
  1711     031D  120A  118A  2519  120A  118A  	fcall	_UART_ReadFINALE
  1712     0322  2855               	goto	l2784
  1713     0323  120A  118A  2810   	ljmp	start
  1714     0326                     __end_of_main:
  1715                           
  1716                           	psect	text1
  1717     0793                     __ptext1:	
  1718 ;; *************** function _initLCD *****************
  1719 ;; Defined at:
  1720 ;;		line 347 in file "main.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;		None
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;		None
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      void 
  1727 ;; Registers used:
  1728 ;;		wreg, status,2, status,0, pclath, cstack
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1734 ;;      Params:         0       0       0       0       0
  1735 ;;      Locals:         0       0       0       0       0
  1736 ;;      Temps:          0       2       0       0       0
  1737 ;;      Totals:         0       2       0       0       0
  1738 ;;Total ram usage:        2 bytes
  1739 ;; Hardware stack levels used: 1
  1740 ;; Hardware stack levels required when called: 3
  1741 ;; This function calls:
  1742 ;;		_lcdSend
  1743 ;; This function is called by:
  1744 ;;		_main
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747                           
  1748     0793                     _initLCD:	
  1749                           ;psect for function _initLCD
  1750                           
  1751     0793                     l2488:	
  1752                           ;incstack = 0
  1753                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  1754                           
  1755                           
  1756                           ;main.c: 348:     PORTEbits.RE2 = 0;
  1757     0793  1283               	bcf	3,5	;RP0=0, select bank0
  1758     0794  1303               	bcf	3,6	;RP1=0, select bank0
  1759     0795  1109               	bcf	9,2	;volatile
  1760                           
  1761                           ;main.c: 349:     PORTEbits.RE1 = 0;
  1762     0796  1089               	bcf	9,1	;volatile
  1763     0797                     l2490:
  1764                           
  1765                           ;main.c: 350:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1766     0797  3034               	movlw	52
  1767     0798  1283               	bcf	3,5	;RP0=0, select bank0
  1768     0799  1303               	bcf	3,6	;RP1=0, select bank0
  1769     079A  00CC               	movwf	??_initLCD+1
  1770     079B  30F1               	movlw	241
  1771     079C  00CB               	movwf	??_initLCD
  1772     079D                     u3437:
  1773     079D  0BCB               	decfsz	??_initLCD,f
  1774     079E  2F9D               	goto	u3437
  1775     079F  0BCC               	decfsz	??_initLCD+1,f
  1776     07A0  2F9D               	goto	u3437
  1777     07A1                     l2492:
  1778                           
  1779                           ;main.c: 351:     PORTEbits.RE1 = 1;
  1780     07A1  1283               	bcf	3,5	;RP0=0, select bank0
  1781     07A2  1303               	bcf	3,6	;RP1=0, select bank0
  1782     07A3  1489               	bsf	9,1	;volatile
  1783     07A4                     l2494:
  1784                           
  1785                           ;main.c: 352:     lcdSend(0x38, 0);
  1786     07A4  01C9               	clrf	lcdSend@tipo
  1787     07A5  3038               	movlw	56
  1788     07A6  120A  158A  2609  120A  118A  	fcall	_lcdSend
  1789     07AB                     l2496:
  1790                           
  1791                           ;main.c: 353:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1792     07AB  300D               	movlw	13
  1793     07AC  1283               	bcf	3,5	;RP0=0, select bank0
  1794     07AD  1303               	bcf	3,6	;RP1=0, select bank0
  1795     07AE  00CC               	movwf	??_initLCD+1
  1796     07AF  30FB               	movlw	251
  1797     07B0  00CB               	movwf	??_initLCD
  1798     07B1                     u3447:
  1799     07B1  0BCB               	decfsz	??_initLCD,f
  1800     07B2  2FB1               	goto	u3447
  1801     07B3  0BCC               	decfsz	??_initLCD+1,f
  1802     07B4  2FB1               	goto	u3447
  1803                           
  1804                           ;main.c: 354:     lcdSend(0x38, 0);
  1805     07B5  1283               	bcf	3,5	;RP0=0, select bank0
  1806     07B6  1303               	bcf	3,6	;RP1=0, select bank0
  1807     07B7  01C9               	clrf	lcdSend@tipo
  1808     07B8  3038               	movlw	56
  1809     07B9  120A  158A  2609  120A  118A  	fcall	_lcdSend
  1810     07BE                     l2498:
  1811                           
  1812                           ;main.c: 355:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1813     07BE  3003               	movlw	3
  1814     07BF  1283               	bcf	3,5	;RP0=0, select bank0
  1815     07C0  1303               	bcf	3,6	;RP1=0, select bank0
  1816     07C1  00CC               	movwf	??_initLCD+1
  1817     07C2  3097               	movlw	151
  1818     07C3  00CB               	movwf	??_initLCD
  1819     07C4                     u3457:
  1820     07C4  0BCB               	decfsz	??_initLCD,f
  1821     07C5  2FC4               	goto	u3457
  1822     07C6  0BCC               	decfsz	??_initLCD+1,f
  1823     07C7  2FC4               	goto	u3457
  1824     07C8                     l2500:
  1825                           
  1826                           ;main.c: 356:     lcdSend(0x38, 0);
  1827     07C8  1283               	bcf	3,5	;RP0=0, select bank0
  1828     07C9  1303               	bcf	3,6	;RP1=0, select bank0
  1829     07CA  01C9               	clrf	lcdSend@tipo
  1830     07CB  3038               	movlw	56
  1831     07CC  120A  158A  2609  120A  118A  	fcall	_lcdSend
  1832     07D1                     l2502:
  1833                           
  1834                           ;main.c: 357:     lcdSend(0x08, 0);
  1835     07D1  1283               	bcf	3,5	;RP0=0, select bank0
  1836     07D2  1303               	bcf	3,6	;RP1=0, select bank0
  1837     07D3  01C9               	clrf	lcdSend@tipo
  1838     07D4  3008               	movlw	8
  1839     07D5  120A  158A  2609  120A  118A  	fcall	_lcdSend
  1840     07DA                     l2504:
  1841                           
  1842                           ;main.c: 358:     lcdSend(0x0F, 0);
  1843     07DA  1283               	bcf	3,5	;RP0=0, select bank0
  1844     07DB  1303               	bcf	3,6	;RP1=0, select bank0
  1845     07DC  01C9               	clrf	lcdSend@tipo
  1846     07DD  300F               	movlw	15
  1847     07DE  120A  158A  2609  120A  118A  	fcall	_lcdSend
  1848     07E3                     l2506:
  1849                           
  1850                           ;main.c: 359:     lcdSend(0x01, 0);
  1851     07E3  1283               	bcf	3,5	;RP0=0, select bank0
  1852     07E4  1303               	bcf	3,6	;RP1=0, select bank0
  1853     07E5  01C9               	clrf	lcdSend@tipo
  1854     07E6  3001               	movlw	1
  1855     07E7  120A  158A  2609  120A  118A  	fcall	_lcdSend
  1856     07EC                     l2508:
  1857                           
  1858                           ;main.c: 360:     lcdSend(0x0C, 0);
  1859     07EC  1283               	bcf	3,5	;RP0=0, select bank0
  1860     07ED  1303               	bcf	3,6	;RP1=0, select bank0
  1861     07EE  01C9               	clrf	lcdSend@tipo
  1862     07EF  300C               	movlw	12
  1863     07F0  120A  158A  2609  120A  118A  	fcall	_lcdSend
  1864     07F5                     l2510:
  1865                           
  1866                           ;main.c: 361:     lcdSend(0x80, 0);
  1867     07F5  1283               	bcf	3,5	;RP0=0, select bank0
  1868     07F6  1303               	bcf	3,6	;RP1=0, select bank0
  1869     07F7  01C9               	clrf	lcdSend@tipo
  1870     07F8  3080               	movlw	128
  1871     07F9  120A  158A  2609  120A  118A  	fcall	_lcdSend
  1872     07FE                     l242:
  1873     07FE  0008               	return
  1874     07FF                     __end_of_initLCD:
  1875                           
  1876                           	psect	text2
  1877     0519                     __ptext2:	
  1878 ;; *************** function _UART_ReadFINALE *****************
  1879 ;; Defined at:
  1880 ;;		line 241 in file "main.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;		None
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;  i               1   31[BANK0 ] unsigned char 
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      unsigned char 
  1887 ;; Registers used:
  1888 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1894 ;;      Params:         0       0       0       0       0
  1895 ;;      Locals:         0       1       0       0       0
  1896 ;;      Temps:          0       3       0       0       0
  1897 ;;      Totals:         0       4       0       0       0
  1898 ;;Total ram usage:        4 bytes
  1899 ;; Hardware stack levels used: 1
  1900 ;; Hardware stack levels required when called: 5
  1901 ;; This function calls:
  1902 ;;		_intToString
  1903 ;;		_lcdPrint
  1904 ;;		_lcdSend
  1905 ;; This function is called by:
  1906 ;;		_main
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910     0519                     _UART_ReadFINALE:	
  1911                           ;psect for function _UART_ReadFINALE
  1912                           
  1913     0519                     l2726:	
  1914                           ;incstack = 0
  1915                           ; Regs used in _UART_ReadFINALE: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1916                           
  1917                           
  1918                           ;main.c: 242:     char i = 0;
  1919     0519  1283               	bcf	3,5	;RP0=0, select bank0
  1920     051A  1303               	bcf	3,6	;RP1=0, select bank0
  1921     051B  01E8               	clrf	UART_ReadFINALE@i
  1922                           
  1923                           ;main.c: 243:     while(i < 2){
  1924     051C  2DA8               	goto	l2756
  1925     051D                     l2728:
  1926                           
  1927                           ;main.c: 245:             intToString(countdown, print_countdown);
  1928     051D  086A               	movf	_countdown+1,w
  1929     051E  00DD               	movwf	intToString@n+1
  1930     051F  0869               	movf	_countdown,w
  1931     0520  00DC               	movwf	intToString@n
  1932     0521  3046               	movlw	(low (_print_countdown| 0))& (0+255)
  1933     0522  00DE               	movwf	intToString@str
  1934     0523  120A  158A  2784  120A  118A  	fcall	_intToString
  1935     0528                     l2730:
  1936                           
  1937                           ;main.c: 246:             lcdSend(0x80 + 13, 0);
  1938     0528  1283               	bcf	3,5	;RP0=0, select bank0
  1939     0529  1303               	bcf	3,6	;RP1=0, select bank0
  1940     052A  01C9               	clrf	lcdSend@tipo
  1941     052B  308D               	movlw	141
  1942     052C  120A  158A  2609  120A  118A  	fcall	_lcdSend
  1943     0531                     l2732:
  1944                           
  1945                           ;main.c: 247:             lcdPrint(print_countdown);
  1946     0531  3046               	movlw	(low (_print_countdown| 0))& (0+255)
  1947     0532  1283               	bcf	3,5	;RP0=0, select bank0
  1948     0533  1303               	bcf	3,6	;RP1=0, select bank0
  1949     0534  00CB               	movwf	lcdPrint@str
  1950     0535  3000               	movlw	0
  1951     0536  00CC               	movwf	lcdPrint@str+1
  1952     0537  120A  158A  2678  120A  118A  	fcall	_lcdPrint
  1953     053C                     l2734:
  1954                           
  1955                           ;main.c: 248:             countdown --;
  1956     053C  30FF               	movlw	255
  1957     053D  1283               	bcf	3,5	;RP0=0, select bank0
  1958     053E  1303               	bcf	3,6	;RP1=0, select bank0
  1959     053F  07E9               	addwf	_countdown,f
  1960     0540  1803               	skipnc
  1961     0541  0AEA               	incf	_countdown+1,f
  1962     0542  30FF               	movlw	255
  1963     0543  07EA               	addwf	_countdown+1,f
  1964     0544                     l2736:
  1965                           
  1966                           ;main.c: 249:             _delay((unsigned long)((600)*(8000000/4000.0)));
  1967     0544  3007               	movlw	7
  1968     0545  1283               	bcf	3,5	;RP0=0, select bank0
  1969     0546  1303               	bcf	3,6	;RP1=0, select bank0
  1970     0547  00E7               	movwf	??_UART_ReadFINALE+2
  1971     0548  3017               	movlw	23
  1972     0549  00E6               	movwf	??_UART_ReadFINALE+1
  1973     054A  3069               	movlw	105
  1974     054B  00E5               	movwf	??_UART_ReadFINALE
  1975     054C                     u3467:
  1976     054C  0BE5               	decfsz	??_UART_ReadFINALE,f
  1977     054D  2D4C               	goto	u3467
  1978     054E  0BE6               	decfsz	??_UART_ReadFINALE+1,f
  1979     054F  2D4C               	goto	u3467
  1980     0550  0BE7               	decfsz	??_UART_ReadFINALE+2,f
  1981     0551  2D4C               	goto	u3467
  1982     0552  2D53               	nop2
  1983     0553                     l2738:
  1984                           
  1985                           ;main.c: 244:         while (countdown != 0 && !RCIF){
  1986     0553  1283               	bcf	3,5	;RP0=0, select bank0
  1987     0554  1303               	bcf	3,6	;RP1=0, select bank0
  1988     0555  0869               	movf	_countdown,w
  1989     0556  046A               	iorwf	_countdown+1,w
  1990     0557  1903               	btfsc	3,2
  1991     0558  2D5A               	goto	u2861
  1992     0559  2D5B               	goto	u2860
  1993     055A                     u2861:
  1994     055A  2D5F               	goto	l2742
  1995     055B                     u2860:
  1996     055B                     l2740:
  1997     055B  1E8C               	btfss	12,5	;volatile
  1998     055C  2D5E               	goto	u2871
  1999     055D  2D5F               	goto	u2870
  2000     055E                     u2871:
  2001     055E  2D1D               	goto	l2728
  2002     055F                     u2870:
  2003     055F                     l2742:
  2004                           
  2005                           ;main.c: 252:         message[i] = RCREG;
  2006     055F  0868               	movf	UART_ReadFINALE@i,w
  2007     0560  3E2C               	addlw	(low (_message| 0))& (0+255)
  2008     0561  0084               	movwf	4
  2009     0562  081A               	movf	26,w	;volatile
  2010     0563  1383               	bcf	3,7	;select IRP bank0
  2011     0564  0080               	movwf	0
  2012     0565                     l2744:
  2013                           
  2014                           ;main.c: 253:         lcdSend(0x80 + i, 0);
  2015     0565  01C9               	clrf	lcdSend@tipo
  2016     0566  0868               	movf	UART_ReadFINALE@i,w
  2017     0567  3E80               	addlw	128
  2018     0568  120A  158A  2609  120A  118A  	fcall	_lcdSend
  2019     056D                     l2746:
  2020                           
  2021                           ;main.c: 254:         lcdSend(message[i], 1);
  2022     056D  1283               	bcf	3,5	;RP0=0, select bank0
  2023     056E  1303               	bcf	3,6	;RP1=0, select bank0
  2024     056F  01C9               	clrf	lcdSend@tipo
  2025     0570  0AC9               	incf	lcdSend@tipo,f
  2026     0571  0868               	movf	UART_ReadFINALE@i,w
  2027     0572  3E2C               	addlw	(low (_message| 0))& (0+255)
  2028     0573  0084               	movwf	4
  2029     0574  1383               	bcf	3,7	;select IRP bank0
  2030     0575  0800               	movf	0,w
  2031     0576  120A  158A  2609  120A  118A  	fcall	_lcdSend
  2032                           
  2033                           ;main.c: 255:         i ++;
  2034     057B  3001               	movlw	1
  2035     057C  1283               	bcf	3,5	;RP0=0, select bank0
  2036     057D  1303               	bcf	3,6	;RP1=0, select bank0
  2037     057E  00E5               	movwf	??_UART_ReadFINALE
  2038     057F  0865               	movf	??_UART_ReadFINALE,w
  2039     0580  07E8               	addwf	UART_ReadFINALE@i,f
  2040     0581                     l2748:
  2041                           
  2042                           ;main.c: 256:         intToString(countdown, print_countdown);
  2043     0581  086A               	movf	_countdown+1,w
  2044     0582  00DD               	movwf	intToString@n+1
  2045     0583  0869               	movf	_countdown,w
  2046     0584  00DC               	movwf	intToString@n
  2047     0585  3046               	movlw	(low (_print_countdown| 0))& (0+255)
  2048     0586  00DE               	movwf	intToString@str
  2049     0587  120A  158A  2784  120A  118A  	fcall	_intToString
  2050     058C                     l2750:
  2051                           
  2052                           ;main.c: 257:         lcdSend(0x80 + 13, 0);
  2053     058C  1283               	bcf	3,5	;RP0=0, select bank0
  2054     058D  1303               	bcf	3,6	;RP1=0, select bank0
  2055     058E  01C9               	clrf	lcdSend@tipo
  2056     058F  308D               	movlw	141
  2057     0590  120A  158A  2609  120A  118A  	fcall	_lcdSend
  2058     0595                     l2752:
  2059                           
  2060                           ;main.c: 258:         lcdPrint(print_countdown);
  2061     0595  3046               	movlw	(low (_print_countdown| 0))& (0+255)
  2062     0596  1283               	bcf	3,5	;RP0=0, select bank0
  2063     0597  1303               	bcf	3,6	;RP1=0, select bank0
  2064     0598  00CB               	movwf	lcdPrint@str
  2065     0599  3000               	movlw	0
  2066     059A  00CC               	movwf	lcdPrint@str+1
  2067     059B  120A  158A  2678  120A  118A  	fcall	_lcdPrint
  2068     05A0                     l2754:
  2069                           
  2070                           ;main.c: 259:         countdown --;
  2071     05A0  30FF               	movlw	255
  2072     05A1  1283               	bcf	3,5	;RP0=0, select bank0
  2073     05A2  1303               	bcf	3,6	;RP1=0, select bank0
  2074     05A3  07E9               	addwf	_countdown,f
  2075     05A4  1803               	skipnc
  2076     05A5  0AEA               	incf	_countdown+1,f
  2077     05A6  30FF               	movlw	255
  2078     05A7  07EA               	addwf	_countdown+1,f
  2079     05A8                     l2756:
  2080                           
  2081                           ;main.c: 243:     while(i < 2){
  2082     05A8  3002               	movlw	2
  2083     05A9  0268               	subwf	UART_ReadFINALE@i,w
  2084     05AA  1C03               	skipc
  2085     05AB  2DAD               	goto	u2881
  2086     05AC  2DAE               	goto	u2880
  2087     05AD                     u2881:
  2088     05AD  2D53               	goto	l2738
  2089     05AE                     u2880:
  2090     05AE                     l2758:
  2091                           
  2092                           ;main.c: 261:     if (message[0] == id1 && message[1] == 0x00 ){
  2093     05AE  3030               	movlw	48
  2094     05AF  062C               	xorwf	_message,w
  2095     05B0  1D03               	btfss	3,2
  2096     05B1  2DB3               	goto	u2891
  2097     05B2  2DB4               	goto	u2890
  2098     05B3                     u2891:
  2099     05B3  2DD9               	goto	l2768
  2100     05B4                     u2890:
  2101     05B4                     l2760:
  2102     05B4  082D               	movf	_message+1,w
  2103     05B5  1D03               	btfss	3,2
  2104     05B6  2DB8               	goto	u2901
  2105     05B7  2DB9               	goto	u2900
  2106     05B8                     u2901:
  2107     05B8  2DD9               	goto	l2768
  2108     05B9                     u2900:
  2109     05B9                     l2762:
  2110                           
  2111                           ;main.c: 262:         lcdSend(0xC0, 0);
  2112     05B9  01C9               	clrf	lcdSend@tipo
  2113     05BA  30C0               	movlw	192
  2114     05BB  120A  158A  2609  120A  118A  	fcall	_lcdSend
  2115     05C0                     l2764:
  2116                           
  2117                           ;main.c: 263:         lcdPrint("APRI PORTA");
  2118     05C0  3055               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2119     05C1  1283               	bcf	3,5	;RP0=0, select bank0
  2120     05C2  1303               	bcf	3,6	;RP1=0, select bank0
  2121     05C3  00CB               	movwf	lcdPrint@str
  2122     05C4  3080               	movlw	128
  2123     05C5  00CC               	movwf	lcdPrint@str+1
  2124     05C6  120A  158A  2678  120A  118A  	fcall	_lcdPrint
  2125     05CB                     l2766:
  2126                           
  2127                           ;main.c: 264:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  2128     05CB  300B               	movlw	11
  2129     05CC  1283               	bcf	3,5	;RP0=0, select bank0
  2130     05CD  1303               	bcf	3,6	;RP1=0, select bank0
  2131     05CE  00E7               	movwf	??_UART_ReadFINALE+2
  2132     05CF  3026               	movlw	38
  2133     05D0  00E6               	movwf	??_UART_ReadFINALE+1
  2134     05D1  305D               	movlw	93
  2135     05D2  00E5               	movwf	??_UART_ReadFINALE
  2136     05D3                     u3477:
  2137     05D3  0BE5               	decfsz	??_UART_ReadFINALE,f
  2138     05D4  2DD3               	goto	u3477
  2139     05D5  0BE6               	decfsz	??_UART_ReadFINALE+1,f
  2140     05D6  2DD3               	goto	u3477
  2141     05D7  0BE7               	decfsz	??_UART_ReadFINALE+2,f
  2142     05D8  2DD3               	goto	u3477
  2143     05D9                     l2768:
  2144                           
  2145                           ;main.c: 265:         return RCREG;;	Return value of _UART_ReadFINALE is never used
  2146     05D9  1283               	bcf	3,5	;RP0=0, select bank0
  2147     05DA  1303               	bcf	3,6	;RP1=0, select bank0
  2148     05DB  081A               	movf	26,w	;volatile
  2149     05DC                     l226:
  2150     05DC  0008               	return
  2151     05DD                     __end_of_UART_ReadFINALE:
  2152                           
  2153                           	psect	text3
  2154     0326                     __ptext3:	
  2155 ;; *************** function _UART_Read1 *****************
  2156 ;; Defined at:
  2157 ;;		line 270 in file "main.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;		None
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;  count           1   31[BANK0 ] unsigned char 
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  1    wreg      unsigned char 
  2164 ;; Registers used:
  2165 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2171 ;;      Params:         0       0       0       0       0
  2172 ;;      Locals:         0       1       0       0       0
  2173 ;;      Temps:          0       3       0       0       0
  2174 ;;      Totals:         0       4       0       0       0
  2175 ;;Total ram usage:        4 bytes
  2176 ;; Hardware stack levels used: 1
  2177 ;; Hardware stack levels required when called: 5
  2178 ;; This function calls:
  2179 ;;		_RS485_RxEnable
  2180 ;;		_RS485_TxEnable
  2181 ;;		_UART_Write
  2182 ;;		_intToString
  2183 ;;		_lcdPrint
  2184 ;;		_lcdSend
  2185 ;; This function is called by:
  2186 ;;		_main
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190     0326                     _UART_Read1:	
  2191                           ;psect for function _UART_Read1
  2192                           
  2193     0326                     l2588:	
  2194                           ;incstack = 0
  2195                           ; Regs used in _UART_Read1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2196                           
  2197                           
  2198                           ;main.c: 271:     char count = 0;
  2199     0326  1283               	bcf	3,5	;RP0=0, select bank0
  2200     0327  1303               	bcf	3,6	;RP1=0, select bank0
  2201     0328  01E8               	clrf	UART_Read1@count
  2202                           
  2203                           ;main.c: 272:     while (countdown != 0){
  2204     0329  2CFD               	goto	l2712
  2205     032A                     l2590:
  2206                           
  2207                           ;main.c: 273:         if (count != 5){
  2208     032A  3005               	movlw	5
  2209     032B  0668               	xorwf	UART_Read1@count,w
  2210     032C  1903               	btfsc	3,2
  2211     032D  2B2F               	goto	u2741
  2212     032E  2B30               	goto	u2740
  2213     032F                     u2741:
  2214     032F  2C68               	goto	l2672
  2215     0330                     u2740:
  2216     0330                     l2592:
  2217                           
  2218                           ;main.c: 274:             if(keypressed != 0 && count == 0){
  2219     0330  083B               	movf	_keypressed,w
  2220     0331  1903               	btfsc	3,2
  2221     0332  2B34               	goto	u2751
  2222     0333  2B35               	goto	u2750
  2223     0334                     u2751:
  2224     0334  2B62               	goto	l2606
  2225     0335                     u2750:
  2226     0335                     l2594:
  2227     0335  0868               	movf	UART_Read1@count,w
  2228     0336  1D03               	btfss	3,2
  2229     0337  2B39               	goto	u2761
  2230     0338  2B3A               	goto	u2760
  2231     0339                     u2761:
  2232     0339  2B62               	goto	l2606
  2233     033A                     u2760:
  2234     033A                     l2596:
  2235                           
  2236                           ;main.c: 275:                 lcdSend(0x01, 0);
  2237     033A  01C9               	clrf	lcdSend@tipo
  2238     033B  3001               	movlw	1
  2239     033C  120A  158A  2609  120A  118A  	fcall	_lcdSend
  2240     0341                     l2598:
  2241                           
  2242                           ;main.c: 276:                 lcdSend(keys[keypressed], 1);
  2243     0341  1283               	bcf	3,5	;RP0=0, select bank0
  2244     0342  1303               	bcf	3,6	;RP1=0, select bank0
  2245     0343  01C9               	clrf	lcdSend@tipo
  2246     0344  0AC9               	incf	lcdSend@tipo,f
  2247     0345  083B               	movf	_keypressed,w
  2248     0346  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2249     0347  0084               	movwf	4
  2250     0348  120A  118A  2714  120A  118A  	fcall	stringdir
  2251     034D  120A  158A  2609  120A  118A  	fcall	_lcdSend
  2252     0352                     l2600:
  2253                           
  2254                           ;main.c: 277:                 num21 = keys[keypressed];
  2255     0352  1283               	bcf	3,5	;RP0=0, select bank0
  2256     0353  1303               	bcf	3,6	;RP1=0, select bank0
  2257     0354  083B               	movf	_keypressed,w
  2258     0355  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2259     0356  0084               	movwf	4
  2260     0357  120A  118A  2714  120A  118A  	fcall	stringdir
  2261     035C  00C0               	movwf	_num21
  2262     035D                     l2602:
  2263                           
  2264                           ;main.c: 278:                 keypressed = 0;
  2265     035D  01BB               	clrf	_keypressed
  2266     035E                     l2604:
  2267                           
  2268                           ;main.c: 279:                 count ++;
  2269     035E  3001               	movlw	1
  2270     035F  00E5               	movwf	??_UART_Read1
  2271     0360  0865               	movf	??_UART_Read1,w
  2272     0361  07E8               	addwf	UART_Read1@count,f
  2273     0362                     l2606:
  2274                           
  2275                           ;main.c: 281:             if(keypressed != 0 && count == 1){
  2276     0362  083B               	movf	_keypressed,w
  2277     0363  1903               	btfsc	3,2
  2278     0364  2B66               	goto	u2771
  2279     0365  2B67               	goto	u2770
  2280     0366                     u2771:
  2281     0366  2B95               	goto	l2620
  2282     0367                     u2770:
  2283     0367                     l2608:
  2284     0367  0368               	decf	UART_Read1@count,w
  2285     0368  1D03               	btfss	3,2
  2286     0369  2B6B               	goto	u2781
  2287     036A  2B6C               	goto	u2780
  2288     036B                     u2781:
  2289     036B  2B95               	goto	l2620
  2290     036C                     u2780:
  2291     036C                     l2610:
  2292                           
  2293                           ;main.c: 282:                 lcdSend(0x80 + count, 0);
  2294     036C  01C9               	clrf	lcdSend@tipo
  2295     036D  0868               	movf	UART_Read1@count,w
  2296     036E  3E80               	addlw	128
  2297     036F  120A  158A  2609  120A  118A  	fcall	_lcdSend
  2298     0374                     l2612:
  2299                           
  2300                           ;main.c: 283:                 lcdSend(keys[keypressed], 1);
  2301     0374  1283               	bcf	3,5	;RP0=0, select bank0
  2302     0375  1303               	bcf	3,6	;RP1=0, select bank0
  2303     0376  01C9               	clrf	lcdSend@tipo
  2304     0377  0AC9               	incf	lcdSend@tipo,f
  2305     0378  083B               	movf	_keypressed,w
  2306     0379  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2307     037A  0084               	movwf	4
  2308     037B  120A  118A  2714  120A  118A  	fcall	stringdir
  2309     0380  120A  158A  2609  120A  118A  	fcall	_lcdSend
  2310     0385                     l2614:
  2311                           
  2312                           ;main.c: 284:                 num22 = keys[keypressed];
  2313     0385  1283               	bcf	3,5	;RP0=0, select bank0
  2314     0386  1303               	bcf	3,6	;RP1=0, select bank0
  2315     0387  083B               	movf	_keypressed,w
  2316     0388  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2317     0389  0084               	movwf	4
  2318     038A  120A  118A  2714  120A  118A  	fcall	stringdir
  2319     038F  00BF               	movwf	_num22
  2320     0390                     l2616:
  2321                           
  2322                           ;main.c: 285:                 keypressed = 0;
  2323     0390  01BB               	clrf	_keypressed
  2324     0391                     l2618:
  2325                           
  2326                           ;main.c: 286:                 count ++;
  2327     0391  3001               	movlw	1
  2328     0392  00E5               	movwf	??_UART_Read1
  2329     0393  0865               	movf	??_UART_Read1,w
  2330     0394  07E8               	addwf	UART_Read1@count,f
  2331     0395                     l2620:
  2332                           
  2333                           ;main.c: 288:             if(keypressed != 0 && count == 2){
  2334     0395  083B               	movf	_keypressed,w
  2335     0396  1903               	btfsc	3,2
  2336     0397  2B99               	goto	u2791
  2337     0398  2B9A               	goto	u2790
  2338     0399                     u2791:
  2339     0399  2BC9               	goto	l2634
  2340     039A                     u2790:
  2341     039A                     l2622:
  2342     039A  3002               	movlw	2
  2343     039B  0668               	xorwf	UART_Read1@count,w
  2344     039C  1D03               	btfss	3,2
  2345     039D  2B9F               	goto	u2801
  2346     039E  2BA0               	goto	u2800
  2347     039F                     u2801:
  2348     039F  2BC9               	goto	l2634
  2349     03A0                     u2800:
  2350     03A0                     l2624:
  2351                           
  2352                           ;main.c: 289:                 lcdSend(0x80 + count, 0);
  2353     03A0  01C9               	clrf	lcdSend@tipo
  2354     03A1  0868               	movf	UART_Read1@count,w
  2355     03A2  3E80               	addlw	128
  2356     03A3  120A  158A  2609  120A  118A  	fcall	_lcdSend
  2357     03A8                     l2626:
  2358                           
  2359                           ;main.c: 290:                 lcdSend(keys[keypressed], 1);
  2360     03A8  1283               	bcf	3,5	;RP0=0, select bank0
  2361     03A9  1303               	bcf	3,6	;RP1=0, select bank0
  2362     03AA  01C9               	clrf	lcdSend@tipo
  2363     03AB  0AC9               	incf	lcdSend@tipo,f
  2364     03AC  083B               	movf	_keypressed,w
  2365     03AD  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2366     03AE  0084               	movwf	4
  2367     03AF  120A  118A  2714  120A  118A  	fcall	stringdir
  2368     03B4  120A  158A  2609  120A  118A  	fcall	_lcdSend
  2369     03B9                     l2628:
  2370                           
  2371                           ;main.c: 291:                 num23 = keys[keypressed];
  2372     03B9  1283               	bcf	3,5	;RP0=0, select bank0
  2373     03BA  1303               	bcf	3,6	;RP1=0, select bank0
  2374     03BB  083B               	movf	_keypressed,w
  2375     03BC  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2376     03BD  0084               	movwf	4
  2377     03BE  120A  118A  2714  120A  118A  	fcall	stringdir
  2378     03C3  00BE               	movwf	_num23
  2379     03C4                     l2630:
  2380                           
  2381                           ;main.c: 292:                 keypressed = 0;
  2382     03C4  01BB               	clrf	_keypressed
  2383     03C5                     l2632:
  2384                           
  2385                           ;main.c: 293:                 count ++;
  2386     03C5  3001               	movlw	1
  2387     03C6  00E5               	movwf	??_UART_Read1
  2388     03C7  0865               	movf	??_UART_Read1,w
  2389     03C8  07E8               	addwf	UART_Read1@count,f
  2390     03C9                     l2634:
  2391                           
  2392                           ;main.c: 295:             if(keypressed != 0 && count == 3){
  2393     03C9  083B               	movf	_keypressed,w
  2394     03CA  1903               	btfsc	3,2
  2395     03CB  2BCD               	goto	u2811
  2396     03CC  2BCE               	goto	u2810
  2397     03CD                     u2811:
  2398     03CD  2BFD               	goto	l2648
  2399     03CE                     u2810:
  2400     03CE                     l2636:
  2401     03CE  3003               	movlw	3
  2402     03CF  0668               	xorwf	UART_Read1@count,w
  2403     03D0  1D03               	btfss	3,2
  2404     03D1  2BD3               	goto	u2821
  2405     03D2  2BD4               	goto	u2820
  2406     03D3                     u2821:
  2407     03D3  2BFD               	goto	l2648
  2408     03D4                     u2820:
  2409     03D4                     l2638:
  2410                           
  2411                           ;main.c: 296:                 lcdSend(0x80 + count, 0);
  2412     03D4  01C9               	clrf	lcdSend@tipo
  2413     03D5  0868               	movf	UART_Read1@count,w
  2414     03D6  3E80               	addlw	128
  2415     03D7  120A  158A  2609  120A  118A  	fcall	_lcdSend
  2416     03DC                     l2640:
  2417                           
  2418                           ;main.c: 297:                 lcdSend(keys[keypressed], 1);
  2419     03DC  1283               	bcf	3,5	;RP0=0, select bank0
  2420     03DD  1303               	bcf	3,6	;RP1=0, select bank0
  2421     03DE  01C9               	clrf	lcdSend@tipo
  2422     03DF  0AC9               	incf	lcdSend@tipo,f
  2423     03E0  083B               	movf	_keypressed,w
  2424     03E1  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2425     03E2  0084               	movwf	4
  2426     03E3  120A  118A  2714  120A  118A  	fcall	stringdir
  2427     03E8  120A  158A  2609  120A  118A  	fcall	_lcdSend
  2428     03ED                     l2642:
  2429                           
  2430                           ;main.c: 298:                 num24 = keys[keypressed];
  2431     03ED  1283               	bcf	3,5	;RP0=0, select bank0
  2432     03EE  1303               	bcf	3,6	;RP1=0, select bank0
  2433     03EF  083B               	movf	_keypressed,w
  2434     03F0  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2435     03F1  0084               	movwf	4
  2436     03F2  120A  118A  2714  120A  118A  	fcall	stringdir
  2437     03F7  00BD               	movwf	_num24
  2438     03F8                     l2644:
  2439                           
  2440                           ;main.c: 299:                 keypressed = 0;
  2441     03F8  01BB               	clrf	_keypressed
  2442     03F9                     l2646:
  2443                           
  2444                           ;main.c: 300:                 count ++;
  2445     03F9  3001               	movlw	1
  2446     03FA  00E5               	movwf	??_UART_Read1
  2447     03FB  0865               	movf	??_UART_Read1,w
  2448     03FC  07E8               	addwf	UART_Read1@count,f
  2449     03FD                     l2648:
  2450                           
  2451                           ;main.c: 302:             if(keypressed != 0 && count == 4){
  2452     03FD  083B               	movf	_keypressed,w
  2453     03FE  1903               	btfsc	3,2
  2454     03FF  2C01               	goto	u2831
  2455     0400  2C02               	goto	u2830
  2456     0401                     u2831:
  2457     0401  2C31               	goto	l2662
  2458     0402                     u2830:
  2459     0402                     l2650:
  2460     0402  3004               	movlw	4
  2461     0403  0668               	xorwf	UART_Read1@count,w
  2462     0404  1D03               	btfss	3,2
  2463     0405  2C07               	goto	u2841
  2464     0406  2C08               	goto	u2840
  2465     0407                     u2841:
  2466     0407  2C31               	goto	l2662
  2467     0408                     u2840:
  2468     0408                     l2652:
  2469                           
  2470                           ;main.c: 303:                 lcdSend(0x80 + count, 0);
  2471     0408  01C9               	clrf	lcdSend@tipo
  2472     0409  0868               	movf	UART_Read1@count,w
  2473     040A  3E80               	addlw	128
  2474     040B  120A  158A  2609  120A  118A  	fcall	_lcdSend
  2475     0410                     l2654:
  2476                           
  2477                           ;main.c: 304:                 lcdSend(keys[keypressed], 1);
  2478     0410  1283               	bcf	3,5	;RP0=0, select bank0
  2479     0411  1303               	bcf	3,6	;RP1=0, select bank0
  2480     0412  01C9               	clrf	lcdSend@tipo
  2481     0413  0AC9               	incf	lcdSend@tipo,f
  2482     0414  083B               	movf	_keypressed,w
  2483     0415  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2484     0416  0084               	movwf	4
  2485     0417  120A  118A  2714  120A  118A  	fcall	stringdir
  2486     041C  120A  158A  2609  120A  118A  	fcall	_lcdSend
  2487     0421                     l2656:
  2488                           
  2489                           ;main.c: 305:                 num25 = keys[keypressed];
  2490     0421  1283               	bcf	3,5	;RP0=0, select bank0
  2491     0422  1303               	bcf	3,6	;RP1=0, select bank0
  2492     0423  083B               	movf	_keypressed,w
  2493     0424  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2494     0425  0084               	movwf	4
  2495     0426  120A  118A  2714  120A  118A  	fcall	stringdir
  2496     042B  00BC               	movwf	_num25
  2497     042C                     l2658:
  2498                           
  2499                           ;main.c: 306:                 keypressed = 0;
  2500     042C  01BB               	clrf	_keypressed
  2501     042D                     l2660:
  2502                           
  2503                           ;main.c: 307:                 count ++;
  2504     042D  3001               	movlw	1
  2505     042E  00E5               	movwf	??_UART_Read1
  2506     042F  0865               	movf	??_UART_Read1,w
  2507     0430  07E8               	addwf	UART_Read1@count,f
  2508     0431                     l2662:
  2509                           
  2510                           ;main.c: 309:             intToString(countdown, print_countdown);
  2511     0431  086A               	movf	_countdown+1,w
  2512     0432  00DD               	movwf	intToString@n+1
  2513     0433  0869               	movf	_countdown,w
  2514     0434  00DC               	movwf	intToString@n
  2515     0435  3046               	movlw	(low (_print_countdown| 0))& (0+255)
  2516     0436  00DE               	movwf	intToString@str
  2517     0437  120A  158A  2784  120A  118A  	fcall	_intToString
  2518     043C                     l2664:
  2519                           
  2520                           ;main.c: 310:             lcdSend(0x80 + 13, 0);
  2521     043C  1283               	bcf	3,5	;RP0=0, select bank0
  2522     043D  1303               	bcf	3,6	;RP1=0, select bank0
  2523     043E  01C9               	clrf	lcdSend@tipo
  2524     043F  308D               	movlw	141
  2525     0440  120A  158A  2609  120A  118A  	fcall	_lcdSend
  2526     0445                     l2666:
  2527                           
  2528                           ;main.c: 311:             lcdPrint(print_countdown);
  2529     0445  3046               	movlw	(low (_print_countdown| 0))& (0+255)
  2530     0446  1283               	bcf	3,5	;RP0=0, select bank0
  2531     0447  1303               	bcf	3,6	;RP1=0, select bank0
  2532     0448  00CB               	movwf	lcdPrint@str
  2533     0449  3000               	movlw	0
  2534     044A  00CC               	movwf	lcdPrint@str+1
  2535     044B  120A  158A  2678  120A  118A  	fcall	_lcdPrint
  2536     0450                     l2668:
  2537                           
  2538                           ;main.c: 312:             countdown --;
  2539     0450  30FF               	movlw	255
  2540     0451  1283               	bcf	3,5	;RP0=0, select bank0
  2541     0452  1303               	bcf	3,6	;RP1=0, select bank0
  2542     0453  07E9               	addwf	_countdown,f
  2543     0454  1803               	skipnc
  2544     0455  0AEA               	incf	_countdown+1,f
  2545     0456  30FF               	movlw	255
  2546     0457  07EA               	addwf	_countdown+1,f
  2547     0458                     l2670:
  2548                           
  2549                           ;main.c: 313:             _delay((unsigned long)((600)*(8000000/4000.0)));
  2550     0458  3007               	movlw	7
  2551     0459  1283               	bcf	3,5	;RP0=0, select bank0
  2552     045A  1303               	bcf	3,6	;RP1=0, select bank0
  2553     045B  00E7               	movwf	??_UART_Read1+2
  2554     045C  3017               	movlw	23
  2555     045D  00E6               	movwf	??_UART_Read1+1
  2556     045E  3069               	movlw	105
  2557     045F  00E5               	movwf	??_UART_Read1
  2558     0460                     u3487:
  2559     0460  0BE5               	decfsz	??_UART_Read1,f
  2560     0461  2C60               	goto	u3487
  2561     0462  0BE6               	decfsz	??_UART_Read1+1,f
  2562     0463  2C60               	goto	u3487
  2563     0464  0BE7               	decfsz	??_UART_Read1+2,f
  2564     0465  2C60               	goto	u3487
  2565     0466  2C67               	nop2
  2566                           
  2567                           ;main.c: 314:         }
  2568     0467  2CFD               	goto	l2712
  2569     0468                     l2672:
  2570                           
  2571                           ;main.c: 316:             RS485_TxEnable();
  2572     0468  120A  158A  25D1  120A  118A  	fcall	_RS485_TxEnable
  2573     046D                     l2674:
  2574                           
  2575                           ;main.c: 317:             UART_Write(id1);
  2576     046D  3030               	movlw	48
  2577     046E  120A  158A  25DE  120A  118A  	fcall	_UART_Write
  2578     0473                     l2676:
  2579                           
  2580                           ;main.c: 318:             UART_Write(0x02);
  2581     0473  3002               	movlw	2
  2582     0474  120A  158A  25DE  120A  118A  	fcall	_UART_Write
  2583     0479                     l2678:
  2584                           
  2585                           ;main.c: 319:             UART_Write(num1);
  2586     0479  1283               	bcf	3,5	;RP0=0, select bank0
  2587     047A  1303               	bcf	3,6	;RP1=0, select bank0
  2588     047B  0845               	movf	_num1,w
  2589     047C  120A  158A  25DE  120A  118A  	fcall	_UART_Write
  2590     0481                     l2680:
  2591                           
  2592                           ;main.c: 320:             UART_Write(num2);
  2593     0481  1283               	bcf	3,5	;RP0=0, select bank0
  2594     0482  1303               	bcf	3,6	;RP1=0, select bank0
  2595     0483  0844               	movf	_num2,w
  2596     0484  120A  158A  25DE  120A  118A  	fcall	_UART_Write
  2597     0489                     l2682:
  2598                           
  2599                           ;main.c: 321:             UART_Write(num3);
  2600     0489  1283               	bcf	3,5	;RP0=0, select bank0
  2601     048A  1303               	bcf	3,6	;RP1=0, select bank0
  2602     048B  0843               	movf	_num3,w
  2603     048C  120A  158A  25DE  120A  118A  	fcall	_UART_Write
  2604     0491                     l2684:
  2605                           
  2606                           ;main.c: 322:             UART_Write(num4);
  2607     0491  1283               	bcf	3,5	;RP0=0, select bank0
  2608     0492  1303               	bcf	3,6	;RP1=0, select bank0
  2609     0493  0842               	movf	_num4,w
  2610     0494  120A  158A  25DE  120A  118A  	fcall	_UART_Write
  2611     0499                     l2686:
  2612                           
  2613                           ;main.c: 323:             UART_Write(num5);
  2614     0499  1283               	bcf	3,5	;RP0=0, select bank0
  2615     049A  1303               	bcf	3,6	;RP1=0, select bank0
  2616     049B  0841               	movf	_num5,w
  2617     049C  120A  158A  25DE  120A  118A  	fcall	_UART_Write
  2618     04A1                     l2688:
  2619                           
  2620                           ;main.c: 324:             UART_Write(num21);
  2621     04A1  1283               	bcf	3,5	;RP0=0, select bank0
  2622     04A2  1303               	bcf	3,6	;RP1=0, select bank0
  2623     04A3  0840               	movf	_num21,w
  2624     04A4  120A  158A  25DE  120A  118A  	fcall	_UART_Write
  2625     04A9                     l2690:
  2626                           
  2627                           ;main.c: 325:             UART_Write(num22);
  2628     04A9  1283               	bcf	3,5	;RP0=0, select bank0
  2629     04AA  1303               	bcf	3,6	;RP1=0, select bank0
  2630     04AB  083F               	movf	_num22,w
  2631     04AC  120A  158A  25DE  120A  118A  	fcall	_UART_Write
  2632     04B1                     l2692:
  2633                           
  2634                           ;main.c: 326:             UART_Write(num23);
  2635     04B1  1283               	bcf	3,5	;RP0=0, select bank0
  2636     04B2  1303               	bcf	3,6	;RP1=0, select bank0
  2637     04B3  083E               	movf	_num23,w
  2638     04B4  120A  158A  25DE  120A  118A  	fcall	_UART_Write
  2639     04B9                     l2694:
  2640                           
  2641                           ;main.c: 327:             UART_Write(num24);
  2642     04B9  1283               	bcf	3,5	;RP0=0, select bank0
  2643     04BA  1303               	bcf	3,6	;RP1=0, select bank0
  2644     04BB  083D               	movf	_num24,w
  2645     04BC  120A  158A  25DE  120A  118A  	fcall	_UART_Write
  2646     04C1                     l2696:
  2647                           
  2648                           ;main.c: 328:             UART_Write(num25);
  2649     04C1  1283               	bcf	3,5	;RP0=0, select bank0
  2650     04C2  1303               	bcf	3,6	;RP1=0, select bank0
  2651     04C3  083C               	movf	_num25,w
  2652     04C4  120A  158A  25DE  120A  118A  	fcall	_UART_Write
  2653     04C9                     l2698:
  2654                           
  2655                           ;main.c: 329:             UART_Write('*');
  2656     04C9  302A               	movlw	42
  2657     04CA  120A  158A  25DE  120A  118A  	fcall	_UART_Write
  2658     04CF                     l2700:
  2659                           
  2660                           ;main.c: 330:             RS485_RxEnable();
  2661     04CF  120A  158A  25CC  120A  118A  	fcall	_RS485_RxEnable
  2662                           
  2663                           ;main.c: 331:             lcdSend(0x01, 0);
  2664     04D4  1283               	bcf	3,5	;RP0=0, select bank0
  2665     04D5  1303               	bcf	3,6	;RP1=0, select bank0
  2666     04D6  01C9               	clrf	lcdSend@tipo
  2667     04D7  3001               	movlw	1
  2668     04D8  120A  158A  2609  120A  118A  	fcall	_lcdSend
  2669     04DD                     l2702:
  2670                           
  2671                           ;main.c: 332:             lcdPrint("Mandato");
  2672     04DD  3072               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2673     04DE  1283               	bcf	3,5	;RP0=0, select bank0
  2674     04DF  1303               	bcf	3,6	;RP1=0, select bank0
  2675     04E0  00CB               	movwf	lcdPrint@str
  2676     04E1  3080               	movlw	128
  2677     04E2  00CC               	movwf	lcdPrint@str+1
  2678     04E3  120A  158A  2678  120A  118A  	fcall	_lcdPrint
  2679     04E8                     l2704:
  2680                           
  2681                           ;main.c: 333:             RCIF = 0;
  2682     04E8  1283               	bcf	3,5	;RP0=0, select bank0
  2683     04E9  1303               	bcf	3,6	;RP1=0, select bank0
  2684     04EA  128C               	bcf	12,5	;volatile
  2685     04EB                     l2706:
  2686                           
  2687                           ;main.c: 334:             _delay((unsigned long)((1000)*(8000000/4000.0)));
  2688     04EB  300B               	movlw	11
  2689     04EC  1283               	bcf	3,5	;RP0=0, select bank0
  2690     04ED  1303               	bcf	3,6	;RP1=0, select bank0
  2691     04EE  00E7               	movwf	??_UART_Read1+2
  2692     04EF  3026               	movlw	38
  2693     04F0  00E6               	movwf	??_UART_Read1+1
  2694     04F1  305D               	movlw	93
  2695     04F2  00E5               	movwf	??_UART_Read1
  2696     04F3                     u3497:
  2697     04F3  0BE5               	decfsz	??_UART_Read1,f
  2698     04F4  2CF3               	goto	u3497
  2699     04F5  0BE6               	decfsz	??_UART_Read1+1,f
  2700     04F6  2CF3               	goto	u3497
  2701     04F7  0BE7               	decfsz	??_UART_Read1+2,f
  2702     04F8  2CF3               	goto	u3497
  2703     04F9                     l2708:
  2704                           
  2705                           ;main.c: 335:             return RCREG;;	Return value of _UART_Read1 is never used
  2706     04F9  1283               	bcf	3,5	;RP0=0, select bank0
  2707     04FA  1303               	bcf	3,6	;RP1=0, select bank0
  2708     04FB  081A               	movf	26,w	;volatile
  2709     04FC  2D18               	goto	l238
  2710     04FD                     l2712:
  2711                           
  2712                           ;main.c: 272:     while (countdown != 0){
  2713     04FD  1283               	bcf	3,5	;RP0=0, select bank0
  2714     04FE  1303               	bcf	3,6	;RP1=0, select bank0
  2715     04FF  0869               	movf	_countdown,w
  2716     0500  046A               	iorwf	_countdown+1,w
  2717     0501  1D03               	btfss	3,2
  2718     0502  2D04               	goto	u2851
  2719     0503  2D05               	goto	u2850
  2720     0504                     u2851:
  2721     0504  2B2A               	goto	l2590
  2722     0505                     u2850:
  2723     0505                     l2714:
  2724                           
  2725                           ;main.c: 338:     lcdSend(0x01, 0);
  2726     0505  01C9               	clrf	lcdSend@tipo
  2727     0506  3001               	movlw	1
  2728     0507  120A  158A  2609  120A  118A  	fcall	_lcdSend
  2729     050C                     l2716:
  2730                           
  2731                           ;main.c: 339:     lcdPrint("Codice Scaduto");
  2732     050C  3014               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2733     050D  1283               	bcf	3,5	;RP0=0, select bank0
  2734     050E  1303               	bcf	3,6	;RP1=0, select bank0
  2735     050F  00CB               	movwf	lcdPrint@str
  2736     0510  3080               	movlw	128
  2737     0511  00CC               	movwf	lcdPrint@str+1
  2738     0512  120A  158A  2678  120A  118A  	fcall	_lcdPrint
  2739     0517  2CE8               	goto	l2704
  2740     0518                     l238:
  2741     0518  0008               	return
  2742     0519                     __end_of_UART_Read1:
  2743                           
  2744                           	psect	text4
  2745     0E78                     __ptext4:	
  2746 ;; *************** function _lcdPrint *****************
  2747 ;; Defined at:
  2748 ;;		line 385 in file "main.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;  str             2    2[BANK0 ] PTR unsigned char 
  2751 ;;		 -> STR_10(15), STR_9(8), STR_8(11), print_countdown(3), 
  2752 ;;		 -> STR_7(10), STR_6(14), STR_5(13), STR_4(12), 
  2753 ;;		 -> STR_3(11), STR_2(10), STR_1(8), 
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;  n               2    7[BANK0 ] int 
  2756 ;; Return value:  Size  Location     Type
  2757 ;;                  1    wreg      void 
  2758 ;; Registers used:
  2759 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2760 ;; Tracked objects:
  2761 ;;		On entry : 0/0
  2762 ;;		On exit  : 0/0
  2763 ;;		Unchanged: 0/0
  2764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2765 ;;      Params:         0       2       0       0       0
  2766 ;;      Locals:         0       2       0       0       0
  2767 ;;      Temps:          0       3       0       0       0
  2768 ;;      Totals:         0       7       0       0       0
  2769 ;;Total ram usage:        7 bytes
  2770 ;; Hardware stack levels used: 1
  2771 ;; Hardware stack levels required when called: 3
  2772 ;; This function calls:
  2773 ;;		_lcdSend
  2774 ;; This function is called by:
  2775 ;;		_main
  2776 ;;		_UART_ReadFINALE
  2777 ;;		_UART_Read1
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781     0E78                     _lcdPrint:	
  2782                           ;psect for function _lcdPrint
  2783                           
  2784     0E78                     l2438:	
  2785                           ;incstack = 0
  2786                           ; Regs used in _lcdPrint: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2787                           
  2788                           
  2789                           ;main.c: 386:     int n = 0;
  2790     0E78  1283               	bcf	3,5	;RP0=0, select bank0
  2791     0E79  1303               	bcf	3,6	;RP1=0, select bank0
  2792     0E7A  01D0               	clrf	lcdPrint@n
  2793     0E7B  01D1               	clrf	lcdPrint@n+1
  2794                           
  2795                           ;main.c: 387:     while (str[n] != '\0') {
  2796     0E7C  2EA3               	goto	l2444
  2797     0E7D                     l2440:
  2798                           
  2799                           ;main.c: 388:         lcdSend(str[n++], 1);
  2800     0E7D  01C9               	clrf	lcdSend@tipo
  2801     0E7E  0AC9               	incf	lcdSend@tipo,f
  2802     0E7F  0850               	movf	lcdPrint@n,w
  2803     0E80  074B               	addwf	lcdPrint@str,w
  2804     0E81  00CE               	movwf	??_lcdPrint+1
  2805     0E82  084C               	movf	lcdPrint@str+1,w
  2806     0E83  00CD               	movwf	??_lcdPrint
  2807     0E84  1803               	skipnc
  2808     0E85  0ACD               	incf	??_lcdPrint,f
  2809     0E86  1FD0               	btfss	lcdPrint@n,7
  2810     0E87  2E89               	goto	u2570
  2811     0E88  03CD               	decf	??_lcdPrint,f
  2812     0E89                     u2570:
  2813     0E89  1283               	bcf	3,5	;RP0=0, select bank0
  2814     0E8A  1303               	bcf	3,6	;RP1=0, select bank0
  2815     0E8B  084D               	movf	??_lcdPrint,w
  2816     0E8C  00CF               	movwf	??_lcdPrint+2
  2817     0E8D  084F               	movf	??_lcdPrint+2,w
  2818     0E8E  00FF               	movwf	btemp+1
  2819     0E8F  084E               	movf	??_lcdPrint+1,w
  2820     0E90  0084               	movwf	4
  2821     0E91  120A  118A  270A  120A  158A  	fcall	stringtab
  2822     0E96  120A  158A  2609  120A  158A  	fcall	_lcdSend
  2823     0E9B                     l2442:
  2824     0E9B  3001               	movlw	1
  2825     0E9C  1283               	bcf	3,5	;RP0=0, select bank0
  2826     0E9D  1303               	bcf	3,6	;RP1=0, select bank0
  2827     0E9E  07D0               	addwf	lcdPrint@n,f
  2828     0E9F  1803               	skipnc
  2829     0EA0  0AD1               	incf	lcdPrint@n+1,f
  2830     0EA1  3000               	movlw	0
  2831     0EA2  07D1               	addwf	lcdPrint@n+1,f
  2832     0EA3                     l2444:
  2833                           
  2834                           ;main.c: 387:     while (str[n] != '\0') {
  2835     0EA3  0850               	movf	lcdPrint@n,w
  2836     0EA4  074B               	addwf	lcdPrint@str,w
  2837     0EA5  00CE               	movwf	??_lcdPrint+1
  2838     0EA6  084C               	movf	lcdPrint@str+1,w
  2839     0EA7  00CD               	movwf	??_lcdPrint
  2840     0EA8  1803               	skipnc
  2841     0EA9  0ACD               	incf	??_lcdPrint,f
  2842     0EAA  1FD0               	btfss	lcdPrint@n,7
  2843     0EAB  2EAD               	goto	u2580
  2844     0EAC  03CD               	decf	??_lcdPrint,f
  2845     0EAD                     u2580:
  2846     0EAD  1283               	bcf	3,5	;RP0=0, select bank0
  2847     0EAE  1303               	bcf	3,6	;RP1=0, select bank0
  2848     0EAF  084D               	movf	??_lcdPrint,w
  2849     0EB0  00CF               	movwf	??_lcdPrint+2
  2850     0EB1  084F               	movf	??_lcdPrint+2,w
  2851     0EB2  00FF               	movwf	btemp+1
  2852     0EB3  084E               	movf	??_lcdPrint+1,w
  2853     0EB4  0084               	movwf	4
  2854     0EB5  120A  118A  270A  120A  158A  	fcall	stringtab
  2855     0EBA  3A00               	xorlw	0
  2856     0EBB  1D03               	skipz
  2857     0EBC  2EBE               	goto	u2591
  2858     0EBD  2EBF               	goto	u2590
  2859     0EBE                     u2591:
  2860     0EBE  2E7D               	goto	l2440
  2861     0EBF                     u2590:
  2862     0EBF                     l251:
  2863     0EBF  0008               	return
  2864     0EC0                     __end_of_lcdPrint:
  2865                           
  2866                           	psect	text5
  2867     0E09                     __ptext5:	
  2868 ;; *************** function _lcdSend *****************
  2869 ;; Defined at:
  2870 ;;		line 364 in file "main.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;  dato            1    wreg     unsigned char 
  2873 ;;  tipo            1    0[BANK0 ] unsigned char 
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;  dato            1    1[BANK0 ] unsigned char 
  2876 ;; Return value:  Size  Location     Type
  2877 ;;                  1    wreg      void 
  2878 ;; Registers used:
  2879 ;;		wreg, status,2, status,0
  2880 ;; Tracked objects:
  2881 ;;		On entry : 0/0
  2882 ;;		On exit  : 0/0
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2885 ;;      Params:         0       1       0       0       0
  2886 ;;      Locals:         0       1       0       0       0
  2887 ;;      Temps:          0       0       0       0       0
  2888 ;;      Totals:         0       2       0       0       0
  2889 ;;Total ram usage:        2 bytes
  2890 ;; Hardware stack levels used: 1
  2891 ;; Hardware stack levels required when called: 2
  2892 ;; This function calls:
  2893 ;;		Nothing
  2894 ;; This function is called by:
  2895 ;;		_main
  2896 ;;		_UART_ReadFINALE
  2897 ;;		_UART_Read1
  2898 ;;		_initLCD
  2899 ;;		_lcdPrint
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903     0E09                     _lcdSend:	
  2904                           ;psect for function _lcdSend
  2905                           
  2906                           
  2907                           ;incstack = 0
  2908                           ; Regs used in _lcdSend: [wreg+status,2+status,0]
  2909                           ;lcdSend@dato stored from wreg
  2910     0E09  1283               	bcf	3,5	;RP0=0, select bank0
  2911     0E0A  1303               	bcf	3,6	;RP1=0, select bank0
  2912     0E0B  00CA               	movwf	lcdSend@dato
  2913     0E0C                     l2370:
  2914                           
  2915                           ;main.c: 368:     TRISD = 0x00;
  2916     0E0C  1683               	bsf	3,5	;RP0=1, select bank1
  2917     0E0D  1303               	bcf	3,6	;RP1=0, select bank1
  2918     0E0E  0188               	clrf	8	;volatile
  2919     0E0F                     l2372:
  2920                           
  2921                           ;main.c: 369:     TRISEbits.TRISE1 = 0;
  2922     0E0F  1089               	bcf	9,1	;volatile
  2923     0E10                     l2374:
  2924                           
  2925                           ;main.c: 370:     TRISEbits.TRISE2 = 0;
  2926     0E10  1109               	bcf	9,2	;volatile
  2927     0E11                     l2376:
  2928                           
  2929                           ;main.c: 375:     PORTEbits.RE1 = 1;
  2930     0E11  1283               	bcf	3,5	;RP0=0, select bank0
  2931     0E12  1303               	bcf	3,6	;RP1=0, select bank0
  2932     0E13  1489               	bsf	9,1	;volatile
  2933     0E14                     l2378:
  2934                           
  2935                           ;main.c: 377:     PORTD = dato;
  2936     0E14  084A               	movf	lcdSend@dato,w
  2937     0E15  0088               	movwf	8	;volatile
  2938     0E16                     l2380:
  2939                           
  2940                           ;main.c: 378:     PORTEbits.RE2 = tipo;
  2941     0E16  0C49               	rrf	lcdSend@tipo,w
  2942     0E17  1C03               	skipc
  2943     0E18  1109               	bcf	9,2	;volatile
  2944     0E19  1803               	skipnc
  2945     0E1A  1509               	bsf	9,2	;volatile
  2946     0E1B                     l2382:
  2947                           
  2948                           ;main.c: 380:     PORTEbits.RE1 = 0;
  2949     0E1B  1089               	bcf	9,1	;volatile
  2950     0E1C                     l2384:
  2951                           
  2952                           ;main.c: 382:     PORTEbits.RE1 = 1;
  2953     0E1C  1489               	bsf	9,1	;volatile
  2954     0E1D                     l245:
  2955     0E1D  0008               	return
  2956     0E1E                     __end_of_lcdSend:
  2957                           
  2958                           	psect	text6
  2959     0F84                     __ptext6:	
  2960 ;; *************** function _intToString *****************
  2961 ;; Defined at:
  2962 ;;		line 608 in file "main.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;  n               2   19[BANK0 ] int 
  2965 ;;  str             1   21[BANK0 ] PTR unsigned char 
  2966 ;;		 -> print_countdown(3), 
  2967 ;; Auto vars:     Size  Location     Type
  2968 ;;  t               1   25[BANK0 ] unsigned char 
  2969 ;;  i               1   27[BANK0 ] unsigned char 
  2970 ;;  cifre           1   26[BANK0 ] unsigned char 
  2971 ;; Return value:  Size  Location     Type
  2972 ;;                  1    wreg      void 
  2973 ;; Registers used:
  2974 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2980 ;;      Params:         0       3       0       0       0
  2981 ;;      Locals:         0       3       0       0       0
  2982 ;;      Temps:          0       3       0       0       0
  2983 ;;      Totals:         0       9       0       0       0
  2984 ;;Total ram usage:        9 bytes
  2985 ;; Hardware stack levels used: 1
  2986 ;; Hardware stack levels required when called: 4
  2987 ;; This function calls:
  2988 ;;		___awdiv
  2989 ;;		___awmod
  2990 ;;		_potenza
  2991 ;; This function is called by:
  2992 ;;		_UART_ReadFINALE
  2993 ;;		_UART_Read1
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997     0F84                     _intToString:	
  2998                           ;psect for function _intToString
  2999                           
  3000     0F84                     l2454:	
  3001                           ;incstack = 0
  3002                           ; Regs used in _intToString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3003                           
  3004                           
  3005                           ;main.c: 611:     char cifre = 1;
  3006     0F84  1283               	bcf	3,5	;RP0=0, select bank0
  3007     0F85  1303               	bcf	3,6	;RP1=0, select bank0
  3008     0F86  01E3               	clrf	intToString@cifre
  3009     0F87  0AE3               	incf	intToString@cifre,f
  3010     0F88                     l2456:
  3011                           
  3012                           ;main.c: 614:     while (n / potenza(10, cifre)) cifre++;
  3013     0F88  2F8D               	goto	l2460
  3014     0F89                     l2458:
  3015     0F89  3001               	movlw	1
  3016     0F8A  00DF               	movwf	??_intToString
  3017     0F8B  085F               	movf	??_intToString,w
  3018     0F8C  07E3               	addwf	intToString@cifre,f
  3019     0F8D                     l2460:
  3020     0F8D  0863               	movf	intToString@cifre,w
  3021     0F8E  00CD               	movwf	potenza@e
  3022     0F8F  300A               	movlw	10
  3023     0F90  120A  158A  264C  120A  158A  	fcall	_potenza
  3024     0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3025     0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3026     0F97  00DF               	movwf	??_intToString
  3027     0F98  01E0               	clrf	??_intToString+1
  3028     0F99  085F               	movf	??_intToString,w
  3029     0F9A  00D3               	movwf	___awdiv@divisor
  3030     0F9B  0860               	movf	??_intToString+1,w
  3031     0F9C  00D4               	movwf	___awdiv@divisor+1
  3032     0F9D  085D               	movf	intToString@n+1,w
  3033     0F9E  00D6               	movwf	___awdiv@dividend+1
  3034     0F9F  085C               	movf	intToString@n,w
  3035     0FA0  00D5               	movwf	___awdiv@dividend
  3036     0FA1  120A  158A  271B  120A  158A  	fcall	___awdiv
  3037     0FA6  1283               	bcf	3,5	;RP0=0, select bank0
  3038     0FA7  1303               	bcf	3,6	;RP1=0, select bank0
  3039     0FA8  0853               	movf	?___awdiv,w
  3040     0FA9  0454               	iorwf	?___awdiv+1,w
  3041     0FAA  1D03               	btfss	3,2
  3042     0FAB  2FAD               	goto	u2611
  3043     0FAC  2FAE               	goto	u2610
  3044     0FAD                     u2611:
  3045     0FAD  2F89               	goto	l2458
  3046     0FAE                     u2610:
  3047     0FAE                     l2462:
  3048                           
  3049                           ;main.c: 616:     for (i = 0; i < cifre; i++) {
  3050     0FAE  01E4               	clrf	intToString@i
  3051     0FAF  2FF2               	goto	l2472
  3052     0FB0                     l2464:
  3053                           
  3054                           ;main.c: 617:         char t = potenza(10, cifre - 1 - i);
  3055     0FB0  0864               	movf	intToString@i,w
  3056     0FB1  0263               	subwf	intToString@cifre,w
  3057     0FB2  3EFF               	addlw	255
  3058     0FB3  00CD               	movwf	potenza@e
  3059     0FB4  300A               	movlw	10
  3060     0FB5  120A  158A  264C  120A  158A  	fcall	_potenza
  3061     0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  3062     0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  3063     0FBC  00E2               	movwf	intToString@t
  3064     0FBD                     l2466:
  3065                           
  3066                           ;main.c: 618:         str[i] = '0' + (char) (n / t);
  3067     0FBD  0864               	movf	intToString@i,w
  3068     0FBE  075E               	addwf	intToString@str,w
  3069     0FBF  00DF               	movwf	??_intToString
  3070     0FC0  085F               	movf	??_intToString,w
  3071     0FC1  0084               	movwf	4
  3072     0FC2  0862               	movf	intToString@t,w
  3073     0FC3  00E0               	movwf	??_intToString+1
  3074     0FC4  01E1               	clrf	??_intToString+2
  3075     0FC5  0860               	movf	??_intToString+1,w
  3076     0FC6  00D3               	movwf	___awdiv@divisor
  3077     0FC7  0861               	movf	??_intToString+2,w
  3078     0FC8  00D4               	movwf	___awdiv@divisor+1
  3079     0FC9  085D               	movf	intToString@n+1,w
  3080     0FCA  00D6               	movwf	___awdiv@dividend+1
  3081     0FCB  085C               	movf	intToString@n,w
  3082     0FCC  00D5               	movwf	___awdiv@dividend
  3083     0FCD  120A  158A  271B  120A  158A  	fcall	___awdiv
  3084     0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  3085     0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  3086     0FD4  0853               	movf	?___awdiv,w
  3087     0FD5  3E30               	addlw	48
  3088     0FD6  1383               	bcf	3,7	;select IRP bank0
  3089     0FD7  0080               	movwf	0
  3090     0FD8                     l2468:
  3091                           
  3092                           ;main.c: 619:         n = n % t;
  3093     0FD8  0862               	movf	intToString@t,w
  3094     0FD9  00DF               	movwf	??_intToString
  3095     0FDA  01E0               	clrf	??_intToString+1
  3096     0FDB  085F               	movf	??_intToString,w
  3097     0FDC  00C9               	movwf	___awmod@divisor
  3098     0FDD  0860               	movf	??_intToString+1,w
  3099     0FDE  00CA               	movwf	___awmod@divisor+1
  3100     0FDF  085D               	movf	intToString@n+1,w
  3101     0FE0  00CC               	movwf	___awmod@dividend+1
  3102     0FE1  085C               	movf	intToString@n,w
  3103     0FE2  00CB               	movwf	___awmod@dividend
  3104     0FE3  120A  158A  26C0  120A  158A  	fcall	___awmod
  3105     0FE8  1283               	bcf	3,5	;RP0=0, select bank0
  3106     0FE9  1303               	bcf	3,6	;RP1=0, select bank0
  3107     0FEA  084A               	movf	?___awmod+1,w
  3108     0FEB  00DD               	movwf	intToString@n+1
  3109     0FEC  0849               	movf	?___awmod,w
  3110     0FED  00DC               	movwf	intToString@n
  3111     0FEE                     l2470:
  3112                           
  3113                           ;main.c: 620:     }
  3114     0FEE  3001               	movlw	1
  3115     0FEF  00DF               	movwf	??_intToString
  3116     0FF0  085F               	movf	??_intToString,w
  3117     0FF1  07E4               	addwf	intToString@i,f
  3118     0FF2                     l2472:
  3119     0FF2  0863               	movf	intToString@cifre,w
  3120     0FF3  0264               	subwf	intToString@i,w
  3121     0FF4  1C03               	skipc
  3122     0FF5  2FF7               	goto	u2621
  3123     0FF6  2FF8               	goto	u2620
  3124     0FF7                     u2621:
  3125     0FF7  2FB0               	goto	l2464
  3126     0FF8                     u2620:
  3127     0FF8                     l2474:
  3128                           
  3129                           ;main.c: 622:     str[i] = '\0';
  3130     0FF8  0864               	movf	intToString@i,w
  3131     0FF9  075E               	addwf	intToString@str,w
  3132     0FFA  00DF               	movwf	??_intToString
  3133     0FFB  085F               	movf	??_intToString,w
  3134     0FFC  0084               	movwf	4
  3135     0FFD  1383               	bcf	3,7	;select IRP bank0
  3136     0FFE  0180               	clrf	0
  3137     0FFF                     l308:
  3138     0FFF  0008               	return
  3139     1000                     __end_of_intToString:
  3140                           
  3141                           	psect	text7
  3142     0E4C                     __ptext7:	
  3143 ;; *************** function _potenza *****************
  3144 ;; Defined at:
  3145 ;;		line 600 in file "main.c"
  3146 ;; Parameters:    Size  Location     Type
  3147 ;;  b               1    wreg     unsigned char 
  3148 ;;  e               1    4[BANK0 ] unsigned char 
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;  b               1    6[BANK0 ] unsigned char 
  3151 ;;  i               2    7[BANK0 ] int 
  3152 ;;  n               1    9[BANK0 ] unsigned char 
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  1    wreg      unsigned char 
  3155 ;; Registers used:
  3156 ;;		wreg, status,2, status,0, pclath, cstack
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3162 ;;      Params:         0       1       0       0       0
  3163 ;;      Locals:         0       4       0       0       0
  3164 ;;      Temps:          0       1       0       0       0
  3165 ;;      Totals:         0       6       0       0       0
  3166 ;;Total ram usage:        6 bytes
  3167 ;; Hardware stack levels used: 1
  3168 ;; Hardware stack levels required when called: 3
  3169 ;; This function calls:
  3170 ;;		___bmul
  3171 ;; This function is called by:
  3172 ;;		_intToString
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176     0E4C                     _potenza:	
  3177                           ;psect for function _potenza
  3178                           
  3179                           
  3180                           ;incstack = 0
  3181                           ; Regs used in _potenza: [wreg+status,2+status,0+pclath+cstack]
  3182                           ;potenza@b stored from wreg
  3183     0E4C  1283               	bcf	3,5	;RP0=0, select bank0
  3184     0E4D  1303               	bcf	3,6	;RP1=0, select bank0
  3185     0E4E  00CF               	movwf	potenza@b
  3186     0E4F                     l2386:
  3187                           
  3188                           ;main.c: 601:     char n = 1;
  3189     0E4F  01D2               	clrf	potenza@n
  3190     0E50  0AD2               	incf	potenza@n,f
  3191     0E51                     l2388:
  3192                           
  3193                           ;main.c: 602:     for (int i = 0; i < e; i++) {
  3194     0E51  01D0               	clrf	potenza@i
  3195     0E52  01D1               	clrf	potenza@i+1
  3196     0E53  2E67               	goto	l2394
  3197     0E54                     l2390:
  3198                           
  3199                           ;main.c: 603:         n = n * b;
  3200     0E54  1283               	bcf	3,5	;RP0=0, select bank0
  3201     0E55  1303               	bcf	3,6	;RP1=0, select bank0
  3202     0E56  084F               	movf	potenza@b,w
  3203     0E57  00C9               	movwf	___bmul@multiplicand
  3204     0E58  0852               	movf	potenza@n,w
  3205     0E59  120A  158A  2635  120A  158A  	fcall	___bmul
  3206     0E5E  1283               	bcf	3,5	;RP0=0, select bank0
  3207     0E5F  1303               	bcf	3,6	;RP1=0, select bank0
  3208     0E60  00D2               	movwf	potenza@n
  3209     0E61                     l2392:
  3210                           
  3211                           ;main.c: 604:     }
  3212     0E61  3001               	movlw	1
  3213     0E62  07D0               	addwf	potenza@i,f
  3214     0E63  1803               	skipnc
  3215     0E64  0AD1               	incf	potenza@i+1,f
  3216     0E65  3000               	movlw	0
  3217     0E66  07D1               	addwf	potenza@i+1,f
  3218     0E67                     l2394:
  3219     0E67  0851               	movf	potenza@i+1,w
  3220     0E68  3A80               	xorlw	128
  3221     0E69  00CE               	movwf	??_potenza
  3222     0E6A  3080               	movlw	128
  3223     0E6B  024E               	subwf	??_potenza,w
  3224     0E6C  1D03               	skipz
  3225     0E6D  2E70               	goto	u2475
  3226     0E6E  084D               	movf	potenza@e,w
  3227     0E6F  0250               	subwf	potenza@i,w
  3228     0E70                     u2475:
  3229     0E70  1C03               	skipc
  3230     0E71  2E73               	goto	u2471
  3231     0E72  2E74               	goto	u2470
  3232     0E73                     u2471:
  3233     0E73  2E54               	goto	l2390
  3234     0E74                     u2470:
  3235     0E74                     l2396:
  3236                           
  3237                           ;main.c: 605:     return n;
  3238     0E74  1283               	bcf	3,5	;RP0=0, select bank0
  3239     0E75  1303               	bcf	3,6	;RP1=0, select bank0
  3240     0E76  0852               	movf	potenza@n,w
  3241     0E77                     l299:
  3242     0E77  0008               	return
  3243     0E78                     __end_of_potenza:
  3244                           
  3245                           	psect	text8
  3246     0E35                     __ptext8:	
  3247 ;; *************** function ___bmul *****************
  3248 ;; Defined at:
  3249 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  3250 ;; Parameters:    Size  Location     Type
  3251 ;;  multiplier      1    wreg     unsigned char 
  3252 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3253 ;; Auto vars:     Size  Location     Type
  3254 ;;  multiplier      1    3[BANK0 ] unsigned char 
  3255 ;;  product         1    2[BANK0 ] unsigned char 
  3256 ;; Return value:  Size  Location     Type
  3257 ;;                  1    wreg      unsigned char 
  3258 ;; Registers used:
  3259 ;;		wreg, status,2, status,0
  3260 ;; Tracked objects:
  3261 ;;		On entry : 0/0
  3262 ;;		On exit  : 0/0
  3263 ;;		Unchanged: 0/0
  3264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3265 ;;      Params:         0       1       0       0       0
  3266 ;;      Locals:         0       2       0       0       0
  3267 ;;      Temps:          0       1       0       0       0
  3268 ;;      Totals:         0       4       0       0       0
  3269 ;;Total ram usage:        4 bytes
  3270 ;; Hardware stack levels used: 1
  3271 ;; Hardware stack levels required when called: 2
  3272 ;; This function calls:
  3273 ;;		Nothing
  3274 ;; This function is called by:
  3275 ;;		_potenza
  3276 ;; This function uses a non-reentrant model
  3277 ;;
  3278                           
  3279     0E35                     ___bmul:	
  3280                           ;psect for function ___bmul
  3281                           
  3282                           
  3283                           ;incstack = 0
  3284                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3285                           ;___bmul@multiplier stored from wreg
  3286     0E35  1283               	bcf	3,5	;RP0=0, select bank0
  3287     0E36  1303               	bcf	3,6	;RP1=0, select bank0
  3288     0E37  00CC               	movwf	___bmul@multiplier
  3289     0E38                     l2356:
  3290     0E38  01CB               	clrf	___bmul@product
  3291     0E39                     l2358:
  3292     0E39  1C4C               	btfss	___bmul@multiplier,0
  3293     0E3A  2E3C               	goto	u2451
  3294     0E3B  2E3D               	goto	u2450
  3295     0E3C                     u2451:
  3296     0E3C  2E41               	goto	l2362
  3297     0E3D                     u2450:
  3298     0E3D                     l2360:
  3299     0E3D  0849               	movf	___bmul@multiplicand,w
  3300     0E3E  00CA               	movwf	??___bmul
  3301     0E3F  084A               	movf	??___bmul,w
  3302     0E40  07CB               	addwf	___bmul@product,f
  3303     0E41                     l2362:
  3304     0E41  1003               	clrc
  3305     0E42  0DC9               	rlf	___bmul@multiplicand,f
  3306     0E43                     l2364:
  3307     0E43  1003               	clrc
  3308     0E44  0CCC               	rrf	___bmul@multiplier,f
  3309     0E45  084C               	movf	___bmul@multiplier,w
  3310     0E46  1D03               	btfss	3,2
  3311     0E47  2E49               	goto	u2461
  3312     0E48  2E4A               	goto	u2460
  3313     0E49                     u2461:
  3314     0E49  2E39               	goto	l2358
  3315     0E4A                     u2460:
  3316     0E4A                     l2366:
  3317     0E4A  084B               	movf	___bmul@product,w
  3318     0E4B                     l420:
  3319     0E4B  0008               	return
  3320     0E4C                     __end_of___bmul:
  3321                           
  3322                           	psect	text9
  3323     0EC0                     __ptext9:	
  3324 ;; *************** function ___awmod *****************
  3325 ;; Defined at:
  3326 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;  divisor         2    0[BANK0 ] int 
  3329 ;;  dividend        2    2[BANK0 ] int 
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;  sign            1    6[BANK0 ] unsigned char 
  3332 ;;  counter         1    5[BANK0 ] unsigned char 
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  2    0[BANK0 ] int 
  3335 ;; Registers used:
  3336 ;;		wreg, status,2, status,0
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3342 ;;      Params:         0       4       0       0       0
  3343 ;;      Locals:         0       2       0       0       0
  3344 ;;      Temps:          0       1       0       0       0
  3345 ;;      Totals:         0       7       0       0       0
  3346 ;;Total ram usage:        7 bytes
  3347 ;; Hardware stack levels used: 1
  3348 ;; Hardware stack levels required when called: 2
  3349 ;; This function calls:
  3350 ;;		Nothing
  3351 ;; This function is called by:
  3352 ;;		_intToString
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356     0EC0                     ___awmod:	
  3357                           ;psect for function ___awmod
  3358                           
  3359     0EC0                     l2400:	
  3360                           ;incstack = 0
  3361                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3362                           
  3363     0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  3364     0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  3365     0EC2  01CF               	clrf	___awmod@sign
  3366     0EC3                     l2402:
  3367     0EC3  1FCC               	btfss	___awmod@dividend+1,7
  3368     0EC4  2EC6               	goto	u2481
  3369     0EC5  2EC7               	goto	u2480
  3370     0EC6                     u2481:
  3371     0EC6  2ECE               	goto	l2408
  3372     0EC7                     u2480:
  3373     0EC7                     l2404:
  3374     0EC7  09CB               	comf	___awmod@dividend,f
  3375     0EC8  09CC               	comf	___awmod@dividend+1,f
  3376     0EC9  0ACB               	incf	___awmod@dividend,f
  3377     0ECA  1903               	skipnz
  3378     0ECB  0ACC               	incf	___awmod@dividend+1,f
  3379     0ECC                     l2406:
  3380     0ECC  01CF               	clrf	___awmod@sign
  3381     0ECD  0ACF               	incf	___awmod@sign,f
  3382     0ECE                     l2408:
  3383     0ECE  1FCA               	btfss	___awmod@divisor+1,7
  3384     0ECF  2ED1               	goto	u2491
  3385     0ED0  2ED2               	goto	u2490
  3386     0ED1                     u2491:
  3387     0ED1  2ED7               	goto	l2412
  3388     0ED2                     u2490:
  3389     0ED2                     l2410:
  3390     0ED2  09C9               	comf	___awmod@divisor,f
  3391     0ED3  09CA               	comf	___awmod@divisor+1,f
  3392     0ED4  0AC9               	incf	___awmod@divisor,f
  3393     0ED5  1903               	skipnz
  3394     0ED6  0ACA               	incf	___awmod@divisor+1,f
  3395     0ED7                     l2412:
  3396     0ED7  0849               	movf	___awmod@divisor,w
  3397     0ED8  044A               	iorwf	___awmod@divisor+1,w
  3398     0ED9  1903               	btfsc	3,2
  3399     0EDA  2EDC               	goto	u2501
  3400     0EDB  2EDD               	goto	u2500
  3401     0EDC                     u2501:
  3402     0EDC  2F0C               	goto	l2430
  3403     0EDD                     u2500:
  3404     0EDD                     l2414:
  3405     0EDD  01CE               	clrf	___awmod@counter
  3406     0EDE  0ACE               	incf	___awmod@counter,f
  3407     0EDF  2EEB               	goto	l2420
  3408     0EE0                     l2416:
  3409     0EE0  3001               	movlw	1
  3410     0EE1                     u2515:
  3411     0EE1  1003               	clrc
  3412     0EE2  0DC9               	rlf	___awmod@divisor,f
  3413     0EE3  0DCA               	rlf	___awmod@divisor+1,f
  3414     0EE4  3EFF               	addlw	-1
  3415     0EE5  1D03               	skipz
  3416     0EE6  2EE1               	goto	u2515
  3417     0EE7                     l2418:
  3418     0EE7  3001               	movlw	1
  3419     0EE8  00CD               	movwf	??___awmod
  3420     0EE9  084D               	movf	??___awmod,w
  3421     0EEA  07CE               	addwf	___awmod@counter,f
  3422     0EEB                     l2420:
  3423     0EEB  1FCA               	btfss	___awmod@divisor+1,7
  3424     0EEC  2EEE               	goto	u2521
  3425     0EED  2EEF               	goto	u2520
  3426     0EEE                     u2521:
  3427     0EEE  2EE0               	goto	l2416
  3428     0EEF                     u2520:
  3429     0EEF                     l2422:
  3430     0EEF  084A               	movf	___awmod@divisor+1,w
  3431     0EF0  024C               	subwf	___awmod@dividend+1,w
  3432     0EF1  1D03               	skipz
  3433     0EF2  2EF5               	goto	u2535
  3434     0EF3  0849               	movf	___awmod@divisor,w
  3435     0EF4  024B               	subwf	___awmod@dividend,w
  3436     0EF5                     u2535:
  3437     0EF5  1C03               	skipc
  3438     0EF6  2EF8               	goto	u2531
  3439     0EF7  2EF9               	goto	u2530
  3440     0EF8                     u2531:
  3441     0EF8  2EFF               	goto	l2426
  3442     0EF9                     u2530:
  3443     0EF9                     l2424:
  3444     0EF9  0849               	movf	___awmod@divisor,w
  3445     0EFA  02CB               	subwf	___awmod@dividend,f
  3446     0EFB  084A               	movf	___awmod@divisor+1,w
  3447     0EFC  1C03               	skipc
  3448     0EFD  03CC               	decf	___awmod@dividend+1,f
  3449     0EFE  02CC               	subwf	___awmod@dividend+1,f
  3450     0EFF                     l2426:
  3451     0EFF  3001               	movlw	1
  3452     0F00                     u2545:
  3453     0F00  1003               	clrc
  3454     0F01  0CCA               	rrf	___awmod@divisor+1,f
  3455     0F02  0CC9               	rrf	___awmod@divisor,f
  3456     0F03  3EFF               	addlw	-1
  3457     0F04  1D03               	skipz
  3458     0F05  2F00               	goto	u2545
  3459     0F06                     l2428:
  3460     0F06  3001               	movlw	1
  3461     0F07  02CE               	subwf	___awmod@counter,f
  3462     0F08  1D03               	btfss	3,2
  3463     0F09  2F0B               	goto	u2551
  3464     0F0A  2F0C               	goto	u2550
  3465     0F0B                     u2551:
  3466     0F0B  2EEF               	goto	l2422
  3467     0F0C                     u2550:
  3468     0F0C                     l2430:
  3469     0F0C  084F               	movf	___awmod@sign,w
  3470     0F0D  1903               	btfsc	3,2
  3471     0F0E  2F10               	goto	u2561
  3472     0F0F  2F11               	goto	u2560
  3473     0F10                     u2561:
  3474     0F10  2F16               	goto	l2434
  3475     0F11                     u2560:
  3476     0F11                     l2432:
  3477     0F11  09CB               	comf	___awmod@dividend,f
  3478     0F12  09CC               	comf	___awmod@dividend+1,f
  3479     0F13  0ACB               	incf	___awmod@dividend,f
  3480     0F14  1903               	skipnz
  3481     0F15  0ACC               	incf	___awmod@dividend+1,f
  3482     0F16                     l2434:
  3483     0F16  084C               	movf	___awmod@dividend+1,w
  3484     0F17  00CA               	movwf	?___awmod+1
  3485     0F18  084B               	movf	___awmod@dividend,w
  3486     0F19  00C9               	movwf	?___awmod
  3487     0F1A                     l560:
  3488     0F1A  0008               	return
  3489     0F1B                     __end_of___awmod:
  3490                           
  3491                           	psect	text10
  3492     0F1B                     __ptext10:	
  3493 ;; *************** function ___awdiv *****************
  3494 ;; Defined at:
  3495 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;  divisor         2   10[BANK0 ] int 
  3498 ;;  dividend        2   12[BANK0 ] int 
  3499 ;; Auto vars:     Size  Location     Type
  3500 ;;  quotient        2   17[BANK0 ] int 
  3501 ;;  sign            1   16[BANK0 ] unsigned char 
  3502 ;;  counter         1   15[BANK0 ] unsigned char 
  3503 ;; Return value:  Size  Location     Type
  3504 ;;                  2   10[BANK0 ] int 
  3505 ;; Registers used:
  3506 ;;		wreg, status,2, status,0
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3512 ;;      Params:         0       4       0       0       0
  3513 ;;      Locals:         0       4       0       0       0
  3514 ;;      Temps:          0       1       0       0       0
  3515 ;;      Totals:         0       9       0       0       0
  3516 ;;Total ram usage:        9 bytes
  3517 ;; Hardware stack levels used: 1
  3518 ;; Hardware stack levels required when called: 2
  3519 ;; This function calls:
  3520 ;;		Nothing
  3521 ;; This function is called by:
  3522 ;;		_intToString
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526     0F1B                     ___awdiv:	
  3527                           ;psect for function ___awdiv
  3528                           
  3529     0F1B                     l1672:	
  3530                           ;incstack = 0
  3531                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3532                           
  3533     0F1B  1283               	bcf	3,5	;RP0=0, select bank0
  3534     0F1C  1303               	bcf	3,6	;RP1=0, select bank0
  3535     0F1D  01D9               	clrf	___awdiv@sign
  3536     0F1E                     l1674:
  3537     0F1E  1FD4               	btfss	___awdiv@divisor+1,7
  3538     0F1F  2F21               	goto	u1261
  3539     0F20  2F22               	goto	u1260
  3540     0F21                     u1261:
  3541     0F21  2F29               	goto	l1680
  3542     0F22                     u1260:
  3543     0F22                     l1676:
  3544     0F22  09D3               	comf	___awdiv@divisor,f
  3545     0F23  09D4               	comf	___awdiv@divisor+1,f
  3546     0F24  0AD3               	incf	___awdiv@divisor,f
  3547     0F25  1903               	skipnz
  3548     0F26  0AD4               	incf	___awdiv@divisor+1,f
  3549     0F27                     l1678:
  3550     0F27  01D9               	clrf	___awdiv@sign
  3551     0F28  0AD9               	incf	___awdiv@sign,f
  3552     0F29                     l1680:
  3553     0F29  1FD6               	btfss	___awdiv@dividend+1,7
  3554     0F2A  2F2C               	goto	u1271
  3555     0F2B  2F2D               	goto	u1270
  3556     0F2C                     u1271:
  3557     0F2C  2F36               	goto	l1686
  3558     0F2D                     u1270:
  3559     0F2D                     l1682:
  3560     0F2D  09D5               	comf	___awdiv@dividend,f
  3561     0F2E  09D6               	comf	___awdiv@dividend+1,f
  3562     0F2F  0AD5               	incf	___awdiv@dividend,f
  3563     0F30  1903               	skipnz
  3564     0F31  0AD6               	incf	___awdiv@dividend+1,f
  3565     0F32                     l1684:
  3566     0F32  3001               	movlw	1
  3567     0F33  00D7               	movwf	??___awdiv
  3568     0F34  0857               	movf	??___awdiv,w
  3569     0F35  06D9               	xorwf	___awdiv@sign,f
  3570     0F36                     l1686:
  3571     0F36  01DA               	clrf	___awdiv@quotient
  3572     0F37  01DB               	clrf	___awdiv@quotient+1
  3573     0F38                     l1688:
  3574     0F38  0853               	movf	___awdiv@divisor,w
  3575     0F39  0454               	iorwf	___awdiv@divisor+1,w
  3576     0F3A  1903               	btfsc	3,2
  3577     0F3B  2F3D               	goto	u1281
  3578     0F3C  2F3E               	goto	u1280
  3579     0F3D                     u1281:
  3580     0F3D  2F75               	goto	l1708
  3581     0F3E                     u1280:
  3582     0F3E                     l1690:
  3583     0F3E  01D8               	clrf	___awdiv@counter
  3584     0F3F  0AD8               	incf	___awdiv@counter,f
  3585     0F40  2F4C               	goto	l1696
  3586     0F41                     l1692:
  3587     0F41  3001               	movlw	1
  3588     0F42                     u1295:
  3589     0F42  1003               	clrc
  3590     0F43  0DD3               	rlf	___awdiv@divisor,f
  3591     0F44  0DD4               	rlf	___awdiv@divisor+1,f
  3592     0F45  3EFF               	addlw	-1
  3593     0F46  1D03               	skipz
  3594     0F47  2F42               	goto	u1295
  3595     0F48                     l1694:
  3596     0F48  3001               	movlw	1
  3597     0F49  00D7               	movwf	??___awdiv
  3598     0F4A  0857               	movf	??___awdiv,w
  3599     0F4B  07D8               	addwf	___awdiv@counter,f
  3600     0F4C                     l1696:
  3601     0F4C  1FD4               	btfss	___awdiv@divisor+1,7
  3602     0F4D  2F4F               	goto	u1301
  3603     0F4E  2F50               	goto	u1300
  3604     0F4F                     u1301:
  3605     0F4F  2F41               	goto	l1692
  3606     0F50                     u1300:
  3607     0F50                     l1698:
  3608     0F50  3001               	movlw	1
  3609     0F51                     u1315:
  3610     0F51  1003               	clrc
  3611     0F52  0DDA               	rlf	___awdiv@quotient,f
  3612     0F53  0DDB               	rlf	___awdiv@quotient+1,f
  3613     0F54  3EFF               	addlw	-1
  3614     0F55  1D03               	skipz
  3615     0F56  2F51               	goto	u1315
  3616     0F57  0854               	movf	___awdiv@divisor+1,w
  3617     0F58  0256               	subwf	___awdiv@dividend+1,w
  3618     0F59  1D03               	skipz
  3619     0F5A  2F5D               	goto	u1325
  3620     0F5B  0853               	movf	___awdiv@divisor,w
  3621     0F5C  0255               	subwf	___awdiv@dividend,w
  3622     0F5D                     u1325:
  3623     0F5D  1C03               	skipc
  3624     0F5E  2F60               	goto	u1321
  3625     0F5F  2F61               	goto	u1320
  3626     0F60                     u1321:
  3627     0F60  2F68               	goto	l1704
  3628     0F61                     u1320:
  3629     0F61                     l1700:
  3630     0F61  0853               	movf	___awdiv@divisor,w
  3631     0F62  02D5               	subwf	___awdiv@dividend,f
  3632     0F63  0854               	movf	___awdiv@divisor+1,w
  3633     0F64  1C03               	skipc
  3634     0F65  03D6               	decf	___awdiv@dividend+1,f
  3635     0F66  02D6               	subwf	___awdiv@dividend+1,f
  3636     0F67                     l1702:
  3637     0F67  145A               	bsf	___awdiv@quotient,0
  3638     0F68                     l1704:
  3639     0F68  3001               	movlw	1
  3640     0F69                     u1335:
  3641     0F69  1003               	clrc
  3642     0F6A  0CD4               	rrf	___awdiv@divisor+1,f
  3643     0F6B  0CD3               	rrf	___awdiv@divisor,f
  3644     0F6C  3EFF               	addlw	-1
  3645     0F6D  1D03               	skipz
  3646     0F6E  2F69               	goto	u1335
  3647     0F6F                     l1706:
  3648     0F6F  3001               	movlw	1
  3649     0F70  02D8               	subwf	___awdiv@counter,f
  3650     0F71  1D03               	btfss	3,2
  3651     0F72  2F74               	goto	u1341
  3652     0F73  2F75               	goto	u1340
  3653     0F74                     u1341:
  3654     0F74  2F50               	goto	l1698
  3655     0F75                     u1340:
  3656     0F75                     l1708:
  3657     0F75  0859               	movf	___awdiv@sign,w
  3658     0F76  1903               	btfsc	3,2
  3659     0F77  2F79               	goto	u1351
  3660     0F78  2F7A               	goto	u1350
  3661     0F79                     u1351:
  3662     0F79  2F7F               	goto	l1712
  3663     0F7A                     u1350:
  3664     0F7A                     l1710:
  3665     0F7A  09DA               	comf	___awdiv@quotient,f
  3666     0F7B  09DB               	comf	___awdiv@quotient+1,f
  3667     0F7C  0ADA               	incf	___awdiv@quotient,f
  3668     0F7D  1903               	skipnz
  3669     0F7E  0ADB               	incf	___awdiv@quotient+1,f
  3670     0F7F                     l1712:
  3671     0F7F  085B               	movf	___awdiv@quotient+1,w
  3672     0F80  00D4               	movwf	?___awdiv+1
  3673     0F81  085A               	movf	___awdiv@quotient,w
  3674     0F82  00D3               	movwf	?___awdiv
  3675     0F83                     l547:
  3676     0F83  0008               	return
  3677     0F84                     __end_of___awdiv:
  3678                           
  3679                           	psect	text11
  3680     0DDE                     __ptext11:	
  3681 ;; *************** function _UART_Write *****************
  3682 ;; Defined at:
  3683 ;;		line 235 in file "main.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;  data            1    wreg     unsigned char 
  3686 ;; Auto vars:     Size  Location     Type
  3687 ;;  data            1    0[BANK0 ] unsigned char 
  3688 ;; Return value:  Size  Location     Type
  3689 ;;                  1    wreg      void 
  3690 ;; Registers used:
  3691 ;;		wreg
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3697 ;;      Params:         0       0       0       0       0
  3698 ;;      Locals:         0       1       0       0       0
  3699 ;;      Temps:          0       0       0       0       0
  3700 ;;      Totals:         0       1       0       0       0
  3701 ;;Total ram usage:        1 bytes
  3702 ;; Hardware stack levels used: 1
  3703 ;; Hardware stack levels required when called: 2
  3704 ;; This function calls:
  3705 ;;		Nothing
  3706 ;; This function is called by:
  3707 ;;		_main
  3708 ;;		_UART_Read1
  3709 ;; This function uses a non-reentrant model
  3710 ;;
  3711                           
  3712     0DDE                     _UART_Write:	
  3713                           ;psect for function _UART_Write
  3714                           
  3715                           
  3716                           ;incstack = 0
  3717                           ; Regs used in _UART_Write: [wreg]
  3718                           ;UART_Write@data stored from wreg
  3719     0DDE  1283               	bcf	3,5	;RP0=0, select bank0
  3720     0DDF  1303               	bcf	3,6	;RP1=0, select bank0
  3721     0DE0  00C9               	movwf	UART_Write@data
  3722     0DE1                     l2446:
  3723     0DE1                     l211:	
  3724                           ;main.c: 236:     while (!TXIF)
  3725                           
  3726                           
  3727                           ;main.c: 236:     while (!TXIF)
  3728     0DE1  1E0C               	btfss	12,4	;volatile
  3729     0DE2  2DE4               	goto	u2601
  3730     0DE3  2DE5               	goto	u2600
  3731     0DE4                     u2601:
  3732     0DE4  2DE1               	goto	l211
  3733     0DE5                     u2600:
  3734     0DE5                     l2448:
  3735                           
  3736                           ;main.c: 238:     TXREG = data;
  3737     0DE5  0849               	movf	UART_Write@data,w
  3738     0DE6  0099               	movwf	25	;volatile
  3739     0DE7                     l214:
  3740     0DE7  0008               	return
  3741     0DE8                     __end_of_UART_Write:
  3742                           
  3743                           	psect	text12
  3744     0DD1                     __ptext12:	
  3745 ;; *************** function _RS485_TxEnable *****************
  3746 ;; Defined at:
  3747 ;;		line 225 in file "main.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;		None
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;		None
  3752 ;; Return value:  Size  Location     Type
  3753 ;;                  1    wreg      void 
  3754 ;; Registers used:
  3755 ;;		None
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3761 ;;      Params:         0       0       0       0       0
  3762 ;;      Locals:         0       0       0       0       0
  3763 ;;      Temps:          0       0       0       0       0
  3764 ;;      Totals:         0       0       0       0       0
  3765 ;;Total ram usage:        0 bytes
  3766 ;; Hardware stack levels used: 1
  3767 ;; Hardware stack levels required when called: 2
  3768 ;; This function calls:
  3769 ;;		Nothing
  3770 ;; This function is called by:
  3771 ;;		_main
  3772 ;;		_UART_Read1
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776     0DD1                     _RS485_TxEnable:	
  3777                           ;psect for function _RS485_TxEnable
  3778                           
  3779     0DD1                     l2450:	
  3780                           ;incstack = 0
  3781                           ; Regs used in _RS485_TxEnable: []
  3782                           
  3783                           
  3784                           ;main.c: 226:     RC0 = 1;
  3785     0DD1  1283               	bcf	3,5	;RP0=0, select bank0
  3786     0DD2  1303               	bcf	3,6	;RP1=0, select bank0
  3787     0DD3  1407               	bsf	7,0	;volatile
  3788                           
  3789                           ;main.c: 227:     RC1 = 0;
  3790     0DD4  1087               	bcf	7,1	;volatile
  3791     0DD5                     l205:
  3792     0DD5  0008               	return
  3793     0DD6                     __end_of_RS485_TxEnable:
  3794                           
  3795                           	psect	text13
  3796     0DCC                     __ptext13:	
  3797 ;; *************** function _RS485_RxEnable *****************
  3798 ;; Defined at:
  3799 ;;		line 230 in file "main.c"
  3800 ;; Parameters:    Size  Location     Type
  3801 ;;		None
  3802 ;; Auto vars:     Size  Location     Type
  3803 ;;		None
  3804 ;; Return value:  Size  Location     Type
  3805 ;;                  1    wreg      void 
  3806 ;; Registers used:
  3807 ;;		None
  3808 ;; Tracked objects:
  3809 ;;		On entry : 0/0
  3810 ;;		On exit  : 0/0
  3811 ;;		Unchanged: 0/0
  3812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3813 ;;      Params:         0       0       0       0       0
  3814 ;;      Locals:         0       0       0       0       0
  3815 ;;      Temps:          0       0       0       0       0
  3816 ;;      Totals:         0       0       0       0       0
  3817 ;;Total ram usage:        0 bytes
  3818 ;; Hardware stack levels used: 1
  3819 ;; Hardware stack levels required when called: 2
  3820 ;; This function calls:
  3821 ;;		Nothing
  3822 ;; This function is called by:
  3823 ;;		_main
  3824 ;;		_UART_Read1
  3825 ;; This function uses a non-reentrant model
  3826 ;;
  3827                           
  3828     0DCC                     _RS485_RxEnable:	
  3829                           ;psect for function _RS485_RxEnable
  3830                           
  3831     0DCC                     l2452:	
  3832                           ;incstack = 0
  3833                           ; Regs used in _RS485_RxEnable: []
  3834                           
  3835                           
  3836                           ;main.c: 231:     RC0 = 0;
  3837     0DCC  1283               	bcf	3,5	;RP0=0, select bank0
  3838     0DCD  1303               	bcf	3,6	;RP1=0, select bank0
  3839     0DCE  1007               	bcf	7,0	;volatile
  3840                           
  3841                           ;main.c: 232:     RC1 = 1;
  3842     0DCF  1487               	bsf	7,1	;volatile
  3843     0DD0                     l208:
  3844     0DD0  0008               	return
  3845     0DD1                     __end_of_RS485_RxEnable:
  3846                           
  3847                           	psect	text14
  3848     0DF7                     __ptext14:	
  3849 ;; *************** function _UART_Init *****************
  3850 ;; Defined at:
  3851 ;;		line 207 in file "main.c"
  3852 ;; Parameters:    Size  Location     Type
  3853 ;;		None
  3854 ;; Auto vars:     Size  Location     Type
  3855 ;;		None
  3856 ;; Return value:  Size  Location     Type
  3857 ;;                  1    wreg      void 
  3858 ;; Registers used:
  3859 ;;		wreg
  3860 ;; Tracked objects:
  3861 ;;		On entry : 0/0
  3862 ;;		On exit  : 0/0
  3863 ;;		Unchanged: 0/0
  3864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3865 ;;      Params:         0       0       0       0       0
  3866 ;;      Locals:         0       0       0       0       0
  3867 ;;      Temps:          0       0       0       0       0
  3868 ;;      Totals:         0       0       0       0       0
  3869 ;;Total ram usage:        0 bytes
  3870 ;; Hardware stack levels used: 1
  3871 ;; Hardware stack levels required when called: 2
  3872 ;; This function calls:
  3873 ;;		Nothing
  3874 ;; This function is called by:
  3875 ;;		_main
  3876 ;; This function uses a non-reentrant model
  3877 ;;
  3878                           
  3879     0DF7                     _UART_Init:	
  3880                           ;psect for function _UART_Init
  3881                           
  3882     0DF7                     l2476:	
  3883                           ;incstack = 0
  3884                           ; Regs used in _UART_Init: [wreg]
  3885                           
  3886                           
  3887                           ;main.c: 209:     TRISC6 = 0;
  3888     0DF7  1683               	bsf	3,5	;RP0=1, select bank1
  3889     0DF8  1303               	bcf	3,6	;RP1=0, select bank1
  3890     0DF9  1307               	bcf	7,6	;volatile
  3891                           
  3892                           ;main.c: 210:     TRISC7 = 1;
  3893     0DFA  1787               	bsf	7,7	;volatile
  3894                           
  3895                           ;main.c: 213:     BRGH = 1;
  3896     0DFB  1518               	bsf	24,2	;volatile
  3897     0DFC                     l2478:
  3898                           
  3899                           ;main.c: 214:     SPBRG = 51;
  3900     0DFC  3033               	movlw	51
  3901     0DFD  0099               	movwf	25	;volatile
  3902     0DFE                     l2480:
  3903                           
  3904                           ;main.c: 217:     SYNC = 0;
  3905     0DFE  1218               	bcf	24,4	;volatile
  3906     0DFF                     l2482:
  3907                           
  3908                           ;main.c: 218:     SPEN = 1;
  3909     0DFF  1283               	bcf	3,5	;RP0=0, select bank0
  3910     0E00  1303               	bcf	3,6	;RP1=0, select bank0
  3911     0E01  1798               	bsf	24,7	;volatile
  3912     0E02                     l2484:
  3913                           
  3914                           ;main.c: 221:     TXEN = 1;
  3915     0E02  1683               	bsf	3,5	;RP0=1, select bank1
  3916     0E03  1303               	bcf	3,6	;RP1=0, select bank1
  3917     0E04  1698               	bsf	24,5	;volatile
  3918     0E05                     l2486:
  3919                           
  3920                           ;main.c: 222:     CREN = 1;
  3921     0E05  1283               	bcf	3,5	;RP0=0, select bank0
  3922     0E06  1303               	bcf	3,6	;RP1=0, select bank0
  3923     0E07  1618               	bsf	24,4	;volatile
  3924     0E08                     l202:
  3925     0E08  0008               	return
  3926     0E09                     __end_of_UART_Init:
  3927                           
  3928                           	psect	text15
  3929     0DE8                     __ptext15:	
  3930 ;; *************** function _Timer0_Init *****************
  3931 ;; Defined at:
  3932 ;;		line 493 in file "main.c"
  3933 ;; Parameters:    Size  Location     Type
  3934 ;;		None
  3935 ;; Auto vars:     Size  Location     Type
  3936 ;;		None
  3937 ;; Return value:  Size  Location     Type
  3938 ;;                  1    wreg      void 
  3939 ;; Registers used:
  3940 ;;		wreg
  3941 ;; Tracked objects:
  3942 ;;		On entry : 0/0
  3943 ;;		On exit  : 0/0
  3944 ;;		Unchanged: 0/0
  3945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3946 ;;      Params:         0       0       0       0       0
  3947 ;;      Locals:         0       0       0       0       0
  3948 ;;      Temps:          0       0       0       0       0
  3949 ;;      Totals:         0       0       0       0       0
  3950 ;;Total ram usage:        0 bytes
  3951 ;; Hardware stack levels used: 1
  3952 ;; Hardware stack levels required when called: 2
  3953 ;; This function calls:
  3954 ;;		Nothing
  3955 ;; This function is called by:
  3956 ;;		_main
  3957 ;; This function uses a non-reentrant model
  3958 ;;
  3959                           
  3960     0DE8                     _Timer0_Init:	
  3961                           ;psect for function _Timer0_Init
  3962                           
  3963     0DE8                     l2512:	
  3964                           ;incstack = 0
  3965                           ; Regs used in _Timer0_Init: [wreg]
  3966                           
  3967                           
  3968                           ;main.c: 495:     T0CS = 0;
  3969     0DE8  1683               	bsf	3,5	;RP0=1, select bank1
  3970     0DE9  1303               	bcf	3,6	;RP1=0, select bank1
  3971     0DEA  1281               	bcf	1,5	;volatile
  3972                           
  3973                           ;main.c: 496:     PSA = 0;
  3974     0DEB  1181               	bcf	1,3	;volatile
  3975                           
  3976                           ;main.c: 497:     PS2 = 1;
  3977     0DEC  1501               	bsf	1,2	;volatile
  3978                           
  3979                           ;main.c: 498:     PS1 = 1;
  3980     0DED  1481               	bsf	1,1	;volatile
  3981                           
  3982                           ;main.c: 499:     PS0 = 1;
  3983     0DEE  1401               	bsf	1,0	;volatile
  3984     0DEF                     l2514:
  3985                           
  3986                           ;main.c: 502:     TMR0 = 6;
  3987     0DEF  3006               	movlw	6
  3988     0DF0  1283               	bcf	3,5	;RP0=0, select bank0
  3989     0DF1  1303               	bcf	3,6	;RP1=0, select bank0
  3990     0DF2  0081               	movwf	1	;volatile
  3991     0DF3                     l2516:
  3992                           
  3993                           ;main.c: 503:     TMR0IF = 0;
  3994     0DF3  110B               	bcf	11,2	;volatile
  3995     0DF4                     l2518:
  3996                           
  3997                           ;main.c: 504:     TMR0IE = 1;
  3998     0DF4  168B               	bsf	11,5	;volatile
  3999     0DF5                     l2520:
  4000                           
  4001                           ;main.c: 505:     GIE = 1;
  4002     0DF5  178B               	bsf	11,7	;volatile
  4003     0DF6                     l274:
  4004     0DF6  0008               	return
  4005     0DF7                     __end_of_Timer0_Init:
  4006                           
  4007                           	psect	text16
  4008     067D                     __ptext16:	
  4009 ;; *************** function _KeyPadReader *****************
  4010 ;; Defined at:
  4011 ;;		line 518 in file "main.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;		None
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;		None
  4016 ;; Return value:  Size  Location     Type
  4017 ;;                  1    wreg      unsigned char 
  4018 ;; Registers used:
  4019 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4020 ;; Tracked objects:
  4021 ;;		On entry : 0/0
  4022 ;;		On exit  : 0/0
  4023 ;;		Unchanged: 0/0
  4024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4025 ;;      Params:         0       0       0       0       0
  4026 ;;      Locals:         0       0       0       0       0
  4027 ;;      Temps:          0       2       0       0       0
  4028 ;;      Totals:         0       2       0       0       0
  4029 ;;Total ram usage:        2 bytes
  4030 ;; Hardware stack levels used: 2
  4031 ;; Hardware stack levels required when called: 2
  4032 ;; This function calls:
  4033 ;;		Nothing
  4034 ;; This function is called by:
  4035 ;;		_main
  4036 ;; This function uses a non-reentrant model
  4037 ;;
  4038                           
  4039     067D                     _KeyPadReader:	
  4040                           ;psect for function _KeyPadReader
  4041                           
  4042     067D                     l2534:	
  4043                           ;incstack = 0
  4044                           ; Regs used in _KeyPadReader: [wreg-fsr0h+status,2+status,0+pclath]
  4045                           
  4046                           
  4047                           ;main.c: 519:     TRISD |= 0x0F;
  4048     067D  300F               	movlw	15
  4049     067E  1283               	bcf	3,5	;RP0=0, select bank0
  4050     067F  1303               	bcf	3,6	;RP1=0, select bank0
  4051     0680  00C9               	movwf	??_KeyPadReader
  4052     0681  0849               	movf	??_KeyPadReader,w
  4053     0682  1683               	bsf	3,5	;RP0=1, select bank1
  4054     0683  1303               	bcf	3,6	;RP1=0, select bank1
  4055     0684  0488               	iorwf	8,f	;volatile
  4056     0685                     l2536:
  4057                           
  4058                           ;main.c: 522:     for (colScan = 0; colScan < 3; colScan++) {
  4059     0685  01F8               	clrf	_colScan
  4060     0686                     l2538:
  4061     0686  3003               	movlw	3
  4062     0687  0278               	subwf	_colScan,w
  4063     0688  1C03               	skipc
  4064     0689  2E8B               	goto	u2641
  4065     068A  2E8C               	goto	u2640
  4066     068B                     u2641:
  4067     068B  2E8D               	goto	l2542
  4068     068C                     u2640:
  4069     068C  2E85               	goto	l2536
  4070     068D                     l2542:
  4071                           
  4072                           ;main.c: 523:         PORTB = PORTB | 0x07;
  4073     068D  1283               	bcf	3,5	;RP0=0, select bank0
  4074     068E  1303               	bcf	3,6	;RP1=0, select bank0
  4075     068F  0806               	movf	6,w	;volatile
  4076     0690  3807               	iorlw	7
  4077     0691  0086               	movwf	6	;volatile
  4078     0692                     l2544:
  4079                           
  4080                           ;main.c: 524:         PORTB &= colMask[colScan];
  4081     0692  0878               	movf	_colScan,w
  4082     0693  3E11               	addlw	low ((_colMask-__stringbase)| (0+32768))
  4083     0694  0084               	movwf	4
  4084     0695  120A  118A  2714  120A  118A  	fcall	stringdir
  4085     069A  00C9               	movwf	??_KeyPadReader
  4086     069B  0849               	movf	??_KeyPadReader,w
  4087     069C  0586               	andwf	6,f	;volatile
  4088     069D                     l2546:
  4089                           
  4090                           ;main.c: 527:         for (rowScan = 0; rowScan < 4; rowScan++) {
  4091     069D  01F7               	clrf	_rowScan
  4092     069E                     l2548:
  4093     069E  3004               	movlw	4
  4094     069F  0277               	subwf	_rowScan,w
  4095     06A0  1C03               	skipc
  4096     06A1  2EA3               	goto	u2651
  4097     06A2  2EA4               	goto	u2650
  4098     06A3                     u2651:
  4099     06A3  2EA5               	goto	l2552
  4100     06A4                     u2650:
  4101     06A4  2F04               	goto	l2584
  4102     06A5                     l2552:
  4103                           
  4104                           ;main.c: 528:             if (!(PORTD & rowMask[rowScan]) && (old_btn)) {
  4105     06A5  0877               	movf	_rowScan,w
  4106     06A6  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  4107     06A7  0084               	movwf	4
  4108     06A8  120A  118A  2714  120A  118A  	fcall	stringdir
  4109     06AD  0508               	andwf	8,w	;volatile
  4110     06AE  1D03               	btfss	3,2
  4111     06AF  2EB1               	goto	u2661
  4112     06B0  2EB2               	goto	u2660
  4113     06B1                     u2661:
  4114     06B1  2EBB               	goto	l2560
  4115     06B2                     u2660:
  4116     06B2                     l2554:
  4117     06B2  1C79               	btfss	_old_btn/(0+8),_old_btn& (0+7)
  4118     06B3  2EB5               	goto	u2671
  4119     06B4  2EB6               	goto	u2670
  4120     06B5                     u2671:
  4121     06B5  2EBB               	goto	l2560
  4122     06B6                     u2670:
  4123     06B6                     l2556:
  4124                           
  4125                           ;main.c: 529:                 old_btn = 0;
  4126     06B6  1079               	bcf	_old_btn/(0+8),_old_btn& (0+7)
  4127     06B7                     l2558:
  4128                           
  4129                           ;main.c: 530:                 stato++;
  4130     06B7  3001               	movlw	1
  4131     06B8  00C9               	movwf	??_KeyPadReader
  4132     06B9  0849               	movf	??_KeyPadReader,w
  4133     06BA  07F6               	addwf	_stato,f
  4134     06BB                     l2560:
  4135                           
  4136                           ;main.c: 532:             if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  4137     06BB  0877               	movf	_rowScan,w
  4138     06BC  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  4139     06BD  0084               	movwf	4
  4140     06BE  120A  118A  2714  120A  118A  	fcall	stringdir
  4141     06C3  0508               	andwf	8,w	;volatile
  4142     06C4  1903               	btfsc	3,2
  4143     06C5  2EC7               	goto	u2681
  4144     06C6  2EC8               	goto	u2680
  4145     06C7                     u2681:
  4146     06C7  2EEB               	goto	l2572
  4147     06C8                     u2680:
  4148     06C8                     l2562:
  4149     06C8  1879               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  4150     06C9  2ECB               	goto	u2691
  4151     06CA  2ECC               	goto	u2690
  4152     06CB                     u2691:
  4153     06CB  2EEB               	goto	l2572
  4154     06CC                     u2690:
  4155     06CC                     l2564:
  4156                           
  4157                           ;main.c: 533:                 _delay((unsigned long)((10)*(8000000/4000.0)));
  4158     06CC  301A               	movlw	26
  4159     06CD  1283               	bcf	3,5	;RP0=0, select bank0
  4160     06CE  1303               	bcf	3,6	;RP1=0, select bank0
  4161     06CF  00CA               	movwf	??_KeyPadReader+1
  4162     06D0  30F7               	movlw	247
  4163     06D1  00C9               	movwf	??_KeyPadReader
  4164     06D2                     u3507:
  4165     06D2  0BC9               	decfsz	??_KeyPadReader,f
  4166     06D3  2ED2               	goto	u3507
  4167     06D4  0BCA               	decfsz	??_KeyPadReader+1,f
  4168     06D5  2ED2               	goto	u3507
  4169     06D6  2ED7               	nop2
  4170     06D7                     l2566:
  4171                           
  4172                           ;main.c: 534:                 if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  4173     06D7  0877               	movf	_rowScan,w
  4174     06D8  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  4175     06D9  0084               	movwf	4
  4176     06DA  120A  118A  2714  120A  118A  	fcall	stringdir
  4177     06DF  1283               	bcf	3,5	;RP0=0, select bank0
  4178     06E0  1303               	bcf	3,6	;RP1=0, select bank0
  4179     06E1  0508               	andwf	8,w	;volatile
  4180     06E2  1903               	btfsc	3,2
  4181     06E3  2EE5               	goto	u2701
  4182     06E4  2EE6               	goto	u2700
  4183     06E5                     u2701:
  4184     06E5  2EEB               	goto	l2572
  4185     06E6                     u2700:
  4186     06E6                     l2568:
  4187     06E6  1879               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  4188     06E7  2EE9               	goto	u2711
  4189     06E8  2EEA               	goto	u2710
  4190     06E9                     u2711:
  4191     06E9  2EEB               	goto	l2572
  4192     06EA                     u2710:
  4193     06EA                     l2570:
  4194                           
  4195                           ;main.c: 535:                     old_btn = 1;
  4196     06EA  1479               	bsf	_old_btn/(0+8),_old_btn& (0+7)
  4197     06EB                     l2572:
  4198                           
  4199                           ;main.c: 538:             if (stato != old_stato) {
  4200     06EB  0876               	movf	_stato,w
  4201     06EC  0675               	xorwf	_old_stato,w
  4202     06ED  1903               	skipnz
  4203     06EE  2EF0               	goto	u2721
  4204     06EF  2EF1               	goto	u2720
  4205     06F0                     u2721:
  4206     06F0  2EFF               	goto	l2580
  4207     06F1                     u2720:
  4208     06F1                     l2574:
  4209                           
  4210                           ;main.c: 539:                 keypressed = rowScan + (4 * colScan);
  4211     06F1  0878               	movf	_colScan,w
  4212     06F2  00C9               	movwf	??_KeyPadReader
  4213     06F3  3002               	movlw	2
  4214     06F4                     u2735:
  4215     06F4  1003               	clrc
  4216     06F5  0DC9               	rlf	??_KeyPadReader,f
  4217     06F6  3EFF               	addlw	-1
  4218     06F7  1D03               	skipz
  4219     06F8  2EF4               	goto	u2735
  4220     06F9  0877               	movf	_rowScan,w
  4221     06FA  0749               	addwf	??_KeyPadReader,w
  4222     06FB  00BB               	movwf	_keypressed
  4223     06FC                     l2576:
  4224                           
  4225                           ;main.c: 542:                 old_stato = stato;
  4226     06FC  0876               	movf	_stato,w
  4227     06FD  00F5               	movwf	_old_stato
  4228     06FE  2F09               	goto	l292
  4229     06FF                     l2580:
  4230                           
  4231                           ;main.c: 545:         }
  4232     06FF  3001               	movlw	1
  4233     0700  00C9               	movwf	??_KeyPadReader
  4234     0701  0849               	movf	??_KeyPadReader,w
  4235     0702  07F7               	addwf	_rowScan,f
  4236     0703  2E9E               	goto	l2548
  4237     0704                     l2584:
  4238                           
  4239                           ;main.c: 546:     }
  4240     0704  3001               	movlw	1
  4241     0705  00C9               	movwf	??_KeyPadReader
  4242     0706  0849               	movf	??_KeyPadReader,w
  4243     0707  07F8               	addwf	_colScan,f
  4244     0708  2E86               	goto	l2538
  4245     0709                     l292:
  4246     0709  0008               	return
  4247     070A                     __end_of_KeyPadReader:
  4248                           
  4249                           	psect	text17
  4250     0E1E                     __ptext17:	
  4251 ;; *************** function _GenerateRandomNumber *****************
  4252 ;; Defined at:
  4253 ;;		line 508 in file "main.c"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;		None
  4256 ;; Auto vars:     Size  Location     Type
  4257 ;;  count           2    1[BANK0 ] unsigned int 
  4258 ;;  randomNum       1    0[BANK0 ] unsigned char 
  4259 ;; Return value:  Size  Location     Type
  4260 ;;                  1    wreg      unsigned char 
  4261 ;; Registers used:
  4262 ;;		wreg, status,2, status,0
  4263 ;; Tracked objects:
  4264 ;;		On entry : 0/0
  4265 ;;		On exit  : 0/0
  4266 ;;		Unchanged: 0/0
  4267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4268 ;;      Params:         0       0       0       0       0
  4269 ;;      Locals:         0       3       0       0       0
  4270 ;;      Temps:          0       0       0       0       0
  4271 ;;      Totals:         0       3       0       0       0
  4272 ;;Total ram usage:        3 bytes
  4273 ;; Hardware stack levels used: 1
  4274 ;; Hardware stack levels required when called: 2
  4275 ;; This function calls:
  4276 ;;		Nothing
  4277 ;; This function is called by:
  4278 ;;		_main
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282     0E1E                     _GenerateRandomNumber:	
  4283                           ;psect for function _GenerateRandomNumber
  4284                           
  4285     0E1E                     l2522:	
  4286                           ;incstack = 0
  4287                           ; Regs used in _GenerateRandomNumber: [wreg+status,2+status,0]
  4288                           
  4289                           
  4290                           ;main.c: 509:     unsigned int count = 0;
  4291     0E1E  1283               	bcf	3,5	;RP0=0, select bank0
  4292     0E1F  1303               	bcf	3,6	;RP1=0, select bank0
  4293     0E20  01CA               	clrf	GenerateRandomNumber@count
  4294     0E21  01CB               	clrf	GenerateRandomNumber@count+1
  4295                           
  4296                           ;main.c: 510:     while (count != 186){
  4297     0E22  2E29               	goto	l2526
  4298     0E23                     l2524:
  4299                           
  4300                           ;main.c: 511:         count++;
  4301     0E23  3001               	movlw	1
  4302     0E24  07CA               	addwf	GenerateRandomNumber@count,f
  4303     0E25  1803               	skipnc
  4304     0E26  0ACB               	incf	GenerateRandomNumber@count+1,f
  4305     0E27  3000               	movlw	0
  4306     0E28  07CB               	addwf	GenerateRandomNumber@count+1,f
  4307     0E29                     l2526:
  4308                           
  4309                           ;main.c: 510:     while (count != 186){
  4310     0E29  30BA               	movlw	186
  4311     0E2A  064A               	xorwf	GenerateRandomNumber@count,w
  4312     0E2B  044B               	iorwf	GenerateRandomNumber@count+1,w
  4313     0E2C  1D03               	btfss	3,2
  4314     0E2D  2E2F               	goto	u2631
  4315     0E2E  2E30               	goto	u2630
  4316     0E2F                     u2631:
  4317     0E2F  2E23               	goto	l2524
  4318     0E30                     u2630:
  4319     0E30                     l2528:
  4320                           
  4321                           ;main.c: 513:     unsigned char randomNum = TMR0;
  4322     0E30  0801               	movf	1,w	;volatile
  4323     0E31  00C9               	movwf	GenerateRandomNumber@randomNum
  4324     0E32                     l2530:
  4325                           
  4326                           ;main.c: 514:     TMR0IF = 0;
  4327     0E32  110B               	bcf	11,2	;volatile
  4328                           
  4329                           ;main.c: 515:     return randomNum;
  4330     0E33  0849               	movf	GenerateRandomNumber@randomNum,w
  4331     0E34                     l280:
  4332     0E34  0008               	return
  4333     0E35                     __end_of_GenerateRandomNumber:
  4334                           
  4335                           	psect	text18
  4336     05DD                     __ptext18:	
  4337 ;; *************** function _ISR *****************
  4338 ;; Defined at:
  4339 ;;		line 392 in file "main.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;		None
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;		None
  4344 ;; Return value:  Size  Location     Type
  4345 ;;                  1    wreg      void 
  4346 ;; Registers used:
  4347 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4348 ;; Tracked objects:
  4349 ;;		On entry : 0/0
  4350 ;;		On exit  : 0/0
  4351 ;;		Unchanged: 0/0
  4352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4353 ;;      Params:         0       0       0       0       0
  4354 ;;      Locals:         0       0       0       0       0
  4355 ;;      Temps:          5       0       0       0       0
  4356 ;;      Totals:         5       0       0       0       0
  4357 ;;Total ram usage:        5 bytes
  4358 ;; Hardware stack levels used: 2
  4359 ;; This function calls:
  4360 ;;		Nothing
  4361 ;; This function is called by:
  4362 ;;		Interrupt level 1
  4363 ;; This function uses a non-reentrant model
  4364 ;;
  4365                           
  4366     05DD                     _ISR:	
  4367                           ;psect for function _ISR
  4368                           
  4369     05DD                     i1l2302:
  4370     05DD                     i1l256:	
  4371                           ;main.c: 452:         }
  4372                           
  4373                           
  4374                           ;main.c: 450:         while (!TMR0IF){
  4375     05DD  1D0B               	btfss	11,2	;volatile
  4376     05DE  2DE0               	goto	u231_21
  4377     05DF  2DE1               	goto	u231_20
  4378     05E0                     u231_21:
  4379     05E0  2DDD               	goto	i1l256
  4380     05E1                     u231_20:
  4381     05E1                     i1l258:
  4382                           
  4383                           ;main.c: 453:         TMR0IF = 0;
  4384     05E1  110B               	bcf	11,2	;volatile
  4385     05E2                     i1l259:	
  4386                           ;main.c: 456:         }
  4387                           
  4388                           
  4389                           ;main.c: 454:         while (!TMR0IF){
  4390     05E2  1D0B               	btfss	11,2	;volatile
  4391     05E3  2DE5               	goto	u232_21
  4392     05E4  2DE6               	goto	u232_20
  4393     05E5                     u232_21:
  4394     05E5  2DE2               	goto	i1l259
  4395     05E6                     u232_20:
  4396     05E6                     i1l261:
  4397                           
  4398                           ;main.c: 457:         TMR0IF = 0;
  4399     05E6  110B               	bcf	11,2	;volatile
  4400     05E7                     i1l2304:
  4401                           
  4402                           ;main.c: 458:         if(flag == 1){
  4403     05E7  1283               	bcf	3,5	;RP0=0, select bank0
  4404     05E8  1303               	bcf	3,6	;RP1=0, select bank0
  4405     05E9  0332               	decf	_flag,w
  4406     05EA  0433               	iorwf	_flag+1,w
  4407     05EB  1D03               	btfss	3,2
  4408     05EC  2DEE               	goto	u233_21
  4409     05ED  2DEF               	goto	u233_20
  4410     05EE                     u233_21:
  4411     05EE  2E72               	goto	i1l271
  4412     05EF                     u233_20:
  4413     05EF                     i1l2306:
  4414                           
  4415                           ;main.c: 459:             TRISD |= 0x0F;
  4416     05EF  300F               	movlw	15
  4417     05F0  00F0               	movwf	??_ISR
  4418     05F1  0870               	movf	??_ISR,w
  4419     05F2  1683               	bsf	3,5	;RP0=1, select bank1
  4420     05F3  1303               	bcf	3,6	;RP1=0, select bank1
  4421     05F4  0488               	iorwf	8,f	;volatile
  4422     05F5                     i1l2308:
  4423                           
  4424                           ;main.c: 461:             for (colScan = 0; colScan < 3; colScan++) {
  4425     05F5  01F8               	clrf	_colScan
  4426     05F6                     i1l2310:
  4427     05F6  3003               	movlw	3
  4428     05F7  0278               	subwf	_colScan,w
  4429     05F8  1C03               	skipc
  4430     05F9  2DFB               	goto	u234_21
  4431     05FA  2DFC               	goto	u234_20
  4432     05FB                     u234_21:
  4433     05FB  2DFD               	goto	i1l2314
  4434     05FC                     u234_20:
  4435     05FC  2E6F               	goto	i1l2354
  4436     05FD                     i1l2314:
  4437                           
  4438                           ;main.c: 462:                 PORTB = PORTB | 0x07;
  4439     05FD  1283               	bcf	3,5	;RP0=0, select bank0
  4440     05FE  0806               	movf	6,w	;volatile
  4441     05FF  3807               	iorlw	7
  4442     0600  0086               	movwf	6	;volatile
  4443     0601                     i1l2316:
  4444                           
  4445                           ;main.c: 463:                 PORTB &= colMask[colScan];
  4446     0601  0878               	movf	_colScan,w
  4447     0602  3E11               	addlw	low ((_colMask-__stringbase)| (0+32768))
  4448     0603  0084               	movwf	4
  4449     0604  120A  118A  2714  120A  118A  	fcall	stringdir
  4450     0609  00F0               	movwf	??_ISR
  4451     060A  0870               	movf	??_ISR,w
  4452     060B  0586               	andwf	6,f	;volatile
  4453     060C                     i1l2318:
  4454                           
  4455                           ;main.c: 466:                 for (rowScan = 0; rowScan < 4; rowScan++) {
  4456     060C  01F7               	clrf	_rowScan
  4457     060D                     i1l2320:
  4458     060D  3004               	movlw	4
  4459     060E  0277               	subwf	_rowScan,w
  4460     060F  1C03               	skipc
  4461     0610  2E12               	goto	u235_21
  4462     0611  2E13               	goto	u235_20
  4463     0612                     u235_21:
  4464     0612  2E14               	goto	i1l2324
  4465     0613                     u235_20:
  4466     0613  2E6A               	goto	i1l2350
  4467     0614                     i1l2324:
  4468                           
  4469                           ;main.c: 467:                     if (!(PORTD & rowMask[rowScan]) && (old_btn)) {
  4470     0614  0877               	movf	_rowScan,w
  4471     0615  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  4472     0616  0084               	movwf	4
  4473     0617  120A  118A  2714  120A  118A  	fcall	stringdir
  4474     061C  0508               	andwf	8,w	;volatile
  4475     061D  1D03               	btfss	3,2
  4476     061E  2E20               	goto	u236_21
  4477     061F  2E21               	goto	u236_20
  4478     0620                     u236_21:
  4479     0620  2E2A               	goto	i1l2332
  4480     0621                     u236_20:
  4481     0621                     i1l2326:
  4482     0621  1C79               	btfss	_old_btn/(0+8),_old_btn& (0+7)
  4483     0622  2E24               	goto	u237_21
  4484     0623  2E25               	goto	u237_20
  4485     0624                     u237_21:
  4486     0624  2E2A               	goto	i1l2332
  4487     0625                     u237_20:
  4488     0625                     i1l2328:
  4489                           
  4490                           ;main.c: 468:                         old_btn = 0;
  4491     0625  1079               	bcf	_old_btn/(0+8),_old_btn& (0+7)
  4492     0626                     i1l2330:
  4493                           
  4494                           ;main.c: 469:                         stato++;
  4495     0626  3001               	movlw	1
  4496     0627  00F0               	movwf	??_ISR
  4497     0628  0870               	movf	??_ISR,w
  4498     0629  07F6               	addwf	_stato,f
  4499     062A                     i1l2332:
  4500                           
  4501                           ;main.c: 471:                     if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  4502     062A  0877               	movf	_rowScan,w
  4503     062B  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  4504     062C  0084               	movwf	4
  4505     062D  120A  118A  2714  120A  118A  	fcall	stringdir
  4506     0632  0508               	andwf	8,w	;volatile
  4507     0633  1903               	btfsc	3,2
  4508     0634  2E36               	goto	u238_21
  4509     0635  2E37               	goto	u238_20
  4510     0636                     u238_21:
  4511     0636  2E4D               	goto	i1l2342
  4512     0637                     u238_20:
  4513     0637                     i1l2334:
  4514     0637  1879               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  4515     0638  2E3A               	goto	u239_21
  4516     0639  2E3B               	goto	u239_20
  4517     063A                     u239_21:
  4518     063A  2E4D               	goto	i1l2342
  4519     063B                     u239_20:
  4520     063B                     i1l2336:
  4521                           
  4522                           ;main.c: 473:                         if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  4523     063B  0877               	movf	_rowScan,w
  4524     063C  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  4525     063D  0084               	movwf	4
  4526     063E  120A  118A  2714  120A  118A  	fcall	stringdir
  4527     0643  0508               	andwf	8,w	;volatile
  4528     0644  1903               	btfsc	3,2
  4529     0645  2E47               	goto	u240_21
  4530     0646  2E48               	goto	u240_20
  4531     0647                     u240_21:
  4532     0647  2E4D               	goto	i1l2342
  4533     0648                     u240_20:
  4534     0648                     i1l2338:
  4535     0648  1879               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  4536     0649  2E4B               	goto	u241_21
  4537     064A  2E4C               	goto	u241_20
  4538     064B                     u241_21:
  4539     064B  2E4D               	goto	i1l2342
  4540     064C                     u241_20:
  4541     064C                     i1l2340:
  4542                           
  4543                           ;main.c: 474:                             old_btn = 1;
  4544     064C  1479               	bsf	_old_btn/(0+8),_old_btn& (0+7)
  4545     064D                     i1l2342:
  4546                           
  4547                           ;main.c: 477:                     if (stato != old_stato) {
  4548     064D  0876               	movf	_stato,w
  4549     064E  0675               	xorwf	_old_stato,w
  4550     064F  1903               	skipnz
  4551     0650  2E52               	goto	u242_21
  4552     0651  2E53               	goto	u242_20
  4553     0652                     u242_21:
  4554     0652  2E60               	goto	i1l2348
  4555     0653                     u242_20:
  4556     0653                     i1l2344:
  4557                           
  4558                           ;main.c: 478:                         keypressed = rowScan + (4 * colScan);
  4559     0653  0878               	movf	_colScan,w
  4560     0654  00F0               	movwf	??_ISR
  4561     0655  3002               	movlw	2
  4562     0656                     u243_25:
  4563     0656  1003               	clrc
  4564     0657  0DF0               	rlf	??_ISR,f
  4565     0658  3EFF               	addlw	-1
  4566     0659  1D03               	skipz
  4567     065A  2E56               	goto	u243_25
  4568     065B  0877               	movf	_rowScan,w
  4569     065C  0770               	addwf	??_ISR,w
  4570     065D  00BB               	movwf	_keypressed
  4571     065E                     i1l2346:
  4572                           
  4573                           ;main.c: 481:                         old_stato = stato;
  4574     065E  0876               	movf	_stato,w
  4575     065F  00F5               	movwf	_old_stato
  4576     0660                     i1l2348:
  4577                           
  4578                           ;main.c: 483:                 }
  4579     0660  3001               	movlw	1
  4580     0661  00F0               	movwf	??_ISR
  4581     0662  0870               	movf	??_ISR,w
  4582     0663  07F7               	addwf	_rowScan,f
  4583     0664  3004               	movlw	4
  4584     0665  0277               	subwf	_rowScan,w
  4585     0666  1C03               	skipc
  4586     0667  2E69               	goto	u244_21
  4587     0668  2E6A               	goto	u244_20
  4588     0669                     u244_21:
  4589     0669  2E14               	goto	i1l2324
  4590     066A                     u244_20:
  4591     066A                     i1l2350:
  4592                           
  4593                           ;main.c: 484:             }
  4594     066A  3001               	movlw	1
  4595     066B  00F0               	movwf	??_ISR
  4596     066C  0870               	movf	??_ISR,w
  4597     066D  07F8               	addwf	_colScan,f
  4598     066E  2DF6               	goto	i1l2310
  4599     066F                     i1l2354:
  4600                           
  4601                           ;main.c: 485:             TRISD |= 0x00;
  4602     066F  1683               	bsf	3,5	;RP0=1, select bank1
  4603     0670  1303               	bcf	3,6	;RP1=0, select bank1
  4604     0671  0808               	movf	8,w	;volatile
  4605     0672                     i1l271:
  4606     0672  0874               	movf	??_ISR+4,w
  4607     0673  00FF               	movwf	btemp+1
  4608     0674  0873               	movf	??_ISR+3,w
  4609     0675  008A               	movwf	10
  4610     0676  0872               	movf	??_ISR+2,w
  4611     0677  0084               	movwf	4
  4612     0678  0E71               	swapf	??_ISR+1,w
  4613     0679  0083               	movwf	3
  4614     067A  0EFE               	swapf	btemp,f
  4615     067B  0E7E               	swapf	btemp,w
  4616     067C  0009               	retfie
  4617     067D                     __end_of_ISR:
  4618     007E                     btemp	set	126	;btemp
  4619     007E                     wtemp0	set	126
  4620                           
  4621                           	psect	intentry
  4622     0004                     __pintentry:	
  4623                           ;incstack = 0
  4624                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath]
  4625                           
  4626     0004                     interrupt_function:
  4627     007E                     saved_w	set	btemp
  4628     0004  00FE               	movwf	btemp
  4629     0005  0E03               	swapf	3,w
  4630     0006  00F1               	movwf	??_ISR+1
  4631     0007  0804               	movf	4,w
  4632     0008  00F2               	movwf	??_ISR+2
  4633     0009  080A               	movf	10,w
  4634     000A  00F3               	movwf	??_ISR+3
  4635     000B  087F               	movf	btemp+1,w
  4636     000C  00F4               	movwf	??_ISR+4
  4637     000D  120A  118A  2DDD   	ljmp	_ISR
  4638                           
  4639                           	psect	idloc
  4640                           
  4641                           ;Config register IDLOC0 @ 0x2000
  4642                           ;	unspecified, using default values
  4643     2000                     	org	8192
  4644     2000  3FFF               	dw	16383
  4645                           
  4646                           ;Config register IDLOC1 @ 0x2001
  4647                           ;	unspecified, using default values
  4648     2001                     	org	8193
  4649     2001  3FFF               	dw	16383
  4650                           
  4651                           ;Config register IDLOC2 @ 0x2002
  4652                           ;	unspecified, using default values
  4653     2002                     	org	8194
  4654     2002  3FFF               	dw	16383
  4655                           
  4656                           ;Config register IDLOC3 @ 0x2003
  4657                           ;	unspecified, using default values
  4658     2003                     	org	8195
  4659     2003  3FFF               	dw	16383
  4660                           
  4661                           	psect	config
  4662                           
  4663                           ;Config register CONFIG @ 0x2007
  4664                           ;	Oscillator Selection bits
  4665                           ;	FOSC = HS, HS oscillator
  4666                           ;	Watchdog Timer Enable bit
  4667                           ;	WDTE = OFF, WDT disabled
  4668                           ;	Power-up Timer Enable bit
  4669                           ;	PWRTE = OFF, PWRT disabled
  4670                           ;	Brown-out Reset Enable bit
  4671                           ;	BOREN = OFF, BOR disabled
  4672                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4673                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  4674                           ;	Data EEPROM Memory Code Protection bit
  4675                           ;	CPD = OFF, Data EEPROM code protection off
  4676                           ;	Flash Program Memory Write Enable bits
  4677                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4678                           ;	In-Circuit Debugger Mode bit
  4679                           ;	DEBUG = 0x1, unprogrammed default
  4680                           ;	Flash Program Memory Code Protection bit
  4681                           ;	CP = OFF, Code protection off
  4682     2007                     	org	8199
  4683     2007  3F3A               	dw	16186

Data Sizes:
    Strings     102
    Constant    19
    Data        3
    BSS         61
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     32      76
    BANK1            80      0      16
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    intToString@str	PTR unsigned char  size(1) Largest target is 3
		 -> print_countdown(BANK0[3]), 

    lcdPrint@str	PTR unsigned char  size(2) Largest target is 15
		 -> STR_10(CODE[15]), STR_9(CODE[8]), STR_8(CODE[11]), print_countdown(BANK0[3]), 
		 -> STR_7(CODE[10]), STR_6(CODE[14]), STR_5(CODE[13]), STR_4(CODE[12]), 
		 -> STR_3(CODE[11]), STR_2(CODE[10]), STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_UART_Read1
    _main->_UART_ReadFINALE
    _initLCD->_lcdSend
    _UART_ReadFINALE->_intToString
    _UART_Read1->_intToString
    _lcdPrint->_lcdSend
    _intToString->___awdiv
    _potenza->___bmul
    ___awdiv->_potenza

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   36325
               _GenerateRandomNumber
                       _KeyPadReader
                     _RS485_RxEnable
                     _RS485_TxEnable
                        _Timer0_Init
                          _UART_Init
                         _UART_Read1
                    _UART_ReadFINALE
                         _UART_Write
                            _initLCD
                           _lcdPrint
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0    3752
                                              2 BANK0      2     2      0
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _UART_ReadFINALE                                      4     4      0   11719
                                             28 BANK0      4     4      0
                        _intToString
                           _lcdPrint
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _UART_Read1                                           4     4      0   11948
                                             28 BANK0      4     4      0
                     _RS485_RxEnable
                     _RS485_TxEnable
                         _UART_Write
                        _intToString
                           _lcdPrint
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _lcdPrint                                             7     5      2    5052
                                              2 BANK0      7     5      2
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _lcdSend                                              2     1      1    3752
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _intToString                                          9     6      3    2785
                                             19 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                            _potenza
 ---------------------------------------------------------------------------------
 (3) _potenza                                              6     5      1     573
                                              4 BANK0      6     5      1
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     226
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     613
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     604
                                             10 BANK0      9     5      4
                            _potenza (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RS485_TxEnable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RS485_RxEnable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _KeyPadReader                                         2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _GenerateRandomNumber                                 3     3      0      71
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GenerateRandomNumber
   _KeyPadReader
   _RS485_RxEnable
   _RS485_TxEnable
   _Timer0_Init
   _UART_Init
   _UART_Read1
     _RS485_RxEnable
     _RS485_TxEnable
     _UART_Write
     _intToString
       ___awdiv
         _potenza (ARG)
           ___bmul
       ___awmod
       _potenza
     _lcdPrint
       _lcdSend
     _lcdSend
   _UART_ReadFINALE
     _intToString
     _lcdPrint
     _lcdSend
   _UART_Write
   _initLCD
     _lcdSend
   _lcdPrint
   _lcdSend

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      10       7       20.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     20      4C       5       95.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       1       0        7.1%
CODE                 0      0       0       0        0.0%
DATA                 0      0      66      12        0.0%
ABS                  0      0      66       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Jul 02 16:26:14 2023

                            pc 0002                 ___bmul@product 004B                   ___awdiv@sign 0059  
                           fsr 0004                            l202 0E08                            l211 0DE1  
                          l205 0DD5                            l214 0DE7                            l208 0DD0  
                          l226 05DC                            l242 07FE                            l251 0EBF  
                          l420 0E4B                            l308 0FFF                            l245 0E1D  
                          l238 0518                            l280 0E34                            l274 0DF6  
                          l292 0709                            l560 0F1A                            l547 0F83  
                          l299 0E77                            _GIE 005F                            _RC0 0038  
                          _RC1 0039                            _PS0 0408                            _PS1 0409  
                          _PS2 040A                            _ISR 05DD                            _PSA 040B  
                          _id1 006B                            fsr0 0004                            indf 0000  
                 ___awmod@sign 004F                           ?_ISR 0070                           l2400 0EC0  
                         l2410 0ED2                           l2402 0EC3                           l1700 0F61  
                         l2420 0EEB                           l2412 0ED7                           l2404 0EC7  
                         l2500 07C8                           l1710 0F7A                           l1702 0F67  
                         l2422 0EEF                           l2414 0EDD                           l2430 0F0C  
                         l2406 0ECC                           l2510 07F5                           l2502 07D1  
                         l2520 0DF5                           l2512 0DE8                           l1712 0F7F  
                         l1704 0F68                           l2432 0F11                           l2424 0EF9  
                         l2416 0EE0                           l2408 0ECE                           l2360 0E3D  
                         l2440 0E7D                           l2600 0352                           l2504 07DA  
                         l2530 0E32                           l2522 0E1E                           l2514 0DEF  
                         l2450 0DD1                           l1706 0F6F                           l2434 0F16  
                         l2426 0EFF                           l2418 0EE7                           l2362 0E41  
                         l2370 0E0C                           l2442 0E9B                           l2610 036C  
                         l2602 035D                           l2506 07E3                           l2524 0E23  
                         l2516 0DF3                           l2452 0DCC                           l1708 0F75  
                         l2428 0F06                           l2364 0E43                           l2356 0E38  
                         l2460 0F8D                           l2380 0E16                           l2372 0E0F  
                         l2444 0EA3                           l2700 04CF                           l2612 0374  
                         l2620 0395                           l2604 035E                           l2508 07EC  
                         l2526 0E29                           l2542 068D                           l2534 067D  
                         l2518 0DF4                           l2446 0DE1                           l2366 0E4A  
                         l2358 0E39                           l2390 0E54                           l2470 0FEE  
                         l2462 0FAE                           l2454 0F84                           l2382 0E1B  
                         l2374 0E10                           l2438 0E78                           l2702 04DD  
                         l2630 03C4                           l2622 039A                           l2614 0385  
                         l2606 0362                           l2528 0E30                           l2560 06BB  
                         l2552 06A5                           l2544 0692                           l2536 0685  
                         l2480 0DFE                           l2448 0DE5                           l1680 0F29  
                         l1672 0F1B                           l2392 0E61                           l2464 0FB0  
                         l2472 0FF2                           l2456 0F88                           l2384 0E1C  
                         l2376 0E11                           l2704 04E8                           l2640 03DC  
                         l2632 03C5                           l2624 03A0                           l2616 0390  
                         l2608 0367                           l2712 04FD                           l2800 0098  
                         l2570 06EA                           l2562 06C8                           l2554 06B2  
                         l2546 069D                           l2538 0686                           l2482 0DFF  
                         l1690 0F3E                           l1682 0F2D                           l1674 0F1E  
                         l2394 0E67                           l2386 0E4F                           l2474 0FF8  
                         l2466 0FBD                           l2458 0F89                           l2378 0E14  
                         l2714 0505                           l2706 04EB                           l2650 0402  
                         l2642 03ED                           l2626 03A8                           l2634 03C9  
                         l2618 0391                           l2730 0528                           l2490 0797  
                         l2810 00B9                           l2802 009D                           l2580 06FF  
                         l2564 06CC                           l2572 06EB                           l2556 06B6  
                         l2548 069E                           l2484 0E02                           l2476 0DF7  
                         l1692 0F41                           l1684 0F32                           l1676 0F22  
                         l2396 0E74                           l2388 0E51                           l2468 0FD8  
                         l2716 050C                           l2708 04F9                           l2660 042D  
                         l2652 0408                           l2644 03F8                           l2636 03CE  
                         l2628 03B9                           l2740 055B                           l2732 0531  
                         l2492 07A1                           l2900 01F2                           l2820 00E1  
                         l2812 00C5                           l2574 06F1                           l2566 06D7  
                         l2558 06B7                           l2486 0E05                           l2478 0DFC  
                         l1694 0F48                           l1686 0F36                           l1678 0F27  
                         l2670 0458                           l2654 0410                           l2662 0431  
                         l2646 03F9                           l2638 03D4                           l2590 032A  
                         l2750 058C                           l2742 055F                           l2734 053C  
                         l2726 0519                           l2494 07A4                           l2910 0210  
                         l2902 01F8                           l2830 00FF                           l2822 00E7  
                         l2814 00CD                           l2806 00AD                           l2576 06FC  
                         l2568 06E6                           l2584 0704                           l1696 0F4C  
                         l1688 0F38                           l2680 0481                           l2664 043C  
                         l2656 0421                           l2648 03FD                           l2592 0330  
                         l2672 0468                           l2760 05B4                           l2752 0595  
                         l2744 0565                           l2736 0544                           l2728 051D  
                         l2496 07AB                           l2488 0793                           l2920 0239  
                         l2904 01FE                           l2912 0216                           l2840 0126  
                         l2832 0105                           l2824 00ED                           l2816 00D5  
                         l2808 00B2                           l1698 0F50                           l2690 04A9  
                         l2682 0489                           l2674 046D                           l2666 0445  
                         l2658 042C                           l2594 0335                           l2762 05B9  
                         l2754 05A0                           l2746 056D                           l2738 0553  
                         l2498 07BE                           l2930 0257                           l2922 023F  
                         l2914 021D                           l2906 0204                           l2850 0146  
                         l2842 012E                           l2826 00F3                           l2818 00DB  
                         l2834 010B                           l2692 04B1                           l2684 0491  
                         l2676 0473                           l2668 0450                           l2596 033A  
                         l2588 0326                           l2764 05C0                           l2748 0581  
                         l2756 05A8                           l2940 0275                           l2932 025D  
                         l2924 0245                           l2916 0229                           l2908 020A  
                         l2852 014C                           l2844 0134                           l2860 0164  
                         l2836 0112                           l2828 00F9                           l2780 004B  
                         l2694 04B9                           l2686 0499                           l2678 0479  
                         l2598 0341                           l2766 05CB                           l2758 05AE  
                         l2950 0294                           l2942 0279                           l2934 0263  
                         l2926 024B                           l2918 0231                           l2870 018D  
                         l2862 016B                           l2854 0152                           l2846 013A  
                         l2838 011E                           l2790 006F                           l2782 0050  
                         l2696 04C1                           l2688 04A1                           l2768 05D9  
                         l2960 02BB                           l2952 029C                           l2944 027E  
                         l2936 0269                           l2928 0251                           l2880 01AB  
                         l2872 0193                           l2864 0177                           l2856 0158  
                         l2848 0140                           l2792 0077                           l2784 0055  
                         l2776 003F                           l2698 04C9                           l2970 02ED  
                         l2962 02C5                           l2954 02A4                           l2946 0284  
                         l2938 026F                           l2890 01D0                           l2882 01B1  
                         l2874 0199                           l2866 017F                           l2858 015E  
                         l2794 007F                           l2786 005E                           l2778 0046  
                         l2980 0309                           l2972 02F0                           l2964 02CF  
                         l2956 02AC                           l2948 028C                           l2892 01D8  
                         l2884 01B7                           l2876 019F                           l2868 0187  
                         l2796 0087                           l2788 0069                           l2982 0312  
                         l2974 02F5                           l2966 02D9                           l2958 02B2  
                         l2894 01E0                           l2878 01A5                           l2886 01BD  
                         l2798 008F                           l2984 031D                           l2976 02FB  
                         l2968 02E3                           l2896 01E6                           l2888 01C4  
                         l2978 0300                           l2898 01EC                           STR_1 0783  
                         STR_2 0779                           STR_3 0763                           STR_4 0757  
                         STR_5 074A                           STR_6 073C                           STR_7 0779  
                         STR_8 076E                           STR_9 078B                           _BRGH 04C2  
                         _CREN 00C4                           _T0CS 040D                           u1300 0F50  
                         u1301 0F4F                           u1320 0F61                           u3000 00FF  
                         u1321 0F60                           u3001 00FE                           u3010 0105  
                         u1315 0F51                           u3011 0104                           u1340 0F75  
                         u1260 0F22                           u3100 0158                           u3020 010B  
                         u1341 0F74                           u1325 0F5D                           u1261 0F21  
                         u3101 0157                           u3021 010A                           u1350 0F7A  
                         u1270 0F2D                           u3110 015E                           u3030 012E  
                         u1351 0F79                           u1335 0F69                           u1271 0F2C  
                         u3111 015D                           u3031 012D                           u1280 0F3E  
                         u3200 01B1                           u3120 0164                           u3040 0134  
                         u1281 0F3D                           u3201 01B0                           u3121 0163  
                         u3041 0133                           u3210 01B7                           u3130 0187  
                         u3050 013A                           u3211 01B6                           u3131 0186  
                         u3051 0139                           u2500 0EDD                           u3300 020A  
                         u3220 01BD                           u3140 018D                           u3060 0140  
                         u2501 0EDC                           u3301 0209                           u3221 01BC  
                         u3141 018C                           u3061 013F                           u3310 0210  
                         u3230 01E0                           u3150 0193                           u3070 0146  
                         u1295 0F42                           u3311 020F                           u3231 01DF  
                         u3151 0192                           u3071 0145                           u2600 0DE5  
                         u2520 0EEF                           u3400 0263                           u3320 0216  
                         u3240 01E6                           u3160 0199                           u3080 014C  
                         u2601 0DE4                           u2521 0EEE                           u3401 0262  
                         u3321 0215                           u3241 01E5                           u3161 0198  
                         u3081 014B                           u2530 0EF9                           u2450 0E3D  
                         u2610 0FAE                           u3410 0269                           u3330 0239  
                         u3250 01EC                           u3170 019F                           u3090 0152  
                         u2531 0EF8                           u2515 0EE1                           u2451 0E3C  
                         u2611 0FAD                           u3411 0268                           u3331 0238  
                         u3251 01EB                           u3171 019E                           u3091 0151  
                         u2700 06E6                           u2460 0E4A                           u2620 0FF8  
                         u3420 026F                           u3340 023F                           u3260 01F2  
                         u3180 01A5                           u2701 06E5                           u2461 0E49  
                         u2621 0FF7                           u3421 026E                           u3341 023E  
                         u3261 01F1                           u3181 01A4                           u2630 0E30  
                         u2710 06EA                           u2550 0F0C                           u2470 0E74  
                         u3350 0245                           u3270 01F8                           u3190 01AB  
                         u2631 0E2F                           u2711 06E9                           u2551 0F0B  
                         u2535 0EF5                           u2471 0E73                           u3351 0244  
                         u3271 01F7                           u3191 01AA                           u2720 06F1  
                         u2640 068C                           u2560 0F11                           u2480 0EC7  
                         u2800 03A0                           u3360 024B                           u3280 01FE  
                         u2721 06F0                           u2641 068B                           u2561 0F10  
                         u2545 0F00                           u2481 0EC6                           u2801 039F  
                         u3361 024A                           u3281 01FD                           u2650 06A4  
                         u2490 0ED2                           u2570 0E89                           u2810 03CE  
                         u3370 0251                           u3290 0204                           u3507 06D2  
                         u2651 06A3                           u2491 0ED1                           u2475 0E70  
                         u2811 03CD                           u3371 0250                           u3291 0203  
                         u2660 06B2                           u2580 0EAD                           u2820 03D4  
                         u2740 0330                           u2900 05B9                           u3380 0257  
                         u2661 06B1                           u2821 03D3                           u2741 032F  
                         u2901 05B8                           u3437 079D                           u3381 0256  
                         u2670 06B6                           u2590 0EBF                           u2830 0402  
                         u2750 0335                           u3390 025D                           u2910 00AC  
                         u2735 06F4                           u2671 06B5                           u2591 0EBE  
                         u2831 0401                           u2751 0334                           u3447 07B1  
                         u3391 025C                           u2911 00AB                           u2680 06C8  
                         u2840 0408                           u2760 033A                           u2920 00B2  
                         u2681 06C7                           u2841 0407                           u2761 0339  
                         u3457 07C4                           u2921 00B1                           u2690 06CC  
                         u2850 0505                           u2770 0367                           u2930 00D5  
                         u2691 06CB                           u2851 0504                           u2771 0366  
                         u3467 054C                           u2931 00D4                           u2780 036C  
                         u2860 055B                           u2940 00DB                           u2781 036B  
                         u3477 05D3                           u2861 055A                           u2941 00DA  
                         u2790 039A                           u2870 055F                           u2950 00E1  
                         u3487 0460                           u2791 0399                           u2871 055E  
                         u2951 00E0                           u2880 05AE                           u2960 00E7  
                         u3497 04F3                           u2881 05AD                           u2961 00E6  
                         u2890 05B4                           u2970 00ED                           u2891 05B3  
                         u2971 00EC                           u2980 00F3                           _RCIF 0065  
                         u2981 00F2                           u2990 00F9                           u2991 00F8  
               ??_KeyPadReader 0049                           _TMR0 0001                           _SPEN 00C7  
                         _TXEN 04C5                           _TXIF 0064                           _SYNC 04C4  
             ?_UART_ReadFINALE 0070                           _data 0020                           _flag 0032  
                         _main 003F                           _num1 0045                           _num2 0044  
                         _num3 0043                           _keys 071A                           _num4 0042  
                         _num5 0041                           btemp 007E                           _type 0036  
                         start 0010              ___bmul@multiplier 004C                          ??_ISR 0070  
                 ?_intToString 005C                          ?_main 0070                __end_of___awdiv 0F84  
                        STR_10 072D                __end_of___awmod 0F1B                ___awdiv@divisor 0053  
                        i1l261 05E6                          i1l271 0672                          i1l256 05DD  
                        i1l258 05E1                          i1l259 05E2                ___awdiv@counter 0058  
                        _RCREG 001A                          _SPBRG 0099                          _PORTB 0006  
                        _PORTD 0008                          _TRISA 0085                          _TRISB 0086  
                        _TRISC 0087                          _TRISD 0088                          _TRISE 0089  
                        _TXREG 0019                    ?_UART_Read1 0070                __end_of_colMask 072D  
              __end_of_lcdSend 0E1E                    ?_UART_Write 0070                __end_of_initLCD 07FF  
                        _count 002E                          _num21 0040                          _index 0030  
                        _num22 003F                          _num23 003E                          _num24 003D  
                        _num25 003C                          _keyok 003A                          _stato 0076  
               __pbitbssCOMMON 03C8                          pclath 000A                __end_of_rowMask 072A  
              __end_of_potenza 0E78                          status 0003                          wtemp0 007E  
 __end_of_GenerateRandomNumber 0E35                __initialization 0013                   __end_of_main 0326  
                 __end_of_keys 0726                         ??_main 0069               ___awdiv@dividend 0055  
                       i1l2310 05F6                         i1l2302 05DD                         i1l2320 060D  
                       i1l2304 05E7                         i1l2330 0626                         i1l2314 05FD  
                       i1l2306 05EF                         i1l2340 064C                         i1l2332 062A  
                       i1l2324 0614                         i1l2316 0601                         i1l2308 05F5  
                       i1l2334 0637                         i1l2342 064D                         i1l2326 0621  
                       i1l2350 066A                         i1l2318 060C                         i1l2344 0653  
                       i1l2336 063B                         i1l2328 0625                         i1l2346 065E  
                       i1l2338 0648                         i1l2354 066F                         i1l2348 0660  
                       u231_20 05E1                         u231_21 05E0                         u240_20 0648  
                       u232_20 05E6                         u240_21 0647                         u232_21 05E5  
                       u241_20 064C                         u233_20 05EF                         u241_21 064B  
                       u233_21 05EE                         u242_20 0653                         u234_20 05FC  
                       u242_21 0652                         u234_21 05FB                         u235_20 0613  
                       u235_21 0612                         u243_25 0656                         u244_20 066A  
                       u236_20 0621                         u244_21 0669                         u236_21 0620  
                       u237_20 0625                         u237_21 0624                         u238_20 0637  
                       u238_21 0636                         u239_20 063B                         u239_21 063A  
                       _TMR0IE 005D                         _TMR0IF 005A                         _TRISC6 043E  
                       _TRISC7 043F                  ??_Timer0_Init 0049               __end_of_lcdPrint 0EC0  
            __end_of_UART_Init 0E09                         ___bmul 0E35                      ??___awdiv 0057  
                    ??___awmod 004D                         _codice 0026               ___awdiv@quotient 005A  
              ___awmod@divisor 0049           __end_of_KeyPadReader 070A                ___awmod@counter 004E  
                    ??_lcdSend 004A                      ??_initLCD 004B                         saved_w 007E  
                    ??_potenza 004E        __end_of__initialization 003B               intToString@cifre 0063  
          ___bmul@multiplicand 0049                 __pcstackCOMMON 0070                   __pidataBANK0 0DC9  
          __end_of_Timer0_Init 0DF7           _GenerateRandomNumber 0E1E                     __pbssBANK0 0020  
                   __pbssBANK1 00A0                     __pmaintext 003F                        ?___bmul 0049  
                   __pintentry 0004               UART_ReadFINALE@i 0068                   ??_UART_Read1 0065  
        ?_GenerateRandomNumber 0070                   ??_UART_Write 0049                      ?_lcdPrint 004B  
                   __stringtab 070A                   intToString@i 0064                   intToString@n 005C  
                 intToString@t 0062                    _Timer0_Init 0DE8             __end_of_UART_Read1 0519  
               _RS485_RxEnable 0DCC                        ___awdiv 0F1B                        ___awmod 0EC0  
           __end_of_UART_Write 0DE8                 _RS485_TxEnable 0DD1                        _colMask 072A  
                      _colScan 0078                        _lcdSend 0E09                        __ptext1 0793  
                      __ptext2 0519                        __ptext3 0326                        __ptext4 0E78  
                      __ptext5 0E09                        __ptext6 0F84                        __ptext7 0E4C  
                      __ptext8 0E35                        __ptext9 0EC0                        _initLCD 0793  
                      _old_btn 03C8                        _message 002C               ___awmod@dividend 004B  
                   _keypressed 003B                        _restart 0039                        _rowMask 0726  
                      _rowScan 0077                        _potenza 0E4C                     ??_lcdPrint 004D  
                      clrloop0 0DD7                        _stringa 00A0           end_of_initialization 003B  
                 _KeyPadReader 067D         __end_of_RS485_RxEnable 0DD1         __end_of_RS485_TxEnable 0DD6  
                    _UART_Init 0DF7                      _PORTEbits 0009                 UART_Write@data 0049  
       ??_GenerateRandomNumber 0049                      _TRISEbits 0089                ?_RS485_RxEnable 0070  
              ?_RS485_TxEnable 0070                 __end_of___bmul 0E4C                     ?_UART_Init 0070  
            ??_UART_ReadFINALE 0065            start_initialization 0013  GenerateRandomNumber@randomNum 0049  
                  __end_of_ISR 067D                 _stringPosition 0034                 intToString@str 005E  
                     ??___bmul 004A                    __pdataBANK0 0069                  ??_intToString 005F  
                  __pbssCOMMON 0075                      ___latbits 0002                  __pcstackBANK0 0049  
              UART_Read1@count 0068                   ?_Timer0_Init 0070                       ?___awdiv 0053  
                     ?___awmod 0049                    ??_UART_Init 0049                      __pstrings 070A  
                     ?_lcdSend 0049                       ?_initLCD 0070            __end_of_intToString 1000  
                    _countdown 0069                       ?_potenza 004D                      _randomNum 0037  
                    _old_stato 0075              interrupt_function 0004                      clear_ram0 0DD6  
              _print_countdown 0046                      lcdPrint@n 0050                    __stringbase 0719  
             ??_RS485_RxEnable 0049               ??_RS485_TxEnable 0049                _UART_ReadFINALE 0519  
                  _intToString 0F84             __end_of__stringtab 071A                       __ptext10 0F1B  
                     __ptext11 0DDE                       __ptext12 0DD1                       __ptext13 0DCC  
                     __ptext14 0DF7                       __ptext15 0DE8                       __ptext16 067D  
                     __ptext17 0E1E                       __ptext18 05DD                       _lcdPrint 0E78  
                     _received 0038                       intlevel1 0000        __end_of_UART_ReadFINALE 05DD  
                    stringcode 0714                       potenza@b 004F                       potenza@e 004D  
                     potenza@i 0050                       potenza@n 0052                    lcdSend@dato 004A  
                  lcdSend@tipo 0049                     _UART_Read1 0326                       stringdir 0714  
                     stringtab 070A                     _UART_Write 0DDE      GenerateRandomNumber@count 004A  
                  lcdPrint@str 004B                  ?_KeyPadReader 0070  
