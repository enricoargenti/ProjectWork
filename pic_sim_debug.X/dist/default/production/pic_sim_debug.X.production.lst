

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Jun 30 12:01:12 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40     0000                     
    41                           ; Generated 22/03/2023 GMT
    42                           ; 
    43                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F877A Definitions
    73                           ; 
    74                           ; SFR Addresses
    75     0000                     	;# 
    76     0001                     	;# 
    77     0002                     	;# 
    78     0003                     	;# 
    79     0004                     	;# 
    80     0005                     	;# 
    81     0006                     	;# 
    82     0007                     	;# 
    83     0008                     	;# 
    84     0009                     	;# 
    85     000A                     	;# 
    86     000B                     	;# 
    87     000C                     	;# 
    88     000D                     	;# 
    89     000E                     	;# 
    90     000E                     	;# 
    91     000F                     	;# 
    92     0010                     	;# 
    93     0011                     	;# 
    94     0012                     	;# 
    95     0013                     	;# 
    96     0014                     	;# 
    97     0015                     	;# 
    98     0015                     	;# 
    99     0016                     	;# 
   100     0017                     	;# 
   101     0018                     	;# 
   102     0019                     	;# 
   103     001A                     	;# 
   104     001B                     	;# 
   105     001B                     	;# 
   106     001C                     	;# 
   107     001D                     	;# 
   108     001E                     	;# 
   109     001F                     	;# 
   110     0081                     	;# 
   111     0085                     	;# 
   112     0086                     	;# 
   113     0087                     	;# 
   114     0088                     	;# 
   115     0089                     	;# 
   116     008C                     	;# 
   117     008D                     	;# 
   118     008E                     	;# 
   119     0091                     	;# 
   120     0092                     	;# 
   121     0093                     	;# 
   122     0094                     	;# 
   123     0098                     	;# 
   124     0099                     	;# 
   125     009C                     	;# 
   126     009D                     	;# 
   127     009E                     	;# 
   128     009F                     	;# 
   129     010C                     	;# 
   130     010D                     	;# 
   131     010E                     	;# 
   132     010F                     	;# 
   133     018C                     	;# 
   134     018D                     	;# 
   135     0000                     	;# 
   136     0001                     	;# 
   137     0002                     	;# 
   138     0003                     	;# 
   139     0004                     	;# 
   140     0005                     	;# 
   141     0006                     	;# 
   142     0007                     	;# 
   143     0008                     	;# 
   144     0009                     	;# 
   145     000A                     	;# 
   146     000B                     	;# 
   147     000C                     	;# 
   148     000D                     	;# 
   149     000E                     	;# 
   150     000E                     	;# 
   151     000F                     	;# 
   152     0010                     	;# 
   153     0011                     	;# 
   154     0012                     	;# 
   155     0013                     	;# 
   156     0014                     	;# 
   157     0015                     	;# 
   158     0015                     	;# 
   159     0016                     	;# 
   160     0017                     	;# 
   161     0018                     	;# 
   162     0019                     	;# 
   163     001A                     	;# 
   164     001B                     	;# 
   165     001B                     	;# 
   166     001C                     	;# 
   167     001D                     	;# 
   168     001E                     	;# 
   169     001F                     	;# 
   170     0081                     	;# 
   171     0085                     	;# 
   172     0086                     	;# 
   173     0087                     	;# 
   174     0088                     	;# 
   175     0089                     	;# 
   176     008C                     	;# 
   177     008D                     	;# 
   178     008E                     	;# 
   179     0091                     	;# 
   180     0092                     	;# 
   181     0093                     	;# 
   182     0094                     	;# 
   183     0098                     	;# 
   184     0099                     	;# 
   185     009C                     	;# 
   186     009D                     	;# 
   187     009E                     	;# 
   188     009F                     	;# 
   189     010C                     	;# 
   190     010D                     	;# 
   191     010E                     	;# 
   192     010F                     	;# 
   193     018C                     	;# 
   194     018D                     	;# 
   195                           
   196                           	psect	idataCOMMON
   197     07FF                     __pidataCOMMON:
   198                           
   199                           ;initializer for _countdown
   200     07FF  343C               	retlw	60
   201                           
   202                           	psect	idataBANK0
   203     0003                     __pidataBANK0:
   204                           
   205                           ;initializer for _id1
   206     0003  3401               	retlw	1
   207                           
   208                           	psect	strings
   209     0800                     __pstrings:
   210     0800                     stringtab:
   211     0800                     __stringtab:
   212                           
   213                           ;	String table - string pointers are 1 byte each
   214     0800  1BFF               	btfsc	btemp+1,7
   215     0801  280A               	ljmp	stringcode
   216     0802  1383               	bcf	3,7
   217     0803  187F               	btfsc	btemp+1,0
   218     0804  1783               	bsf	3,7
   219     0805  0800               	movf	0,w
   220     0806  0A84               	incf	4,f
   221     0807  1903               	skipnz
   222     0808  0AFF               	incf	btemp+1,f
   223     0809  0008               	return
   224     080A                     stringcode:
   225     080A                     stringdir:
   226     080A  3008               	movlw	high stringdir
   227     080B  008A               	movwf	10
   228     080C  0804               	movf	4,w
   229     080D  0A84               	incf	4,f
   230     080E  0782               	addwf	2,f
   231     080F                     __stringbase:
   232     080F  3400               	retlw	0
   233     0810                     __end_of__stringtab:
   234     0810                     _keys:
   235     0810  3423               	retlw	35
   236     0811  3437               	retlw	55
   237     0812  3434               	retlw	52
   238     0813  3431               	retlw	49
   239     0814  342A               	retlw	42
   240     0815  3438               	retlw	56
   241     0816  3435               	retlw	53
   242     0817  3432               	retlw	50
   243     0818  3430               	retlw	48
   244     0819  3439               	retlw	57
   245     081A  3436               	retlw	54
   246     081B  3433               	retlw	51
   247     081C                     __end_of_keys:
   248     081C                     _rowMask:
   249     081C  3401               	retlw	1
   250     081D  3402               	retlw	2
   251     081E  3404               	retlw	4
   252     081F  3408               	retlw	8
   253     0820                     __end_of_rowMask:
   254     0820                     _colMask:
   255     0820  34FE               	retlw	254
   256     0821  34FD               	retlw	253
   257     0822  34FB               	retlw	251
   258     0823                     __end_of_colMask:
   259     0001                     _TMR0	set	1
   260     0006                     _PORTB	set	6
   261     0008                     _PORTD	set	8
   262     0009                     _PORTEbits	set	9
   263     001A                     _RCREG	set	26
   264     0019                     _TXREG	set	25
   265     005F                     _GIE	set	95
   266     005D                     _TMR0IE	set	93
   267     005A                     _TMR0IF	set	90
   268     0065                     _RCIF	set	101
   269     0064                     _TXIF	set	100
   270     0039                     _RC1	set	57
   271     0038                     _RC0	set	56
   272     00C4                     _CREN	set	196
   273     00C7                     _SPEN	set	199
   274     0089                     _TRISEbits	set	137
   275     0099                     _SPBRG	set	153
   276     0089                     _TRISE	set	137
   277     0088                     _TRISD	set	136
   278     0087                     _TRISC	set	135
   279     0086                     _TRISB	set	134
   280     0085                     _TRISA	set	133
   281     0408                     _PS0	set	1032
   282     0409                     _PS1	set	1033
   283     040A                     _PS2	set	1034
   284     040B                     _PSA	set	1035
   285     040D                     _T0CS	set	1037
   286     04C5                     _TXEN	set	1221
   287     04C4                     _SYNC	set	1220
   288     04C2                     _BRGH	set	1218
   289     043F                     _TRISC7	set	1087
   290     043E                     _TRISC6	set	1086
   291     0823                     STR_11:
   292     0823  3443               	retlw	67	;'C'
   293     0824  346F               	retlw	111	;'o'
   294     0825  3464               	retlw	100	;'d'
   295     0826  3469               	retlw	105	;'i'
   296     0827  3463               	retlw	99	;'c'
   297     0828  3465               	retlw	101	;'e'
   298     0829  3420               	retlw	32	;' '
   299     082A  3453               	retlw	83	;'S'
   300     082B  3463               	retlw	99	;'c'
   301     082C  3461               	retlw	97	;'a'
   302     082D  3464               	retlw	100	;'d'
   303     082E  3475               	retlw	117	;'u'
   304     082F  3474               	retlw	116	;'t'
   305     0830  346F               	retlw	111	;'o'
   306     0831  3400               	retlw	0
   307     0832                     STR_6:
   308     0832  3441               	retlw	65	;'A'
   309     0833  3474               	retlw	116	;'t'
   310     0834  3474               	retlw	116	;'t'
   311     0835  3465               	retlw	101	;'e'
   312     0836  346E               	retlw	110	;'n'
   313     0837  3464               	retlw	100	;'d'
   314     0838  3465               	retlw	101	;'e'
   315     0839  3472               	retlw	114	;'r'
   316     083A  3465               	retlw	101	;'e'
   317     083B  342E               	retlw	46	;'.'
   318     083C  342E               	retlw	46	;'.'
   319     083D  342E               	retlw	46	;'.'
   320     083E  342E               	retlw	46	;'.'
   321     083F  3400               	retlw	0
   322     0840                     STR_9:
   323     0840  3454               	retlw	84	;'T'
   324     0841  3465               	retlw	101	;'e'
   325     0842  346D               	retlw	109	;'m'
   326     0843  3470               	retlw	112	;'p'
   327     0844  346F               	retlw	111	;'o'
   328     0845  3420               	retlw	32	;' '
   329     0846  3453               	retlw	83	;'S'
   330     0847  3463               	retlw	99	;'c'
   331     0848  3461               	retlw	97	;'a'
   332     0849  3464               	retlw	100	;'d'
   333     084A  3475               	retlw	117	;'u'
   334     084B  3474               	retlw	116	;'t'
   335     084C  346F               	retlw	111	;'o'
   336     084D  3400               	retlw	0
   337     084E                     STR_5:
   338     084E  3441               	retlw	65	;'A'
   339     084F  3474               	retlw	116	;'t'
   340     0850  3474               	retlw	116	;'t'
   341     0851  3465               	retlw	101	;'e'
   342     0852  346E               	retlw	110	;'n'
   343     0853  3464               	retlw	100	;'d'
   344     0854  3465               	retlw	101	;'e'
   345     0855  3472               	retlw	114	;'r'
   346     0856  3465               	retlw	101	;'e'
   347     0857  342E               	retlw	46	;'.'
   348     0858  342E               	retlw	46	;'.'
   349     0859  342E               	retlw	46	;'.'
   350     085A  3400               	retlw	0
   351     085B                     STR_4:
   352     085B  3441               	retlw	65	;'A'
   353     085C  3474               	retlw	116	;'t'
   354     085D  3474               	retlw	116	;'t'
   355     085E  3465               	retlw	101	;'e'
   356     085F  346E               	retlw	110	;'n'
   357     0860  3464               	retlw	100	;'d'
   358     0861  3465               	retlw	101	;'e'
   359     0862  3472               	retlw	114	;'r'
   360     0863  3465               	retlw	101	;'e'
   361     0864  342E               	retlw	46	;'.'
   362     0865  342E               	retlw	46	;'.'
   363     0866  3400               	retlw	0
   364     0867                     STR_3:
   365     0867  3441               	retlw	65	;'A'
   366     0868  3474               	retlw	116	;'t'
   367     0869  3474               	retlw	116	;'t'
   368     086A  3465               	retlw	101	;'e'
   369     086B  346E               	retlw	110	;'n'
   370     086C  3464               	retlw	100	;'d'
   371     086D  3465               	retlw	101	;'e'
   372     086E  3472               	retlw	114	;'r'
   373     086F  3465               	retlw	101	;'e'
   374     0870  342E               	retlw	46	;'.'
   375     0871  3400               	retlw	0
   376     0872                     STR_8:
   377     0872  3441               	retlw	65	;'A'
   378     0873  3450               	retlw	80	;'P'
   379     0874  3452               	retlw	82	;'R'
   380     0875  3449               	retlw	73	;'I'
   381     0876  3420               	retlw	32	;' '
   382     0877  3450               	retlw	80	;'P'
   383     0878  344F               	retlw	79	;'O'
   384     0879  3452               	retlw	82	;'R'
   385     087A  3454               	retlw	84	;'T'
   386     087B  3441               	retlw	65	;'A'
   387     087C  3400               	retlw	0
   388     087D                     STR_2:
   389     087D  3441               	retlw	65	;'A'
   390     087E  3474               	retlw	116	;'t'
   391     087F  3474               	retlw	116	;'t'
   392     0880  3465               	retlw	101	;'e'
   393     0881  346E               	retlw	110	;'n'
   394     0882  3464               	retlw	100	;'d'
   395     0883  3465               	retlw	101	;'e'
   396     0884  3472               	retlw	114	;'r'
   397     0885  3465               	retlw	101	;'e'
   398     0886  3400               	retlw	0
   399     0887                     STR_1:
   400     0887  3450               	retlw	80	;'P'
   401     0888  3472               	retlw	114	;'r'
   402     0889  3465               	retlw	101	;'e'
   403     088A  346D               	retlw	109	;'m'
   404     088B  3469               	retlw	105	;'i'
   405     088C  3420               	retlw	32	;' '
   406     088D  342A               	retlw	42	;'*'
   407     088E  3400               	retlw	0
   408     088F                     STR_10:
   409     088F  344D               	retlw	77	;'M'
   410     0890  3461               	retlw	97	;'a'
   411     0891  346E               	retlw	110	;'n'
   412     0892  3464               	retlw	100	;'d'
   413     0893  3461               	retlw	97	;'a'
   414     0894  3474               	retlw	116	;'t'
   415     0895  346F               	retlw	111	;'o'
   416     0896  3400               	retlw	0
   417     087D                     
   418                           	psect	cinit
   419     0013                     start_initialization:	
   420                           ; #config settings
   421                           
   422     0013                     __initialization:
   423                           
   424                           ; Initialize objects allocated to BANK0
   425     0013  120A  118A  2003  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   426     0018  00E8               	movwf	__pdataBANK0& (0+127)
   427                           
   428                           ; Initialize objects allocated to COMMON
   429     0019  120A  118A  27FF  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   430     001E  00F9               	movwf	__pdataCOMMON& (0+127)
   431                           
   432                           ; Clear objects allocated to BANK1
   433     001F  1383               	bcf	3,7	;select IRP bank0
   434     0020  30A0               	movlw	low __pbssBANK1
   435     0021  0084               	movwf	4
   436     0022  30B0               	movlw	low (__pbssBANK1+16)
   437     0023  120A  158A  2536  120A  118A  	fcall	clear_ram0
   438                           
   439                           ; Clear objects allocated to BANK0
   440     0028  3020               	movlw	low __pbssBANK0
   441     0029  0084               	movwf	4
   442     002A  3048               	movlw	low (__pbssBANK0+40)
   443     002B  120A  158A  2536  120A  118A  	fcall	clear_ram0
   444                           
   445                           ; Clear objects allocated to COMMON
   446     0030  01F5               	clrf	__pbssCOMMON& (0+127)
   447     0031  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   448     0032  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   449                           
   450                           ; Clear objects allocated to BITCOMMON
   451     0033  01F8               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   452     0034                     end_of_initialization:	
   453                           ;End of C runtime variable initialization code
   454                           
   455     0034                     __end_of__initialization:
   456     0034  0183               	clrf	3
   457     0035  120A  118A  2838   	ljmp	_main	;jump to C main() function
   458                           
   459                           	psect	bitbssCOMMON
   460     03C0                     __pbitbssCOMMON:
   461     03C0                     _old_btn:
   462     03C0                     	ds	1
   463                           
   464                           	psect	bssCOMMON
   465     0075                     __pbssCOMMON:
   466     0075                     _stato:
   467     0075                     	ds	1
   468     0076                     _rowScan:
   469     0076                     	ds	1
   470     0077                     _colScan:
   471     0077                     	ds	1
   472                           
   473                           	psect	dataCOMMON
   474     0079                     __pdataCOMMON:
   475     0079                     _countdown:
   476     0079                     	ds	1
   477                           
   478                           	psect	bssBANK0
   479     0020                     __pbssBANK0:
   480     0020                     _data:
   481     0020                     	ds	6
   482     0026                     _codice:
   483     0026                     	ds	6
   484     002C                     _count:
   485     002C                     	ds	2
   486     002E                     _index:
   487     002E                     	ds	2
   488     0030                     _flag:
   489     0030                     	ds	2
   490     0032                     _stringPosition:
   491     0032                     	ds	2
   492     0034                     _type:
   493     0034                     	ds	1
   494     0035                     _randomNum:
   495     0035                     	ds	1
   496     0036                     _received:
   497     0036                     	ds	1
   498     0037                     _restart:
   499     0037                     	ds	1
   500     0038                     _old_stato:
   501     0038                     	ds	1
   502     0039                     _keyok:
   503     0039                     	ds	1
   504     003A                     _keypressed:
   505     003A                     	ds	1
   506     003B                     _num25:
   507     003B                     	ds	1
   508     003C                     _num24:
   509     003C                     	ds	1
   510     003D                     _num23:
   511     003D                     	ds	1
   512     003E                     _num22:
   513     003E                     	ds	1
   514     003F                     _num21:
   515     003F                     	ds	1
   516     0040                     _num5:
   517     0040                     	ds	1
   518     0041                     _num4:
   519     0041                     	ds	1
   520     0042                     _num3:
   521     0042                     	ds	1
   522     0043                     _num2:
   523     0043                     	ds	1
   524     0044                     _num1:
   525     0044                     	ds	1
   526     0045                     _print_countdown:
   527     0045                     	ds	3
   528                           
   529                           	psect	dataBANK0
   530     0068                     __pdataBANK0:
   531     0068                     _id1:
   532     0068                     	ds	1
   533                           
   534                           	psect	bssBANK1
   535     00A0                     __pbssBANK1:
   536     00A0                     _stringa:
   537     00A0                     	ds	16
   538                           
   539                           	psect	clrtext
   540     0D36                     clear_ram0:	
   541                           ;	Called with FSR containing the base address, and
   542                           ;	W with the last address+1
   543                           
   544     0D36  0064               	clrwdt	;clear the watchdog before getting into this loop
   545     0D37                     clrloop0:
   546     0D37  0180               	clrf	0	;clear RAM location pointed to by FSR
   547     0D38  0A84               	incf	4,f	;increment pointer
   548     0D39  0604               	xorwf	4,w	;XOR with final address
   549     0D3A  1903               	btfsc	3,2	;have we reached the end yet?
   550     0D3B  3400               	retlw	0	;all done for this memory range, return
   551     0D3C  0604               	xorwf	4,w	;XOR again to restore value
   552     0D3D  2D37               	goto	clrloop0	;do the next byte
   553                           
   554                           	psect	cstackCOMMON
   555     0070                     __pcstackCOMMON:
   556     0070                     ?_UART_Init:
   557     0070                     ?_initLCD:	
   558                           ; 1 bytes @ 0x0
   559                           
   560     0070                     ?_Timer0_Init:	
   561                           ; 1 bytes @ 0x0
   562                           
   563     0070                     ?_RS485_TxEnable:	
   564                           ; 1 bytes @ 0x0
   565                           
   566     0070                     ?_UART_Write:	
   567                           ; 1 bytes @ 0x0
   568                           
   569     0070                     ?_GenerateRandomNumber:	
   570                           ; 1 bytes @ 0x0
   571                           
   572     0070                     ?_KeyPadReader:	
   573                           ; 1 bytes @ 0x0
   574                           
   575     0070                     ?_RS485_RxEnable:	
   576                           ; 1 bytes @ 0x0
   577                           
   578     0070                     ?_UART_Read1:	
   579                           ; 1 bytes @ 0x0
   580                           
   581     0070                     ?_UART_Read2:	
   582                           ; 1 bytes @ 0x0
   583                           
   584     0070                     ?_main:	
   585                           ; 1 bytes @ 0x0
   586                           
   587     0070                     ?_ISR:	
   588                           ; 1 bytes @ 0x0
   589                           
   590     0070                     ??_ISR:	
   591                           ; 1 bytes @ 0x0
   592                           
   593                           
   594                           ; 1 bytes @ 0x0
   595     0070                     	ds	5
   596                           
   597                           	psect	cstackBANK0
   598     0048                     __pcstackBANK0:
   599     0048                     ??_UART_Init:
   600     0048                     ??_Timer0_Init:	
   601                           ; 1 bytes @ 0x0
   602                           
   603     0048                     ?_lcdSend:	
   604                           ; 1 bytes @ 0x0
   605                           
   606     0048                     ??_RS485_TxEnable:	
   607                           ; 1 bytes @ 0x0
   608                           
   609     0048                     ??_UART_Write:	
   610                           ; 1 bytes @ 0x0
   611                           
   612     0048                     ??_GenerateRandomNumber:	
   613                           ; 1 bytes @ 0x0
   614                           
   615     0048                     ??_KeyPadReader:	
   616                           ; 1 bytes @ 0x0
   617                           
   618     0048                     ??_RS485_RxEnable:	
   619                           ; 1 bytes @ 0x0
   620                           
   621     0048                     ?___bmul:	
   622                           ; 1 bytes @ 0x0
   623                           
   624     0048                     ?___awmod:	
   625                           ; 1 bytes @ 0x0
   626                           
   627     0048                     UART_Write@data:	
   628                           ; 2 bytes @ 0x0
   629                           
   630     0048                     lcdSend@tipo:	
   631                           ; 1 bytes @ 0x0
   632                           
   633     0048                     GenerateRandomNumber@randomNum:	
   634                           ; 1 bytes @ 0x0
   635                           
   636     0048                     ___bmul@multiplicand:	
   637                           ; 1 bytes @ 0x0
   638                           
   639     0048                     ___awmod@divisor:	
   640                           ; 1 bytes @ 0x0
   641                           
   642                           
   643                           ; 2 bytes @ 0x0
   644     0048                     	ds	1
   645     0049                     ??_lcdSend:
   646     0049                     ??___bmul:	
   647                           ; 1 bytes @ 0x1
   648                           
   649     0049                     lcdSend@dato:	
   650                           ; 1 bytes @ 0x1
   651                           
   652     0049                     GenerateRandomNumber@count:	
   653                           ; 1 bytes @ 0x1
   654                           
   655                           
   656                           ; 2 bytes @ 0x1
   657     0049                     	ds	1
   658     004A                     ??_initLCD:
   659     004A                     ?_lcdPrint:	
   660                           ; 1 bytes @ 0x2
   661                           
   662     004A                     ___bmul@product:	
   663                           ; 1 bytes @ 0x2
   664                           
   665     004A                     lcdPrint@str:	
   666                           ; 1 bytes @ 0x2
   667                           
   668     004A                     ___awmod@dividend:	
   669                           ; 2 bytes @ 0x2
   670                           
   671                           
   672                           ; 2 bytes @ 0x2
   673     004A                     	ds	1
   674     004B                     ___bmul@multiplier:
   675                           
   676                           ; 1 bytes @ 0x3
   677     004B                     	ds	1
   678     004C                     ??_lcdPrint:
   679     004C                     ?_potenza:	
   680                           ; 1 bytes @ 0x4
   681                           
   682     004C                     ??___awmod:	
   683                           ; 1 bytes @ 0x4
   684                           
   685     004C                     potenza@e:	
   686                           ; 1 bytes @ 0x4
   687                           
   688                           
   689                           ; 1 bytes @ 0x4
   690     004C                     	ds	1
   691     004D                     ??_potenza:
   692     004D                     ___awmod@counter:	
   693                           ; 1 bytes @ 0x5
   694                           
   695                           
   696                           ; 1 bytes @ 0x5
   697     004D                     	ds	1
   698     004E                     potenza@b:
   699     004E                     ___awmod@sign:	
   700                           ; 1 bytes @ 0x6
   701                           
   702                           
   703                           ; 1 bytes @ 0x6
   704     004E                     	ds	1
   705     004F                     lcdPrint@n:
   706     004F                     potenza@i:	
   707                           ; 2 bytes @ 0x7
   708                           
   709                           
   710                           ; 2 bytes @ 0x7
   711     004F                     	ds	2
   712     0051                     potenza@n:
   713                           
   714                           ; 1 bytes @ 0x9
   715     0051                     	ds	1
   716     0052                     ?___awdiv:
   717     0052                     ___awdiv@divisor:	
   718                           ; 2 bytes @ 0xA
   719                           
   720                           
   721                           ; 2 bytes @ 0xA
   722     0052                     	ds	2
   723     0054                     ___awdiv@dividend:
   724                           
   725                           ; 2 bytes @ 0xC
   726     0054                     	ds	2
   727     0056                     ??___awdiv:
   728                           
   729                           ; 1 bytes @ 0xE
   730     0056                     	ds	1
   731     0057                     ___awdiv@counter:
   732                           
   733                           ; 1 bytes @ 0xF
   734     0057                     	ds	1
   735     0058                     ___awdiv@sign:
   736                           
   737                           ; 1 bytes @ 0x10
   738     0058                     	ds	1
   739     0059                     ___awdiv@quotient:
   740                           
   741                           ; 2 bytes @ 0x11
   742     0059                     	ds	2
   743     005B                     ?_intToString:
   744     005B                     intToString@n:	
   745                           ; 1 bytes @ 0x13
   746                           
   747                           
   748                           ; 2 bytes @ 0x13
   749     005B                     	ds	2
   750     005D                     intToString@str:
   751                           
   752                           ; 1 bytes @ 0x15
   753     005D                     	ds	1
   754     005E                     ??_intToString:
   755                           
   756                           ; 1 bytes @ 0x16
   757     005E                     	ds	3
   758     0061                     intToString@t:
   759                           
   760                           ; 1 bytes @ 0x19
   761     0061                     	ds	1
   762     0062                     intToString@cifre:
   763                           
   764                           ; 1 bytes @ 0x1A
   765     0062                     	ds	1
   766     0063                     intToString@i:
   767                           
   768                           ; 1 bytes @ 0x1B
   769     0063                     	ds	1
   770     0064                     ??_UART_Read1:
   771     0064                     ??_UART_Read2:	
   772                           ; 1 bytes @ 0x1C
   773                           
   774                           
   775                           ; 1 bytes @ 0x1C
   776     0064                     	ds	3
   777     0067                     UART_Read1@count:
   778                           
   779                           ; 1 bytes @ 0x1F
   780     0067                     	ds	1
   781     0068                     ??_main:
   782                           
   783                           	psect	maintext
   784     0038                     __pmaintext:	
   785                           ; 1 bytes @ 0x20
   786 ;;
   787 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   788 ;;
   789 ;; *************** function _main *****************
   790 ;; Defined at:
   791 ;;		line 107 in file "main.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;		None
   794 ;; Auto vars:     Size  Location     Type
   795 ;;		None
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   800 ;; Tracked objects:
   801 ;;		On entry : B00/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   805 ;;      Params:         0       0       0       0       0
   806 ;;      Locals:         0       0       0       0       0
   807 ;;      Temps:          0       0       0       0       0
   808 ;;      Totals:         0       0       0       0       0
   809 ;;Total ram usage:        0 bytes
   810 ;; Hardware stack levels required when called: 6
   811 ;; This function calls:
   812 ;;		_GenerateRandomNumber
   813 ;;		_KeyPadReader
   814 ;;		_RS485_RxEnable
   815 ;;		_RS485_TxEnable
   816 ;;		_Timer0_Init
   817 ;;		_UART_Init
   818 ;;		_UART_Read1
   819 ;;		_UART_Read2
   820 ;;		_UART_Write
   821 ;;		_initLCD
   822 ;;		_lcdPrint
   823 ;;		_lcdSend
   824 ;; This function is called by:
   825 ;;		Startup code after reset
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829     0038                     _main:	
   830                           ;psect for function _main
   831                           
   832     0038                     l2952:	
   833                           ;incstack = 0
   834                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   835                           
   836                           
   837                           ;main.c: 109:     TRISA=0x00;
   838     0038  1683               	bsf	3,5	;RP0=1, select bank1
   839     0039  1303               	bcf	3,6	;RP1=0, select bank1
   840     003A  0185               	clrf	5	;volatile
   841                           
   842                           ;main.c: 110:  TRISB=0x00;
   843     003B  0186               	clrf	6	;volatile
   844                           
   845                           ;main.c: 111:  TRISC=0x00;
   846     003C  0187               	clrf	7	;volatile
   847                           
   848                           ;main.c: 112:  TRISD=0x00;
   849     003D  0188               	clrf	8	;volatile
   850                           
   851                           ;main.c: 113:     TRISE=0X00;
   852     003E  0189               	clrf	9	;volatile
   853     003F                     l2954:
   854                           
   855                           ;main.c: 114:     UART_Init();
   856     003F  120A  158A  2557  120A  118A  	fcall	_UART_Init
   857     0044                     l2956:
   858                           
   859                           ;main.c: 115:     initLCD();
   860     0044  120A  158A  2689  120A  118A  	fcall	_initLCD
   861     0049                     l2958:
   862                           
   863                           ;main.c: 116:     Timer0_Init();
   864     0049  120A  158A  2548  120A  118A  	fcall	_Timer0_Init
   865     004E                     l2960:
   866                           
   867                           ;main.c: 118:     {;main.c: 119:         lcdSend(0x01, 0);
   868     004E  1283               	bcf	3,5	;RP0=0, select bank0
   869     004F  1303               	bcf	3,6	;RP1=0, select bank0
   870     0050  01C8               	clrf	lcdSend@tipo
   871     0051  3001               	movlw	1
   872     0052  120A  158A  2569  120A  118A  	fcall	_lcdSend
   873     0057                     l2962:
   874                           
   875                           ;main.c: 120:         lcdPrint("Premi *");
   876     0057  3078               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   877     0058  1283               	bcf	3,5	;RP0=0, select bank0
   878     0059  1303               	bcf	3,6	;RP1=0, select bank0
   879     005A  00CA               	movwf	lcdPrint@str
   880     005B  3080               	movlw	128
   881     005C  00CB               	movwf	lcdPrint@str+1
   882     005D  120A  158A  25D8  120A  118A  	fcall	_lcdPrint
   883     0062                     l2964:
   884                           
   885                           ;main.c: 121:         RS485_TxEnable();
   886     0062  120A  118A  27FA  120A  118A  	fcall	_RS485_TxEnable
   887     0067                     l2966:
   888                           
   889                           ;main.c: 122:         UART_Write('P');
   890     0067  3050               	movlw	80
   891     0068  120A  158A  253E  120A  118A  	fcall	_UART_Write
   892     006D                     l2968:
   893                           
   894                           ;main.c: 123:         UART_Write('r');
   895     006D  3072               	movlw	114
   896     006E  120A  158A  253E  120A  118A  	fcall	_UART_Write
   897     0073                     l2970:
   898                           
   899                           ;main.c: 124:         UART_Write('e');
   900     0073  3065               	movlw	101
   901     0074  120A  158A  253E  120A  118A  	fcall	_UART_Write
   902     0079                     l2972:
   903                           
   904                           ;main.c: 125:         UART_Write('m');
   905     0079  306D               	movlw	109
   906     007A  120A  158A  253E  120A  118A  	fcall	_UART_Write
   907     007F                     l2974:
   908                           
   909                           ;main.c: 126:         UART_Write('i');
   910     007F  3069               	movlw	105
   911     0080  120A  158A  253E  120A  118A  	fcall	_UART_Write
   912     0085                     l2976:
   913                           
   914                           ;main.c: 127:         UART_Write(' ');
   915     0085  3020               	movlw	32
   916     0086  120A  158A  253E  120A  118A  	fcall	_UART_Write
   917     008B                     l2978:
   918                           
   919                           ;main.c: 128:         UART_Write('*');
   920     008B  302A               	movlw	42
   921     008C  120A  158A  253E  120A  118A  	fcall	_UART_Write
   922     0091                     l2980:
   923                           
   924                           ;main.c: 129:         UART_Write('\r');
   925     0091  300D               	movlw	13
   926     0092  120A  158A  253E  120A  118A  	fcall	_UART_Write
   927     0097                     l2982:
   928                           
   929                           ;main.c: 130:         UART_Write('\n');
   930     0097  300A               	movlw	10
   931     0098  120A  158A  253E  120A  118A  	fcall	_UART_Write
   932     009D                     l2984:
   933                           
   934                           ;main.c: 131:         num1 = GenerateRandomNumber();
   935     009D  120A  158A  257E  120A  118A  	fcall	_GenerateRandomNumber
   936     00A2  1283               	bcf	3,5	;RP0=0, select bank0
   937     00A3  1303               	bcf	3,6	;RP1=0, select bank0
   938     00A4  00C4               	movwf	_num1
   939     00A5                     l2986:
   940                           
   941                           ;main.c: 132:         num2 = GenerateRandomNumber();
   942     00A5  120A  158A  257E  120A  118A  	fcall	_GenerateRandomNumber
   943     00AA  1283               	bcf	3,5	;RP0=0, select bank0
   944     00AB  1303               	bcf	3,6	;RP1=0, select bank0
   945     00AC  00C3               	movwf	_num2
   946     00AD                     l2988:
   947                           
   948                           ;main.c: 133:         num3 = GenerateRandomNumber();
   949     00AD  120A  158A  257E  120A  118A  	fcall	_GenerateRandomNumber
   950     00B2  1283               	bcf	3,5	;RP0=0, select bank0
   951     00B3  1303               	bcf	3,6	;RP1=0, select bank0
   952     00B4  00C2               	movwf	_num3
   953     00B5                     l2990:
   954                           
   955                           ;main.c: 134:         num4 = GenerateRandomNumber();
   956     00B5  120A  158A  257E  120A  118A  	fcall	_GenerateRandomNumber
   957     00BA  1283               	bcf	3,5	;RP0=0, select bank0
   958     00BB  1303               	bcf	3,6	;RP1=0, select bank0
   959     00BC  00C1               	movwf	_num4
   960     00BD                     l2992:
   961                           
   962                           ;main.c: 135:         num5 = GenerateRandomNumber();
   963     00BD  120A  158A  257E  120A  118A  	fcall	_GenerateRandomNumber
   964     00C2  1283               	bcf	3,5	;RP0=0, select bank0
   965     00C3  1303               	bcf	3,6	;RP1=0, select bank0
   966     00C4  00C0               	movwf	_num5
   967                           
   968                           ;main.c: 136:         while (codice[0] == '\0')
   969     00C5  28DB               	goto	l3000
   970     00C6                     l2994:
   971                           
   972                           ;main.c: 137:         {;main.c: 138:             KeyPadReader();
   973     00C6  120A  158A  2773  120A  118A  	fcall	_KeyPadReader
   974     00CB                     l2996:
   975                           
   976                           ;main.c: 139:             if (keys[keypressed] == '*'){
   977     00CB  1283               	bcf	3,5	;RP0=0, select bank0
   978     00CC  1303               	bcf	3,6	;RP1=0, select bank0
   979     00CD  083A               	movf	_keypressed,w
   980     00CE  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
   981     00CF  0084               	movwf	4
   982     00D0  120A  158A  200A  120A  118A  	fcall	stringdir
   983     00D5  3A2A               	xorlw	42
   984     00D6  1D03               	skipz
   985     00D7  28D9               	goto	u3261
   986     00D8  28DA               	goto	u3260
   987     00D9                     u3261:
   988     00D9  28DB               	goto	l3000
   989     00DA                     u3260:
   990     00DA  28E0               	goto	l3002
   991     00DB                     l3000:
   992                           
   993                           ;main.c: 136:         while (codice[0] == '\0')
   994     00DB  0826               	movf	_codice,w
   995     00DC  1903               	btfsc	3,2
   996     00DD  28DF               	goto	u3271
   997     00DE  28E0               	goto	u3270
   998     00DF                     u3271:
   999     00DF  28C6               	goto	l2994
  1000     00E0                     u3270:
  1001     00E0                     l3002:
  1002                           
  1003                           ;main.c: 143:         lcdSend(0x01, 0);
  1004     00E0  01C8               	clrf	lcdSend@tipo
  1005     00E1  3001               	movlw	1
  1006     00E2  120A  158A  2569  120A  118A  	fcall	_lcdSend
  1007     00E7                     l3004:
  1008                           
  1009                           ;main.c: 144:         lcdPrint("Attendere");
  1010     00E7  306E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1011     00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1012     00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1013     00EA  00CA               	movwf	lcdPrint@str
  1014     00EB  3080               	movlw	128
  1015     00EC  00CB               	movwf	lcdPrint@str+1
  1016     00ED  120A  158A  25D8  120A  118A  	fcall	_lcdPrint
  1017                           
  1018                           ;main.c: 145:         while(num1 != 0x30 && num1 != 0x31 && num1 != 0x32 && num1 != 0x33
      +                           &&
  1019     00F2  28FB               	goto	l3008
  1020     00F3                     l3006:
  1021                           
  1022                           ;main.c: 147:               num1 != 0x38 && num1 != 0x39){;main.c: 148:         num1 = G
      +                          enerateRandomNumber();
  1023     00F3  120A  158A  257E  120A  118A  	fcall	_GenerateRandomNumber
  1024     00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1025     00F9  1303               	bcf	3,6	;RP1=0, select bank0
  1026     00FA  00C4               	movwf	_num1
  1027     00FB                     l3008:
  1028                           
  1029                           ;main.c: 145:         while(num1 != 0x30 && num1 != 0x31 && num1 != 0x32 && num1 != 0x33
      +                           &&
  1030     00FB  3030               	movlw	48
  1031     00FC  1283               	bcf	3,5	;RP0=0, select bank0
  1032     00FD  1303               	bcf	3,6	;RP1=0, select bank0
  1033     00FE  0644               	xorwf	_num1,w
  1034     00FF  1903               	btfsc	3,2
  1035     0100  2902               	goto	u3281
  1036     0101  2903               	goto	u3280
  1037     0102                     u3281:
  1038     0102  2939               	goto	l3028
  1039     0103                     u3280:
  1040     0103                     l3010:
  1041     0103  3031               	movlw	49
  1042     0104  0644               	xorwf	_num1,w
  1043     0105  1903               	btfsc	3,2
  1044     0106  2908               	goto	u3291
  1045     0107  2909               	goto	u3290
  1046     0108                     u3291:
  1047     0108  2939               	goto	l3028
  1048     0109                     u3290:
  1049     0109                     l3012:
  1050     0109  3032               	movlw	50
  1051     010A  0644               	xorwf	_num1,w
  1052     010B  1903               	btfsc	3,2
  1053     010C  290E               	goto	u3301
  1054     010D  290F               	goto	u3300
  1055     010E                     u3301:
  1056     010E  2939               	goto	l3028
  1057     010F                     u3300:
  1058     010F                     l3014:
  1059     010F  3033               	movlw	51
  1060     0110  0644               	xorwf	_num1,w
  1061     0111  1903               	btfsc	3,2
  1062     0112  2914               	goto	u3311
  1063     0113  2915               	goto	u3310
  1064     0114                     u3311:
  1065     0114  2939               	goto	l3028
  1066     0115                     u3310:
  1067     0115                     l3016:
  1068     0115  3034               	movlw	52
  1069     0116  0644               	xorwf	_num1,w
  1070     0117  1903               	btfsc	3,2
  1071     0118  291A               	goto	u3321
  1072     0119  291B               	goto	u3320
  1073     011A                     u3321:
  1074     011A  2939               	goto	l3028
  1075     011B                     u3320:
  1076     011B                     l3018:
  1077     011B  3035               	movlw	53
  1078     011C  0644               	xorwf	_num1,w
  1079     011D  1903               	btfsc	3,2
  1080     011E  2920               	goto	u3331
  1081     011F  2921               	goto	u3330
  1082     0120                     u3331:
  1083     0120  2939               	goto	l3028
  1084     0121                     u3330:
  1085     0121                     l3020:
  1086     0121  3036               	movlw	54
  1087     0122  0644               	xorwf	_num1,w
  1088     0123  1903               	btfsc	3,2
  1089     0124  2926               	goto	u3341
  1090     0125  2927               	goto	u3340
  1091     0126                     u3341:
  1092     0126  2939               	goto	l3028
  1093     0127                     u3340:
  1094     0127                     l3022:
  1095     0127  3037               	movlw	55
  1096     0128  0644               	xorwf	_num1,w
  1097     0129  1903               	btfsc	3,2
  1098     012A  292C               	goto	u3351
  1099     012B  292D               	goto	u3350
  1100     012C                     u3351:
  1101     012C  2939               	goto	l3028
  1102     012D                     u3350:
  1103     012D                     l3024:
  1104     012D  3038               	movlw	56
  1105     012E  0644               	xorwf	_num1,w
  1106     012F  1903               	btfsc	3,2
  1107     0130  2932               	goto	u3361
  1108     0131  2933               	goto	u3360
  1109     0132                     u3361:
  1110     0132  2939               	goto	l3028
  1111     0133                     u3360:
  1112     0133                     l3026:
  1113     0133  3039               	movlw	57
  1114     0134  0644               	xorwf	_num1,w
  1115     0135  1D03               	btfss	3,2
  1116     0136  2938               	goto	u3371
  1117     0137  2939               	goto	u3370
  1118     0138                     u3371:
  1119     0138  28F3               	goto	l3006
  1120     0139                     u3370:
  1121     0139                     l3028:
  1122                           
  1123                           ;main.c: 150:         lcdSend(0x01, 0);
  1124     0139  01C8               	clrf	lcdSend@tipo
  1125     013A  3001               	movlw	1
  1126     013B  120A  158A  2569  120A  118A  	fcall	_lcdSend
  1127     0140                     l3030:
  1128                           
  1129                           ;main.c: 151:         lcdPrint("Attendere.");
  1130     0140  3058               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1131     0141  1283               	bcf	3,5	;RP0=0, select bank0
  1132     0142  1303               	bcf	3,6	;RP1=0, select bank0
  1133     0143  00CA               	movwf	lcdPrint@str
  1134     0144  3080               	movlw	128
  1135     0145  00CB               	movwf	lcdPrint@str+1
  1136     0146  120A  158A  25D8  120A  118A  	fcall	_lcdPrint
  1137                           
  1138                           ;main.c: 152:         while(num2 != 0x30 && num2 != 0x31 && num2 != 0x32 && num2 != 0x33
      +                           &&
  1139     014B  2954               	goto	l3034
  1140     014C                     l3032:
  1141                           
  1142                           ;main.c: 154:               num2 != 0x38 && num2 != 0x39){;main.c: 155:         num2 = G
      +                          enerateRandomNumber();
  1143     014C  120A  158A  257E  120A  118A  	fcall	_GenerateRandomNumber
  1144     0151  1283               	bcf	3,5	;RP0=0, select bank0
  1145     0152  1303               	bcf	3,6	;RP1=0, select bank0
  1146     0153  00C3               	movwf	_num2
  1147     0154                     l3034:
  1148                           
  1149                           ;main.c: 152:         while(num2 != 0x30 && num2 != 0x31 && num2 != 0x32 && num2 != 0x33
      +                           &&
  1150     0154  3030               	movlw	48
  1151     0155  1283               	bcf	3,5	;RP0=0, select bank0
  1152     0156  1303               	bcf	3,6	;RP1=0, select bank0
  1153     0157  0643               	xorwf	_num2,w
  1154     0158  1903               	btfsc	3,2
  1155     0159  295B               	goto	u3381
  1156     015A  295C               	goto	u3380
  1157     015B                     u3381:
  1158     015B  2992               	goto	l3054
  1159     015C                     u3380:
  1160     015C                     l3036:
  1161     015C  3031               	movlw	49
  1162     015D  0643               	xorwf	_num2,w
  1163     015E  1903               	btfsc	3,2
  1164     015F  2961               	goto	u3391
  1165     0160  2962               	goto	u3390
  1166     0161                     u3391:
  1167     0161  2992               	goto	l3054
  1168     0162                     u3390:
  1169     0162                     l3038:
  1170     0162  3032               	movlw	50
  1171     0163  0643               	xorwf	_num2,w
  1172     0164  1903               	btfsc	3,2
  1173     0165  2967               	goto	u3401
  1174     0166  2968               	goto	u3400
  1175     0167                     u3401:
  1176     0167  2992               	goto	l3054
  1177     0168                     u3400:
  1178     0168                     l3040:
  1179     0168  3033               	movlw	51
  1180     0169  0643               	xorwf	_num2,w
  1181     016A  1903               	btfsc	3,2
  1182     016B  296D               	goto	u3411
  1183     016C  296E               	goto	u3410
  1184     016D                     u3411:
  1185     016D  2992               	goto	l3054
  1186     016E                     u3410:
  1187     016E                     l3042:
  1188     016E  3034               	movlw	52
  1189     016F  0643               	xorwf	_num2,w
  1190     0170  1903               	btfsc	3,2
  1191     0171  2973               	goto	u3421
  1192     0172  2974               	goto	u3420
  1193     0173                     u3421:
  1194     0173  2992               	goto	l3054
  1195     0174                     u3420:
  1196     0174                     l3044:
  1197     0174  3035               	movlw	53
  1198     0175  0643               	xorwf	_num2,w
  1199     0176  1903               	btfsc	3,2
  1200     0177  2979               	goto	u3431
  1201     0178  297A               	goto	u3430
  1202     0179                     u3431:
  1203     0179  2992               	goto	l3054
  1204     017A                     u3430:
  1205     017A                     l3046:
  1206     017A  3036               	movlw	54
  1207     017B  0643               	xorwf	_num2,w
  1208     017C  1903               	btfsc	3,2
  1209     017D  297F               	goto	u3441
  1210     017E  2980               	goto	u3440
  1211     017F                     u3441:
  1212     017F  2992               	goto	l3054
  1213     0180                     u3440:
  1214     0180                     l3048:
  1215     0180  3037               	movlw	55
  1216     0181  0643               	xorwf	_num2,w
  1217     0182  1903               	btfsc	3,2
  1218     0183  2985               	goto	u3451
  1219     0184  2986               	goto	u3450
  1220     0185                     u3451:
  1221     0185  2992               	goto	l3054
  1222     0186                     u3450:
  1223     0186                     l3050:
  1224     0186  3038               	movlw	56
  1225     0187  0643               	xorwf	_num2,w
  1226     0188  1903               	btfsc	3,2
  1227     0189  298B               	goto	u3461
  1228     018A  298C               	goto	u3460
  1229     018B                     u3461:
  1230     018B  2992               	goto	l3054
  1231     018C                     u3460:
  1232     018C                     l3052:
  1233     018C  3039               	movlw	57
  1234     018D  0643               	xorwf	_num2,w
  1235     018E  1D03               	btfss	3,2
  1236     018F  2991               	goto	u3471
  1237     0190  2992               	goto	u3470
  1238     0191                     u3471:
  1239     0191  294C               	goto	l3032
  1240     0192                     u3470:
  1241     0192                     l3054:
  1242                           
  1243                           ;main.c: 157:         lcdSend(0x01, 0);
  1244     0192  01C8               	clrf	lcdSend@tipo
  1245     0193  3001               	movlw	1
  1246     0194  120A  158A  2569  120A  118A  	fcall	_lcdSend
  1247     0199                     l3056:
  1248                           
  1249                           ;main.c: 158:         lcdPrint("Attendere..");
  1250     0199  304C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1251     019A  1283               	bcf	3,5	;RP0=0, select bank0
  1252     019B  1303               	bcf	3,6	;RP1=0, select bank0
  1253     019C  00CA               	movwf	lcdPrint@str
  1254     019D  3080               	movlw	128
  1255     019E  00CB               	movwf	lcdPrint@str+1
  1256     019F  120A  158A  25D8  120A  118A  	fcall	_lcdPrint
  1257                           
  1258                           ;main.c: 159:         while(num3 != 0x30 && num3 != 0x31 && num3 != 0x32 && num3 != 0x33
      +                           &&
  1259     01A4  29AD               	goto	l3060
  1260     01A5                     l3058:
  1261                           
  1262                           ;main.c: 161:               num3 != 0x38 && num3 != 0x39){;main.c: 162:         num3 = G
      +                          enerateRandomNumber();
  1263     01A5  120A  158A  257E  120A  118A  	fcall	_GenerateRandomNumber
  1264     01AA  1283               	bcf	3,5	;RP0=0, select bank0
  1265     01AB  1303               	bcf	3,6	;RP1=0, select bank0
  1266     01AC  00C2               	movwf	_num3
  1267     01AD                     l3060:
  1268                           
  1269                           ;main.c: 159:         while(num3 != 0x30 && num3 != 0x31 && num3 != 0x32 && num3 != 0x33
      +                           &&
  1270     01AD  3030               	movlw	48
  1271     01AE  1283               	bcf	3,5	;RP0=0, select bank0
  1272     01AF  1303               	bcf	3,6	;RP1=0, select bank0
  1273     01B0  0642               	xorwf	_num3,w
  1274     01B1  1903               	btfsc	3,2
  1275     01B2  29B4               	goto	u3481
  1276     01B3  29B5               	goto	u3480
  1277     01B4                     u3481:
  1278     01B4  29EB               	goto	l3080
  1279     01B5                     u3480:
  1280     01B5                     l3062:
  1281     01B5  3031               	movlw	49
  1282     01B6  0642               	xorwf	_num3,w
  1283     01B7  1903               	btfsc	3,2
  1284     01B8  29BA               	goto	u3491
  1285     01B9  29BB               	goto	u3490
  1286     01BA                     u3491:
  1287     01BA  29EB               	goto	l3080
  1288     01BB                     u3490:
  1289     01BB                     l3064:
  1290     01BB  3032               	movlw	50
  1291     01BC  0642               	xorwf	_num3,w
  1292     01BD  1903               	btfsc	3,2
  1293     01BE  29C0               	goto	u3501
  1294     01BF  29C1               	goto	u3500
  1295     01C0                     u3501:
  1296     01C0  29EB               	goto	l3080
  1297     01C1                     u3500:
  1298     01C1                     l3066:
  1299     01C1  3033               	movlw	51
  1300     01C2  0642               	xorwf	_num3,w
  1301     01C3  1903               	btfsc	3,2
  1302     01C4  29C6               	goto	u3511
  1303     01C5  29C7               	goto	u3510
  1304     01C6                     u3511:
  1305     01C6  29EB               	goto	l3080
  1306     01C7                     u3510:
  1307     01C7                     l3068:
  1308     01C7  3034               	movlw	52
  1309     01C8  0642               	xorwf	_num3,w
  1310     01C9  1903               	btfsc	3,2
  1311     01CA  29CC               	goto	u3521
  1312     01CB  29CD               	goto	u3520
  1313     01CC                     u3521:
  1314     01CC  29EB               	goto	l3080
  1315     01CD                     u3520:
  1316     01CD                     l3070:
  1317     01CD  3035               	movlw	53
  1318     01CE  0642               	xorwf	_num3,w
  1319     01CF  1903               	btfsc	3,2
  1320     01D0  29D2               	goto	u3531
  1321     01D1  29D3               	goto	u3530
  1322     01D2                     u3531:
  1323     01D2  29EB               	goto	l3080
  1324     01D3                     u3530:
  1325     01D3                     l3072:
  1326     01D3  3036               	movlw	54
  1327     01D4  0642               	xorwf	_num3,w
  1328     01D5  1903               	btfsc	3,2
  1329     01D6  29D8               	goto	u3541
  1330     01D7  29D9               	goto	u3540
  1331     01D8                     u3541:
  1332     01D8  29EB               	goto	l3080
  1333     01D9                     u3540:
  1334     01D9                     l3074:
  1335     01D9  3037               	movlw	55
  1336     01DA  0642               	xorwf	_num3,w
  1337     01DB  1903               	btfsc	3,2
  1338     01DC  29DE               	goto	u3551
  1339     01DD  29DF               	goto	u3550
  1340     01DE                     u3551:
  1341     01DE  29EB               	goto	l3080
  1342     01DF                     u3550:
  1343     01DF                     l3076:
  1344     01DF  3038               	movlw	56
  1345     01E0  0642               	xorwf	_num3,w
  1346     01E1  1903               	btfsc	3,2
  1347     01E2  29E4               	goto	u3561
  1348     01E3  29E5               	goto	u3560
  1349     01E4                     u3561:
  1350     01E4  29EB               	goto	l3080
  1351     01E5                     u3560:
  1352     01E5                     l3078:
  1353     01E5  3039               	movlw	57
  1354     01E6  0642               	xorwf	_num3,w
  1355     01E7  1D03               	btfss	3,2
  1356     01E8  29EA               	goto	u3571
  1357     01E9  29EB               	goto	u3570
  1358     01EA                     u3571:
  1359     01EA  29A5               	goto	l3058
  1360     01EB                     u3570:
  1361     01EB                     l3080:
  1362                           
  1363                           ;main.c: 164:         lcdSend(0x01, 0);
  1364     01EB  01C8               	clrf	lcdSend@tipo
  1365     01EC  3001               	movlw	1
  1366     01ED  120A  158A  2569  120A  118A  	fcall	_lcdSend
  1367     01F2                     l3082:
  1368                           
  1369                           ;main.c: 165:         lcdPrint("Attendere...");
  1370     01F2  303F               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1371     01F3  1283               	bcf	3,5	;RP0=0, select bank0
  1372     01F4  1303               	bcf	3,6	;RP1=0, select bank0
  1373     01F5  00CA               	movwf	lcdPrint@str
  1374     01F6  3080               	movlw	128
  1375     01F7  00CB               	movwf	lcdPrint@str+1
  1376     01F8  120A  158A  25D8  120A  118A  	fcall	_lcdPrint
  1377                           
  1378                           ;main.c: 166:         while(num4 != 0x30 && num4 != 0x31 && num4 != 0x32 && num4 != 0x33
      +                           &&
  1379     01FD  2A06               	goto	l3086
  1380     01FE                     l3084:
  1381                           
  1382                           ;main.c: 168:               num4 != 0x38 && num4 != 0x39){;main.c: 169:         num4 = G
      +                          enerateRandomNumber();
  1383     01FE  120A  158A  257E  120A  118A  	fcall	_GenerateRandomNumber
  1384     0203  1283               	bcf	3,5	;RP0=0, select bank0
  1385     0204  1303               	bcf	3,6	;RP1=0, select bank0
  1386     0205  00C1               	movwf	_num4
  1387     0206                     l3086:
  1388                           
  1389                           ;main.c: 166:         while(num4 != 0x30 && num4 != 0x31 && num4 != 0x32 && num4 != 0x33
      +                           &&
  1390     0206  3030               	movlw	48
  1391     0207  1283               	bcf	3,5	;RP0=0, select bank0
  1392     0208  1303               	bcf	3,6	;RP1=0, select bank0
  1393     0209  0641               	xorwf	_num4,w
  1394     020A  1903               	btfsc	3,2
  1395     020B  2A0D               	goto	u3581
  1396     020C  2A0E               	goto	u3580
  1397     020D                     u3581:
  1398     020D  2A44               	goto	l3106
  1399     020E                     u3580:
  1400     020E                     l3088:
  1401     020E  3031               	movlw	49
  1402     020F  0641               	xorwf	_num4,w
  1403     0210  1903               	btfsc	3,2
  1404     0211  2A13               	goto	u3591
  1405     0212  2A14               	goto	u3590
  1406     0213                     u3591:
  1407     0213  2A44               	goto	l3106
  1408     0214                     u3590:
  1409     0214                     l3090:
  1410     0214  3032               	movlw	50
  1411     0215  0641               	xorwf	_num4,w
  1412     0216  1903               	btfsc	3,2
  1413     0217  2A19               	goto	u3601
  1414     0218  2A1A               	goto	u3600
  1415     0219                     u3601:
  1416     0219  2A44               	goto	l3106
  1417     021A                     u3600:
  1418     021A                     l3092:
  1419     021A  3033               	movlw	51
  1420     021B  0641               	xorwf	_num4,w
  1421     021C  1903               	btfsc	3,2
  1422     021D  2A1F               	goto	u3611
  1423     021E  2A20               	goto	u3610
  1424     021F                     u3611:
  1425     021F  2A44               	goto	l3106
  1426     0220                     u3610:
  1427     0220                     l3094:
  1428     0220  3034               	movlw	52
  1429     0221  0641               	xorwf	_num4,w
  1430     0222  1903               	btfsc	3,2
  1431     0223  2A25               	goto	u3621
  1432     0224  2A26               	goto	u3620
  1433     0225                     u3621:
  1434     0225  2A44               	goto	l3106
  1435     0226                     u3620:
  1436     0226                     l3096:
  1437     0226  3035               	movlw	53
  1438     0227  0641               	xorwf	_num4,w
  1439     0228  1903               	btfsc	3,2
  1440     0229  2A2B               	goto	u3631
  1441     022A  2A2C               	goto	u3630
  1442     022B                     u3631:
  1443     022B  2A44               	goto	l3106
  1444     022C                     u3630:
  1445     022C                     l3098:
  1446     022C  3036               	movlw	54
  1447     022D  0641               	xorwf	_num4,w
  1448     022E  1903               	btfsc	3,2
  1449     022F  2A31               	goto	u3641
  1450     0230  2A32               	goto	u3640
  1451     0231                     u3641:
  1452     0231  2A44               	goto	l3106
  1453     0232                     u3640:
  1454     0232                     l3100:
  1455     0232  3037               	movlw	55
  1456     0233  0641               	xorwf	_num4,w
  1457     0234  1903               	btfsc	3,2
  1458     0235  2A37               	goto	u3651
  1459     0236  2A38               	goto	u3650
  1460     0237                     u3651:
  1461     0237  2A44               	goto	l3106
  1462     0238                     u3650:
  1463     0238                     l3102:
  1464     0238  3038               	movlw	56
  1465     0239  0641               	xorwf	_num4,w
  1466     023A  1903               	btfsc	3,2
  1467     023B  2A3D               	goto	u3661
  1468     023C  2A3E               	goto	u3660
  1469     023D                     u3661:
  1470     023D  2A44               	goto	l3106
  1471     023E                     u3660:
  1472     023E                     l3104:
  1473     023E  3039               	movlw	57
  1474     023F  0641               	xorwf	_num4,w
  1475     0240  1D03               	btfss	3,2
  1476     0241  2A43               	goto	u3671
  1477     0242  2A44               	goto	u3670
  1478     0243                     u3671:
  1479     0243  29FE               	goto	l3084
  1480     0244                     u3670:
  1481     0244                     l3106:
  1482                           
  1483                           ;main.c: 171:         lcdSend(0x01, 0);
  1484     0244  01C8               	clrf	lcdSend@tipo
  1485     0245  3001               	movlw	1
  1486     0246  120A  158A  2569  120A  118A  	fcall	_lcdSend
  1487     024B                     l3108:
  1488                           
  1489                           ;main.c: 172:         lcdPrint("Attendere....");
  1490     024B  3023               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1491     024C  1283               	bcf	3,5	;RP0=0, select bank0
  1492     024D  1303               	bcf	3,6	;RP1=0, select bank0
  1493     024E  00CA               	movwf	lcdPrint@str
  1494     024F  3080               	movlw	128
  1495     0250  00CB               	movwf	lcdPrint@str+1
  1496     0251  120A  158A  25D8  120A  118A  	fcall	_lcdPrint
  1497                           
  1498                           ;main.c: 173:         while(num5 != 0x30 && num5 != 0x31 && num5 != 0x32 && num5 != 0x33
      +                           &&
  1499     0256  2A5F               	goto	l3112
  1500     0257                     l3110:
  1501                           
  1502                           ;main.c: 175:               num5 != 0x38 && num5 != 0x39){;main.c: 176:         num5 = G
      +                          enerateRandomNumber();
  1503     0257  120A  158A  257E  120A  118A  	fcall	_GenerateRandomNumber
  1504     025C  1283               	bcf	3,5	;RP0=0, select bank0
  1505     025D  1303               	bcf	3,6	;RP1=0, select bank0
  1506     025E  00C0               	movwf	_num5
  1507     025F                     l3112:
  1508                           
  1509                           ;main.c: 173:         while(num5 != 0x30 && num5 != 0x31 && num5 != 0x32 && num5 != 0x33
      +                           &&
  1510     025F  3030               	movlw	48
  1511     0260  1283               	bcf	3,5	;RP0=0, select bank0
  1512     0261  1303               	bcf	3,6	;RP1=0, select bank0
  1513     0262  0640               	xorwf	_num5,w
  1514     0263  1903               	btfsc	3,2
  1515     0264  2A66               	goto	u3681
  1516     0265  2A67               	goto	u3680
  1517     0266                     u3681:
  1518     0266  2A9D               	goto	l3132
  1519     0267                     u3680:
  1520     0267                     l3114:
  1521     0267  3031               	movlw	49
  1522     0268  0640               	xorwf	_num5,w
  1523     0269  1903               	btfsc	3,2
  1524     026A  2A6C               	goto	u3691
  1525     026B  2A6D               	goto	u3690
  1526     026C                     u3691:
  1527     026C  2A9D               	goto	l3132
  1528     026D                     u3690:
  1529     026D                     l3116:
  1530     026D  3032               	movlw	50
  1531     026E  0640               	xorwf	_num5,w
  1532     026F  1903               	btfsc	3,2
  1533     0270  2A72               	goto	u3701
  1534     0271  2A73               	goto	u3700
  1535     0272                     u3701:
  1536     0272  2A9D               	goto	l3132
  1537     0273                     u3700:
  1538     0273                     l3118:
  1539     0273  3033               	movlw	51
  1540     0274  0640               	xorwf	_num5,w
  1541     0275  1903               	btfsc	3,2
  1542     0276  2A78               	goto	u3711
  1543     0277  2A79               	goto	u3710
  1544     0278                     u3711:
  1545     0278  2A9D               	goto	l3132
  1546     0279                     u3710:
  1547     0279                     l3120:
  1548     0279  3034               	movlw	52
  1549     027A  0640               	xorwf	_num5,w
  1550     027B  1903               	btfsc	3,2
  1551     027C  2A7E               	goto	u3721
  1552     027D  2A7F               	goto	u3720
  1553     027E                     u3721:
  1554     027E  2A9D               	goto	l3132
  1555     027F                     u3720:
  1556     027F                     l3122:
  1557     027F  3035               	movlw	53
  1558     0280  0640               	xorwf	_num5,w
  1559     0281  1903               	btfsc	3,2
  1560     0282  2A84               	goto	u3731
  1561     0283  2A85               	goto	u3730
  1562     0284                     u3731:
  1563     0284  2A9D               	goto	l3132
  1564     0285                     u3730:
  1565     0285                     l3124:
  1566     0285  3036               	movlw	54
  1567     0286  0640               	xorwf	_num5,w
  1568     0287  1903               	btfsc	3,2
  1569     0288  2A8A               	goto	u3741
  1570     0289  2A8B               	goto	u3740
  1571     028A                     u3741:
  1572     028A  2A9D               	goto	l3132
  1573     028B                     u3740:
  1574     028B                     l3126:
  1575     028B  3037               	movlw	55
  1576     028C  0640               	xorwf	_num5,w
  1577     028D  1903               	btfsc	3,2
  1578     028E  2A90               	goto	u3751
  1579     028F  2A91               	goto	u3750
  1580     0290                     u3751:
  1581     0290  2A9D               	goto	l3132
  1582     0291                     u3750:
  1583     0291                     l3128:
  1584     0291  3038               	movlw	56
  1585     0292  0640               	xorwf	_num5,w
  1586     0293  1903               	btfsc	3,2
  1587     0294  2A96               	goto	u3761
  1588     0295  2A97               	goto	u3760
  1589     0296                     u3761:
  1590     0296  2A9D               	goto	l3132
  1591     0297                     u3760:
  1592     0297                     l3130:
  1593     0297  3039               	movlw	57
  1594     0298  0640               	xorwf	_num5,w
  1595     0299  1D03               	btfss	3,2
  1596     029A  2A9C               	goto	u3771
  1597     029B  2A9D               	goto	u3770
  1598     029C                     u3771:
  1599     029C  2A57               	goto	l3110
  1600     029D                     u3770:
  1601     029D                     l3132:
  1602                           
  1603                           ;main.c: 178:         UART_Write(id1);
  1604     029D  3001               	movlw	1
  1605     029E  120A  158A  253E  120A  118A  	fcall	_UART_Write
  1606     02A3                     l3134:
  1607                           
  1608                           ;main.c: 180:         type = 0x01;
  1609     02A3  1283               	bcf	3,5	;RP0=0, select bank0
  1610     02A4  1303               	bcf	3,6	;RP1=0, select bank0
  1611     02A5  01B4               	clrf	_type
  1612     02A6  0AB4               	incf	_type,f
  1613                           
  1614                           ;main.c: 181:         UART_Write(type);
  1615     02A7  3001               	movlw	1
  1616     02A8  120A  158A  253E  120A  118A  	fcall	_UART_Write
  1617                           
  1618                           ;main.c: 182:         UART_Write(num1);
  1619     02AD  1283               	bcf	3,5	;RP0=0, select bank0
  1620     02AE  1303               	bcf	3,6	;RP1=0, select bank0
  1621     02AF  0844               	movf	_num1,w
  1622     02B0  120A  158A  253E  120A  118A  	fcall	_UART_Write
  1623                           
  1624                           ;main.c: 183:         UART_Write(num2);
  1625     02B5  1283               	bcf	3,5	;RP0=0, select bank0
  1626     02B6  1303               	bcf	3,6	;RP1=0, select bank0
  1627     02B7  0843               	movf	_num2,w
  1628     02B8  120A  158A  253E  120A  118A  	fcall	_UART_Write
  1629                           
  1630                           ;main.c: 184:         UART_Write(num3);
  1631     02BD  1283               	bcf	3,5	;RP0=0, select bank0
  1632     02BE  1303               	bcf	3,6	;RP1=0, select bank0
  1633     02BF  0842               	movf	_num3,w
  1634     02C0  120A  158A  253E  120A  118A  	fcall	_UART_Write
  1635                           
  1636                           ;main.c: 185:         UART_Write(num4);
  1637     02C5  1283               	bcf	3,5	;RP0=0, select bank0
  1638     02C6  1303               	bcf	3,6	;RP1=0, select bank0
  1639     02C7  0841               	movf	_num4,w
  1640     02C8  120A  158A  253E  120A  118A  	fcall	_UART_Write
  1641                           
  1642                           ;main.c: 186:         UART_Write(num5);
  1643     02CD  1283               	bcf	3,5	;RP0=0, select bank0
  1644     02CE  1303               	bcf	3,6	;RP1=0, select bank0
  1645     02CF  0840               	movf	_num5,w
  1646     02D0  120A  158A  253E  120A  118A  	fcall	_UART_Write
  1647                           
  1648                           ;main.c: 187:         UART_Write('*');
  1649     02D5  302A               	movlw	42
  1650     02D6  120A  158A  253E  120A  118A  	fcall	_UART_Write
  1651                           
  1652                           ;main.c: 188:         lcdSend(0x01, 0);
  1653     02DB  1283               	bcf	3,5	;RP0=0, select bank0
  1654     02DC  1303               	bcf	3,6	;RP1=0, select bank0
  1655     02DD  01C8               	clrf	lcdSend@tipo
  1656     02DE  3001               	movlw	1
  1657     02DF  120A  158A  2569  120A  118A  	fcall	_lcdSend
  1658                           
  1659                           ;main.c: 189:         lcdSend(num1, 1);
  1660     02E4  1283               	bcf	3,5	;RP0=0, select bank0
  1661     02E5  1303               	bcf	3,6	;RP1=0, select bank0
  1662     02E6  01C8               	clrf	lcdSend@tipo
  1663     02E7  0AC8               	incf	lcdSend@tipo,f
  1664     02E8  0844               	movf	_num1,w
  1665     02E9  120A  158A  2569  120A  118A  	fcall	_lcdSend
  1666                           
  1667                           ;main.c: 190:         lcdSend(num2, 1);
  1668     02EE  1283               	bcf	3,5	;RP0=0, select bank0
  1669     02EF  1303               	bcf	3,6	;RP1=0, select bank0
  1670     02F0  01C8               	clrf	lcdSend@tipo
  1671     02F1  0AC8               	incf	lcdSend@tipo,f
  1672     02F2  0843               	movf	_num2,w
  1673     02F3  120A  158A  2569  120A  118A  	fcall	_lcdSend
  1674                           
  1675                           ;main.c: 191:         lcdSend(num3, 1);
  1676     02F8  1283               	bcf	3,5	;RP0=0, select bank0
  1677     02F9  1303               	bcf	3,6	;RP1=0, select bank0
  1678     02FA  01C8               	clrf	lcdSend@tipo
  1679     02FB  0AC8               	incf	lcdSend@tipo,f
  1680     02FC  0842               	movf	_num3,w
  1681     02FD  120A  158A  2569  120A  118A  	fcall	_lcdSend
  1682                           
  1683                           ;main.c: 192:         lcdSend(num4, 1);
  1684     0302  1283               	bcf	3,5	;RP0=0, select bank0
  1685     0303  1303               	bcf	3,6	;RP1=0, select bank0
  1686     0304  01C8               	clrf	lcdSend@tipo
  1687     0305  0AC8               	incf	lcdSend@tipo,f
  1688     0306  0841               	movf	_num4,w
  1689     0307  120A  158A  2569  120A  118A  	fcall	_lcdSend
  1690                           
  1691                           ;main.c: 193:         lcdSend(num5, 1);
  1692     030C  1283               	bcf	3,5	;RP0=0, select bank0
  1693     030D  1303               	bcf	3,6	;RP1=0, select bank0
  1694     030E  01C8               	clrf	lcdSend@tipo
  1695     030F  0AC8               	incf	lcdSend@tipo,f
  1696     0310  0840               	movf	_num5,w
  1697     0311  120A  158A  2569  120A  118A  	fcall	_lcdSend
  1698     0316                     l3136:
  1699                           
  1700                           ;main.c: 194:         keypressed = 0;
  1701     0316  1283               	bcf	3,5	;RP0=0, select bank0
  1702     0317  1303               	bcf	3,6	;RP1=0, select bank0
  1703     0318  01BA               	clrf	_keypressed
  1704     0319                     l3138:
  1705                           
  1706                           ;main.c: 195:         RS485_RxEnable();
  1707     0319  120A  158A  2531  120A  118A  	fcall	_RS485_RxEnable
  1708     031E                     l3140:
  1709                           
  1710                           ;main.c: 196:         flag = 1;
  1711     031E  3001               	movlw	1
  1712     031F  1283               	bcf	3,5	;RP0=0, select bank0
  1713     0320  1303               	bcf	3,6	;RP1=0, select bank0
  1714     0321  00B0               	movwf	_flag
  1715     0322  3000               	movlw	0
  1716     0323  00B1               	movwf	_flag+1
  1717     0324                     l3142:
  1718                           
  1719                           ;main.c: 197:         UART_Read1();
  1720     0324  120A  118A  2332  120A  118A  	fcall	_UART_Read1
  1721     0329                     l3144:
  1722                           
  1723                           ;main.c: 198:         UART_Read2();
  1724     0329  120A  118A  253A  120A  118A  	fcall	_UART_Read2
  1725     032E  284E               	goto	l2960
  1726     032F  120A  118A  2810   	ljmp	start
  1727     0332                     __end_of_main:
  1728                           
  1729                           	psect	text1
  1730     0E89                     __ptext1:	
  1731 ;; *************** function _initLCD *****************
  1732 ;; Defined at:
  1733 ;;		line 413 in file "main.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;		None
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;		None
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  1    wreg      void 
  1740 ;; Registers used:
  1741 ;;		wreg, status,2, status,0, pclath, cstack
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1747 ;;      Params:         0       0       0       0       0
  1748 ;;      Locals:         0       0       0       0       0
  1749 ;;      Temps:          0       2       0       0       0
  1750 ;;      Totals:         0       2       0       0       0
  1751 ;;Total ram usage:        2 bytes
  1752 ;; Hardware stack levels used: 1
  1753 ;; Hardware stack levels required when called: 3
  1754 ;; This function calls:
  1755 ;;		_lcdSend
  1756 ;; This function is called by:
  1757 ;;		_main
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761     0E89                     _initLCD:	
  1762                           ;psect for function _initLCD
  1763                           
  1764     0E89                     l2610:	
  1765                           ;incstack = 0
  1766                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  1767                           
  1768                           
  1769                           ;main.c: 414:     PORTEbits.RE2 = 0;
  1770     0E89  1283               	bcf	3,5	;RP0=0, select bank0
  1771     0E8A  1303               	bcf	3,6	;RP1=0, select bank0
  1772     0E8B  1109               	bcf	9,2	;volatile
  1773                           
  1774                           ;main.c: 415:     PORTEbits.RE1 = 0;
  1775     0E8C  1089               	bcf	9,1	;volatile
  1776     0E8D                     l2612:
  1777                           
  1778                           ;main.c: 416:     _delay((unsigned long)((20)*(20000000/4000.0)));
  1779     0E8D  3082               	movlw	130
  1780     0E8E  1283               	bcf	3,5	;RP0=0, select bank0
  1781     0E8F  1303               	bcf	3,6	;RP1=0, select bank0
  1782     0E90  00CB               	movwf	??_initLCD+1
  1783     0E91  30DD               	movlw	221
  1784     0E92  00CA               	movwf	??_initLCD
  1785     0E93                     u3787:
  1786     0E93  0BCA               	decfsz	??_initLCD,f
  1787     0E94  2E93               	goto	u3787
  1788     0E95  0BCB               	decfsz	??_initLCD+1,f
  1789     0E96  2E93               	goto	u3787
  1790     0E97                     l2614:
  1791                           
  1792                           ;main.c: 417:     PORTEbits.RE1 = 1;
  1793     0E97  1283               	bcf	3,5	;RP0=0, select bank0
  1794     0E98  1303               	bcf	3,6	;RP1=0, select bank0
  1795     0E99  1489               	bsf	9,1	;volatile
  1796     0E9A                     l2616:
  1797                           
  1798                           ;main.c: 418:     lcdSend(0x38, 0);
  1799     0E9A  01C8               	clrf	lcdSend@tipo
  1800     0E9B  3038               	movlw	56
  1801     0E9C  120A  158A  2569  120A  158A  	fcall	_lcdSend
  1802     0EA1                     l2618:
  1803                           
  1804                           ;main.c: 419:     _delay((unsigned long)((5)*(20000000/4000.0)));
  1805     0EA1  3021               	movlw	33
  1806     0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  1807     0EA3  1303               	bcf	3,6	;RP1=0, select bank0
  1808     0EA4  00CB               	movwf	??_initLCD+1
  1809     0EA5  3075               	movlw	117
  1810     0EA6  00CA               	movwf	??_initLCD
  1811     0EA7                     u3797:
  1812     0EA7  0BCA               	decfsz	??_initLCD,f
  1813     0EA8  2EA7               	goto	u3797
  1814     0EA9  0BCB               	decfsz	??_initLCD+1,f
  1815     0EAA  2EA7               	goto	u3797
  1816     0EAB  2EAC               	nop2
  1817                           
  1818                           ;main.c: 420:     lcdSend(0x38, 0);
  1819     0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  1820     0EAD  1303               	bcf	3,6	;RP1=0, select bank0
  1821     0EAE  01C8               	clrf	lcdSend@tipo
  1822     0EAF  3038               	movlw	56
  1823     0EB0  120A  158A  2569  120A  158A  	fcall	_lcdSend
  1824     0EB5                     l2620:
  1825                           
  1826                           ;main.c: 421:     _delay((unsigned long)((1)*(20000000/4000.0)));
  1827     0EB5  3007               	movlw	7
  1828     0EB6  1283               	bcf	3,5	;RP0=0, select bank0
  1829     0EB7  1303               	bcf	3,6	;RP1=0, select bank0
  1830     0EB8  00CB               	movwf	??_initLCD+1
  1831     0EB9  307C               	movlw	124
  1832     0EBA  00CA               	movwf	??_initLCD
  1833     0EBB                     u3807:
  1834     0EBB  0BCA               	decfsz	??_initLCD,f
  1835     0EBC  2EBB               	goto	u3807
  1836     0EBD  0BCB               	decfsz	??_initLCD+1,f
  1837     0EBE  2EBB               	goto	u3807
  1838     0EBF  0000               	nop
  1839     0EC0                     l2622:
  1840                           
  1841                           ;main.c: 422:     lcdSend(0x38, 0);
  1842     0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  1843     0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  1844     0EC2  01C8               	clrf	lcdSend@tipo
  1845     0EC3  3038               	movlw	56
  1846     0EC4  120A  158A  2569  120A  158A  	fcall	_lcdSend
  1847     0EC9                     l2624:
  1848                           
  1849                           ;main.c: 423:     lcdSend(0x08, 0);
  1850     0EC9  1283               	bcf	3,5	;RP0=0, select bank0
  1851     0ECA  1303               	bcf	3,6	;RP1=0, select bank0
  1852     0ECB  01C8               	clrf	lcdSend@tipo
  1853     0ECC  3008               	movlw	8
  1854     0ECD  120A  158A  2569  120A  158A  	fcall	_lcdSend
  1855     0ED2                     l2626:
  1856                           
  1857                           ;main.c: 424:     lcdSend(0x0F, 0);
  1858     0ED2  1283               	bcf	3,5	;RP0=0, select bank0
  1859     0ED3  1303               	bcf	3,6	;RP1=0, select bank0
  1860     0ED4  01C8               	clrf	lcdSend@tipo
  1861     0ED5  300F               	movlw	15
  1862     0ED6  120A  158A  2569  120A  158A  	fcall	_lcdSend
  1863     0EDB                     l2628:
  1864                           
  1865                           ;main.c: 425:     lcdSend(0x01, 0);
  1866     0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  1867     0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  1868     0EDD  01C8               	clrf	lcdSend@tipo
  1869     0EDE  3001               	movlw	1
  1870     0EDF  120A  158A  2569  120A  158A  	fcall	_lcdSend
  1871     0EE4                     l2630:
  1872                           
  1873                           ;main.c: 426:     lcdSend(0x0C, 0);
  1874     0EE4  1283               	bcf	3,5	;RP0=0, select bank0
  1875     0EE5  1303               	bcf	3,6	;RP1=0, select bank0
  1876     0EE6  01C8               	clrf	lcdSend@tipo
  1877     0EE7  300C               	movlw	12
  1878     0EE8  120A  158A  2569  120A  158A  	fcall	_lcdSend
  1879     0EED                     l2632:
  1880                           
  1881                           ;main.c: 427:     lcdSend(0x80, 0);
  1882     0EED  1283               	bcf	3,5	;RP0=0, select bank0
  1883     0EEE  1303               	bcf	3,6	;RP1=0, select bank0
  1884     0EEF  01C8               	clrf	lcdSend@tipo
  1885     0EF0  3080               	movlw	128
  1886     0EF1  120A  158A  2569  120A  158A  	fcall	_lcdSend
  1887     0EF6                     l249:
  1888     0EF6  0008               	return
  1889     0EF7                     __end_of_initLCD:
  1890                           
  1891                           	psect	text2
  1892     053A                     __ptext2:	
  1893 ;; *************** function _UART_Read2 *****************
  1894 ;; Defined at:
  1895 ;;		line 236 in file "main.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;		None
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;  trash           1    0        unsigned char 
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  1    wreg      unsigned char 
  1902 ;; Registers used:
  1903 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1909 ;;      Params:         0       0       0       0       0
  1910 ;;      Locals:         0       0       0       0       0
  1911 ;;      Temps:          0       3       0       0       0
  1912 ;;      Totals:         0       3       0       0       0
  1913 ;;Total ram usage:        3 bytes
  1914 ;; Hardware stack levels used: 1
  1915 ;; Hardware stack levels required when called: 5
  1916 ;; This function calls:
  1917 ;;		_intToString
  1918 ;;		_lcdPrint
  1919 ;;		_lcdSend
  1920 ;; This function is called by:
  1921 ;;		_main
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925     053A                     _UART_Read2:	
  1926                           ;psect for function _UART_Read2
  1927                           
  1928     053A                     l2854:	
  1929                           ;incstack = 0
  1930                           ; Regs used in _UART_Read2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1931                           
  1932                           
  1933                           ;main.c: 237:     char trash;;main.c: 238:     while (countdown != 0){
  1934     053A  2E9E               	goto	l2936
  1935     053B                     l216:
  1936                           
  1937                           ;main.c: 239:         if (!RCIF){
  1938     053B  1283               	bcf	3,5	;RP0=0, select bank0
  1939     053C  1303               	bcf	3,6	;RP1=0, select bank0
  1940     053D  1A8C               	btfsc	12,5	;volatile
  1941     053E  2D40               	goto	u3181
  1942     053F  2D41               	goto	u3180
  1943     0540                     u3181:
  1944     0540  2E98               	goto	l2934
  1945     0541                     u3180:
  1946     0541                     l2856:
  1947                           
  1948                           ;main.c: 240:             lcdSend(0x01, 0);
  1949     0541  01C8               	clrf	lcdSend@tipo
  1950     0542  3001               	movlw	1
  1951     0543  120A  158A  2569  120A  118A  	fcall	_lcdSend
  1952     0548                     l2858:
  1953                           
  1954                           ;main.c: 241:             lcdPrint("Attendere");
  1955     0548  306E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1956     0549  1283               	bcf	3,5	;RP0=0, select bank0
  1957     054A  1303               	bcf	3,6	;RP1=0, select bank0
  1958     054B  00CA               	movwf	lcdPrint@str
  1959     054C  3080               	movlw	128
  1960     054D  00CB               	movwf	lcdPrint@str+1
  1961     054E  120A  158A  25D8  120A  118A  	fcall	_lcdPrint
  1962     0553                     l2860:
  1963                           
  1964                           ;main.c: 242:             intToString(countdown, print_countdown);
  1965     0553  0879               	movf	_countdown,w
  1966     0554  1283               	bcf	3,5	;RP0=0, select bank0
  1967     0555  1303               	bcf	3,6	;RP1=0, select bank0
  1968     0556  00E4               	movwf	??_UART_Read2
  1969     0557  01E5               	clrf	??_UART_Read2+1
  1970     0558  0864               	movf	??_UART_Read2,w
  1971     0559  00DB               	movwf	intToString@n
  1972     055A  0865               	movf	??_UART_Read2+1,w
  1973     055B  00DC               	movwf	intToString@n+1
  1974     055C  3045               	movlw	(low (_print_countdown| 0))& (0+255)
  1975     055D  00DD               	movwf	intToString@str
  1976     055E  120A  158A  26F7  120A  118A  	fcall	_intToString
  1977     0563                     l2862:
  1978                           
  1979                           ;main.c: 243:             lcdSend(0xC0, 0);
  1980     0563  1283               	bcf	3,5	;RP0=0, select bank0
  1981     0564  1303               	bcf	3,6	;RP1=0, select bank0
  1982     0565  01C8               	clrf	lcdSend@tipo
  1983     0566  30C0               	movlw	192
  1984     0567  120A  158A  2569  120A  118A  	fcall	_lcdSend
  1985     056C                     l2864:
  1986                           
  1987                           ;main.c: 244:             lcdPrint(print_countdown);
  1988     056C  3045               	movlw	(low (_print_countdown| 0))& (0+255)
  1989     056D  1283               	bcf	3,5	;RP0=0, select bank0
  1990     056E  1303               	bcf	3,6	;RP1=0, select bank0
  1991     056F  00CA               	movwf	lcdPrint@str
  1992     0570  3000               	movlw	0
  1993     0571  00CB               	movwf	lcdPrint@str+1
  1994     0572  120A  158A  25D8  120A  118A  	fcall	_lcdPrint
  1995     0577                     l2866:
  1996                           
  1997                           ;main.c: 245:             countdown --;
  1998     0577  3001               	movlw	1
  1999     0578  02F9               	subwf	_countdown,f
  2000     0579                     l2868:
  2001                           
  2002                           ;main.c: 246:             _delay((unsigned long)((60)*(20000000/4000.0)));
  2003     0579  3002               	movlw	2
  2004     057A  1283               	bcf	3,5	;RP0=0, select bank0
  2005     057B  1303               	bcf	3,6	;RP1=0, select bank0
  2006     057C  00E6               	movwf	??_UART_Read2+2
  2007     057D  3086               	movlw	134
  2008     057E  00E5               	movwf	??_UART_Read2+1
  2009     057F  3098               	movlw	152
  2010     0580  00E4               	movwf	??_UART_Read2
  2011     0581                     u3817:
  2012     0581  0BE4               	decfsz	??_UART_Read2,f
  2013     0582  2D81               	goto	u3817
  2014     0583  0BE5               	decfsz	??_UART_Read2+1,f
  2015     0584  2D81               	goto	u3817
  2016     0585  0BE6               	decfsz	??_UART_Read2+2,f
  2017     0586  2D81               	goto	u3817
  2018     0587  0000               	nop
  2019                           
  2020                           ;main.c: 247:         }
  2021     0588  2E9E               	goto	l2936
  2022     0589                     l2870:
  2023                           
  2024                           ;main.c: 250:                 intToString(countdown, print_countdown);
  2025     0589  0879               	movf	_countdown,w
  2026     058A  00E4               	movwf	??_UART_Read2
  2027     058B  01E5               	clrf	??_UART_Read2+1
  2028     058C  0864               	movf	??_UART_Read2,w
  2029     058D  00DB               	movwf	intToString@n
  2030     058E  0865               	movf	??_UART_Read2+1,w
  2031     058F  00DC               	movwf	intToString@n+1
  2032     0590  3045               	movlw	(low (_print_countdown| 0))& (0+255)
  2033     0591  00DD               	movwf	intToString@str
  2034     0592  120A  158A  26F7  120A  118A  	fcall	_intToString
  2035     0597                     l2872:
  2036                           
  2037                           ;main.c: 251:                 lcdSend(0xC0, 0);
  2038     0597  1283               	bcf	3,5	;RP0=0, select bank0
  2039     0598  1303               	bcf	3,6	;RP1=0, select bank0
  2040     0599  01C8               	clrf	lcdSend@tipo
  2041     059A  30C0               	movlw	192
  2042     059B  120A  158A  2569  120A  118A  	fcall	_lcdSend
  2043     05A0                     l2874:
  2044                           
  2045                           ;main.c: 252:                 lcdPrint(print_countdown);
  2046     05A0  3045               	movlw	(low (_print_countdown| 0))& (0+255)
  2047     05A1  1283               	bcf	3,5	;RP0=0, select bank0
  2048     05A2  1303               	bcf	3,6	;RP1=0, select bank0
  2049     05A3  00CA               	movwf	lcdPrint@str
  2050     05A4  3000               	movlw	0
  2051     05A5  00CB               	movwf	lcdPrint@str+1
  2052     05A6  120A  158A  25D8  120A  118A  	fcall	_lcdPrint
  2053     05AB                     l2876:
  2054                           
  2055                           ;main.c: 253:                 countdown --;
  2056     05AB  3001               	movlw	1
  2057     05AC  02F9               	subwf	_countdown,f
  2058     05AD                     l2878:
  2059                           
  2060                           ;main.c: 254:                 _delay((unsigned long)((60)*(20000000/4000.0)));
  2061     05AD  3002               	movlw	2
  2062     05AE  1283               	bcf	3,5	;RP0=0, select bank0
  2063     05AF  1303               	bcf	3,6	;RP1=0, select bank0
  2064     05B0  00E6               	movwf	??_UART_Read2+2
  2065     05B1  3086               	movlw	134
  2066     05B2  00E5               	movwf	??_UART_Read2+1
  2067     05B3  3098               	movlw	152
  2068     05B4  00E4               	movwf	??_UART_Read2
  2069     05B5                     u3827:
  2070     05B5  0BE4               	decfsz	??_UART_Read2,f
  2071     05B6  2DB5               	goto	u3827
  2072     05B7  0BE5               	decfsz	??_UART_Read2+1,f
  2073     05B8  2DB5               	goto	u3827
  2074     05B9  0BE6               	decfsz	??_UART_Read2+2,f
  2075     05BA  2DB5               	goto	u3827
  2076     05BB  0000               	nop
  2077     05BC                     l2880:
  2078                           
  2079                           ;main.c: 255:                 if(RCREG == id1){
  2080     05BC  1283               	bcf	3,5	;RP0=0, select bank0
  2081     05BD  1303               	bcf	3,6	;RP1=0, select bank0
  2082     05BE  031A               	decf	26,w	;volatile
  2083     05BF  1D03               	btfss	3,2
  2084     05C0  2DC2               	goto	u3191
  2085     05C1  2DC3               	goto	u3190
  2086     05C2                     u3191:
  2087     05C2  2E94               	goto	l221
  2088     05C3                     u3190:
  2089     05C3                     l2882:
  2090                           
  2091                           ;main.c: 256:                     lcdSend(0x01, 0);
  2092     05C3  01C8               	clrf	lcdSend@tipo
  2093     05C4  3001               	movlw	1
  2094     05C5  120A  158A  2569  120A  118A  	fcall	_lcdSend
  2095                           
  2096                           ;main.c: 257:                     lcdSend(RCREG, 1);
  2097     05CA  1283               	bcf	3,5	;RP0=0, select bank0
  2098     05CB  1303               	bcf	3,6	;RP1=0, select bank0
  2099     05CC  01C8               	clrf	lcdSend@tipo
  2100     05CD  0AC8               	incf	lcdSend@tipo,f
  2101     05CE  081A               	movf	26,w	;volatile
  2102     05CF  120A  158A  2569  120A  118A  	fcall	_lcdSend
  2103     05D4                     l2884:
  2104                           
  2105                           ;main.c: 258:                     RCIF = 0;
  2106     05D4  1283               	bcf	3,5	;RP0=0, select bank0
  2107     05D5  1303               	bcf	3,6	;RP1=0, select bank0
  2108     05D6  128C               	bcf	12,5	;volatile
  2109     05D7                     l2886:
  2110     05D7  081A               	movf	26,w	;volatile
  2111                           
  2112                           ;main.c: 260:                     while (countdown != 0){
  2113     05D8  2E8F               	goto	l2930
  2114     05D9                     l223:
  2115                           
  2116                           ;main.c: 261:                         if (!RCIF){
  2117     05D9  1283               	bcf	3,5	;RP0=0, select bank0
  2118     05DA  1303               	bcf	3,6	;RP1=0, select bank0
  2119     05DB  1A8C               	btfsc	12,5	;volatile
  2120     05DC  2DDE               	goto	u3201
  2121     05DD  2DDF               	goto	u3200
  2122     05DE                     u3201:
  2123     05DE  2E8A               	goto	l2928
  2124     05DF                     u3200:
  2125     05DF                     l2888:
  2126                           
  2127                           ;main.c: 262:                             intToString(countdown, print_countdown);
  2128     05DF  0879               	movf	_countdown,w
  2129     05E0  00E4               	movwf	??_UART_Read2
  2130     05E1  01E5               	clrf	??_UART_Read2+1
  2131     05E2  0864               	movf	??_UART_Read2,w
  2132     05E3  00DB               	movwf	intToString@n
  2133     05E4  0865               	movf	??_UART_Read2+1,w
  2134     05E5  00DC               	movwf	intToString@n+1
  2135     05E6  3045               	movlw	(low (_print_countdown| 0))& (0+255)
  2136     05E7  00DD               	movwf	intToString@str
  2137     05E8  120A  158A  26F7  120A  118A  	fcall	_intToString
  2138     05ED                     l2890:
  2139                           
  2140                           ;main.c: 263:                             lcdSend(0xC0, 0);
  2141     05ED  1283               	bcf	3,5	;RP0=0, select bank0
  2142     05EE  1303               	bcf	3,6	;RP1=0, select bank0
  2143     05EF  01C8               	clrf	lcdSend@tipo
  2144     05F0  30C0               	movlw	192
  2145     05F1  120A  158A  2569  120A  118A  	fcall	_lcdSend
  2146     05F6                     l2892:
  2147                           
  2148                           ;main.c: 264:                             lcdPrint(print_countdown);
  2149     05F6  3045               	movlw	(low (_print_countdown| 0))& (0+255)
  2150     05F7  1283               	bcf	3,5	;RP0=0, select bank0
  2151     05F8  1303               	bcf	3,6	;RP1=0, select bank0
  2152     05F9  00CA               	movwf	lcdPrint@str
  2153     05FA  3000               	movlw	0
  2154     05FB  00CB               	movwf	lcdPrint@str+1
  2155     05FC  120A  158A  25D8  120A  118A  	fcall	_lcdPrint
  2156     0601                     l2894:
  2157                           
  2158                           ;main.c: 265:                             countdown --;
  2159     0601  3001               	movlw	1
  2160     0602  02F9               	subwf	_countdown,f
  2161     0603                     l2896:
  2162                           
  2163                           ;main.c: 266:                             _delay((unsigned long)((60)*(20000000/4000.0))
      +                          );
  2164     0603  3002               	movlw	2
  2165     0604  1283               	bcf	3,5	;RP0=0, select bank0
  2166     0605  1303               	bcf	3,6	;RP1=0, select bank0
  2167     0606  00E6               	movwf	??_UART_Read2+2
  2168     0607  3086               	movlw	134
  2169     0608  00E5               	movwf	??_UART_Read2+1
  2170     0609  3098               	movlw	152
  2171     060A  00E4               	movwf	??_UART_Read2
  2172     060B                     u3837:
  2173     060B  0BE4               	decfsz	??_UART_Read2,f
  2174     060C  2E0B               	goto	u3837
  2175     060D  0BE5               	decfsz	??_UART_Read2+1,f
  2176     060E  2E0B               	goto	u3837
  2177     060F  0BE6               	decfsz	??_UART_Read2+2,f
  2178     0610  2E0B               	goto	u3837
  2179     0611  0000               	nop
  2180                           
  2181                           ;main.c: 267:                         }
  2182     0612  2E8F               	goto	l2930
  2183     0613                     l2898:
  2184                           
  2185                           ;main.c: 270:                                 intToString(countdown, print_countdown);
  2186     0613  0879               	movf	_countdown,w
  2187     0614  00E4               	movwf	??_UART_Read2
  2188     0615  01E5               	clrf	??_UART_Read2+1
  2189     0616  0864               	movf	??_UART_Read2,w
  2190     0617  00DB               	movwf	intToString@n
  2191     0618  0865               	movf	??_UART_Read2+1,w
  2192     0619  00DC               	movwf	intToString@n+1
  2193     061A  3045               	movlw	(low (_print_countdown| 0))& (0+255)
  2194     061B  00DD               	movwf	intToString@str
  2195     061C  120A  158A  26F7  120A  118A  	fcall	_intToString
  2196     0621                     l2900:
  2197                           
  2198                           ;main.c: 271:                                 lcdSend(0xC0, 0);
  2199     0621  1283               	bcf	3,5	;RP0=0, select bank0
  2200     0622  1303               	bcf	3,6	;RP1=0, select bank0
  2201     0623  01C8               	clrf	lcdSend@tipo
  2202     0624  30C0               	movlw	192
  2203     0625  120A  158A  2569  120A  118A  	fcall	_lcdSend
  2204     062A                     l2902:
  2205                           
  2206                           ;main.c: 272:                                 lcdPrint(print_countdown);
  2207     062A  3045               	movlw	(low (_print_countdown| 0))& (0+255)
  2208     062B  1283               	bcf	3,5	;RP0=0, select bank0
  2209     062C  1303               	bcf	3,6	;RP1=0, select bank0
  2210     062D  00CA               	movwf	lcdPrint@str
  2211     062E  3000               	movlw	0
  2212     062F  00CB               	movwf	lcdPrint@str+1
  2213     0630  120A  158A  25D8  120A  118A  	fcall	_lcdPrint
  2214     0635                     l2904:
  2215                           
  2216                           ;main.c: 273:                                 countdown --;
  2217     0635  3001               	movlw	1
  2218     0636  02F9               	subwf	_countdown,f
  2219     0637                     l2906:
  2220                           
  2221                           ;main.c: 274:                                 _delay((unsigned long)((60)*(20000000/4000
      +                          .0)));
  2222     0637  3002               	movlw	2
  2223     0638  1283               	bcf	3,5	;RP0=0, select bank0
  2224     0639  1303               	bcf	3,6	;RP1=0, select bank0
  2225     063A  00E6               	movwf	??_UART_Read2+2
  2226     063B  3086               	movlw	134
  2227     063C  00E5               	movwf	??_UART_Read2+1
  2228     063D  3098               	movlw	152
  2229     063E  00E4               	movwf	??_UART_Read2
  2230     063F                     u3847:
  2231     063F  0BE4               	decfsz	??_UART_Read2,f
  2232     0640  2E3F               	goto	u3847
  2233     0641  0BE5               	decfsz	??_UART_Read2+1,f
  2234     0642  2E3F               	goto	u3847
  2235     0643  0BE6               	decfsz	??_UART_Read2+2,f
  2236     0644  2E3F               	goto	u3847
  2237     0645  0000               	nop
  2238     0646                     l2908:
  2239                           
  2240                           ;main.c: 275:                                 if(RCREG == 0x01){
  2241     0646  1283               	bcf	3,5	;RP0=0, select bank0
  2242     0647  1303               	bcf	3,6	;RP1=0, select bank0
  2243     0648  031A               	decf	26,w	;volatile
  2244     0649  1D03               	btfss	3,2
  2245     064A  2E4C               	goto	u3211
  2246     064B  2E4D               	goto	u3210
  2247     064C                     u3211:
  2248     064C  2E88               	goto	l228
  2249     064D                     u3210:
  2250     064D                     l2910:
  2251                           
  2252                           ;main.c: 276:                                     lcdSend(0x80 + 1, 0);
  2253     064D  01C8               	clrf	lcdSend@tipo
  2254     064E  3081               	movlw	129
  2255     064F  120A  158A  2569  120A  118A  	fcall	_lcdSend
  2256                           
  2257                           ;main.c: 277:                                     lcdSend(RCREG, 1);
  2258     0654  1283               	bcf	3,5	;RP0=0, select bank0
  2259     0655  1303               	bcf	3,6	;RP1=0, select bank0
  2260     0656  01C8               	clrf	lcdSend@tipo
  2261     0657  0AC8               	incf	lcdSend@tipo,f
  2262     0658  081A               	movf	26,w	;volatile
  2263     0659  120A  158A  2569  120A  118A  	fcall	_lcdSend
  2264     065E                     l2912:
  2265                           
  2266                           ;main.c: 278:                                     RCIF = 0;
  2267     065E  1283               	bcf	3,5	;RP0=0, select bank0
  2268     065F  1303               	bcf	3,6	;RP1=0, select bank0
  2269     0660  128C               	bcf	12,5	;volatile
  2270     0661                     l2914:
  2271     0661  081A               	movf	26,w	;volatile
  2272     0662                     l2916:
  2273                           
  2274                           ;main.c: 280:                                     countdown = 60;
  2275     0662  303C               	movlw	60
  2276     0663  00F9               	movwf	_countdown
  2277                           
  2278                           ;main.c: 281:                                     lcdSend(0xC0, 0);
  2279     0664  01C8               	clrf	lcdSend@tipo
  2280     0665  30C0               	movlw	192
  2281     0666  120A  158A  2569  120A  118A  	fcall	_lcdSend
  2282     066B                     l2918:
  2283                           
  2284                           ;main.c: 282:                                     lcdPrint("APRI PORTA");
  2285     066B  3063               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2286     066C  1283               	bcf	3,5	;RP0=0, select bank0
  2287     066D  1303               	bcf	3,6	;RP1=0, select bank0
  2288     066E  00CA               	movwf	lcdPrint@str
  2289     066F  3080               	movlw	128
  2290     0670  00CB               	movwf	lcdPrint@str+1
  2291     0671  120A  158A  25D8  120A  118A  	fcall	_lcdPrint
  2292     0676                     l2920:
  2293                           
  2294                           ;main.c: 283:                                     _delay((unsigned long)((200)*(20000000
      +                          /4000.0)));
  2295     0676  3006               	movlw	6
  2296     0677  1283               	bcf	3,5	;RP0=0, select bank0
  2297     0678  1303               	bcf	3,6	;RP1=0, select bank0
  2298     0679  00E6               	movwf	??_UART_Read2+2
  2299     067A  3013               	movlw	19
  2300     067B  00E5               	movwf	??_UART_Read2+1
  2301     067C  30AD               	movlw	173
  2302     067D  00E4               	movwf	??_UART_Read2
  2303     067E                     u3857:
  2304     067E  0BE4               	decfsz	??_UART_Read2,f
  2305     067F  2E7E               	goto	u3857
  2306     0680  0BE5               	decfsz	??_UART_Read2+1,f
  2307     0681  2E7E               	goto	u3857
  2308     0682  0BE6               	decfsz	??_UART_Read2+2,f
  2309     0683  2E7E               	goto	u3857
  2310     0684                     l2922:
  2311                           
  2312                           ;main.c: 284:                                     return RCREG;;	Return value of _UART_R
      +                          ead2 is never used
  2313     0684  1283               	bcf	3,5	;RP0=0, select bank0
  2314     0685  1303               	bcf	3,6	;RP1=0, select bank0
  2315     0686  081A               	movf	26,w	;volatile
  2316     0687  2EBD               	goto	l229
  2317     0688                     l228:	
  2318                           ;main.c: 285:                                 }
  2319                           
  2320                           
  2321                           ;main.c: 312:                                 RCIF = 0;
  2322     0688  128C               	bcf	12,5	;volatile
  2323     0689                     l2926:
  2324     0689  081A               	movf	26,w	;volatile
  2325     068A                     l2928:
  2326                           
  2327                           ;main.c: 269:                             while (countdown != 0){
  2328     068A  0879               	movf	_countdown,w
  2329     068B  1D03               	btfss	3,2
  2330     068C  2E8E               	goto	u3221
  2331     068D  2E8F               	goto	u3220
  2332     068E                     u3221:
  2333     068E  2E13               	goto	l2898
  2334     068F                     u3220:
  2335     068F                     l2930:
  2336                           
  2337                           ;main.c: 260:                     while (countdown != 0){
  2338     068F  0879               	movf	_countdown,w
  2339     0690  1D03               	btfss	3,2
  2340     0691  2E93               	goto	u3231
  2341     0692  2E94               	goto	u3230
  2342     0693                     u3231:
  2343     0693  2DD9               	goto	l223
  2344     0694                     u3230:
  2345     0694                     l221:	
  2346                           ;main.c: 317:                 }
  2347                           
  2348                           
  2349                           ;main.c: 318:                 RCIF = 0;
  2350     0694  1283               	bcf	3,5	;RP0=0, select bank0
  2351     0695  1303               	bcf	3,6	;RP1=0, select bank0
  2352     0696  128C               	bcf	12,5	;volatile
  2353     0697                     l2932:
  2354     0697  081A               	movf	26,w	;volatile
  2355     0698                     l2934:
  2356                           
  2357                           ;main.c: 249:             while (countdown != 0){
  2358     0698  0879               	movf	_countdown,w
  2359     0699  1D03               	btfss	3,2
  2360     069A  2E9C               	goto	u3241
  2361     069B  2E9D               	goto	u3240
  2362     069C                     u3241:
  2363     069C  2D89               	goto	l2870
  2364     069D                     u3240:
  2365     069D  2D3A               	goto	l2854
  2366     069E                     l2936:
  2367                           
  2368                           ;main.c: 238:     while (countdown != 0){
  2369     069E  0879               	movf	_countdown,w
  2370     069F  1D03               	btfss	3,2
  2371     06A0  2EA2               	goto	u3251
  2372     06A1  2EA3               	goto	u3250
  2373     06A2                     u3251:
  2374     06A2  2D3B               	goto	l216
  2375     06A3                     u3250:
  2376     06A3                     l2938:
  2377                           
  2378                           ;main.c: 323:     lcdSend(0x01, 0);
  2379     06A3  1283               	bcf	3,5	;RP0=0, select bank0
  2380     06A4  1303               	bcf	3,6	;RP1=0, select bank0
  2381     06A5  01C8               	clrf	lcdSend@tipo
  2382     06A6  3001               	movlw	1
  2383     06A7  120A  158A  2569  120A  118A  	fcall	_lcdSend
  2384     06AC                     l2940:
  2385                           
  2386                           ;main.c: 324:     lcdPrint("Tempo Scaduto");
  2387     06AC  3031               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2388     06AD  1283               	bcf	3,5	;RP0=0, select bank0
  2389     06AE  1303               	bcf	3,6	;RP1=0, select bank0
  2390     06AF  00CA               	movwf	lcdPrint@str
  2391     06B0  3080               	movlw	128
  2392     06B1  00CB               	movwf	lcdPrint@str+1
  2393     06B2  120A  158A  25D8  120A  118A  	fcall	_lcdPrint
  2394     06B7                     l2942:
  2395                           
  2396                           ;main.c: 325:     RCIF = 0;
  2397     06B7  1283               	bcf	3,5	;RP0=0, select bank0
  2398     06B8  1303               	bcf	3,6	;RP1=0, select bank0
  2399     06B9  128C               	bcf	12,5	;volatile
  2400     06BA                     l2944:
  2401                           
  2402                           ;main.c: 326:     countdown = 60;
  2403     06BA  303C               	movlw	60
  2404     06BB  00F9               	movwf	_countdown
  2405     06BC  2E76               	goto	l2920
  2406     06BD                     l229:
  2407     06BD  0008               	return
  2408     06BE                     __end_of_UART_Read2:
  2409                           
  2410                           	psect	text3
  2411     0332                     __ptext3:	
  2412 ;; *************** function _UART_Read1 *****************
  2413 ;; Defined at:
  2414 ;;		line 333 in file "main.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;		None
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;  count           1   31[BANK0 ] unsigned char 
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  1    wreg      unsigned char 
  2421 ;; Registers used:
  2422 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2428 ;;      Params:         0       0       0       0       0
  2429 ;;      Locals:         0       1       0       0       0
  2430 ;;      Temps:          0       3       0       0       0
  2431 ;;      Totals:         0       4       0       0       0
  2432 ;;Total ram usage:        4 bytes
  2433 ;; Hardware stack levels used: 1
  2434 ;; Hardware stack levels required when called: 5
  2435 ;; This function calls:
  2436 ;;		_RS485_RxEnable
  2437 ;;		_RS485_TxEnable
  2438 ;;		_UART_Write
  2439 ;;		_intToString
  2440 ;;		_lcdPrint
  2441 ;;		_lcdSend
  2442 ;; This function is called by:
  2443 ;;		_main
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447     0332                     _UART_Read1:	
  2448                           ;psect for function _UART_Read1
  2449                           
  2450     0332                     l2710:	
  2451                           ;incstack = 0
  2452                           ; Regs used in _UART_Read1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2453                           
  2454                           
  2455                           ;main.c: 334:     char count = 0;
  2456     0332  1283               	bcf	3,5	;RP0=0, select bank0
  2457     0333  1303               	bcf	3,6	;RP1=0, select bank0
  2458     0334  01E7               	clrf	UART_Read1@count
  2459     0335                     l2712:
  2460                           
  2461                           ;main.c: 335:     countdown = 60;
  2462     0335  303C               	movlw	60
  2463     0336  00F9               	movwf	_countdown
  2464                           
  2465                           ;main.c: 336:     while (countdown != 0){
  2466     0337  2D0C               	goto	l2838
  2467     0338                     l2714:
  2468                           
  2469                           ;main.c: 337:         if (count != 5){
  2470     0338  3005               	movlw	5
  2471     0339  1283               	bcf	3,5	;RP0=0, select bank0
  2472     033A  1303               	bcf	3,6	;RP1=0, select bank0
  2473     033B  0667               	xorwf	UART_Read1@count,w
  2474     033C  1903               	btfsc	3,2
  2475     033D  2B3F               	goto	u3061
  2476     033E  2B40               	goto	u3060
  2477     033F                     u3061:
  2478     033F  2C75               	goto	l2796
  2479     0340                     u3060:
  2480     0340                     l2716:
  2481                           
  2482                           ;main.c: 338:             if(keypressed != 0 && count == 0){
  2483     0340  083A               	movf	_keypressed,w
  2484     0341  1903               	btfsc	3,2
  2485     0342  2B44               	goto	u3071
  2486     0343  2B45               	goto	u3070
  2487     0344                     u3071:
  2488     0344  2B72               	goto	l2730
  2489     0345                     u3070:
  2490     0345                     l2718:
  2491     0345  0867               	movf	UART_Read1@count,w
  2492     0346  1D03               	btfss	3,2
  2493     0347  2B49               	goto	u3081
  2494     0348  2B4A               	goto	u3080
  2495     0349                     u3081:
  2496     0349  2B72               	goto	l2730
  2497     034A                     u3080:
  2498     034A                     l2720:
  2499                           
  2500                           ;main.c: 339:                 lcdSend(0x01, 0);
  2501     034A  01C8               	clrf	lcdSend@tipo
  2502     034B  3001               	movlw	1
  2503     034C  120A  158A  2569  120A  118A  	fcall	_lcdSend
  2504     0351                     l2722:
  2505                           
  2506                           ;main.c: 340:                 lcdSend(keys[keypressed], 1);
  2507     0351  1283               	bcf	3,5	;RP0=0, select bank0
  2508     0352  1303               	bcf	3,6	;RP1=0, select bank0
  2509     0353  01C8               	clrf	lcdSend@tipo
  2510     0354  0AC8               	incf	lcdSend@tipo,f
  2511     0355  083A               	movf	_keypressed,w
  2512     0356  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2513     0357  0084               	movwf	4
  2514     0358  120A  158A  200A  120A  118A  	fcall	stringdir
  2515     035D  120A  158A  2569  120A  118A  	fcall	_lcdSend
  2516     0362                     l2724:
  2517                           
  2518                           ;main.c: 341:                 num21 = keys[keypressed];
  2519     0362  1283               	bcf	3,5	;RP0=0, select bank0
  2520     0363  1303               	bcf	3,6	;RP1=0, select bank0
  2521     0364  083A               	movf	_keypressed,w
  2522     0365  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2523     0366  0084               	movwf	4
  2524     0367  120A  158A  200A  120A  118A  	fcall	stringdir
  2525     036C  00BF               	movwf	_num21
  2526     036D                     l2726:
  2527                           
  2528                           ;main.c: 342:                 keypressed = 0;
  2529     036D  01BA               	clrf	_keypressed
  2530     036E                     l2728:
  2531                           
  2532                           ;main.c: 343:                 count ++;
  2533     036E  3001               	movlw	1
  2534     036F  00E4               	movwf	??_UART_Read1
  2535     0370  0864               	movf	??_UART_Read1,w
  2536     0371  07E7               	addwf	UART_Read1@count,f
  2537     0372                     l2730:
  2538                           
  2539                           ;main.c: 345:             if(keypressed != 0 && count == 1){
  2540     0372  083A               	movf	_keypressed,w
  2541     0373  1903               	btfsc	3,2
  2542     0374  2B76               	goto	u3091
  2543     0375  2B77               	goto	u3090
  2544     0376                     u3091:
  2545     0376  2BA5               	goto	l2744
  2546     0377                     u3090:
  2547     0377                     l2732:
  2548     0377  0367               	decf	UART_Read1@count,w
  2549     0378  1D03               	btfss	3,2
  2550     0379  2B7B               	goto	u3101
  2551     037A  2B7C               	goto	u3100
  2552     037B                     u3101:
  2553     037B  2BA5               	goto	l2744
  2554     037C                     u3100:
  2555     037C                     l2734:
  2556                           
  2557                           ;main.c: 346:                 lcdSend(0x80 + count, 0);
  2558     037C  01C8               	clrf	lcdSend@tipo
  2559     037D  0867               	movf	UART_Read1@count,w
  2560     037E  3E80               	addlw	128
  2561     037F  120A  158A  2569  120A  118A  	fcall	_lcdSend
  2562     0384                     l2736:
  2563                           
  2564                           ;main.c: 347:                 lcdSend(keys[keypressed], 1);
  2565     0384  1283               	bcf	3,5	;RP0=0, select bank0
  2566     0385  1303               	bcf	3,6	;RP1=0, select bank0
  2567     0386  01C8               	clrf	lcdSend@tipo
  2568     0387  0AC8               	incf	lcdSend@tipo,f
  2569     0388  083A               	movf	_keypressed,w
  2570     0389  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2571     038A  0084               	movwf	4
  2572     038B  120A  158A  200A  120A  118A  	fcall	stringdir
  2573     0390  120A  158A  2569  120A  118A  	fcall	_lcdSend
  2574     0395                     l2738:
  2575                           
  2576                           ;main.c: 348:                 num22 = keys[keypressed];
  2577     0395  1283               	bcf	3,5	;RP0=0, select bank0
  2578     0396  1303               	bcf	3,6	;RP1=0, select bank0
  2579     0397  083A               	movf	_keypressed,w
  2580     0398  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2581     0399  0084               	movwf	4
  2582     039A  120A  158A  200A  120A  118A  	fcall	stringdir
  2583     039F  00BE               	movwf	_num22
  2584     03A0                     l2740:
  2585                           
  2586                           ;main.c: 349:                 keypressed = 0;
  2587     03A0  01BA               	clrf	_keypressed
  2588     03A1                     l2742:
  2589                           
  2590                           ;main.c: 350:                 count ++;
  2591     03A1  3001               	movlw	1
  2592     03A2  00E4               	movwf	??_UART_Read1
  2593     03A3  0864               	movf	??_UART_Read1,w
  2594     03A4  07E7               	addwf	UART_Read1@count,f
  2595     03A5                     l2744:
  2596                           
  2597                           ;main.c: 352:             if(keypressed != 0 && count == 2){
  2598     03A5  083A               	movf	_keypressed,w
  2599     03A6  1903               	btfsc	3,2
  2600     03A7  2BA9               	goto	u3111
  2601     03A8  2BAA               	goto	u3110
  2602     03A9                     u3111:
  2603     03A9  2BD9               	goto	l2758
  2604     03AA                     u3110:
  2605     03AA                     l2746:
  2606     03AA  3002               	movlw	2
  2607     03AB  0667               	xorwf	UART_Read1@count,w
  2608     03AC  1D03               	btfss	3,2
  2609     03AD  2BAF               	goto	u3121
  2610     03AE  2BB0               	goto	u3120
  2611     03AF                     u3121:
  2612     03AF  2BD9               	goto	l2758
  2613     03B0                     u3120:
  2614     03B0                     l2748:
  2615                           
  2616                           ;main.c: 353:                 lcdSend(0x80 + count, 0);
  2617     03B0  01C8               	clrf	lcdSend@tipo
  2618     03B1  0867               	movf	UART_Read1@count,w
  2619     03B2  3E80               	addlw	128
  2620     03B3  120A  158A  2569  120A  118A  	fcall	_lcdSend
  2621     03B8                     l2750:
  2622                           
  2623                           ;main.c: 354:                 lcdSend(keys[keypressed], 1);
  2624     03B8  1283               	bcf	3,5	;RP0=0, select bank0
  2625     03B9  1303               	bcf	3,6	;RP1=0, select bank0
  2626     03BA  01C8               	clrf	lcdSend@tipo
  2627     03BB  0AC8               	incf	lcdSend@tipo,f
  2628     03BC  083A               	movf	_keypressed,w
  2629     03BD  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2630     03BE  0084               	movwf	4
  2631     03BF  120A  158A  200A  120A  118A  	fcall	stringdir
  2632     03C4  120A  158A  2569  120A  118A  	fcall	_lcdSend
  2633     03C9                     l2752:
  2634                           
  2635                           ;main.c: 355:                 num23 = keys[keypressed];
  2636     03C9  1283               	bcf	3,5	;RP0=0, select bank0
  2637     03CA  1303               	bcf	3,6	;RP1=0, select bank0
  2638     03CB  083A               	movf	_keypressed,w
  2639     03CC  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2640     03CD  0084               	movwf	4
  2641     03CE  120A  158A  200A  120A  118A  	fcall	stringdir
  2642     03D3  00BD               	movwf	_num23
  2643     03D4                     l2754:
  2644                           
  2645                           ;main.c: 356:                 keypressed = 0;
  2646     03D4  01BA               	clrf	_keypressed
  2647     03D5                     l2756:
  2648                           
  2649                           ;main.c: 357:                 count ++;
  2650     03D5  3001               	movlw	1
  2651     03D6  00E4               	movwf	??_UART_Read1
  2652     03D7  0864               	movf	??_UART_Read1,w
  2653     03D8  07E7               	addwf	UART_Read1@count,f
  2654     03D9                     l2758:
  2655                           
  2656                           ;main.c: 359:             if(keypressed != 0 && count == 3){
  2657     03D9  083A               	movf	_keypressed,w
  2658     03DA  1903               	btfsc	3,2
  2659     03DB  2BDD               	goto	u3131
  2660     03DC  2BDE               	goto	u3130
  2661     03DD                     u3131:
  2662     03DD  2C0D               	goto	l2772
  2663     03DE                     u3130:
  2664     03DE                     l2760:
  2665     03DE  3003               	movlw	3
  2666     03DF  0667               	xorwf	UART_Read1@count,w
  2667     03E0  1D03               	btfss	3,2
  2668     03E1  2BE3               	goto	u3141
  2669     03E2  2BE4               	goto	u3140
  2670     03E3                     u3141:
  2671     03E3  2C0D               	goto	l2772
  2672     03E4                     u3140:
  2673     03E4                     l2762:
  2674                           
  2675                           ;main.c: 360:                 lcdSend(0x80 + count, 0);
  2676     03E4  01C8               	clrf	lcdSend@tipo
  2677     03E5  0867               	movf	UART_Read1@count,w
  2678     03E6  3E80               	addlw	128
  2679     03E7  120A  158A  2569  120A  118A  	fcall	_lcdSend
  2680     03EC                     l2764:
  2681                           
  2682                           ;main.c: 361:                 lcdSend(keys[keypressed], 1);
  2683     03EC  1283               	bcf	3,5	;RP0=0, select bank0
  2684     03ED  1303               	bcf	3,6	;RP1=0, select bank0
  2685     03EE  01C8               	clrf	lcdSend@tipo
  2686     03EF  0AC8               	incf	lcdSend@tipo,f
  2687     03F0  083A               	movf	_keypressed,w
  2688     03F1  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2689     03F2  0084               	movwf	4
  2690     03F3  120A  158A  200A  120A  118A  	fcall	stringdir
  2691     03F8  120A  158A  2569  120A  118A  	fcall	_lcdSend
  2692     03FD                     l2766:
  2693                           
  2694                           ;main.c: 362:                 num24 = keys[keypressed];
  2695     03FD  1283               	bcf	3,5	;RP0=0, select bank0
  2696     03FE  1303               	bcf	3,6	;RP1=0, select bank0
  2697     03FF  083A               	movf	_keypressed,w
  2698     0400  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2699     0401  0084               	movwf	4
  2700     0402  120A  158A  200A  120A  118A  	fcall	stringdir
  2701     0407  00BC               	movwf	_num24
  2702     0408                     l2768:
  2703                           
  2704                           ;main.c: 363:                 keypressed = 0;
  2705     0408  01BA               	clrf	_keypressed
  2706     0409                     l2770:
  2707                           
  2708                           ;main.c: 364:                 count ++;
  2709     0409  3001               	movlw	1
  2710     040A  00E4               	movwf	??_UART_Read1
  2711     040B  0864               	movf	??_UART_Read1,w
  2712     040C  07E7               	addwf	UART_Read1@count,f
  2713     040D                     l2772:
  2714                           
  2715                           ;main.c: 366:             if(keypressed != 0 && count == 4){
  2716     040D  083A               	movf	_keypressed,w
  2717     040E  1903               	btfsc	3,2
  2718     040F  2C11               	goto	u3151
  2719     0410  2C12               	goto	u3150
  2720     0411                     u3151:
  2721     0411  2C41               	goto	l2786
  2722     0412                     u3150:
  2723     0412                     l2774:
  2724     0412  3004               	movlw	4
  2725     0413  0667               	xorwf	UART_Read1@count,w
  2726     0414  1D03               	btfss	3,2
  2727     0415  2C17               	goto	u3161
  2728     0416  2C18               	goto	u3160
  2729     0417                     u3161:
  2730     0417  2C41               	goto	l2786
  2731     0418                     u3160:
  2732     0418                     l2776:
  2733                           
  2734                           ;main.c: 367:                 lcdSend(0x80 + count, 0);
  2735     0418  01C8               	clrf	lcdSend@tipo
  2736     0419  0867               	movf	UART_Read1@count,w
  2737     041A  3E80               	addlw	128
  2738     041B  120A  158A  2569  120A  118A  	fcall	_lcdSend
  2739     0420                     l2778:
  2740                           
  2741                           ;main.c: 368:                 lcdSend(keys[keypressed], 1);
  2742     0420  1283               	bcf	3,5	;RP0=0, select bank0
  2743     0421  1303               	bcf	3,6	;RP1=0, select bank0
  2744     0422  01C8               	clrf	lcdSend@tipo
  2745     0423  0AC8               	incf	lcdSend@tipo,f
  2746     0424  083A               	movf	_keypressed,w
  2747     0425  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2748     0426  0084               	movwf	4
  2749     0427  120A  158A  200A  120A  118A  	fcall	stringdir
  2750     042C  120A  158A  2569  120A  118A  	fcall	_lcdSend
  2751     0431                     l2780:
  2752                           
  2753                           ;main.c: 369:                 num25 = keys[keypressed];
  2754     0431  1283               	bcf	3,5	;RP0=0, select bank0
  2755     0432  1303               	bcf	3,6	;RP1=0, select bank0
  2756     0433  083A               	movf	_keypressed,w
  2757     0434  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2758     0435  0084               	movwf	4
  2759     0436  120A  158A  200A  120A  118A  	fcall	stringdir
  2760     043B  00BB               	movwf	_num25
  2761     043C                     l2782:
  2762                           
  2763                           ;main.c: 370:                 keypressed = 0;
  2764     043C  01BA               	clrf	_keypressed
  2765     043D                     l2784:
  2766                           
  2767                           ;main.c: 371:                 count ++;
  2768     043D  3001               	movlw	1
  2769     043E  00E4               	movwf	??_UART_Read1
  2770     043F  0864               	movf	??_UART_Read1,w
  2771     0440  07E7               	addwf	UART_Read1@count,f
  2772     0441                     l2786:
  2773                           
  2774                           ;main.c: 373:             intToString(countdown, print_countdown);
  2775     0441  0879               	movf	_countdown,w
  2776     0442  00E4               	movwf	??_UART_Read1
  2777     0443  01E5               	clrf	??_UART_Read1+1
  2778     0444  0864               	movf	??_UART_Read1,w
  2779     0445  00DB               	movwf	intToString@n
  2780     0446  0865               	movf	??_UART_Read1+1,w
  2781     0447  00DC               	movwf	intToString@n+1
  2782     0448  3045               	movlw	(low (_print_countdown| 0))& (0+255)
  2783     0449  00DD               	movwf	intToString@str
  2784     044A  120A  158A  26F7  120A  118A  	fcall	_intToString
  2785     044F                     l2788:
  2786                           
  2787                           ;main.c: 374:             lcdSend(0xC0, 0);
  2788     044F  1283               	bcf	3,5	;RP0=0, select bank0
  2789     0450  1303               	bcf	3,6	;RP1=0, select bank0
  2790     0451  01C8               	clrf	lcdSend@tipo
  2791     0452  30C0               	movlw	192
  2792     0453  120A  158A  2569  120A  118A  	fcall	_lcdSend
  2793     0458                     l2790:
  2794                           
  2795                           ;main.c: 375:             lcdPrint(print_countdown);
  2796     0458  3045               	movlw	(low (_print_countdown| 0))& (0+255)
  2797     0459  1283               	bcf	3,5	;RP0=0, select bank0
  2798     045A  1303               	bcf	3,6	;RP1=0, select bank0
  2799     045B  00CA               	movwf	lcdPrint@str
  2800     045C  3000               	movlw	0
  2801     045D  00CB               	movwf	lcdPrint@str+1
  2802     045E  120A  158A  25D8  120A  118A  	fcall	_lcdPrint
  2803     0463                     l2792:
  2804                           
  2805                           ;main.c: 376:             countdown --;
  2806     0463  3001               	movlw	1
  2807     0464  02F9               	subwf	_countdown,f
  2808     0465                     l2794:
  2809                           
  2810                           ;main.c: 377:             _delay((unsigned long)((80)*(20000000/4000.0)));
  2811     0465  3003               	movlw	3
  2812     0466  1283               	bcf	3,5	;RP0=0, select bank0
  2813     0467  1303               	bcf	3,6	;RP1=0, select bank0
  2814     0468  00E6               	movwf	??_UART_Read1+2
  2815     0469  3008               	movlw	8
  2816     046A  00E5               	movwf	??_UART_Read1+1
  2817     046B  3076               	movlw	118
  2818     046C  00E4               	movwf	??_UART_Read1
  2819     046D                     u3867:
  2820     046D  0BE4               	decfsz	??_UART_Read1,f
  2821     046E  2C6D               	goto	u3867
  2822     046F  0BE5               	decfsz	??_UART_Read1+1,f
  2823     0470  2C6D               	goto	u3867
  2824     0471  0BE6               	decfsz	??_UART_Read1+2,f
  2825     0472  2C6D               	goto	u3867
  2826     0473  0000               	nop
  2827                           
  2828                           ;main.c: 378:         }
  2829     0474  2D0C               	goto	l2838
  2830     0475                     l2796:
  2831                           
  2832                           ;main.c: 380:             RS485_TxEnable();
  2833     0475  120A  118A  27FA  120A  118A  	fcall	_RS485_TxEnable
  2834     047A                     l2798:
  2835                           
  2836                           ;main.c: 381:             UART_Write(id1);
  2837     047A  3001               	movlw	1
  2838     047B  120A  158A  253E  120A  118A  	fcall	_UART_Write
  2839     0480                     l2800:
  2840                           
  2841                           ;main.c: 382:             UART_Write(0x02);
  2842     0480  3002               	movlw	2
  2843     0481  120A  158A  253E  120A  118A  	fcall	_UART_Write
  2844     0486                     l2802:
  2845                           
  2846                           ;main.c: 383:             UART_Write(num1);
  2847     0486  1283               	bcf	3,5	;RP0=0, select bank0
  2848     0487  1303               	bcf	3,6	;RP1=0, select bank0
  2849     0488  0844               	movf	_num1,w
  2850     0489  120A  158A  253E  120A  118A  	fcall	_UART_Write
  2851     048E                     l2804:
  2852                           
  2853                           ;main.c: 384:             UART_Write(num2);
  2854     048E  1283               	bcf	3,5	;RP0=0, select bank0
  2855     048F  1303               	bcf	3,6	;RP1=0, select bank0
  2856     0490  0843               	movf	_num2,w
  2857     0491  120A  158A  253E  120A  118A  	fcall	_UART_Write
  2858     0496                     l2806:
  2859                           
  2860                           ;main.c: 385:             UART_Write(num3);
  2861     0496  1283               	bcf	3,5	;RP0=0, select bank0
  2862     0497  1303               	bcf	3,6	;RP1=0, select bank0
  2863     0498  0842               	movf	_num3,w
  2864     0499  120A  158A  253E  120A  118A  	fcall	_UART_Write
  2865     049E                     l2808:
  2866                           
  2867                           ;main.c: 386:             UART_Write(num4);
  2868     049E  1283               	bcf	3,5	;RP0=0, select bank0
  2869     049F  1303               	bcf	3,6	;RP1=0, select bank0
  2870     04A0  0841               	movf	_num4,w
  2871     04A1  120A  158A  253E  120A  118A  	fcall	_UART_Write
  2872     04A6                     l2810:
  2873                           
  2874                           ;main.c: 387:             UART_Write(num5);
  2875     04A6  1283               	bcf	3,5	;RP0=0, select bank0
  2876     04A7  1303               	bcf	3,6	;RP1=0, select bank0
  2877     04A8  0840               	movf	_num5,w
  2878     04A9  120A  158A  253E  120A  118A  	fcall	_UART_Write
  2879     04AE                     l2812:
  2880                           
  2881                           ;main.c: 388:             UART_Write(num21);
  2882     04AE  1283               	bcf	3,5	;RP0=0, select bank0
  2883     04AF  1303               	bcf	3,6	;RP1=0, select bank0
  2884     04B0  083F               	movf	_num21,w
  2885     04B1  120A  158A  253E  120A  118A  	fcall	_UART_Write
  2886     04B6                     l2814:
  2887                           
  2888                           ;main.c: 389:             UART_Write(num22);
  2889     04B6  1283               	bcf	3,5	;RP0=0, select bank0
  2890     04B7  1303               	bcf	3,6	;RP1=0, select bank0
  2891     04B8  083E               	movf	_num22,w
  2892     04B9  120A  158A  253E  120A  118A  	fcall	_UART_Write
  2893     04BE                     l2816:
  2894                           
  2895                           ;main.c: 390:             UART_Write(num23);
  2896     04BE  1283               	bcf	3,5	;RP0=0, select bank0
  2897     04BF  1303               	bcf	3,6	;RP1=0, select bank0
  2898     04C0  083D               	movf	_num23,w
  2899     04C1  120A  158A  253E  120A  118A  	fcall	_UART_Write
  2900     04C6                     l2818:
  2901                           
  2902                           ;main.c: 391:             UART_Write(num24);
  2903     04C6  1283               	bcf	3,5	;RP0=0, select bank0
  2904     04C7  1303               	bcf	3,6	;RP1=0, select bank0
  2905     04C8  083C               	movf	_num24,w
  2906     04C9  120A  158A  253E  120A  118A  	fcall	_UART_Write
  2907     04CE                     l2820:
  2908                           
  2909                           ;main.c: 392:             UART_Write(num25);
  2910     04CE  1283               	bcf	3,5	;RP0=0, select bank0
  2911     04CF  1303               	bcf	3,6	;RP1=0, select bank0
  2912     04D0  083B               	movf	_num25,w
  2913     04D1  120A  158A  253E  120A  118A  	fcall	_UART_Write
  2914     04D6                     l2822:
  2915                           
  2916                           ;main.c: 393:             UART_Write('*');
  2917     04D6  302A               	movlw	42
  2918     04D7  120A  158A  253E  120A  118A  	fcall	_UART_Write
  2919     04DC                     l2824:
  2920                           
  2921                           ;main.c: 394:             RS485_RxEnable();
  2922     04DC  120A  158A  2531  120A  118A  	fcall	_RS485_RxEnable
  2923                           
  2924                           ;main.c: 395:             lcdSend(0x01, 0);
  2925     04E1  1283               	bcf	3,5	;RP0=0, select bank0
  2926     04E2  1303               	bcf	3,6	;RP1=0, select bank0
  2927     04E3  01C8               	clrf	lcdSend@tipo
  2928     04E4  3001               	movlw	1
  2929     04E5  120A  158A  2569  120A  118A  	fcall	_lcdSend
  2930     04EA                     l2826:
  2931                           
  2932                           ;main.c: 396:             lcdPrint("Mandato");
  2933     04EA  3080               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2934     04EB  1283               	bcf	3,5	;RP0=0, select bank0
  2935     04EC  1303               	bcf	3,6	;RP1=0, select bank0
  2936     04ED  00CA               	movwf	lcdPrint@str
  2937     04EE  3080               	movlw	128
  2938     04EF  00CB               	movwf	lcdPrint@str+1
  2939     04F0  120A  158A  25D8  120A  118A  	fcall	_lcdPrint
  2940     04F5                     l2828:
  2941                           
  2942                           ;main.c: 397:             RCIF = 0;
  2943     04F5  1283               	bcf	3,5	;RP0=0, select bank0
  2944     04F6  1303               	bcf	3,6	;RP1=0, select bank0
  2945     04F7  128C               	bcf	12,5	;volatile
  2946     04F8                     l2830:
  2947                           
  2948                           ;main.c: 398:             countdown = 60;
  2949     04F8  303C               	movlw	60
  2950     04F9  00F9               	movwf	_countdown
  2951     04FA                     l2832:
  2952                           
  2953                           ;main.c: 399:             _delay((unsigned long)((100)*(20000000/4000.0)));
  2954     04FA  3003               	movlw	3
  2955     04FB  1283               	bcf	3,5	;RP0=0, select bank0
  2956     04FC  1303               	bcf	3,6	;RP1=0, select bank0
  2957     04FD  00E6               	movwf	??_UART_Read1+2
  2958     04FE  308A               	movlw	138
  2959     04FF  00E5               	movwf	??_UART_Read1+1
  2960     0500  3055               	movlw	85
  2961     0501  00E4               	movwf	??_UART_Read1
  2962     0502                     u3877:
  2963     0502  0BE4               	decfsz	??_UART_Read1,f
  2964     0503  2D02               	goto	u3877
  2965     0504  0BE5               	decfsz	??_UART_Read1+1,f
  2966     0505  2D02               	goto	u3877
  2967     0506  0BE6               	decfsz	??_UART_Read1+2,f
  2968     0507  2D02               	goto	u3877
  2969     0508                     l2834:
  2970                           
  2971                           ;main.c: 400:             return RCREG;;	Return value of _UART_Read1 is never used
  2972     0508  1283               	bcf	3,5	;RP0=0, select bank0
  2973     0509  1303               	bcf	3,6	;RP1=0, select bank0
  2974     050A  081A               	movf	26,w	;volatile
  2975     050B  2D39               	goto	l245
  2976     050C                     l2838:
  2977                           
  2978                           ;main.c: 336:     while (countdown != 0){
  2979     050C  0879               	movf	_countdown,w
  2980     050D  1D03               	btfss	3,2
  2981     050E  2D10               	goto	u3171
  2982     050F  2D11               	goto	u3170
  2983     0510                     u3171:
  2984     0510  2B38               	goto	l2714
  2985     0511                     u3170:
  2986     0511                     l2840:
  2987                           
  2988                           ;main.c: 403:     lcdSend(0x01, 0);
  2989     0511  1283               	bcf	3,5	;RP0=0, select bank0
  2990     0512  1303               	bcf	3,6	;RP1=0, select bank0
  2991     0513  01C8               	clrf	lcdSend@tipo
  2992     0514  3001               	movlw	1
  2993     0515  120A  158A  2569  120A  118A  	fcall	_lcdSend
  2994     051A                     l2842:
  2995                           
  2996                           ;main.c: 404:     lcdPrint("Codice Scaduto");
  2997     051A  3014               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2998     051B  1283               	bcf	3,5	;RP0=0, select bank0
  2999     051C  1303               	bcf	3,6	;RP1=0, select bank0
  3000     051D  00CA               	movwf	lcdPrint@str
  3001     051E  3080               	movlw	128
  3002     051F  00CB               	movwf	lcdPrint@str+1
  3003     0520  120A  158A  25D8  120A  118A  	fcall	_lcdPrint
  3004     0525                     l2844:
  3005                           
  3006                           ;main.c: 405:     RCIF = 0;
  3007     0525  1283               	bcf	3,5	;RP0=0, select bank0
  3008     0526  1303               	bcf	3,6	;RP1=0, select bank0
  3009     0527  128C               	bcf	12,5	;volatile
  3010     0528                     l2846:
  3011                           
  3012                           ;main.c: 406:     countdown = 60;
  3013     0528  303C               	movlw	60
  3014     0529  00F9               	movwf	_countdown
  3015     052A                     l2848:
  3016                           
  3017                           ;main.c: 407:     _delay((unsigned long)((200)*(20000000/4000.0)));
  3018     052A  3006               	movlw	6
  3019     052B  1283               	bcf	3,5	;RP0=0, select bank0
  3020     052C  1303               	bcf	3,6	;RP1=0, select bank0
  3021     052D  00E6               	movwf	??_UART_Read1+2
  3022     052E  3013               	movlw	19
  3023     052F  00E5               	movwf	??_UART_Read1+1
  3024     0530  30AD               	movlw	173
  3025     0531  00E4               	movwf	??_UART_Read1
  3026     0532                     u3887:
  3027     0532  0BE4               	decfsz	??_UART_Read1,f
  3028     0533  2D32               	goto	u3887
  3029     0534  0BE5               	decfsz	??_UART_Read1+1,f
  3030     0535  2D32               	goto	u3887
  3031     0536  0BE6               	decfsz	??_UART_Read1+2,f
  3032     0537  2D32               	goto	u3887
  3033     0538  2D08               	goto	l2834
  3034     0539                     l245:
  3035     0539  0008               	return
  3036     053A                     __end_of_UART_Read1:
  3037                           
  3038                           	psect	text4
  3039     0DD8                     __ptext4:	
  3040 ;; *************** function _lcdPrint *****************
  3041 ;; Defined at:
  3042 ;;		line 451 in file "main.c"
  3043 ;; Parameters:    Size  Location     Type
  3044 ;;  str             2    2[BANK0 ] PTR unsigned char 
  3045 ;;		 -> STR_11(15), STR_10(8), STR_9(14), STR_8(11), 
  3046 ;;		 -> print_countdown(3), STR_7(10), STR_6(14), STR_5(13), 
  3047 ;;		 -> STR_4(12), STR_3(11), STR_2(10), STR_1(8), 
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;  n               2    7[BANK0 ] int 
  3050 ;; Return value:  Size  Location     Type
  3051 ;;                  1    wreg      void 
  3052 ;; Registers used:
  3053 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3054 ;; Tracked objects:
  3055 ;;		On entry : 0/0
  3056 ;;		On exit  : 0/0
  3057 ;;		Unchanged: 0/0
  3058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3059 ;;      Params:         0       2       0       0       0
  3060 ;;      Locals:         0       2       0       0       0
  3061 ;;      Temps:          0       3       0       0       0
  3062 ;;      Totals:         0       7       0       0       0
  3063 ;;Total ram usage:        7 bytes
  3064 ;; Hardware stack levels used: 1
  3065 ;; Hardware stack levels required when called: 3
  3066 ;; This function calls:
  3067 ;;		_lcdSend
  3068 ;; This function is called by:
  3069 ;;		_main
  3070 ;;		_UART_Read2
  3071 ;;		_UART_Read1
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075     0DD8                     _lcdPrint:	
  3076                           ;psect for function _lcdPrint
  3077                           
  3078     0DD8                     l2560:	
  3079                           ;incstack = 0
  3080                           ; Regs used in _lcdPrint: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3081                           
  3082                           
  3083                           ;main.c: 452:     int n = 0;
  3084     0DD8  1283               	bcf	3,5	;RP0=0, select bank0
  3085     0DD9  1303               	bcf	3,6	;RP1=0, select bank0
  3086     0DDA  01CF               	clrf	lcdPrint@n
  3087     0DDB  01D0               	clrf	lcdPrint@n+1
  3088                           
  3089                           ;main.c: 453:     while (str[n] != '\0') {
  3090     0DDC  2E03               	goto	l2566
  3091     0DDD                     l2562:
  3092                           
  3093                           ;main.c: 454:         lcdSend(str[n++], 1);
  3094     0DDD  01C8               	clrf	lcdSend@tipo
  3095     0DDE  0AC8               	incf	lcdSend@tipo,f
  3096     0DDF  084F               	movf	lcdPrint@n,w
  3097     0DE0  074A               	addwf	lcdPrint@str,w
  3098     0DE1  00CD               	movwf	??_lcdPrint+1
  3099     0DE2  084B               	movf	lcdPrint@str+1,w
  3100     0DE3  00CC               	movwf	??_lcdPrint
  3101     0DE4  1803               	skipnc
  3102     0DE5  0ACC               	incf	??_lcdPrint,f
  3103     0DE6  1FCF               	btfss	lcdPrint@n,7
  3104     0DE7  2DE9               	goto	u2890
  3105     0DE8  03CC               	decf	??_lcdPrint,f
  3106     0DE9                     u2890:
  3107     0DE9  1283               	bcf	3,5	;RP0=0, select bank0
  3108     0DEA  1303               	bcf	3,6	;RP1=0, select bank0
  3109     0DEB  084C               	movf	??_lcdPrint,w
  3110     0DEC  00CE               	movwf	??_lcdPrint+2
  3111     0DED  084E               	movf	??_lcdPrint+2,w
  3112     0DEE  00FF               	movwf	btemp+1
  3113     0DEF  084D               	movf	??_lcdPrint+1,w
  3114     0DF0  0084               	movwf	4
  3115     0DF1  120A  158A  2000  120A  158A  	fcall	stringtab
  3116     0DF6  120A  158A  2569  120A  158A  	fcall	_lcdSend
  3117     0DFB                     l2564:
  3118     0DFB  3001               	movlw	1
  3119     0DFC  1283               	bcf	3,5	;RP0=0, select bank0
  3120     0DFD  1303               	bcf	3,6	;RP1=0, select bank0
  3121     0DFE  07CF               	addwf	lcdPrint@n,f
  3122     0DFF  1803               	skipnc
  3123     0E00  0AD0               	incf	lcdPrint@n+1,f
  3124     0E01  3000               	movlw	0
  3125     0E02  07D0               	addwf	lcdPrint@n+1,f
  3126     0E03                     l2566:
  3127                           
  3128                           ;main.c: 453:     while (str[n] != '\0') {
  3129     0E03  084F               	movf	lcdPrint@n,w
  3130     0E04  074A               	addwf	lcdPrint@str,w
  3131     0E05  00CD               	movwf	??_lcdPrint+1
  3132     0E06  084B               	movf	lcdPrint@str+1,w
  3133     0E07  00CC               	movwf	??_lcdPrint
  3134     0E08  1803               	skipnc
  3135     0E09  0ACC               	incf	??_lcdPrint,f
  3136     0E0A  1FCF               	btfss	lcdPrint@n,7
  3137     0E0B  2E0D               	goto	u2900
  3138     0E0C  03CC               	decf	??_lcdPrint,f
  3139     0E0D                     u2900:
  3140     0E0D  1283               	bcf	3,5	;RP0=0, select bank0
  3141     0E0E  1303               	bcf	3,6	;RP1=0, select bank0
  3142     0E0F  084C               	movf	??_lcdPrint,w
  3143     0E10  00CE               	movwf	??_lcdPrint+2
  3144     0E11  084E               	movf	??_lcdPrint+2,w
  3145     0E12  00FF               	movwf	btemp+1
  3146     0E13  084D               	movf	??_lcdPrint+1,w
  3147     0E14  0084               	movwf	4
  3148     0E15  120A  158A  2000  120A  158A  	fcall	stringtab
  3149     0E1A  3A00               	xorlw	0
  3150     0E1B  1D03               	skipz
  3151     0E1C  2E1E               	goto	u2911
  3152     0E1D  2E1F               	goto	u2910
  3153     0E1E                     u2911:
  3154     0E1E  2DDD               	goto	l2562
  3155     0E1F                     u2910:
  3156     0E1F                     l258:
  3157     0E1F  0008               	return
  3158     0E20                     __end_of_lcdPrint:
  3159                           
  3160                           	psect	text5
  3161     0D69                     __ptext5:	
  3162 ;; *************** function _lcdSend *****************
  3163 ;; Defined at:
  3164 ;;		line 430 in file "main.c"
  3165 ;; Parameters:    Size  Location     Type
  3166 ;;  dato            1    wreg     unsigned char 
  3167 ;;  tipo            1    0[BANK0 ] unsigned char 
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;  dato            1    1[BANK0 ] unsigned char 
  3170 ;; Return value:  Size  Location     Type
  3171 ;;                  1    wreg      void 
  3172 ;; Registers used:
  3173 ;;		wreg, status,2, status,0
  3174 ;; Tracked objects:
  3175 ;;		On entry : 0/0
  3176 ;;		On exit  : 0/0
  3177 ;;		Unchanged: 0/0
  3178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3179 ;;      Params:         0       1       0       0       0
  3180 ;;      Locals:         0       1       0       0       0
  3181 ;;      Temps:          0       0       0       0       0
  3182 ;;      Totals:         0       2       0       0       0
  3183 ;;Total ram usage:        2 bytes
  3184 ;; Hardware stack levels used: 1
  3185 ;; Hardware stack levels required when called: 2
  3186 ;; This function calls:
  3187 ;;		Nothing
  3188 ;; This function is called by:
  3189 ;;		_main
  3190 ;;		_UART_Read2
  3191 ;;		_UART_Read1
  3192 ;;		_initLCD
  3193 ;;		_lcdPrint
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197     0D69                     _lcdSend:	
  3198                           ;psect for function _lcdSend
  3199                           
  3200                           
  3201                           ;incstack = 0
  3202                           ; Regs used in _lcdSend: [wreg+status,2+status,0]
  3203                           ;lcdSend@dato stored from wreg
  3204     0D69  1283               	bcf	3,5	;RP0=0, select bank0
  3205     0D6A  1303               	bcf	3,6	;RP1=0, select bank0
  3206     0D6B  00C9               	movwf	lcdSend@dato
  3207     0D6C                     l2492:
  3208                           
  3209                           ;main.c: 434:     TRISD = 0x00;
  3210     0D6C  1683               	bsf	3,5	;RP0=1, select bank1
  3211     0D6D  1303               	bcf	3,6	;RP1=0, select bank1
  3212     0D6E  0188               	clrf	8	;volatile
  3213     0D6F                     l2494:
  3214                           
  3215                           ;main.c: 435:     TRISEbits.TRISE1 = 0;
  3216     0D6F  1089               	bcf	9,1	;volatile
  3217     0D70                     l2496:
  3218                           
  3219                           ;main.c: 436:     TRISEbits.TRISE2 = 0;
  3220     0D70  1109               	bcf	9,2	;volatile
  3221     0D71                     l2498:
  3222                           
  3223                           ;main.c: 441:     PORTEbits.RE1 = 1;
  3224     0D71  1283               	bcf	3,5	;RP0=0, select bank0
  3225     0D72  1303               	bcf	3,6	;RP1=0, select bank0
  3226     0D73  1489               	bsf	9,1	;volatile
  3227     0D74                     l2500:
  3228                           
  3229                           ;main.c: 443:     PORTD = dato;
  3230     0D74  0849               	movf	lcdSend@dato,w
  3231     0D75  0088               	movwf	8	;volatile
  3232     0D76                     l2502:
  3233                           
  3234                           ;main.c: 444:     PORTEbits.RE2 = tipo;
  3235     0D76  0C48               	rrf	lcdSend@tipo,w
  3236     0D77  1C03               	skipc
  3237     0D78  1109               	bcf	9,2	;volatile
  3238     0D79  1803               	skipnc
  3239     0D7A  1509               	bsf	9,2	;volatile
  3240     0D7B                     l2504:
  3241                           
  3242                           ;main.c: 446:     PORTEbits.RE1 = 0;
  3243     0D7B  1089               	bcf	9,1	;volatile
  3244     0D7C                     l2506:
  3245                           
  3246                           ;main.c: 448:     PORTEbits.RE1 = 1;
  3247     0D7C  1489               	bsf	9,1	;volatile
  3248     0D7D                     l252:
  3249     0D7D  0008               	return
  3250     0D7E                     __end_of_lcdSend:
  3251                           
  3252                           	psect	text6
  3253     0EF7                     __ptext6:	
  3254 ;; *************** function _intToString *****************
  3255 ;; Defined at:
  3256 ;;		line 665 in file "main.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;  n               2   19[BANK0 ] int 
  3259 ;;  str             1   21[BANK0 ] PTR unsigned char 
  3260 ;;		 -> print_countdown(3), 
  3261 ;; Auto vars:     Size  Location     Type
  3262 ;;  t               1   25[BANK0 ] unsigned char 
  3263 ;;  i               1   27[BANK0 ] unsigned char 
  3264 ;;  cifre           1   26[BANK0 ] unsigned char 
  3265 ;; Return value:  Size  Location     Type
  3266 ;;                  1    wreg      void 
  3267 ;; Registers used:
  3268 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3269 ;; Tracked objects:
  3270 ;;		On entry : 0/0
  3271 ;;		On exit  : 0/0
  3272 ;;		Unchanged: 0/0
  3273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3274 ;;      Params:         0       3       0       0       0
  3275 ;;      Locals:         0       3       0       0       0
  3276 ;;      Temps:          0       3       0       0       0
  3277 ;;      Totals:         0       9       0       0       0
  3278 ;;Total ram usage:        9 bytes
  3279 ;; Hardware stack levels used: 1
  3280 ;; Hardware stack levels required when called: 4
  3281 ;; This function calls:
  3282 ;;		___awdiv
  3283 ;;		___awmod
  3284 ;;		_potenza
  3285 ;; This function is called by:
  3286 ;;		_UART_Read2
  3287 ;;		_UART_Read1
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291     0EF7                     _intToString:	
  3292                           ;psect for function _intToString
  3293                           
  3294     0EF7                     l2576:	
  3295                           ;incstack = 0
  3296                           ; Regs used in _intToString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3297                           
  3298                           
  3299                           ;main.c: 668:     char cifre = 1;
  3300     0EF7  1283               	bcf	3,5	;RP0=0, select bank0
  3301     0EF8  1303               	bcf	3,6	;RP1=0, select bank0
  3302     0EF9  01E2               	clrf	intToString@cifre
  3303     0EFA  0AE2               	incf	intToString@cifre,f
  3304     0EFB                     l2578:
  3305                           
  3306                           ;main.c: 671:     while (n / potenza(10, cifre)) cifre++;
  3307     0EFB  2F00               	goto	l2582
  3308     0EFC                     l2580:
  3309     0EFC  3001               	movlw	1
  3310     0EFD  00DE               	movwf	??_intToString
  3311     0EFE  085E               	movf	??_intToString,w
  3312     0EFF  07E2               	addwf	intToString@cifre,f
  3313     0F00                     l2582:
  3314     0F00  0862               	movf	intToString@cifre,w
  3315     0F01  00CC               	movwf	potenza@e
  3316     0F02  300A               	movlw	10
  3317     0F03  120A  158A  25AC  120A  158A  	fcall	_potenza
  3318     0F08  1283               	bcf	3,5	;RP0=0, select bank0
  3319     0F09  1303               	bcf	3,6	;RP1=0, select bank0
  3320     0F0A  00DE               	movwf	??_intToString
  3321     0F0B  01DF               	clrf	??_intToString+1
  3322     0F0C  085E               	movf	??_intToString,w
  3323     0F0D  00D2               	movwf	___awdiv@divisor
  3324     0F0E  085F               	movf	??_intToString+1,w
  3325     0F0F  00D3               	movwf	___awdiv@divisor+1
  3326     0F10  085C               	movf	intToString@n+1,w
  3327     0F11  00D5               	movwf	___awdiv@dividend+1
  3328     0F12  085B               	movf	intToString@n,w
  3329     0F13  00D4               	movwf	___awdiv@dividend
  3330     0F14  120A  158A  2620  120A  158A  	fcall	___awdiv
  3331     0F19  1283               	bcf	3,5	;RP0=0, select bank0
  3332     0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  3333     0F1B  0852               	movf	?___awdiv,w
  3334     0F1C  0453               	iorwf	?___awdiv+1,w
  3335     0F1D  1D03               	btfss	3,2
  3336     0F1E  2F20               	goto	u2931
  3337     0F1F  2F21               	goto	u2930
  3338     0F20                     u2931:
  3339     0F20  2EFC               	goto	l2580
  3340     0F21                     u2930:
  3341     0F21                     l2584:
  3342                           
  3343                           ;main.c: 673:     for (i = 0; i < cifre; i++) {
  3344     0F21  01E3               	clrf	intToString@i
  3345     0F22  2F65               	goto	l2594
  3346     0F23                     l2586:
  3347                           
  3348                           ;main.c: 674:         char t = potenza(10, cifre - 1 - i);
  3349     0F23  0863               	movf	intToString@i,w
  3350     0F24  0262               	subwf	intToString@cifre,w
  3351     0F25  3EFF               	addlw	255
  3352     0F26  00CC               	movwf	potenza@e
  3353     0F27  300A               	movlw	10
  3354     0F28  120A  158A  25AC  120A  158A  	fcall	_potenza
  3355     0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  3356     0F2E  1303               	bcf	3,6	;RP1=0, select bank0
  3357     0F2F  00E1               	movwf	intToString@t
  3358     0F30                     l2588:
  3359                           
  3360                           ;main.c: 675:         str[i] = '0' + (char) (n / t);
  3361     0F30  0863               	movf	intToString@i,w
  3362     0F31  075D               	addwf	intToString@str,w
  3363     0F32  00DE               	movwf	??_intToString
  3364     0F33  085E               	movf	??_intToString,w
  3365     0F34  0084               	movwf	4
  3366     0F35  0861               	movf	intToString@t,w
  3367     0F36  00DF               	movwf	??_intToString+1
  3368     0F37  01E0               	clrf	??_intToString+2
  3369     0F38  085F               	movf	??_intToString+1,w
  3370     0F39  00D2               	movwf	___awdiv@divisor
  3371     0F3A  0860               	movf	??_intToString+2,w
  3372     0F3B  00D3               	movwf	___awdiv@divisor+1
  3373     0F3C  085C               	movf	intToString@n+1,w
  3374     0F3D  00D5               	movwf	___awdiv@dividend+1
  3375     0F3E  085B               	movf	intToString@n,w
  3376     0F3F  00D4               	movwf	___awdiv@dividend
  3377     0F40  120A  158A  2620  120A  158A  	fcall	___awdiv
  3378     0F45  1283               	bcf	3,5	;RP0=0, select bank0
  3379     0F46  1303               	bcf	3,6	;RP1=0, select bank0
  3380     0F47  0852               	movf	?___awdiv,w
  3381     0F48  3E30               	addlw	48
  3382     0F49  1383               	bcf	3,7	;select IRP bank0
  3383     0F4A  0080               	movwf	0
  3384     0F4B                     l2590:
  3385                           
  3386                           ;main.c: 676:         n = n % t;
  3387     0F4B  0861               	movf	intToString@t,w
  3388     0F4C  00DE               	movwf	??_intToString
  3389     0F4D  01DF               	clrf	??_intToString+1
  3390     0F4E  085E               	movf	??_intToString,w
  3391     0F4F  00C8               	movwf	___awmod@divisor
  3392     0F50  085F               	movf	??_intToString+1,w
  3393     0F51  00C9               	movwf	___awmod@divisor+1
  3394     0F52  085C               	movf	intToString@n+1,w
  3395     0F53  00CB               	movwf	___awmod@dividend+1
  3396     0F54  085B               	movf	intToString@n,w
  3397     0F55  00CA               	movwf	___awmod@dividend
  3398     0F56  120A  118A  279F  120A  158A  	fcall	___awmod
  3399     0F5B  1283               	bcf	3,5	;RP0=0, select bank0
  3400     0F5C  1303               	bcf	3,6	;RP1=0, select bank0
  3401     0F5D  0849               	movf	?___awmod+1,w
  3402     0F5E  00DC               	movwf	intToString@n+1
  3403     0F5F  0848               	movf	?___awmod,w
  3404     0F60  00DB               	movwf	intToString@n
  3405     0F61                     l2592:
  3406                           
  3407                           ;main.c: 677:     }
  3408     0F61  3001               	movlw	1
  3409     0F62  00DE               	movwf	??_intToString
  3410     0F63  085E               	movf	??_intToString,w
  3411     0F64  07E3               	addwf	intToString@i,f
  3412     0F65                     l2594:
  3413     0F65  0862               	movf	intToString@cifre,w
  3414     0F66  0263               	subwf	intToString@i,w
  3415     0F67  1C03               	skipc
  3416     0F68  2F6A               	goto	u2941
  3417     0F69  2F6B               	goto	u2940
  3418     0F6A                     u2941:
  3419     0F6A  2F23               	goto	l2586
  3420     0F6B                     u2940:
  3421     0F6B                     l2596:
  3422                           
  3423                           ;main.c: 679:     str[i] = '\0';
  3424     0F6B  0863               	movf	intToString@i,w
  3425     0F6C  075D               	addwf	intToString@str,w
  3426     0F6D  00DE               	movwf	??_intToString
  3427     0F6E  085E               	movf	??_intToString,w
  3428     0F6F  0084               	movwf	4
  3429     0F70  1383               	bcf	3,7	;select IRP bank0
  3430     0F71  0180               	clrf	0
  3431     0F72                     l354:
  3432     0F72  0008               	return
  3433     0F73                     __end_of_intToString:
  3434                           
  3435                           	psect	text7
  3436     0DAC                     __ptext7:	
  3437 ;; *************** function _potenza *****************
  3438 ;; Defined at:
  3439 ;;		line 657 in file "main.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;  b               1    wreg     unsigned char 
  3442 ;;  e               1    4[BANK0 ] unsigned char 
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;  b               1    6[BANK0 ] unsigned char 
  3445 ;;  i               2    7[BANK0 ] int 
  3446 ;;  n               1    9[BANK0 ] unsigned char 
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  1    wreg      unsigned char 
  3449 ;; Registers used:
  3450 ;;		wreg, status,2, status,0, pclath, cstack
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3456 ;;      Params:         0       1       0       0       0
  3457 ;;      Locals:         0       4       0       0       0
  3458 ;;      Temps:          0       1       0       0       0
  3459 ;;      Totals:         0       6       0       0       0
  3460 ;;Total ram usage:        6 bytes
  3461 ;; Hardware stack levels used: 1
  3462 ;; Hardware stack levels required when called: 3
  3463 ;; This function calls:
  3464 ;;		___bmul
  3465 ;; This function is called by:
  3466 ;;		_intToString
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469                           
  3470     0DAC                     _potenza:	
  3471                           ;psect for function _potenza
  3472                           
  3473                           
  3474                           ;incstack = 0
  3475                           ; Regs used in _potenza: [wreg+status,2+status,0+pclath+cstack]
  3476                           ;potenza@b stored from wreg
  3477     0DAC  1283               	bcf	3,5	;RP0=0, select bank0
  3478     0DAD  1303               	bcf	3,6	;RP1=0, select bank0
  3479     0DAE  00CE               	movwf	potenza@b
  3480     0DAF                     l2508:
  3481                           
  3482                           ;main.c: 658:     char n = 1;
  3483     0DAF  01D1               	clrf	potenza@n
  3484     0DB0  0AD1               	incf	potenza@n,f
  3485     0DB1                     l2510:
  3486                           
  3487                           ;main.c: 659:     for (int i = 0; i < e; i++) {
  3488     0DB1  01CF               	clrf	potenza@i
  3489     0DB2  01D0               	clrf	potenza@i+1
  3490     0DB3  2DC7               	goto	l2516
  3491     0DB4                     l2512:
  3492                           
  3493                           ;main.c: 660:         n = n * b;
  3494     0DB4  1283               	bcf	3,5	;RP0=0, select bank0
  3495     0DB5  1303               	bcf	3,6	;RP1=0, select bank0
  3496     0DB6  084E               	movf	potenza@b,w
  3497     0DB7  00C8               	movwf	___bmul@multiplicand
  3498     0DB8  0851               	movf	potenza@n,w
  3499     0DB9  120A  158A  2595  120A  158A  	fcall	___bmul
  3500     0DBE  1283               	bcf	3,5	;RP0=0, select bank0
  3501     0DBF  1303               	bcf	3,6	;RP1=0, select bank0
  3502     0DC0  00D1               	movwf	potenza@n
  3503     0DC1                     l2514:
  3504                           
  3505                           ;main.c: 661:     }
  3506     0DC1  3001               	movlw	1
  3507     0DC2  07CF               	addwf	potenza@i,f
  3508     0DC3  1803               	skipnc
  3509     0DC4  0AD0               	incf	potenza@i+1,f
  3510     0DC5  3000               	movlw	0
  3511     0DC6  07D0               	addwf	potenza@i+1,f
  3512     0DC7                     l2516:
  3513     0DC7  0850               	movf	potenza@i+1,w
  3514     0DC8  3A80               	xorlw	128
  3515     0DC9  00CD               	movwf	??_potenza
  3516     0DCA  3080               	movlw	128
  3517     0DCB  024D               	subwf	??_potenza,w
  3518     0DCC  1D03               	skipz
  3519     0DCD  2DD0               	goto	u2795
  3520     0DCE  084C               	movf	potenza@e,w
  3521     0DCF  024F               	subwf	potenza@i,w
  3522     0DD0                     u2795:
  3523     0DD0  1C03               	skipc
  3524     0DD1  2DD3               	goto	u2791
  3525     0DD2  2DD4               	goto	u2790
  3526     0DD3                     u2791:
  3527     0DD3  2DB4               	goto	l2512
  3528     0DD4                     u2790:
  3529     0DD4                     l2518:
  3530                           
  3531                           ;main.c: 662:     return n;
  3532     0DD4  1283               	bcf	3,5	;RP0=0, select bank0
  3533     0DD5  1303               	bcf	3,6	;RP1=0, select bank0
  3534     0DD6  0851               	movf	potenza@n,w
  3535     0DD7                     l345:
  3536     0DD7  0008               	return
  3537     0DD8                     __end_of_potenza:
  3538                           
  3539                           	psect	text8
  3540     0D95                     __ptext8:	
  3541 ;; *************** function ___bmul *****************
  3542 ;; Defined at:
  3543 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;  multiplier      1    wreg     unsigned char 
  3546 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;  multiplier      1    3[BANK0 ] unsigned char 
  3549 ;;  product         1    2[BANK0 ] unsigned char 
  3550 ;; Return value:  Size  Location     Type
  3551 ;;                  1    wreg      unsigned char 
  3552 ;; Registers used:
  3553 ;;		wreg, status,2, status,0
  3554 ;; Tracked objects:
  3555 ;;		On entry : 0/0
  3556 ;;		On exit  : 0/0
  3557 ;;		Unchanged: 0/0
  3558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3559 ;;      Params:         0       1       0       0       0
  3560 ;;      Locals:         0       2       0       0       0
  3561 ;;      Temps:          0       1       0       0       0
  3562 ;;      Totals:         0       4       0       0       0
  3563 ;;Total ram usage:        4 bytes
  3564 ;; Hardware stack levels used: 1
  3565 ;; Hardware stack levels required when called: 2
  3566 ;; This function calls:
  3567 ;;		Nothing
  3568 ;; This function is called by:
  3569 ;;		_potenza
  3570 ;; This function uses a non-reentrant model
  3571 ;;
  3572                           
  3573     0D95                     ___bmul:	
  3574                           ;psect for function ___bmul
  3575                           
  3576                           
  3577                           ;incstack = 0
  3578                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3579                           ;___bmul@multiplier stored from wreg
  3580     0D95  1283               	bcf	3,5	;RP0=0, select bank0
  3581     0D96  1303               	bcf	3,6	;RP1=0, select bank0
  3582     0D97  00CB               	movwf	___bmul@multiplier
  3583     0D98                     l2478:
  3584     0D98  01CA               	clrf	___bmul@product
  3585     0D99                     l2480:
  3586     0D99  1C4B               	btfss	___bmul@multiplier,0
  3587     0D9A  2D9C               	goto	u2771
  3588     0D9B  2D9D               	goto	u2770
  3589     0D9C                     u2771:
  3590     0D9C  2DA1               	goto	l2484
  3591     0D9D                     u2770:
  3592     0D9D                     l2482:
  3593     0D9D  0848               	movf	___bmul@multiplicand,w
  3594     0D9E  00C9               	movwf	??___bmul
  3595     0D9F  0849               	movf	??___bmul,w
  3596     0DA0  07CA               	addwf	___bmul@product,f
  3597     0DA1                     l2484:
  3598     0DA1  1003               	clrc
  3599     0DA2  0DC8               	rlf	___bmul@multiplicand,f
  3600     0DA3                     l2486:
  3601     0DA3  1003               	clrc
  3602     0DA4  0CCB               	rrf	___bmul@multiplier,f
  3603     0DA5  084B               	movf	___bmul@multiplier,w
  3604     0DA6  1D03               	btfss	3,2
  3605     0DA7  2DA9               	goto	u2781
  3606     0DA8  2DAA               	goto	u2780
  3607     0DA9                     u2781:
  3608     0DA9  2D99               	goto	l2480
  3609     0DAA                     u2780:
  3610     0DAA                     l2488:
  3611     0DAA  084A               	movf	___bmul@product,w
  3612     0DAB                     l466:
  3613     0DAB  0008               	return
  3614     0DAC                     __end_of___bmul:
  3615                           
  3616                           	psect	text9
  3617     079F                     __ptext9:	
  3618 ;; *************** function ___awmod *****************
  3619 ;; Defined at:
  3620 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  3621 ;; Parameters:    Size  Location     Type
  3622 ;;  divisor         2    0[BANK0 ] int 
  3623 ;;  dividend        2    2[BANK0 ] int 
  3624 ;; Auto vars:     Size  Location     Type
  3625 ;;  sign            1    6[BANK0 ] unsigned char 
  3626 ;;  counter         1    5[BANK0 ] unsigned char 
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  2    0[BANK0 ] int 
  3629 ;; Registers used:
  3630 ;;		wreg, status,2, status,0
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3636 ;;      Params:         0       4       0       0       0
  3637 ;;      Locals:         0       2       0       0       0
  3638 ;;      Temps:          0       1       0       0       0
  3639 ;;      Totals:         0       7       0       0       0
  3640 ;;Total ram usage:        7 bytes
  3641 ;; Hardware stack levels used: 1
  3642 ;; Hardware stack levels required when called: 2
  3643 ;; This function calls:
  3644 ;;		Nothing
  3645 ;; This function is called by:
  3646 ;;		_intToString
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           
  3650     079F                     ___awmod:	
  3651                           ;psect for function ___awmod
  3652                           
  3653     079F                     l2522:	
  3654                           ;incstack = 0
  3655                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3656                           
  3657     079F  1283               	bcf	3,5	;RP0=0, select bank0
  3658     07A0  1303               	bcf	3,6	;RP1=0, select bank0
  3659     07A1  01CE               	clrf	___awmod@sign
  3660     07A2                     l2524:
  3661     07A2  1FCB               	btfss	___awmod@dividend+1,7
  3662     07A3  2FA5               	goto	u2801
  3663     07A4  2FA6               	goto	u2800
  3664     07A5                     u2801:
  3665     07A5  2FAD               	goto	l2530
  3666     07A6                     u2800:
  3667     07A6                     l2526:
  3668     07A6  09CA               	comf	___awmod@dividend,f
  3669     07A7  09CB               	comf	___awmod@dividend+1,f
  3670     07A8  0ACA               	incf	___awmod@dividend,f
  3671     07A9  1903               	skipnz
  3672     07AA  0ACB               	incf	___awmod@dividend+1,f
  3673     07AB                     l2528:
  3674     07AB  01CE               	clrf	___awmod@sign
  3675     07AC  0ACE               	incf	___awmod@sign,f
  3676     07AD                     l2530:
  3677     07AD  1FC9               	btfss	___awmod@divisor+1,7
  3678     07AE  2FB0               	goto	u2811
  3679     07AF  2FB1               	goto	u2810
  3680     07B0                     u2811:
  3681     07B0  2FB6               	goto	l2534
  3682     07B1                     u2810:
  3683     07B1                     l2532:
  3684     07B1  09C8               	comf	___awmod@divisor,f
  3685     07B2  09C9               	comf	___awmod@divisor+1,f
  3686     07B3  0AC8               	incf	___awmod@divisor,f
  3687     07B4  1903               	skipnz
  3688     07B5  0AC9               	incf	___awmod@divisor+1,f
  3689     07B6                     l2534:
  3690     07B6  0848               	movf	___awmod@divisor,w
  3691     07B7  0449               	iorwf	___awmod@divisor+1,w
  3692     07B8  1903               	btfsc	3,2
  3693     07B9  2FBB               	goto	u2821
  3694     07BA  2FBC               	goto	u2820
  3695     07BB                     u2821:
  3696     07BB  2FEB               	goto	l2552
  3697     07BC                     u2820:
  3698     07BC                     l2536:
  3699     07BC  01CD               	clrf	___awmod@counter
  3700     07BD  0ACD               	incf	___awmod@counter,f
  3701     07BE  2FCA               	goto	l2542
  3702     07BF                     l2538:
  3703     07BF  3001               	movlw	1
  3704     07C0                     u2835:
  3705     07C0  1003               	clrc
  3706     07C1  0DC8               	rlf	___awmod@divisor,f
  3707     07C2  0DC9               	rlf	___awmod@divisor+1,f
  3708     07C3  3EFF               	addlw	-1
  3709     07C4  1D03               	skipz
  3710     07C5  2FC0               	goto	u2835
  3711     07C6                     l2540:
  3712     07C6  3001               	movlw	1
  3713     07C7  00CC               	movwf	??___awmod
  3714     07C8  084C               	movf	??___awmod,w
  3715     07C9  07CD               	addwf	___awmod@counter,f
  3716     07CA                     l2542:
  3717     07CA  1FC9               	btfss	___awmod@divisor+1,7
  3718     07CB  2FCD               	goto	u2841
  3719     07CC  2FCE               	goto	u2840
  3720     07CD                     u2841:
  3721     07CD  2FBF               	goto	l2538
  3722     07CE                     u2840:
  3723     07CE                     l2544:
  3724     07CE  0849               	movf	___awmod@divisor+1,w
  3725     07CF  024B               	subwf	___awmod@dividend+1,w
  3726     07D0  1D03               	skipz
  3727     07D1  2FD4               	goto	u2855
  3728     07D2  0848               	movf	___awmod@divisor,w
  3729     07D3  024A               	subwf	___awmod@dividend,w
  3730     07D4                     u2855:
  3731     07D4  1C03               	skipc
  3732     07D5  2FD7               	goto	u2851
  3733     07D6  2FD8               	goto	u2850
  3734     07D7                     u2851:
  3735     07D7  2FDE               	goto	l2548
  3736     07D8                     u2850:
  3737     07D8                     l2546:
  3738     07D8  0848               	movf	___awmod@divisor,w
  3739     07D9  02CA               	subwf	___awmod@dividend,f
  3740     07DA  0849               	movf	___awmod@divisor+1,w
  3741     07DB  1C03               	skipc
  3742     07DC  03CB               	decf	___awmod@dividend+1,f
  3743     07DD  02CB               	subwf	___awmod@dividend+1,f
  3744     07DE                     l2548:
  3745     07DE  3001               	movlw	1
  3746     07DF                     u2865:
  3747     07DF  1003               	clrc
  3748     07E0  0CC9               	rrf	___awmod@divisor+1,f
  3749     07E1  0CC8               	rrf	___awmod@divisor,f
  3750     07E2  3EFF               	addlw	-1
  3751     07E3  1D03               	skipz
  3752     07E4  2FDF               	goto	u2865
  3753     07E5                     l2550:
  3754     07E5  3001               	movlw	1
  3755     07E6  02CD               	subwf	___awmod@counter,f
  3756     07E7  1D03               	btfss	3,2
  3757     07E8  2FEA               	goto	u2871
  3758     07E9  2FEB               	goto	u2870
  3759     07EA                     u2871:
  3760     07EA  2FCE               	goto	l2544
  3761     07EB                     u2870:
  3762     07EB                     l2552:
  3763     07EB  084E               	movf	___awmod@sign,w
  3764     07EC  1903               	btfsc	3,2
  3765     07ED  2FEF               	goto	u2881
  3766     07EE  2FF0               	goto	u2880
  3767     07EF                     u2881:
  3768     07EF  2FF5               	goto	l2556
  3769     07F0                     u2880:
  3770     07F0                     l2554:
  3771     07F0  09CA               	comf	___awmod@dividend,f
  3772     07F1  09CB               	comf	___awmod@dividend+1,f
  3773     07F2  0ACA               	incf	___awmod@dividend,f
  3774     07F3  1903               	skipnz
  3775     07F4  0ACB               	incf	___awmod@dividend+1,f
  3776     07F5                     l2556:
  3777     07F5  084B               	movf	___awmod@dividend+1,w
  3778     07F6  00C9               	movwf	?___awmod+1
  3779     07F7  084A               	movf	___awmod@dividend,w
  3780     07F8  00C8               	movwf	?___awmod
  3781     07F9                     l606:
  3782     07F9  0008               	return
  3783     07FA                     __end_of___awmod:
  3784                           
  3785                           	psect	text10
  3786     0E20                     __ptext10:	
  3787 ;; *************** function ___awdiv *****************
  3788 ;; Defined at:
  3789 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;  divisor         2   10[BANK0 ] int 
  3792 ;;  dividend        2   12[BANK0 ] int 
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;  quotient        2   17[BANK0 ] int 
  3795 ;;  sign            1   16[BANK0 ] unsigned char 
  3796 ;;  counter         1   15[BANK0 ] unsigned char 
  3797 ;; Return value:  Size  Location     Type
  3798 ;;                  2   10[BANK0 ] int 
  3799 ;; Registers used:
  3800 ;;		wreg, status,2, status,0
  3801 ;; Tracked objects:
  3802 ;;		On entry : 0/0
  3803 ;;		On exit  : 0/0
  3804 ;;		Unchanged: 0/0
  3805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3806 ;;      Params:         0       4       0       0       0
  3807 ;;      Locals:         0       4       0       0       0
  3808 ;;      Temps:          0       1       0       0       0
  3809 ;;      Totals:         0       9       0       0       0
  3810 ;;Total ram usage:        9 bytes
  3811 ;; Hardware stack levels used: 1
  3812 ;; Hardware stack levels required when called: 2
  3813 ;; This function calls:
  3814 ;;		Nothing
  3815 ;; This function is called by:
  3816 ;;		_intToString
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820     0E20                     ___awdiv:	
  3821                           ;psect for function ___awdiv
  3822                           
  3823     0E20                     l1756:	
  3824                           ;incstack = 0
  3825                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3826                           
  3827     0E20  1283               	bcf	3,5	;RP0=0, select bank0
  3828     0E21  1303               	bcf	3,6	;RP1=0, select bank0
  3829     0E22  01D8               	clrf	___awdiv@sign
  3830     0E23                     l1758:
  3831     0E23  1FD3               	btfss	___awdiv@divisor+1,7
  3832     0E24  2E26               	goto	u1421
  3833     0E25  2E27               	goto	u1420
  3834     0E26                     u1421:
  3835     0E26  2E2E               	goto	l1764
  3836     0E27                     u1420:
  3837     0E27                     l1760:
  3838     0E27  09D2               	comf	___awdiv@divisor,f
  3839     0E28  09D3               	comf	___awdiv@divisor+1,f
  3840     0E29  0AD2               	incf	___awdiv@divisor,f
  3841     0E2A  1903               	skipnz
  3842     0E2B  0AD3               	incf	___awdiv@divisor+1,f
  3843     0E2C                     l1762:
  3844     0E2C  01D8               	clrf	___awdiv@sign
  3845     0E2D  0AD8               	incf	___awdiv@sign,f
  3846     0E2E                     l1764:
  3847     0E2E  1FD5               	btfss	___awdiv@dividend+1,7
  3848     0E2F  2E31               	goto	u1431
  3849     0E30  2E32               	goto	u1430
  3850     0E31                     u1431:
  3851     0E31  2E3B               	goto	l1770
  3852     0E32                     u1430:
  3853     0E32                     l1766:
  3854     0E32  09D4               	comf	___awdiv@dividend,f
  3855     0E33  09D5               	comf	___awdiv@dividend+1,f
  3856     0E34  0AD4               	incf	___awdiv@dividend,f
  3857     0E35  1903               	skipnz
  3858     0E36  0AD5               	incf	___awdiv@dividend+1,f
  3859     0E37                     l1768:
  3860     0E37  3001               	movlw	1
  3861     0E38  00D6               	movwf	??___awdiv
  3862     0E39  0856               	movf	??___awdiv,w
  3863     0E3A  06D8               	xorwf	___awdiv@sign,f
  3864     0E3B                     l1770:
  3865     0E3B  01D9               	clrf	___awdiv@quotient
  3866     0E3C  01DA               	clrf	___awdiv@quotient+1
  3867     0E3D                     l1772:
  3868     0E3D  0852               	movf	___awdiv@divisor,w
  3869     0E3E  0453               	iorwf	___awdiv@divisor+1,w
  3870     0E3F  1903               	btfsc	3,2
  3871     0E40  2E42               	goto	u1441
  3872     0E41  2E43               	goto	u1440
  3873     0E42                     u1441:
  3874     0E42  2E7A               	goto	l1792
  3875     0E43                     u1440:
  3876     0E43                     l1774:
  3877     0E43  01D7               	clrf	___awdiv@counter
  3878     0E44  0AD7               	incf	___awdiv@counter,f
  3879     0E45  2E51               	goto	l1780
  3880     0E46                     l1776:
  3881     0E46  3001               	movlw	1
  3882     0E47                     u1455:
  3883     0E47  1003               	clrc
  3884     0E48  0DD2               	rlf	___awdiv@divisor,f
  3885     0E49  0DD3               	rlf	___awdiv@divisor+1,f
  3886     0E4A  3EFF               	addlw	-1
  3887     0E4B  1D03               	skipz
  3888     0E4C  2E47               	goto	u1455
  3889     0E4D                     l1778:
  3890     0E4D  3001               	movlw	1
  3891     0E4E  00D6               	movwf	??___awdiv
  3892     0E4F  0856               	movf	??___awdiv,w
  3893     0E50  07D7               	addwf	___awdiv@counter,f
  3894     0E51                     l1780:
  3895     0E51  1FD3               	btfss	___awdiv@divisor+1,7
  3896     0E52  2E54               	goto	u1461
  3897     0E53  2E55               	goto	u1460
  3898     0E54                     u1461:
  3899     0E54  2E46               	goto	l1776
  3900     0E55                     u1460:
  3901     0E55                     l1782:
  3902     0E55  3001               	movlw	1
  3903     0E56                     u1475:
  3904     0E56  1003               	clrc
  3905     0E57  0DD9               	rlf	___awdiv@quotient,f
  3906     0E58  0DDA               	rlf	___awdiv@quotient+1,f
  3907     0E59  3EFF               	addlw	-1
  3908     0E5A  1D03               	skipz
  3909     0E5B  2E56               	goto	u1475
  3910     0E5C  0853               	movf	___awdiv@divisor+1,w
  3911     0E5D  0255               	subwf	___awdiv@dividend+1,w
  3912     0E5E  1D03               	skipz
  3913     0E5F  2E62               	goto	u1485
  3914     0E60  0852               	movf	___awdiv@divisor,w
  3915     0E61  0254               	subwf	___awdiv@dividend,w
  3916     0E62                     u1485:
  3917     0E62  1C03               	skipc
  3918     0E63  2E65               	goto	u1481
  3919     0E64  2E66               	goto	u1480
  3920     0E65                     u1481:
  3921     0E65  2E6D               	goto	l1788
  3922     0E66                     u1480:
  3923     0E66                     l1784:
  3924     0E66  0852               	movf	___awdiv@divisor,w
  3925     0E67  02D4               	subwf	___awdiv@dividend,f
  3926     0E68  0853               	movf	___awdiv@divisor+1,w
  3927     0E69  1C03               	skipc
  3928     0E6A  03D5               	decf	___awdiv@dividend+1,f
  3929     0E6B  02D5               	subwf	___awdiv@dividend+1,f
  3930     0E6C                     l1786:
  3931     0E6C  1459               	bsf	___awdiv@quotient,0
  3932     0E6D                     l1788:
  3933     0E6D  3001               	movlw	1
  3934     0E6E                     u1495:
  3935     0E6E  1003               	clrc
  3936     0E6F  0CD3               	rrf	___awdiv@divisor+1,f
  3937     0E70  0CD2               	rrf	___awdiv@divisor,f
  3938     0E71  3EFF               	addlw	-1
  3939     0E72  1D03               	skipz
  3940     0E73  2E6E               	goto	u1495
  3941     0E74                     l1790:
  3942     0E74  3001               	movlw	1
  3943     0E75  02D7               	subwf	___awdiv@counter,f
  3944     0E76  1D03               	btfss	3,2
  3945     0E77  2E79               	goto	u1501
  3946     0E78  2E7A               	goto	u1500
  3947     0E79                     u1501:
  3948     0E79  2E55               	goto	l1782
  3949     0E7A                     u1500:
  3950     0E7A                     l1792:
  3951     0E7A  0858               	movf	___awdiv@sign,w
  3952     0E7B  1903               	btfsc	3,2
  3953     0E7C  2E7E               	goto	u1511
  3954     0E7D  2E7F               	goto	u1510
  3955     0E7E                     u1511:
  3956     0E7E  2E84               	goto	l1796
  3957     0E7F                     u1510:
  3958     0E7F                     l1794:
  3959     0E7F  09D9               	comf	___awdiv@quotient,f
  3960     0E80  09DA               	comf	___awdiv@quotient+1,f
  3961     0E81  0AD9               	incf	___awdiv@quotient,f
  3962     0E82  1903               	skipnz
  3963     0E83  0ADA               	incf	___awdiv@quotient+1,f
  3964     0E84                     l1796:
  3965     0E84  085A               	movf	___awdiv@quotient+1,w
  3966     0E85  00D3               	movwf	?___awdiv+1
  3967     0E86  0859               	movf	___awdiv@quotient,w
  3968     0E87  00D2               	movwf	?___awdiv
  3969     0E88                     l593:
  3970     0E88  0008               	return
  3971     0E89                     __end_of___awdiv:
  3972                           
  3973                           	psect	text11
  3974     0D3E                     __ptext11:	
  3975 ;; *************** function _UART_Write *****************
  3976 ;; Defined at:
  3977 ;;		line 230 in file "main.c"
  3978 ;; Parameters:    Size  Location     Type
  3979 ;;  data            1    wreg     unsigned char 
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;  data            1    0[BANK0 ] unsigned char 
  3982 ;; Return value:  Size  Location     Type
  3983 ;;                  1    wreg      void 
  3984 ;; Registers used:
  3985 ;;		wreg
  3986 ;; Tracked objects:
  3987 ;;		On entry : 0/0
  3988 ;;		On exit  : 0/0
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3991 ;;      Params:         0       0       0       0       0
  3992 ;;      Locals:         0       1       0       0       0
  3993 ;;      Temps:          0       0       0       0       0
  3994 ;;      Totals:         0       1       0       0       0
  3995 ;;Total ram usage:        1 bytes
  3996 ;; Hardware stack levels used: 1
  3997 ;; Hardware stack levels required when called: 2
  3998 ;; This function calls:
  3999 ;;		Nothing
  4000 ;; This function is called by:
  4001 ;;		_main
  4002 ;;		_UART_Read1
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006     0D3E                     _UART_Write:	
  4007                           ;psect for function _UART_Write
  4008                           
  4009                           
  4010                           ;incstack = 0
  4011                           ; Regs used in _UART_Write: [wreg]
  4012                           ;UART_Write@data stored from wreg
  4013     0D3E  1283               	bcf	3,5	;RP0=0, select bank0
  4014     0D3F  1303               	bcf	3,6	;RP1=0, select bank0
  4015     0D40  00C8               	movwf	UART_Write@data
  4016     0D41                     l2570:
  4017     0D41                     l209:	
  4018                           ;main.c: 231:     while (!TXIF)
  4019                           
  4020                           
  4021                           ;main.c: 231:     while (!TXIF)
  4022     0D41  1E0C               	btfss	12,4	;volatile
  4023     0D42  2D44               	goto	u2921
  4024     0D43  2D45               	goto	u2920
  4025     0D44                     u2921:
  4026     0D44  2D41               	goto	l209
  4027     0D45                     u2920:
  4028     0D45                     l2572:
  4029                           
  4030                           ;main.c: 233:     TXREG = data;
  4031     0D45  0848               	movf	UART_Write@data,w
  4032     0D46  0099               	movwf	25	;volatile
  4033     0D47                     l212:
  4034     0D47  0008               	return
  4035     0D48                     __end_of_UART_Write:
  4036                           
  4037                           	psect	text12
  4038     07FA                     __ptext12:	
  4039 ;; *************** function _RS485_TxEnable *****************
  4040 ;; Defined at:
  4041 ;;		line 220 in file "main.c"
  4042 ;; Parameters:    Size  Location     Type
  4043 ;;		None
  4044 ;; Auto vars:     Size  Location     Type
  4045 ;;		None
  4046 ;; Return value:  Size  Location     Type
  4047 ;;                  1    wreg      void 
  4048 ;; Registers used:
  4049 ;;		None
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4055 ;;      Params:         0       0       0       0       0
  4056 ;;      Locals:         0       0       0       0       0
  4057 ;;      Temps:          0       0       0       0       0
  4058 ;;      Totals:         0       0       0       0       0
  4059 ;;Total ram usage:        0 bytes
  4060 ;; Hardware stack levels used: 1
  4061 ;; Hardware stack levels required when called: 2
  4062 ;; This function calls:
  4063 ;;		Nothing
  4064 ;; This function is called by:
  4065 ;;		_main
  4066 ;;		_UART_Read1
  4067 ;; This function uses a non-reentrant model
  4068 ;;
  4069                           
  4070     07FA                     _RS485_TxEnable:	
  4071                           ;psect for function _RS485_TxEnable
  4072                           
  4073     07FA                     l2568:	
  4074                           ;incstack = 0
  4075                           ; Regs used in _RS485_TxEnable: []
  4076                           
  4077                           
  4078                           ;main.c: 221:     RC0 = 1;
  4079     07FA  1283               	bcf	3,5	;RP0=0, select bank0
  4080     07FB  1303               	bcf	3,6	;RP1=0, select bank0
  4081     07FC  1407               	bsf	7,0	;volatile
  4082                           
  4083                           ;main.c: 222:     RC1 = 0;
  4084     07FD  1087               	bcf	7,1	;volatile
  4085     07FE                     l203:
  4086     07FE  0008               	return
  4087     07FF                     __end_of_RS485_TxEnable:
  4088                           
  4089                           	psect	text13
  4090     0D31                     __ptext13:	
  4091 ;; *************** function _RS485_RxEnable *****************
  4092 ;; Defined at:
  4093 ;;		line 225 in file "main.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;		None
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;		None
  4098 ;; Return value:  Size  Location     Type
  4099 ;;                  1    wreg      void 
  4100 ;; Registers used:
  4101 ;;		None
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/0
  4104 ;;		On exit  : 0/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4107 ;;      Params:         0       0       0       0       0
  4108 ;;      Locals:         0       0       0       0       0
  4109 ;;      Temps:          0       0       0       0       0
  4110 ;;      Totals:         0       0       0       0       0
  4111 ;;Total ram usage:        0 bytes
  4112 ;; Hardware stack levels used: 1
  4113 ;; Hardware stack levels required when called: 2
  4114 ;; This function calls:
  4115 ;;		Nothing
  4116 ;; This function is called by:
  4117 ;;		_main
  4118 ;;		_UART_Read1
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122     0D31                     _RS485_RxEnable:	
  4123                           ;psect for function _RS485_RxEnable
  4124                           
  4125     0D31                     l2574:	
  4126                           ;incstack = 0
  4127                           ; Regs used in _RS485_RxEnable: []
  4128                           
  4129                           
  4130                           ;main.c: 226:     RC0 = 0;
  4131     0D31  1283               	bcf	3,5	;RP0=0, select bank0
  4132     0D32  1303               	bcf	3,6	;RP1=0, select bank0
  4133     0D33  1007               	bcf	7,0	;volatile
  4134                           
  4135                           ;main.c: 227:     RC1 = 1;
  4136     0D34  1487               	bsf	7,1	;volatile
  4137     0D35                     l206:
  4138     0D35  0008               	return
  4139     0D36                     __end_of_RS485_RxEnable:
  4140                           
  4141                           	psect	text14
  4142     0D57                     __ptext14:	
  4143 ;; *************** function _UART_Init *****************
  4144 ;; Defined at:
  4145 ;;		line 202 in file "main.c"
  4146 ;; Parameters:    Size  Location     Type
  4147 ;;		None
  4148 ;; Auto vars:     Size  Location     Type
  4149 ;;		None
  4150 ;; Return value:  Size  Location     Type
  4151 ;;                  1    wreg      void 
  4152 ;; Registers used:
  4153 ;;		wreg
  4154 ;; Tracked objects:
  4155 ;;		On entry : 0/0
  4156 ;;		On exit  : 0/0
  4157 ;;		Unchanged: 0/0
  4158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4159 ;;      Params:         0       0       0       0       0
  4160 ;;      Locals:         0       0       0       0       0
  4161 ;;      Temps:          0       0       0       0       0
  4162 ;;      Totals:         0       0       0       0       0
  4163 ;;Total ram usage:        0 bytes
  4164 ;; Hardware stack levels used: 1
  4165 ;; Hardware stack levels required when called: 2
  4166 ;; This function calls:
  4167 ;;		Nothing
  4168 ;; This function is called by:
  4169 ;;		_main
  4170 ;; This function uses a non-reentrant model
  4171 ;;
  4172                           
  4173     0D57                     _UART_Init:	
  4174                           ;psect for function _UART_Init
  4175                           
  4176     0D57                     l2598:	
  4177                           ;incstack = 0
  4178                           ; Regs used in _UART_Init: [wreg]
  4179                           
  4180                           
  4181                           ;main.c: 204:     TRISC6 = 0;
  4182     0D57  1683               	bsf	3,5	;RP0=1, select bank1
  4183     0D58  1303               	bcf	3,6	;RP1=0, select bank1
  4184     0D59  1307               	bcf	7,6	;volatile
  4185                           
  4186                           ;main.c: 205:     TRISC7 = 1;
  4187     0D5A  1787               	bsf	7,7	;volatile
  4188                           
  4189                           ;main.c: 208:     BRGH = 1;
  4190     0D5B  1518               	bsf	24,2	;volatile
  4191     0D5C                     l2600:
  4192                           
  4193                           ;main.c: 209:     SPBRG = 51;
  4194     0D5C  3033               	movlw	51
  4195     0D5D  0099               	movwf	25	;volatile
  4196     0D5E                     l2602:
  4197                           
  4198                           ;main.c: 212:     SYNC = 0;
  4199     0D5E  1218               	bcf	24,4	;volatile
  4200     0D5F                     l2604:
  4201                           
  4202                           ;main.c: 213:     SPEN = 1;
  4203     0D5F  1283               	bcf	3,5	;RP0=0, select bank0
  4204     0D60  1303               	bcf	3,6	;RP1=0, select bank0
  4205     0D61  1798               	bsf	24,7	;volatile
  4206     0D62                     l2606:
  4207                           
  4208                           ;main.c: 216:     TXEN = 1;
  4209     0D62  1683               	bsf	3,5	;RP0=1, select bank1
  4210     0D63  1303               	bcf	3,6	;RP1=0, select bank1
  4211     0D64  1698               	bsf	24,5	;volatile
  4212     0D65                     l2608:
  4213                           
  4214                           ;main.c: 217:     CREN = 1;
  4215     0D65  1283               	bcf	3,5	;RP0=0, select bank0
  4216     0D66  1303               	bcf	3,6	;RP1=0, select bank0
  4217     0D67  1618               	bsf	24,4	;volatile
  4218     0D68                     l200:
  4219     0D68  0008               	return
  4220     0D69                     __end_of_UART_Init:
  4221                           
  4222                           	psect	text15
  4223     0D48                     __ptext15:	
  4224 ;; *************** function _Timer0_Init *****************
  4225 ;; Defined at:
  4226 ;;		line 550 in file "main.c"
  4227 ;; Parameters:    Size  Location     Type
  4228 ;;		None
  4229 ;; Auto vars:     Size  Location     Type
  4230 ;;		None
  4231 ;; Return value:  Size  Location     Type
  4232 ;;                  1    wreg      void 
  4233 ;; Registers used:
  4234 ;;		wreg
  4235 ;; Tracked objects:
  4236 ;;		On entry : 0/0
  4237 ;;		On exit  : 0/0
  4238 ;;		Unchanged: 0/0
  4239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4240 ;;      Params:         0       0       0       0       0
  4241 ;;      Locals:         0       0       0       0       0
  4242 ;;      Temps:          0       0       0       0       0
  4243 ;;      Totals:         0       0       0       0       0
  4244 ;;Total ram usage:        0 bytes
  4245 ;; Hardware stack levels used: 1
  4246 ;; Hardware stack levels required when called: 2
  4247 ;; This function calls:
  4248 ;;		Nothing
  4249 ;; This function is called by:
  4250 ;;		_main
  4251 ;; This function uses a non-reentrant model
  4252 ;;
  4253                           
  4254     0D48                     _Timer0_Init:	
  4255                           ;psect for function _Timer0_Init
  4256                           
  4257     0D48                     l2634:	
  4258                           ;incstack = 0
  4259                           ; Regs used in _Timer0_Init: [wreg]
  4260                           
  4261                           
  4262                           ;main.c: 552:     T0CS = 0;
  4263     0D48  1683               	bsf	3,5	;RP0=1, select bank1
  4264     0D49  1303               	bcf	3,6	;RP1=0, select bank1
  4265     0D4A  1281               	bcf	1,5	;volatile
  4266                           
  4267                           ;main.c: 553:     PSA = 0;
  4268     0D4B  1181               	bcf	1,3	;volatile
  4269                           
  4270                           ;main.c: 554:     PS2 = 1;
  4271     0D4C  1501               	bsf	1,2	;volatile
  4272                           
  4273                           ;main.c: 555:     PS1 = 1;
  4274     0D4D  1481               	bsf	1,1	;volatile
  4275                           
  4276                           ;main.c: 556:     PS0 = 1;
  4277     0D4E  1401               	bsf	1,0	;volatile
  4278     0D4F                     l2636:
  4279                           
  4280                           ;main.c: 559:     TMR0 = 6;
  4281     0D4F  3006               	movlw	6
  4282     0D50  1283               	bcf	3,5	;RP0=0, select bank0
  4283     0D51  1303               	bcf	3,6	;RP1=0, select bank0
  4284     0D52  0081               	movwf	1	;volatile
  4285     0D53                     l2638:
  4286                           
  4287                           ;main.c: 560:     TMR0IF = 0;
  4288     0D53  110B               	bcf	11,2	;volatile
  4289     0D54                     l2640:
  4290                           
  4291                           ;main.c: 561:     TMR0IE = 1;
  4292     0D54  168B               	bsf	11,5	;volatile
  4293     0D55                     l2642:
  4294                           
  4295                           ;main.c: 562:     GIE = 1;
  4296     0D55  178B               	bsf	11,7	;volatile
  4297     0D56                     l320:
  4298     0D56  0008               	return
  4299     0D57                     __end_of_Timer0_Init:
  4300                           
  4301                           	psect	text16
  4302     0F73                     __ptext16:	
  4303 ;; *************** function _KeyPadReader *****************
  4304 ;; Defined at:
  4305 ;;		line 575 in file "main.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;		None
  4308 ;; Auto vars:     Size  Location     Type
  4309 ;;		None
  4310 ;; Return value:  Size  Location     Type
  4311 ;;                  1    wreg      unsigned char 
  4312 ;; Registers used:
  4313 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4314 ;; Tracked objects:
  4315 ;;		On entry : 0/0
  4316 ;;		On exit  : 0/0
  4317 ;;		Unchanged: 0/0
  4318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4319 ;;      Params:         0       0       0       0       0
  4320 ;;      Locals:         0       0       0       0       0
  4321 ;;      Temps:          0       2       0       0       0
  4322 ;;      Totals:         0       2       0       0       0
  4323 ;;Total ram usage:        2 bytes
  4324 ;; Hardware stack levels used: 2
  4325 ;; Hardware stack levels required when called: 2
  4326 ;; This function calls:
  4327 ;;		Nothing
  4328 ;; This function is called by:
  4329 ;;		_main
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333     0F73                     _KeyPadReader:	
  4334                           ;psect for function _KeyPadReader
  4335                           
  4336     0F73                     l2656:	
  4337                           ;incstack = 0
  4338                           ; Regs used in _KeyPadReader: [wreg-fsr0h+status,2+status,0+pclath]
  4339                           
  4340                           
  4341                           ;main.c: 576:     TRISD |= 0x0F;
  4342     0F73  300F               	movlw	15
  4343     0F74  1283               	bcf	3,5	;RP0=0, select bank0
  4344     0F75  1303               	bcf	3,6	;RP1=0, select bank0
  4345     0F76  00C8               	movwf	??_KeyPadReader
  4346     0F77  0848               	movf	??_KeyPadReader,w
  4347     0F78  1683               	bsf	3,5	;RP0=1, select bank1
  4348     0F79  1303               	bcf	3,6	;RP1=0, select bank1
  4349     0F7A  0488               	iorwf	8,f	;volatile
  4350     0F7B                     l2658:
  4351                           
  4352                           ;main.c: 579:     for (colScan = 0; colScan < 3; colScan++) {
  4353     0F7B  01F7               	clrf	_colScan
  4354     0F7C                     l2660:
  4355     0F7C  3003               	movlw	3
  4356     0F7D  0277               	subwf	_colScan,w
  4357     0F7E  1C03               	skipc
  4358     0F7F  2F81               	goto	u2961
  4359     0F80  2F82               	goto	u2960
  4360     0F81                     u2961:
  4361     0F81  2F83               	goto	l2664
  4362     0F82                     u2960:
  4363     0F82  2F7B               	goto	l2658
  4364     0F83                     l2664:
  4365                           
  4366                           ;main.c: 580:         PORTB = PORTB | 0x07;
  4367     0F83  1283               	bcf	3,5	;RP0=0, select bank0
  4368     0F84  1303               	bcf	3,6	;RP1=0, select bank0
  4369     0F85  0806               	movf	6,w	;volatile
  4370     0F86  3807               	iorlw	7
  4371     0F87  0086               	movwf	6	;volatile
  4372     0F88                     l2666:
  4373                           
  4374                           ;main.c: 581:         PORTB &= colMask[colScan];
  4375     0F88  0877               	movf	_colScan,w
  4376     0F89  3E11               	addlw	low ((_colMask-__stringbase)| (0+32768))
  4377     0F8A  0084               	movwf	4
  4378     0F8B  120A  158A  200A  120A  158A  	fcall	stringdir
  4379     0F90  00C8               	movwf	??_KeyPadReader
  4380     0F91  0848               	movf	??_KeyPadReader,w
  4381     0F92  0586               	andwf	6,f	;volatile
  4382     0F93                     l2668:
  4383                           
  4384                           ;main.c: 584:         for (rowScan = 0; rowScan < 4; rowScan++) {
  4385     0F93  01F6               	clrf	_rowScan
  4386     0F94                     l2670:
  4387     0F94  3004               	movlw	4
  4388     0F95  0276               	subwf	_rowScan,w
  4389     0F96  1C03               	skipc
  4390     0F97  2F99               	goto	u2971
  4391     0F98  2F9A               	goto	u2970
  4392     0F99                     u2971:
  4393     0F99  2F9B               	goto	l2674
  4394     0F9A                     u2970:
  4395     0F9A  2FFA               	goto	l2706
  4396     0F9B                     l2674:
  4397                           
  4398                           ;main.c: 585:             if (!(PORTD & rowMask[rowScan]) && (old_btn)) {
  4399     0F9B  0876               	movf	_rowScan,w
  4400     0F9C  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  4401     0F9D  0084               	movwf	4
  4402     0F9E  120A  158A  200A  120A  158A  	fcall	stringdir
  4403     0FA3  0508               	andwf	8,w	;volatile
  4404     0FA4  1D03               	btfss	3,2
  4405     0FA5  2FA7               	goto	u2981
  4406     0FA6  2FA8               	goto	u2980
  4407     0FA7                     u2981:
  4408     0FA7  2FB1               	goto	l2682
  4409     0FA8                     u2980:
  4410     0FA8                     l2676:
  4411     0FA8  1C78               	btfss	_old_btn/(0+8),_old_btn& (0+7)
  4412     0FA9  2FAB               	goto	u2991
  4413     0FAA  2FAC               	goto	u2990
  4414     0FAB                     u2991:
  4415     0FAB  2FB1               	goto	l2682
  4416     0FAC                     u2990:
  4417     0FAC                     l2678:
  4418                           
  4419                           ;main.c: 586:                 old_btn = 0;
  4420     0FAC  1078               	bcf	_old_btn/(0+8),_old_btn& (0+7)
  4421     0FAD                     l2680:
  4422                           
  4423                           ;main.c: 587:                 stato++;
  4424     0FAD  3001               	movlw	1
  4425     0FAE  00C8               	movwf	??_KeyPadReader
  4426     0FAF  0848               	movf	??_KeyPadReader,w
  4427     0FB0  07F5               	addwf	_stato,f
  4428     0FB1                     l2682:
  4429                           
  4430                           ;main.c: 589:             if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  4431     0FB1  0876               	movf	_rowScan,w
  4432     0FB2  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  4433     0FB3  0084               	movwf	4
  4434     0FB4  120A  158A  200A  120A  158A  	fcall	stringdir
  4435     0FB9  0508               	andwf	8,w	;volatile
  4436     0FBA  1903               	btfsc	3,2
  4437     0FBB  2FBD               	goto	u3001
  4438     0FBC  2FBE               	goto	u3000
  4439     0FBD                     u3001:
  4440     0FBD  2FE1               	goto	l2694
  4441     0FBE                     u3000:
  4442     0FBE                     l2684:
  4443     0FBE  1878               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  4444     0FBF  2FC1               	goto	u3011
  4445     0FC0  2FC2               	goto	u3010
  4446     0FC1                     u3011:
  4447     0FC1  2FE1               	goto	l2694
  4448     0FC2                     u3010:
  4449     0FC2                     l2686:
  4450                           
  4451                           ;main.c: 590:                 _delay((unsigned long)((10)*(20000000/4000.0)));
  4452     0FC2  3041               	movlw	65
  4453     0FC3  1283               	bcf	3,5	;RP0=0, select bank0
  4454     0FC4  1303               	bcf	3,6	;RP1=0, select bank0
  4455     0FC5  00C9               	movwf	??_KeyPadReader+1
  4456     0FC6  30ED               	movlw	237
  4457     0FC7  00C8               	movwf	??_KeyPadReader
  4458     0FC8                     u3897:
  4459     0FC8  0BC8               	decfsz	??_KeyPadReader,f
  4460     0FC9  2FC8               	goto	u3897
  4461     0FCA  0BC9               	decfsz	??_KeyPadReader+1,f
  4462     0FCB  2FC8               	goto	u3897
  4463     0FCC  2FCD               	nop2
  4464     0FCD                     l2688:
  4465                           
  4466                           ;main.c: 591:                 if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  4467     0FCD  0876               	movf	_rowScan,w
  4468     0FCE  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  4469     0FCF  0084               	movwf	4
  4470     0FD0  120A  158A  200A  120A  158A  	fcall	stringdir
  4471     0FD5  1283               	bcf	3,5	;RP0=0, select bank0
  4472     0FD6  1303               	bcf	3,6	;RP1=0, select bank0
  4473     0FD7  0508               	andwf	8,w	;volatile
  4474     0FD8  1903               	btfsc	3,2
  4475     0FD9  2FDB               	goto	u3021
  4476     0FDA  2FDC               	goto	u3020
  4477     0FDB                     u3021:
  4478     0FDB  2FE1               	goto	l2694
  4479     0FDC                     u3020:
  4480     0FDC                     l2690:
  4481     0FDC  1878               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  4482     0FDD  2FDF               	goto	u3031
  4483     0FDE  2FE0               	goto	u3030
  4484     0FDF                     u3031:
  4485     0FDF  2FE1               	goto	l2694
  4486     0FE0                     u3030:
  4487     0FE0                     l2692:
  4488                           
  4489                           ;main.c: 592:                     old_btn = 1;
  4490     0FE0  1478               	bsf	_old_btn/(0+8),_old_btn& (0+7)
  4491     0FE1                     l2694:
  4492                           
  4493                           ;main.c: 595:             if (stato != old_stato) {
  4494     0FE1  0875               	movf	_stato,w
  4495     0FE2  0638               	xorwf	_old_stato,w
  4496     0FE3  1903               	skipnz
  4497     0FE4  2FE6               	goto	u3041
  4498     0FE5  2FE7               	goto	u3040
  4499     0FE6                     u3041:
  4500     0FE6  2FF5               	goto	l2702
  4501     0FE7                     u3040:
  4502     0FE7                     l2696:
  4503                           
  4504                           ;main.c: 596:                 keypressed = rowScan + (4 * colScan);
  4505     0FE7  0877               	movf	_colScan,w
  4506     0FE8  00C8               	movwf	??_KeyPadReader
  4507     0FE9  3002               	movlw	2
  4508     0FEA                     u3055:
  4509     0FEA  1003               	clrc
  4510     0FEB  0DC8               	rlf	??_KeyPadReader,f
  4511     0FEC  3EFF               	addlw	-1
  4512     0FED  1D03               	skipz
  4513     0FEE  2FEA               	goto	u3055
  4514     0FEF  0876               	movf	_rowScan,w
  4515     0FF0  0748               	addwf	??_KeyPadReader,w
  4516     0FF1  00BA               	movwf	_keypressed
  4517     0FF2                     l2698:
  4518                           
  4519                           ;main.c: 599:                 old_stato = stato;
  4520     0FF2  0875               	movf	_stato,w
  4521     0FF3  00B8               	movwf	_old_stato
  4522     0FF4  2FFF               	goto	l338
  4523     0FF5                     l2702:
  4524                           
  4525                           ;main.c: 602:         }
  4526     0FF5  3001               	movlw	1
  4527     0FF6  00C8               	movwf	??_KeyPadReader
  4528     0FF7  0848               	movf	??_KeyPadReader,w
  4529     0FF8  07F6               	addwf	_rowScan,f
  4530     0FF9  2F94               	goto	l2670
  4531     0FFA                     l2706:
  4532                           
  4533                           ;main.c: 603:     }
  4534     0FFA  3001               	movlw	1
  4535     0FFB  00C8               	movwf	??_KeyPadReader
  4536     0FFC  0848               	movf	??_KeyPadReader,w
  4537     0FFD  07F7               	addwf	_colScan,f
  4538     0FFE  2F7C               	goto	l2660
  4539     0FFF                     l338:
  4540     0FFF  0008               	return
  4541     1000                     __end_of_KeyPadReader:
  4542                           
  4543                           	psect	text17
  4544     0D7E                     __ptext17:	
  4545 ;; *************** function _GenerateRandomNumber *****************
  4546 ;; Defined at:
  4547 ;;		line 565 in file "main.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;		None
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;  count           2    1[BANK0 ] unsigned int 
  4552 ;;  randomNum       1    0[BANK0 ] unsigned char 
  4553 ;; Return value:  Size  Location     Type
  4554 ;;                  1    wreg      unsigned char 
  4555 ;; Registers used:
  4556 ;;		wreg, status,2, status,0
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4562 ;;      Params:         0       0       0       0       0
  4563 ;;      Locals:         0       3       0       0       0
  4564 ;;      Temps:          0       0       0       0       0
  4565 ;;      Totals:         0       3       0       0       0
  4566 ;;Total ram usage:        3 bytes
  4567 ;; Hardware stack levels used: 1
  4568 ;; Hardware stack levels required when called: 2
  4569 ;; This function calls:
  4570 ;;		Nothing
  4571 ;; This function is called by:
  4572 ;;		_main
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576     0D7E                     _GenerateRandomNumber:	
  4577                           ;psect for function _GenerateRandomNumber
  4578                           
  4579     0D7E                     l2644:	
  4580                           ;incstack = 0
  4581                           ; Regs used in _GenerateRandomNumber: [wreg+status,2+status,0]
  4582                           
  4583                           
  4584                           ;main.c: 566:     unsigned int count = 0;
  4585     0D7E  1283               	bcf	3,5	;RP0=0, select bank0
  4586     0D7F  1303               	bcf	3,6	;RP1=0, select bank0
  4587     0D80  01C9               	clrf	GenerateRandomNumber@count
  4588     0D81  01CA               	clrf	GenerateRandomNumber@count+1
  4589                           
  4590                           ;main.c: 567:     while (count != 186){
  4591     0D82  2D89               	goto	l2648
  4592     0D83                     l2646:
  4593                           
  4594                           ;main.c: 568:         count++;
  4595     0D83  3001               	movlw	1
  4596     0D84  07C9               	addwf	GenerateRandomNumber@count,f
  4597     0D85  1803               	skipnc
  4598     0D86  0ACA               	incf	GenerateRandomNumber@count+1,f
  4599     0D87  3000               	movlw	0
  4600     0D88  07CA               	addwf	GenerateRandomNumber@count+1,f
  4601     0D89                     l2648:
  4602                           
  4603                           ;main.c: 567:     while (count != 186){
  4604     0D89  30BA               	movlw	186
  4605     0D8A  0649               	xorwf	GenerateRandomNumber@count,w
  4606     0D8B  044A               	iorwf	GenerateRandomNumber@count+1,w
  4607     0D8C  1D03               	btfss	3,2
  4608     0D8D  2D8F               	goto	u2951
  4609     0D8E  2D90               	goto	u2950
  4610     0D8F                     u2951:
  4611     0D8F  2D83               	goto	l2646
  4612     0D90                     u2950:
  4613     0D90                     l2650:
  4614                           
  4615                           ;main.c: 570:     unsigned char randomNum = TMR0;
  4616     0D90  0801               	movf	1,w	;volatile
  4617     0D91  00C8               	movwf	GenerateRandomNumber@randomNum
  4618     0D92                     l2652:
  4619                           
  4620                           ;main.c: 571:     TMR0IF = 0;
  4621     0D92  110B               	bcf	11,2	;volatile
  4622                           
  4623                           ;main.c: 572:     return randomNum;
  4624     0D93  0848               	movf	GenerateRandomNumber@randomNum,w
  4625     0D94                     l326:
  4626     0D94  0008               	return
  4627     0D95                     __end_of_GenerateRandomNumber:
  4628                           
  4629                           	psect	text18
  4630     06BE                     __ptext18:	
  4631 ;; *************** function _ISR *****************
  4632 ;; Defined at:
  4633 ;;		line 458 in file "main.c"
  4634 ;; Parameters:    Size  Location     Type
  4635 ;;		None
  4636 ;; Auto vars:     Size  Location     Type
  4637 ;;		None
  4638 ;; Return value:  Size  Location     Type
  4639 ;;                  1    wreg      void 
  4640 ;; Registers used:
  4641 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4642 ;; Tracked objects:
  4643 ;;		On entry : 0/0
  4644 ;;		On exit  : 0/0
  4645 ;;		Unchanged: 0/0
  4646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4647 ;;      Params:         0       0       0       0       0
  4648 ;;      Locals:         0       0       0       0       0
  4649 ;;      Temps:          5       0       0       0       0
  4650 ;;      Totals:         5       0       0       0       0
  4651 ;;Total ram usage:        5 bytes
  4652 ;; Hardware stack levels used: 2
  4653 ;; This function calls:
  4654 ;;		Nothing
  4655 ;; This function is called by:
  4656 ;;		Interrupt level 1
  4657 ;; This function uses a non-reentrant model
  4658 ;;
  4659                           
  4660     06BE                     _ISR:	
  4661                           ;psect for function _ISR
  4662                           
  4663     06BE                     i1l2424:
  4664     06BE                     i1l263:	
  4665                           ;main.c: 461:     }
  4666                           
  4667                           
  4668                           ;main.c: 459:     while (!TMR0IF){
  4669     06BE  1D0B               	btfss	11,2	;volatile
  4670     06BF  2EC1               	goto	u250_21
  4671     06C0  2EC2               	goto	u250_20
  4672     06C1                     u250_21:
  4673     06C1  2EBE               	goto	i1l263
  4674     06C2                     u250_20:
  4675     06C2                     i1l265:
  4676                           
  4677                           ;main.c: 462:     TMR0IF = 0;
  4678     06C2  110B               	bcf	11,2	;volatile
  4679     06C3                     i1l266:	
  4680                           ;main.c: 465:     }
  4681                           
  4682                           
  4683                           ;main.c: 463:     while (!TMR0IF){
  4684     06C3  1D0B               	btfss	11,2	;volatile
  4685     06C4  2EC6               	goto	u251_21
  4686     06C5  2EC7               	goto	u251_20
  4687     06C6                     u251_21:
  4688     06C6  2EC3               	goto	i1l266
  4689     06C7                     u251_20:
  4690     06C7                     i1l268:
  4691                           
  4692                           ;main.c: 466:     TMR0IF = 0;
  4693     06C7  110B               	bcf	11,2	;volatile
  4694     06C8                     i1l269:	
  4695                           ;main.c: 469:     }
  4696                           
  4697                           
  4698                           ;main.c: 467:     while (!TMR0IF){
  4699     06C8  1D0B               	btfss	11,2	;volatile
  4700     06C9  2ECB               	goto	u252_21
  4701     06CA  2ECC               	goto	u252_20
  4702     06CB                     u252_21:
  4703     06CB  2EC8               	goto	i1l269
  4704     06CC                     u252_20:
  4705     06CC                     i1l271:
  4706                           
  4707                           ;main.c: 470:     TMR0IF = 0;
  4708     06CC  110B               	bcf	11,2	;volatile
  4709     06CD                     i1l272:	
  4710                           ;main.c: 473:     }
  4711                           
  4712                           
  4713                           ;main.c: 471:     while (!TMR0IF){
  4714     06CD  1D0B               	btfss	11,2	;volatile
  4715     06CE  2ED0               	goto	u253_21
  4716     06CF  2ED1               	goto	u253_20
  4717     06D0                     u253_21:
  4718     06D0  2ECD               	goto	i1l272
  4719     06D1                     u253_20:
  4720     06D1                     i1l274:
  4721                           
  4722                           ;main.c: 474:     TMR0IF = 0;
  4723     06D1  110B               	bcf	11,2	;volatile
  4724     06D2                     i1l275:	
  4725                           ;main.c: 477:     }
  4726                           
  4727                           
  4728                           ;main.c: 475:     while (!TMR0IF){
  4729     06D2  1D0B               	btfss	11,2	;volatile
  4730     06D3  2ED5               	goto	u254_21
  4731     06D4  2ED6               	goto	u254_20
  4732     06D5                     u254_21:
  4733     06D5  2ED2               	goto	i1l275
  4734     06D6                     u254_20:
  4735     06D6                     i1l277:
  4736                           
  4737                           ;main.c: 478:     TMR0IF = 0;
  4738     06D6  110B               	bcf	11,2	;volatile
  4739     06D7                     i1l278:	
  4740                           ;main.c: 481:     }
  4741                           
  4742                           
  4743                           ;main.c: 479:     while (!TMR0IF){
  4744     06D7  1D0B               	btfss	11,2	;volatile
  4745     06D8  2EDA               	goto	u255_21
  4746     06D9  2EDB               	goto	u255_20
  4747     06DA                     u255_21:
  4748     06DA  2ED7               	goto	i1l278
  4749     06DB                     u255_20:
  4750     06DB                     i1l280:
  4751                           
  4752                           ;main.c: 482:     TMR0IF = 0;
  4753     06DB  110B               	bcf	11,2	;volatile
  4754     06DC                     i1l281:	
  4755                           ;main.c: 485:     }
  4756                           
  4757                           
  4758                           ;main.c: 483:     while (!TMR0IF){
  4759     06DC  1D0B               	btfss	11,2	;volatile
  4760     06DD  2EDF               	goto	u256_21
  4761     06DE  2EE0               	goto	u256_20
  4762     06DF                     u256_21:
  4763     06DF  2EDC               	goto	i1l281
  4764     06E0                     u256_20:
  4765     06E0                     i1l283:
  4766                           
  4767                           ;main.c: 486:     TMR0IF = 0;
  4768     06E0  110B               	bcf	11,2	;volatile
  4769     06E1                     i1l284:	
  4770                           ;main.c: 489:     }
  4771                           
  4772                           
  4773                           ;main.c: 487:     while (!TMR0IF){
  4774     06E1  1D0B               	btfss	11,2	;volatile
  4775     06E2  2EE4               	goto	u257_21
  4776     06E3  2EE5               	goto	u257_20
  4777     06E4                     u257_21:
  4778     06E4  2EE1               	goto	i1l284
  4779     06E5                     u257_20:
  4780     06E5                     i1l286:
  4781                           
  4782                           ;main.c: 490:     TMR0IF = 0;
  4783     06E5  110B               	bcf	11,2	;volatile
  4784     06E6                     i1l287:	
  4785                           ;main.c: 493:     }
  4786                           
  4787                           
  4788                           ;main.c: 491:     while (!TMR0IF){
  4789     06E6  1D0B               	btfss	11,2	;volatile
  4790     06E7  2EE9               	goto	u258_21
  4791     06E8  2EEA               	goto	u258_20
  4792     06E9                     u258_21:
  4793     06E9  2EE6               	goto	i1l287
  4794     06EA                     u258_20:
  4795     06EA                     i1l289:
  4796                           
  4797                           ;main.c: 494:     TMR0IF = 0;
  4798     06EA  110B               	bcf	11,2	;volatile
  4799     06EB                     i1l290:	
  4800                           ;main.c: 497:     }
  4801                           
  4802                           
  4803                           ;main.c: 495:     while (!TMR0IF){
  4804     06EB  1D0B               	btfss	11,2	;volatile
  4805     06EC  2EEE               	goto	u259_21
  4806     06ED  2EEF               	goto	u259_20
  4807     06EE                     u259_21:
  4808     06EE  2EEB               	goto	i1l290
  4809     06EF                     u259_20:
  4810     06EF                     i1l292:
  4811                           
  4812                           ;main.c: 498:     TMR0IF = 0;
  4813     06EF  110B               	bcf	11,2	;volatile
  4814     06F0                     i1l293:	
  4815                           ;main.c: 501:     }
  4816                           
  4817                           
  4818                           ;main.c: 499:     while (!TMR0IF){
  4819     06F0  1D0B               	btfss	11,2	;volatile
  4820     06F1  2EF3               	goto	u260_21
  4821     06F2  2EF4               	goto	u260_20
  4822     06F3                     u260_21:
  4823     06F3  2EF0               	goto	i1l293
  4824     06F4                     u260_20:
  4825     06F4                     i1l295:
  4826                           
  4827                           ;main.c: 502:     TMR0IF = 0;
  4828     06F4  110B               	bcf	11,2	;volatile
  4829     06F5                     i1l296:	
  4830                           ;main.c: 505:     }
  4831                           
  4832                           
  4833                           ;main.c: 503:     while (!TMR0IF){
  4834     06F5  1D0B               	btfss	11,2	;volatile
  4835     06F6  2EF8               	goto	u261_21
  4836     06F7  2EF9               	goto	u261_20
  4837     06F8                     u261_21:
  4838     06F8  2EF5               	goto	i1l296
  4839     06F9                     u261_20:
  4840     06F9                     i1l298:
  4841                           
  4842                           ;main.c: 506:     TMR0IF = 0;
  4843     06F9  110B               	bcf	11,2	;volatile
  4844     06FA                     i1l299:	
  4845                           ;main.c: 509:     }
  4846                           
  4847                           
  4848                           ;main.c: 507:     while (!TMR0IF){
  4849     06FA  1D0B               	btfss	11,2	;volatile
  4850     06FB  2EFD               	goto	u262_21
  4851     06FC  2EFE               	goto	u262_20
  4852     06FD                     u262_21:
  4853     06FD  2EFA               	goto	i1l299
  4854     06FE                     u262_20:
  4855     06FE                     i1l301:
  4856                           
  4857                           ;main.c: 510:     TMR0IF = 0;
  4858     06FE  110B               	bcf	11,2	;volatile
  4859     06FF                     i1l302:	
  4860                           ;main.c: 513:     }
  4861                           
  4862                           
  4863                           ;main.c: 511:     while (!TMR0IF){
  4864     06FF  1D0B               	btfss	11,2	;volatile
  4865     0700  2F02               	goto	u263_21
  4866     0701  2F03               	goto	u263_20
  4867     0702                     u263_21:
  4868     0702  2EFF               	goto	i1l302
  4869     0703                     u263_20:
  4870     0703                     i1l304:
  4871                           
  4872                           ;main.c: 514:     TMR0IF = 0;
  4873     0703  110B               	bcf	11,2	;volatile
  4874     0704                     i1l305:	
  4875                           ;main.c: 517:     }
  4876                           
  4877                           
  4878                           ;main.c: 515:     while (!TMR0IF){
  4879     0704  1D0B               	btfss	11,2	;volatile
  4880     0705  2F07               	goto	u264_21
  4881     0706  2F08               	goto	u264_20
  4882     0707                     u264_21:
  4883     0707  2F04               	goto	i1l305
  4884     0708                     u264_20:
  4885     0708                     i1l307:
  4886                           
  4887                           ;main.c: 518:     TMR0IF = 0;
  4888     0708  110B               	bcf	11,2	;volatile
  4889     0709                     i1l2426:
  4890                           
  4891                           ;main.c: 519:     if(flag == 1){
  4892     0709  1283               	bcf	3,5	;RP0=0, select bank0
  4893     070A  1303               	bcf	3,6	;RP1=0, select bank0
  4894     070B  0330               	decf	_flag,w
  4895     070C  0431               	iorwf	_flag+1,w
  4896     070D  1D03               	btfss	3,2
  4897     070E  2F10               	goto	u265_21
  4898     070F  2F11               	goto	u265_20
  4899     0710                     u265_21:
  4900     0710  2F94               	goto	i1l317
  4901     0711                     u265_20:
  4902     0711                     i1l2428:
  4903                           
  4904                           ;main.c: 520:         TRISD |= 0x0F;
  4905     0711  300F               	movlw	15
  4906     0712  00F0               	movwf	??_ISR
  4907     0713  0870               	movf	??_ISR,w
  4908     0714  1683               	bsf	3,5	;RP0=1, select bank1
  4909     0715  1303               	bcf	3,6	;RP1=0, select bank1
  4910     0716  0488               	iorwf	8,f	;volatile
  4911     0717                     i1l2430:
  4912                           
  4913                           ;main.c: 522:         for (colScan = 0; colScan < 3; colScan++) {
  4914     0717  01F7               	clrf	_colScan
  4915     0718                     i1l2432:
  4916     0718  3003               	movlw	3
  4917     0719  0277               	subwf	_colScan,w
  4918     071A  1C03               	skipc
  4919     071B  2F1D               	goto	u266_21
  4920     071C  2F1E               	goto	u266_20
  4921     071D                     u266_21:
  4922     071D  2F1F               	goto	i1l2436
  4923     071E                     u266_20:
  4924     071E  2F91               	goto	i1l2476
  4925     071F                     i1l2436:
  4926                           
  4927                           ;main.c: 523:             PORTB = PORTB | 0x07;
  4928     071F  1283               	bcf	3,5	;RP0=0, select bank0
  4929     0720  0806               	movf	6,w	;volatile
  4930     0721  3807               	iorlw	7
  4931     0722  0086               	movwf	6	;volatile
  4932     0723                     i1l2438:
  4933                           
  4934                           ;main.c: 524:             PORTB &= colMask[colScan];
  4935     0723  0877               	movf	_colScan,w
  4936     0724  3E11               	addlw	low ((_colMask-__stringbase)| (0+32768))
  4937     0725  0084               	movwf	4
  4938     0726  120A  158A  200A  120A  118A  	fcall	stringdir
  4939     072B  00F0               	movwf	??_ISR
  4940     072C  0870               	movf	??_ISR,w
  4941     072D  0586               	andwf	6,f	;volatile
  4942     072E                     i1l2440:
  4943                           
  4944                           ;main.c: 527:             for (rowScan = 0; rowScan < 4; rowScan++) {
  4945     072E  01F6               	clrf	_rowScan
  4946     072F                     i1l2442:
  4947     072F  3004               	movlw	4
  4948     0730  0276               	subwf	_rowScan,w
  4949     0731  1C03               	skipc
  4950     0732  2F34               	goto	u267_21
  4951     0733  2F35               	goto	u267_20
  4952     0734                     u267_21:
  4953     0734  2F36               	goto	i1l2446
  4954     0735                     u267_20:
  4955     0735  2F8C               	goto	i1l2472
  4956     0736                     i1l2446:
  4957                           
  4958                           ;main.c: 528:                 if (!(PORTD & rowMask[rowScan]) && (old_btn)) {
  4959     0736  0876               	movf	_rowScan,w
  4960     0737  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  4961     0738  0084               	movwf	4
  4962     0739  120A  158A  200A  120A  118A  	fcall	stringdir
  4963     073E  0508               	andwf	8,w	;volatile
  4964     073F  1D03               	btfss	3,2
  4965     0740  2F42               	goto	u268_21
  4966     0741  2F43               	goto	u268_20
  4967     0742                     u268_21:
  4968     0742  2F4C               	goto	i1l2454
  4969     0743                     u268_20:
  4970     0743                     i1l2448:
  4971     0743  1C78               	btfss	_old_btn/(0+8),_old_btn& (0+7)
  4972     0744  2F46               	goto	u269_21
  4973     0745  2F47               	goto	u269_20
  4974     0746                     u269_21:
  4975     0746  2F4C               	goto	i1l2454
  4976     0747                     u269_20:
  4977     0747                     i1l2450:
  4978                           
  4979                           ;main.c: 529:                     old_btn = 0;
  4980     0747  1078               	bcf	_old_btn/(0+8),_old_btn& (0+7)
  4981     0748                     i1l2452:
  4982                           
  4983                           ;main.c: 530:                     stato++;
  4984     0748  3001               	movlw	1
  4985     0749  00F0               	movwf	??_ISR
  4986     074A  0870               	movf	??_ISR,w
  4987     074B  07F5               	addwf	_stato,f
  4988     074C                     i1l2454:
  4989                           
  4990                           ;main.c: 532:                 if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  4991     074C  0876               	movf	_rowScan,w
  4992     074D  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  4993     074E  0084               	movwf	4
  4994     074F  120A  158A  200A  120A  118A  	fcall	stringdir
  4995     0754  0508               	andwf	8,w	;volatile
  4996     0755  1903               	btfsc	3,2
  4997     0756  2F58               	goto	u270_21
  4998     0757  2F59               	goto	u270_20
  4999     0758                     u270_21:
  5000     0758  2F6F               	goto	i1l2464
  5001     0759                     u270_20:
  5002     0759                     i1l2456:
  5003     0759  1878               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  5004     075A  2F5C               	goto	u271_21
  5005     075B  2F5D               	goto	u271_20
  5006     075C                     u271_21:
  5007     075C  2F6F               	goto	i1l2464
  5008     075D                     u271_20:
  5009     075D                     i1l2458:
  5010                           
  5011                           ;main.c: 534:                     if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  5012     075D  0876               	movf	_rowScan,w
  5013     075E  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  5014     075F  0084               	movwf	4
  5015     0760  120A  158A  200A  120A  118A  	fcall	stringdir
  5016     0765  0508               	andwf	8,w	;volatile
  5017     0766  1903               	btfsc	3,2
  5018     0767  2F69               	goto	u272_21
  5019     0768  2F6A               	goto	u272_20
  5020     0769                     u272_21:
  5021     0769  2F6F               	goto	i1l2464
  5022     076A                     u272_20:
  5023     076A                     i1l2460:
  5024     076A  1878               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  5025     076B  2F6D               	goto	u273_21
  5026     076C  2F6E               	goto	u273_20
  5027     076D                     u273_21:
  5028     076D  2F6F               	goto	i1l2464
  5029     076E                     u273_20:
  5030     076E                     i1l2462:
  5031                           
  5032                           ;main.c: 535:                         old_btn = 1;
  5033     076E  1478               	bsf	_old_btn/(0+8),_old_btn& (0+7)
  5034     076F                     i1l2464:
  5035                           
  5036                           ;main.c: 538:                 if (stato != old_stato) {
  5037     076F  0875               	movf	_stato,w
  5038     0770  0638               	xorwf	_old_stato,w
  5039     0771  1903               	skipnz
  5040     0772  2F74               	goto	u274_21
  5041     0773  2F75               	goto	u274_20
  5042     0774                     u274_21:
  5043     0774  2F82               	goto	i1l2470
  5044     0775                     u274_20:
  5045     0775                     i1l2466:
  5046                           
  5047                           ;main.c: 539:                     keypressed = rowScan + (4 * colScan);
  5048     0775  0877               	movf	_colScan,w
  5049     0776  00F0               	movwf	??_ISR
  5050     0777  3002               	movlw	2
  5051     0778                     u275_25:
  5052     0778  1003               	clrc
  5053     0779  0DF0               	rlf	??_ISR,f
  5054     077A  3EFF               	addlw	-1
  5055     077B  1D03               	skipz
  5056     077C  2F78               	goto	u275_25
  5057     077D  0876               	movf	_rowScan,w
  5058     077E  0770               	addwf	??_ISR,w
  5059     077F  00BA               	movwf	_keypressed
  5060     0780                     i1l2468:
  5061                           
  5062                           ;main.c: 542:                     old_stato = stato;
  5063     0780  0875               	movf	_stato,w
  5064     0781  00B8               	movwf	_old_stato
  5065     0782                     i1l2470:
  5066                           
  5067                           ;main.c: 544:             }
  5068     0782  3001               	movlw	1
  5069     0783  00F0               	movwf	??_ISR
  5070     0784  0870               	movf	??_ISR,w
  5071     0785  07F6               	addwf	_rowScan,f
  5072     0786  3004               	movlw	4
  5073     0787  0276               	subwf	_rowScan,w
  5074     0788  1C03               	skipc
  5075     0789  2F8B               	goto	u276_21
  5076     078A  2F8C               	goto	u276_20
  5077     078B                     u276_21:
  5078     078B  2F36               	goto	i1l2446
  5079     078C                     u276_20:
  5080     078C                     i1l2472:
  5081                           
  5082                           ;main.c: 545:         }
  5083     078C  3001               	movlw	1
  5084     078D  00F0               	movwf	??_ISR
  5085     078E  0870               	movf	??_ISR,w
  5086     078F  07F7               	addwf	_colScan,f
  5087     0790  2F18               	goto	i1l2432
  5088     0791                     i1l2476:
  5089                           
  5090                           ;main.c: 546:         TRISD |= 0x00;
  5091     0791  1683               	bsf	3,5	;RP0=1, select bank1
  5092     0792  1303               	bcf	3,6	;RP1=0, select bank1
  5093     0793  0808               	movf	8,w	;volatile
  5094     0794                     i1l317:
  5095     0794  0874               	movf	??_ISR+4,w
  5096     0795  00FF               	movwf	btemp+1
  5097     0796  0873               	movf	??_ISR+3,w
  5098     0797  008A               	movwf	10
  5099     0798  0872               	movf	??_ISR+2,w
  5100     0799  0084               	movwf	4
  5101     079A  0E71               	swapf	??_ISR+1,w
  5102     079B  0083               	movwf	3
  5103     079C  0EFE               	swapf	btemp,f
  5104     079D  0E7E               	swapf	btemp,w
  5105     079E  0009               	retfie
  5106     079F                     __end_of_ISR:
  5107     007E                     btemp	set	126	;btemp
  5108     007E                     wtemp0	set	126
  5109                           
  5110                           	psect	intentry
  5111     0004                     __pintentry:	
  5112                           ;incstack = 0
  5113                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath]
  5114                           
  5115     0004                     interrupt_function:
  5116     007E                     saved_w	set	btemp
  5117     0004  00FE               	movwf	btemp
  5118     0005  0E03               	swapf	3,w
  5119     0006  00F1               	movwf	??_ISR+1
  5120     0007  0804               	movf	4,w
  5121     0008  00F2               	movwf	??_ISR+2
  5122     0009  080A               	movf	10,w
  5123     000A  00F3               	movwf	??_ISR+3
  5124     000B  087F               	movf	btemp+1,w
  5125     000C  00F4               	movwf	??_ISR+4
  5126     000D  120A  118A  2EBE   	ljmp	_ISR
  5127                           
  5128                           	psect	idloc
  5129                           
  5130                           ;Config register IDLOC0 @ 0x2000
  5131                           ;	unspecified, using default values
  5132     2000                     	org	8192
  5133     2000  3FFF               	dw	16383
  5134                           
  5135                           ;Config register IDLOC1 @ 0x2001
  5136                           ;	unspecified, using default values
  5137     2001                     	org	8193
  5138     2001  3FFF               	dw	16383
  5139                           
  5140                           ;Config register IDLOC2 @ 0x2002
  5141                           ;	unspecified, using default values
  5142     2002                     	org	8194
  5143     2002  3FFF               	dw	16383
  5144                           
  5145                           ;Config register IDLOC3 @ 0x2003
  5146                           ;	unspecified, using default values
  5147     2003                     	org	8195
  5148     2003  3FFF               	dw	16383
  5149                           
  5150                           	psect	config
  5151                           
  5152                           ;Config register CONFIG @ 0x2007
  5153                           ;	Oscillator Selection bits
  5154                           ;	FOSC = HS, HS oscillator
  5155                           ;	Watchdog Timer Enable bit
  5156                           ;	WDTE = OFF, WDT disabled
  5157                           ;	Power-up Timer Enable bit
  5158                           ;	PWRTE = OFF, PWRT disabled
  5159                           ;	Brown-out Reset Enable bit
  5160                           ;	BOREN = OFF, BOR disabled
  5161                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5162                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  5163                           ;	Data EEPROM Memory Code Protection bit
  5164                           ;	CPD = OFF, Data EEPROM code protection off
  5165                           ;	Flash Program Memory Write Enable bits
  5166                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  5167                           ;	In-Circuit Debugger Mode bit
  5168                           ;	DEBUG = 0x1, unprogrammed default
  5169                           ;	Flash Program Memory Code Protection bit
  5170                           ;	CP = OFF, Code protection off
  5171     2007                     	org	8199
  5172     2007  3F3A               	dw	16186

Data Sizes:
    Strings     116
    Constant    19
    Data        2
    BSS         59
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     32      73
    BANK1            80      0      16
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    intToString@str	PTR unsigned char  size(1) Largest target is 3
		 -> print_countdown(BANK0[3]), 

    lcdPrint@str	PTR unsigned char  size(2) Largest target is 15
		 -> STR_11(CODE[15]), STR_10(CODE[8]), STR_9(CODE[14]), STR_8(CODE[11]), 
		 -> print_countdown(BANK0[3]), STR_7(CODE[10]), STR_6(CODE[14]), STR_5(CODE[13]), 
		 -> STR_4(CODE[12]), STR_3(CODE[11]), STR_2(CODE[10]), STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_UART_Read1
    _initLCD->_lcdSend
    _UART_Read2->_intToString
    _UART_Read1->_intToString
    _lcdPrint->_lcdSend
    _intToString->___awdiv
    _potenza->___bmul
    ___awdiv->_potenza

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   40257
               _GenerateRandomNumber
                       _KeyPadReader
                     _RS485_RxEnable
                     _RS485_TxEnable
                        _Timer0_Init
                          _UART_Init
                         _UART_Read1
                         _UART_Read2
                         _UART_Write
                            _initLCD
                           _lcdPrint
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0    4112
                                              2 BANK0      2     2      0
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _UART_Read2                                           4     4      0   12951
                                             28 BANK0      3     3      0
                        _intToString
                           _lcdPrint
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _UART_Read1                                           4     4      0   13298
                                             28 BANK0      4     4      0
                     _RS485_RxEnable
                     _RS485_TxEnable
                         _UART_Write
                        _intToString
                           _lcdPrint
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _lcdPrint                                             7     5      2    5682
                                              2 BANK0      7     5      2
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _lcdSend                                              2     1      1    4112
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _intToString                                          9     6      3    3145
                                             19 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                            _potenza
 ---------------------------------------------------------------------------------
 (3) _potenza                                              6     5      1     573
                                              4 BANK0      6     5      1
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     226
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     613
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     604
                                             10 BANK0      9     5      4
                            _potenza (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RS485_TxEnable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RS485_RxEnable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _KeyPadReader                                         2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _GenerateRandomNumber                                 3     3      0      71
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GenerateRandomNumber
   _KeyPadReader
   _RS485_RxEnable
   _RS485_TxEnable
   _Timer0_Init
   _UART_Init
   _UART_Read1
     _RS485_RxEnable
     _RS485_TxEnable
     _UART_Write
     _intToString
       ___awdiv
         _potenza (ARG)
           ___bmul
       ___awmod
       _potenza
     _lcdPrint
       _lcdSend
     _lcdSend
   _UART_Read2
     _intToString
     _lcdPrint
     _lcdSend
   _UART_Write
   _initLCD
     _lcdSend
   _lcdPrint
   _lcdSend

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      10       7       20.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     20      49       5       91.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       1       0        7.1%
CODE                 0      0       0       0        0.0%
DATA                 0      0      63      12        0.0%
ABS                  0      0      63       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Jun 30 12:01:12 2023

                            pc 0002                 ___bmul@product 004A                   ___awdiv@sign 0058  
                           fsr 0004                            l200 0D68                            l203 07FE  
                          l212 0D47                            l221 0694                            l206 0D35  
                          l223 05D9                            l320 0D56                            l216 053B  
                          l209 0D41                            l252 0D7D                            l228 0688  
                          l245 0539                            l229 06BD                            l326 0D94  
                          l345 0DD7                            l249 0EF6                            l338 0FFF  
                          l354 0F72                            l258 0E1F                            l606 07F9  
                          l466 0DAB                            l593 0E88                            _GIE 005F  
                          _RC0 0038                            _RC1 0039                            _PS0 0408  
                          _PS1 0409                            _PS2 040A                            _ISR 06BE  
                          _PSA 040B                            _id1 0068                            fsr0 0004  
                          indf 0000                   ___awmod@sign 004E                           ?_ISR 0070  
                         l3000 00DB                           l3010 0103                           l3002 00E0  
                         l3100 0232                           l3020 0121                           l3012 0109  
                         l3004 00E7                           l3110 0257                           l3102 0238  
                         l3030 0140                           l3022 0127                           l3014 010F  
                         l3006 00F3                           l3120 0279                           l3112 025F  
                         l3104 023E                           l3040 0168                           l3032 014C  
                         l3024 012D                           l3016 0115                           l3008 00FB  
                         l3130 0297                           l3122 027F                           l3114 0267  
                         l3106 0244                           l3050 0186                           l3042 016E  
                         l3034 0154                           l3026 0133                           l3018 011B  
                         l2500 0D74                           l3140 031E                           l3124 0285  
                         l3116 026D                           l3132 029D                           l3108 024B  
                         l3060 01AD                           l3052 018C                           l3044 0174  
                         l3036 015C                           l3028 0139                           l2510 0DB1  
                         l2502 0D76                           l3142 0324                           l3134 02A3  
                         l3126 028B                           l3118 0273                           l3070 01CD  
                         l3062 01B5                           l3046 017A                           l3038 0162  
                         l3054 0192                           l2600 0D5C                           l2512 0DB4  
                         l2504 0D7B                           l3144 0329                           l3136 0316  
                         l3128 0291                           l3072 01D3                           l3064 01BB  
                         l3080 01EB                           l3056 0199                           l3048 0180  
                         l2602 0D5E                           l2530 07AD                           l2522 079F  
                         l2514 0DC1                           l2506 0D7C                           l2610 0E89  
                         l3138 0319                           l3090 0214                           l3082 01F2  
                         l3074 01D9                           l3066 01C1                           l3058 01A5  
                         l2604 0D5F                           l2540 07C6                           l2532 07B1  
                         l2524 07A2                           l2516 0DC7                           l2508 0DAF  
                         l2620 0EB5                           l2612 0E8D                           l3092 021A  
                         l3084 01FE                           l3076 01DF                           l3068 01C7  
                         l2702 0FF5                           l2606 0D62                           l2550 07E5  
                         l2542 07CA                           l2534 07B6                           l2526 07A6  
                         l2518 0DD4                           l2710 0332                           l2630 0EE4  
                         l2622 0EC0                           l2614 0E97                           l3094 0220  
                         l3086 0206                           l3078 01E5                           l2640 0D54  
                         l2608 0D65                           l1760 0E27                           l2544 07CE  
                         l2536 07BC                           l2552 07EB                           l2528 07AB  
                         l2480 0D99                           l2560 0DD8                           l2800 0480  
                         l2720 034A                           l2712 0335                           l2632 0EED  
                         l2624 0EC9                           l2616 0E9A                           l3096 0226  
                         l3088 020E                           l2650 0D90                           l2706 0FFA  
                         l2642 0D55                           l2634 0D48                           l2570 0D41  
                         l1770 0E3B                           l1762 0E2C                           l2554 07F0  
                         l2546 07D8                           l2538 07BF                           l2482 0D9D  
                         l2562 0DDD                           l2810 04A6                           l2802 0486  
                         l2722 0351                           l2730 0372                           l2714 0338  
                         l2626 0ED2                           l2618 0EA1                           l3098 022C  
                         l2652 0D92                           l2644 0D7E                           l2660 0F7C  
                         l2636 0D4F                           l2572 0D45                           l1780 0E51  
                         l1772 0E3D                           l1764 0E2E                           l1756 0E20  
                         l2556 07F5                           l2548 07DE                           l2484 0DA1  
                         l2580 0EFC                           l2492 0D6C                           l2564 0DFB  
                         l2820 04CE                           l2812 04AE                           l2804 048E  
                         l2740 03A0                           l2732 0377                           l2724 0362  
                         l2716 0340                           l2900 0621                           l2628 0EDB  
                         l2646 0D83                           l2670 0F94                           l2638 0D53  
                         l2574 0D31                           l1790 0E74                           l1782 0E55  
                         l1774 0E43                           l1766 0E32                           l1758 0E23  
                         l2486 0DA3                           l2478 0D98                           l2590 0F4B  
                         l2582 0F00                           l2494 0D6F                           l2566 0E03  
                         l2830 04F8                           l2822 04D6                           l2814 04B6  
                         l2806 0496                           l2750 03B8                           l2742 03A1  
                         l2734 037C                           l2726 036D                           l2718 0345  
                         l2910 064D                           l2902 062A                           l2648 0D89  
                         l2680 0FAD                           l2664 0F83                           l2656 0F73  
                         l2568 07FA                           l1784 0E66                           l1776 0E46  
                         l1792 0E7A                           l1768 0E37                           l2488 0DAA  
                         l2592 0F61                           l2584 0F21                           l2576 0EF7  
                         l2496 0D70                           l2840 0511                           l2832 04FA  
                         l2824 04DC                           l2816 04BE                           l2808 049E  
                         l2760 03DE                           l2752 03C9                           l2736 0384  
                         l2744 03A5                           l2728 036E                           l2920 0676  
                         l2912 065E                           l2904 0635                           l2690 0FDC  
                         l2682 0FB1                           l2674 0F9B                           l2666 0F88  
                         l2658 0F7B                           l1794 0E7F                           l1786 0E6C  
                         l1778 0E4D                           l2586 0F23                           l2594 0F65  
                         l2578 0EFB                           l2498 0D71                           l2842 051A  
                         l2834 0508                           l2826 04EA                           l2818 04C6  
                         l2770 0409                           l2762 03E4                           l2754 03D4  
                         l2746 03AA                           l2738 0395                           l2922 0684  
                         l2914 0661                           l2906 0637                           l2930 068F  
                         l2692 0FE0                           l2684 0FBE                           l2676 0FA8  
                         l2668 0F93                           l1796 0E84                           l1788 0E6D  
                         l2596 0F6B                           l2588 0F30                           l2844 0525  
                         l2828 04F5                           l2780 0431                           l2764 03EC  
                         l2772 040D                           l2756 03D5                           l2748 03B0  
                         l2940 06AC                           l2932 0697                           l2916 0662  
                         l2908 0646                           l2860 0553                           l2686 0FC2  
                         l2694 0FE1                           l2678 0FAC                           l2598 0D57  
                         l2846 0528                           l2790 0458                           l2782 043C  
                         l2774 0412                           l2766 03FD                           l2758 03D9  
                         l2838 050C                           l2942 06B7                           l2926 0689  
                         l2918 066B                           l2870 0589                           l2862 0563  
                         l2934 0698                           l2854 053A                           l2696 0FE7  
                         l2688 0FCD                           l2848 052A                           l2792 0463  
                         l2784 043D                           l2776 0418                           l2768 0408  
                         l2944 06BA                           l2928 068A                           l2880 05BC  
                         l2872 0597                           l2864 056C                           l2856 0541  
                         l2936 069E                           l2960 004E                           l2952 0038  
                         l2698 0FF2                           l2794 0465                           l2778 0420  
                         l2786 0441                           l2938 06A3                           l2890 05ED  
                         l2882 05C3                           l2874 05A0                           l2866 0577  
                         l2858 0548                           l2970 0073                           l2962 0057  
                         l2954 003F                           l2788 044F                           l2796 0475  
                         l2892 05F6                           l2884 05D4                           l2876 05AB  
                         l2868 0579                           l2980 0091                           l2972 0079  
                         l2964 0062                           l2956 0044                           l2798 047A  
                         l2894 0601                           l2886 05D7                           l2878 05AD  
                         l2990 00B5                           l2982 0097                           l2974 007F  
                         l2966 0067                           l2958 0049                           l2896 0603  
                         l2888 05DF                           l2992 00BD                           l2984 009D  
                         l2976 0085                           l2968 006D                           l2898 0613  
                         l2994 00C6                           l2986 00A5                           l2978 008B  
                         l2996 00CB                           l2988 00AD                           STR_1 0887  
                         STR_2 087D                           STR_3 0867                           STR_4 085B  
                         STR_5 084E                           STR_6 0832                           STR_7 087D  
                         STR_8 0872                           STR_9 0840                           _BRGH 04C2  
                         _CREN 00C4                           _T0CS 040D                           u3000 0FBE  
                         u3001 0FBD                           u3010 0FC2                           u3011 0FC1  
                         u3020 0FDC                           u1500 0E7A                           u1420 0E27  
                         u3100 037C                           u3021 0FDB                           u1501 0E79  
                         u1421 0E26                           u3101 037B                           u3030 0FE0  
                         u1510 0E7F                           u1430 0E32                           u3110 03AA  
                         u3031 0FDF                           u1511 0E7E                           u1431 0E31  
                         u3111 03A9                           u3040 0FE7                           u1440 0E43  
                         u3120 03B0                           u3200 05DF                           u3041 0FE6  
                         u1441 0E42                           u3121 03AF                           u3201 05DE  
                         u3130 03DE                           u3210 064D                           u3131 03DD  
                         u3211 064C                           u1460 0E55                           u3140 03E4  
                         u3060 0340                           u3220 068F                           u3300 010F  
                         u1461 0E54                           u3141 03E3                           u3061 033F  
                         u3221 068E                           u3301 010E                           u3150 0412  
                         u3070 0345                           u3230 0694                           u3310 0115  
                         u3055 0FEA                           u1455 0E47                           u3151 0411  
                         u3071 0344                           u3231 0693                           u3311 0114  
                         u1480 0E66                           u3160 0418                           u3080 034A  
                         u3240 069D                           u3400 0168                           u3320 011B  
                         u1481 0E65                           u3161 0417                           u3081 0349  
                         u3241 069C                           u3401 0167                           u3321 011A  
                         u3170 0511                           u3090 0377                           u3250 06A3  
                         u3410 016E                           u3330 0121                           u1475 0E56  
                         u3171 0510                           u3091 0376                           u3251 06A2  
                         u3411 016D                           u3331 0120                           u3180 0541  
                         u3500 01C1                           u3420 0174                           u3340 0127  
                         u3260 00DA                           u1485 0E62                           u3181 0540  
                         u3501 01C0                           u3421 0173                           u3341 0126  
                         u3261 00D9                           u3190 05C3                           u3510 01C7  
                         u3430 017A                           u3350 012D                           u3270 00E0  
                         u1495 0E6E                           u3191 05C2                           u3511 01C6  
                         u3431 0179                           u3351 012C                           u3271 00DF  
                         u2800 07A6                           u3600 021A                           u3520 01CD  
                         u3440 0180                           u3360 0133                           u3280 0103  
                         u2801 07A5                           u3601 0219                           u3521 01CC  
                         u3441 017F                           u3361 0132                           u3281 0102  
                         u2810 07B1                           u3610 0220                           u3530 01D3  
                         u3450 0186                           u3370 0139                           u3290 0109  
                         u2811 07B0                           u3611 021F                           u3531 01D2  
                         u3451 0185                           u3371 0138                           u3291 0108  
                         u2820 07BC                           u2900 0E0D                           u3700 0273  
                         u3620 0226                           u3540 01D9                           u3460 018C  
                         u3380 015C                           u2821 07BB                           u3701 0272  
                         u3621 0225                           u3541 01D8                           u3461 018B  
                         u3381 015B                           u2910 0E1F                           u3710 0279  
                         u3630 022C                           u3550 01DF                           u3470 0192  
                         u3390 0162                           u2911 0E1E                           u3711 0278  
                         u3631 022B                           u3551 01DE                           u3471 0191  
                         u3391 0161                           u2920 0D45                           u2840 07CE  
                         u3720 027F                           u3640 0232                           u3560 01E5  
                         u3480 01B5                           u2921 0D44                           u2841 07CD  
                         u3721 027E                           u3641 0231                           u3561 01E4  
                         u3481 01B4                           u2850 07D8                           u2770 0D9D  
                         u2930 0F21                           u3730 0285                           u3650 0238  
                         u3570 01EB                           u3490 01BB                           u2851 07D7  
                         u2835 07C0                           u2771 0D9C                           u2931 0F20  
                         u3731 0284                           u3651 0237                           u3571 01EA  
                         u3491 01BA                           u2780 0DAA                           u2940 0F6B  
                         u3740 028B                           u3660 023E                           u3580 020E  
                         u2781 0DA9                           u2941 0F6A                           u3741 028A  
                         u3661 023D                           u3581 020D                           u2950 0D90  
                         u2870 07EB                           u2790 0DD4                           u3750 0291  
                         u3670 0244                           u3590 0214                           u2951 0D8F  
                         u2871 07EA                           u2855 07D4                           u2791 0DD3  
                         u3807 0EBB                           u3751 0290                           u3671 0243  
                         u3591 0213                           u2960 0F82                           u2880 07F0  
                         u3760 0297                           u3680 0267                           u2961 0F81  
                         u2881 07EF                           u2865 07DF                           u3817 0581  
                         u3761 0296                           u3681 0266                           u2970 0F9A  
                         u2890 0DE9                           u3770 029D                           u3690 026D  
                         u2971 0F99                           u2795 0DD0                           u3827 05B5  
                         u3771 029C                           u3691 026C                           u2980 0FA8  
                         _RCIF 0065                           u2981 0FA7                           u3837 060B  
                         u2990 0FAC                           u2991 0FAB                           u3847 063F  
                         u3857 067E                           u3867 046D                           u3787 0E93  
                         u3877 0502                           u3797 0EA7                           u3887 0532  
                         u3897 0FC8                 ??_KeyPadReader 0048                           _TMR0 0001  
                         _SPEN 00C7                           _TXEN 04C5                           _TXIF 0064  
                         _SYNC 04C4                           _data 0020                           _flag 0030  
                         _main 0038                           _num1 0044                           _num2 0043  
                         _num3 0042                           _keys 0810                           _num4 0041  
                         _num5 0040                           btemp 007E                           _type 0034  
                         start 0010              ___bmul@multiplier 004B                          ??_ISR 0070  
                 ?_intToString 005B                          ?_main 0070                __end_of___awdiv 0E89  
                        STR_10 088F                          STR_11 0823                __end_of___awmod 07FA  
              ___awdiv@divisor 0052                          i1l301 06FE                          i1l302 06FF  
                        i1l304 0703                          i1l305 0704                          i1l307 0708  
                        i1l317 0794                          i1l271 06CC                          i1l263 06BE  
                        i1l280 06DB                          i1l272 06CD                          i1l281 06DC  
                        i1l265 06C2                          i1l290 06EB                          i1l274 06D1  
                        i1l266 06C3                          i1l283 06E0                          i1l275 06D2  
                        i1l292 06EF                          i1l284 06E1                          i1l268 06C7  
                        i1l293 06F0                          i1l277 06D6                          i1l269 06C8  
                        i1l286 06E5                          i1l278 06D7                          i1l295 06F4  
                        i1l287 06E6                          i1l296 06F5                          i1l289 06EA  
                        i1l298 06F9                          i1l299 06FA                ___awdiv@counter 0057  
                        _RCREG 001A                          _SPBRG 0099                          _PORTB 0006  
                        _PORTD 0008                          _TRISA 0085                          _TRISB 0086  
                        _TRISC 0087                          _TRISD 0088                          _TRISE 0089  
                        _TXREG 0019                    ?_UART_Read1 0070                    ?_UART_Read2 0070  
              __end_of_colMask 0823                __end_of_lcdSend 0D7E                    ?_UART_Write 0070  
              __end_of_initLCD 0EF7                          _count 002C                          _num21 003F  
                        _index 002E                          _num22 003E                          _num23 003D  
                        _num24 003C                          _num25 003B                          _keyok 0039  
                        _stato 0075                 __pbitbssCOMMON 03C0                          pclath 000A  
              __end_of_rowMask 0820                __end_of_potenza 0DD8                          status 0003  
                        wtemp0 007E   __end_of_GenerateRandomNumber 0D95                __initialization 0013  
                 __end_of_main 0332                   __end_of_keys 081C                         ??_main 0068  
             ___awdiv@dividend 0054                         i1l2430 0717                         i1l2440 072E  
                       i1l2432 0718                         i1l2424 06BE                         i1l2450 0747  
                       i1l2442 072F                         i1l2426 0709                         i1l2460 076A  
                       i1l2452 0748                         i1l2436 071F                         i1l2428 0711  
                       i1l2470 0782                         i1l2462 076E                         i1l2454 074C  
                       i1l2446 0736                         i1l2438 0723                         i1l2456 0759  
                       i1l2464 076F                         i1l2448 0743                         i1l2472 078C  
                       i1l2466 0775                         i1l2458 075D                         i1l2468 0780  
                       i1l2476 0791                         u250_20 06C2                         u250_21 06C1  
                       u251_20 06C7                         u251_21 06C6                         u260_20 06F4  
                       u252_20 06CC                         u260_21 06F3                         u252_21 06CB  
                       u261_20 06F9                         u253_20 06D1                         u261_21 06F8  
                       u253_21 06D0                         u270_20 0759                         u262_20 06FE  
                       u254_20 06D6                         u270_21 0758                         u262_21 06FD  
                       u254_21 06D5                         u271_20 075D                         u263_20 0703  
                       u255_20 06DB                         u271_21 075C                         u263_21 0702  
                       u255_21 06DA                         u272_20 076A                         u264_20 0708  
                       u256_20 06E0                         u272_21 0769                         u264_21 0707  
                       u256_21 06DF                         u273_20 076E                         u265_20 0711  
                       u257_20 06E5                         u273_21 076D                         u265_21 0710  
                       u257_21 06E4                         u274_20 0775                         u266_20 071E  
                       u258_20 06EA                         u274_21 0774                         u266_21 071D  
                       u258_21 06E9                         u267_20 0735                         u259_20 06EF  
                       u267_21 0734                         u259_21 06EE                         u275_25 0778  
                       u276_20 078C                         u268_20 0743                         u276_21 078B  
                       u268_21 0742                         u269_20 0747                         u269_21 0746  
                       _TMR0IE 005D                         _TMR0IF 005A                         _TRISC6 043E  
                       _TRISC7 043F                  ??_Timer0_Init 0048               __end_of_lcdPrint 0E20  
            __end_of_UART_Init 0D69                         ___bmul 0D95                      ??___awdiv 0056  
                    ??___awmod 004C                         _codice 0026               ___awdiv@quotient 0059  
              ___awmod@divisor 0048           __end_of_KeyPadReader 1000                ___awmod@counter 004D  
                    ??_lcdSend 0049                      ??_initLCD 004A                   __pdataCOMMON 0079  
                       saved_w 007E                      ??_potenza 004D        __end_of__initialization 0034  
             intToString@cifre 0062            ___bmul@multiplicand 0048                 __pcstackCOMMON 0070  
                 __pidataBANK0 0003            __end_of_Timer0_Init 0D57           _GenerateRandomNumber 0D7E  
                   __pbssBANK0 0020                     __pbssBANK1 00A0                     __pmaintext 0038  
                      ?___bmul 0048                     __pintentry 0004                   ??_UART_Read1 0064  
                 ??_UART_Read2 0064          ?_GenerateRandomNumber 0070                   ??_UART_Write 0048  
                    ?_lcdPrint 004A                     __stringtab 0800                   intToString@i 0063  
                 intToString@n 005B                   intToString@t 0061                    _Timer0_Init 0D48  
           __end_of_UART_Read1 053A             __end_of_UART_Read2 06BE                 _RS485_RxEnable 0D31  
                      ___awdiv 0E20                        ___awmod 079F             __end_of_UART_Write 0D48  
               _RS485_TxEnable 07FA                        _colMask 0820                        _colScan 0077  
                      _lcdSend 0D69                        __ptext1 0E89                        __ptext2 053A  
                      __ptext3 0332                        __ptext4 0DD8                        __ptext5 0D69  
                      __ptext6 0EF7                        __ptext7 0DAC                        __ptext8 0D95  
                      __ptext9 079F                        _initLCD 0E89                        _old_btn 03C0  
             ___awmod@dividend 004A                     _keypressed 003A                        _restart 0037  
                      _rowMask 081C                        _rowScan 0076                        _potenza 0DAC  
                   ??_lcdPrint 004C                        clrloop0 0D37                        _stringa 00A0  
         end_of_initialization 0034                   _KeyPadReader 0F73         __end_of_RS485_RxEnable 0D36  
       __end_of_RS485_TxEnable 07FF                      _UART_Init 0D57                      _PORTEbits 0009  
               UART_Write@data 0048         ??_GenerateRandomNumber 0048                      _TRISEbits 0089  
              ?_RS485_RxEnable 0070                ?_RS485_TxEnable 0070                 __end_of___bmul 0DAC  
                   ?_UART_Init 0070                  __pidataCOMMON 07FF            start_initialization 0013  
GenerateRandomNumber@randomNum 0048                    __end_of_ISR 079F                 _stringPosition 0032  
               intToString@str 005D                       ??___bmul 0049                    __pdataBANK0 0068  
                ??_intToString 005E                    __pbssCOMMON 0075                      ___latbits 0002  
                __pcstackBANK0 0048                UART_Read1@count 0067                   ?_Timer0_Init 0070  
                     ?___awdiv 0052                       ?___awmod 0048                    ??_UART_Init 0048  
                    __pstrings 0800                       ?_lcdSend 0048                       ?_initLCD 0070  
          __end_of_intToString 0F73                      _countdown 0079                       ?_potenza 004C  
                    _randomNum 0035                      _old_stato 0038              interrupt_function 0004  
                    clear_ram0 0D36                _print_countdown 0045                      lcdPrint@n 004F  
                  __stringbase 080F               ??_RS485_RxEnable 0048               ??_RS485_TxEnable 0048  
                  _intToString 0EF7             __end_of__stringtab 0810                       __ptext10 0E20  
                     __ptext11 0D3E                       __ptext12 07FA                       __ptext13 0D31  
                     __ptext14 0D57                       __ptext15 0D48                       __ptext16 0F73  
                     __ptext17 0D7E                       __ptext18 06BE                       _lcdPrint 0DD8  
                     _received 0036                       intlevel1 0000                      stringcode 080A  
                     potenza@b 004E                       potenza@e 004C                       potenza@i 004F  
                     potenza@n 0051                    lcdSend@dato 0049                    lcdSend@tipo 0048  
                   _UART_Read1 0332                     _UART_Read2 053A                       stringdir 080A  
                     stringtab 0800                     _UART_Write 0D3E      GenerateRandomNumber@count 0049  
                  lcdPrint@str 004A                  ?_KeyPadReader 0070  
