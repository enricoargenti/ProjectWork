

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Jun 19 17:29:45 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37     0000                     
    38                           ; Generated 22/03/2023 GMT
    39                           ; 
    40                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F877A Definitions
    70                           ; 
    71                           ; SFR Addresses
    72     0000                     	;# 
    73     0001                     	;# 
    74     0002                     	;# 
    75     0003                     	;# 
    76     0004                     	;# 
    77     0005                     	;# 
    78     0006                     	;# 
    79     0007                     	;# 
    80     0008                     	;# 
    81     0009                     	;# 
    82     000A                     	;# 
    83     000B                     	;# 
    84     000C                     	;# 
    85     000D                     	;# 
    86     000E                     	;# 
    87     000E                     	;# 
    88     000F                     	;# 
    89     0010                     	;# 
    90     0011                     	;# 
    91     0012                     	;# 
    92     0013                     	;# 
    93     0014                     	;# 
    94     0015                     	;# 
    95     0015                     	;# 
    96     0016                     	;# 
    97     0017                     	;# 
    98     0018                     	;# 
    99     0019                     	;# 
   100     001A                     	;# 
   101     001B                     	;# 
   102     001B                     	;# 
   103     001C                     	;# 
   104     001D                     	;# 
   105     001E                     	;# 
   106     001F                     	;# 
   107     0081                     	;# 
   108     0085                     	;# 
   109     0086                     	;# 
   110     0087                     	;# 
   111     0088                     	;# 
   112     0089                     	;# 
   113     008C                     	;# 
   114     008D                     	;# 
   115     008E                     	;# 
   116     0091                     	;# 
   117     0092                     	;# 
   118     0093                     	;# 
   119     0094                     	;# 
   120     0098                     	;# 
   121     0099                     	;# 
   122     009C                     	;# 
   123     009D                     	;# 
   124     009E                     	;# 
   125     009F                     	;# 
   126     010C                     	;# 
   127     010D                     	;# 
   128     010E                     	;# 
   129     010F                     	;# 
   130     018C                     	;# 
   131     018D                     	;# 
   132     0000                     	;# 
   133     0001                     	;# 
   134     0002                     	;# 
   135     0003                     	;# 
   136     0004                     	;# 
   137     0005                     	;# 
   138     0006                     	;# 
   139     0007                     	;# 
   140     0008                     	;# 
   141     0009                     	;# 
   142     000A                     	;# 
   143     000B                     	;# 
   144     000C                     	;# 
   145     000D                     	;# 
   146     000E                     	;# 
   147     000E                     	;# 
   148     000F                     	;# 
   149     0010                     	;# 
   150     0011                     	;# 
   151     0012                     	;# 
   152     0013                     	;# 
   153     0014                     	;# 
   154     0015                     	;# 
   155     0015                     	;# 
   156     0016                     	;# 
   157     0017                     	;# 
   158     0018                     	;# 
   159     0019                     	;# 
   160     001A                     	;# 
   161     001B                     	;# 
   162     001B                     	;# 
   163     001C                     	;# 
   164     001D                     	;# 
   165     001E                     	;# 
   166     001F                     	;# 
   167     0081                     	;# 
   168     0085                     	;# 
   169     0086                     	;# 
   170     0087                     	;# 
   171     0088                     	;# 
   172     0089                     	;# 
   173     008C                     	;# 
   174     008D                     	;# 
   175     008E                     	;# 
   176     0091                     	;# 
   177     0092                     	;# 
   178     0093                     	;# 
   179     0094                     	;# 
   180     0098                     	;# 
   181     0099                     	;# 
   182     009C                     	;# 
   183     009D                     	;# 
   184     009E                     	;# 
   185     009F                     	;# 
   186     010C                     	;# 
   187     010D                     	;# 
   188     010E                     	;# 
   189     010F                     	;# 
   190     018C                     	;# 
   191     018D                     	;# 
   192                           
   193                           	psect	idataBANK0
   194     07FF                     __pidataBANK0:
   195                           
   196                           ;initializer for _countdown
   197     07FF  343C               	retlw	60
   198                           
   199                           	psect	strings
   200     066B                     __pstrings:
   201     066B                     stringtab:
   202     066B                     __stringtab:
   203                           
   204                           ;	String table - string pointers are 1 byte each
   205     066B  1BFF               	btfsc	btemp+1,7
   206     066C  2E75               	ljmp	stringcode
   207     066D  1383               	bcf	3,7
   208     066E  187F               	btfsc	btemp+1,0
   209     066F  1783               	bsf	3,7
   210     0670  0800               	movf	0,w
   211     0671  0A84               	incf	4,f
   212     0672  1903               	skipnz
   213     0673  0AFF               	incf	btemp+1,f
   214     0674  0008               	return
   215     0675                     stringcode:
   216     0675                     stringdir:
   217     0675  3006               	movlw	high stringdir
   218     0676  008A               	movwf	10
   219     0677  0804               	movf	4,w
   220     0678  0A84               	incf	4,f
   221     0679  0782               	addwf	2,f
   222     067A                     __stringbase:
   223     067A  3400               	retlw	0
   224     067B                     __end_of__stringtab:
   225     067B                     _keys:
   226     067B  3423               	retlw	35
   227     067C  3437               	retlw	55
   228     067D  3434               	retlw	52
   229     067E  3431               	retlw	49
   230     067F  342A               	retlw	42
   231     0680  3438               	retlw	56
   232     0681  3435               	retlw	53
   233     0682  3432               	retlw	50
   234     0683  3430               	retlw	48
   235     0684  3439               	retlw	57
   236     0685  3436               	retlw	54
   237     0686  3433               	retlw	51
   238     0687                     __end_of_keys:
   239     0687                     _rowMask:
   240     0687  3401               	retlw	1
   241     0688  3402               	retlw	2
   242     0689  3404               	retlw	4
   243     068A  3408               	retlw	8
   244     068B                     __end_of_rowMask:
   245     068B                     _colMask:
   246     068B  34FE               	retlw	254
   247     068C  34FD               	retlw	253
   248     068D  34FB               	retlw	251
   249     068E                     __end_of_colMask:
   250     0001                     _TMR0	set	1
   251     0006                     _PORTB	set	6
   252     0008                     _PORTD	set	8
   253     0009                     _PORTEbits	set	9
   254     001A                     _RCREG	set	26
   255     0019                     _TXREG	set	25
   256     005F                     _GIE	set	95
   257     005D                     _TMR0IE	set	93
   258     005A                     _TMR0IF	set	90
   259     0065                     _RCIF	set	101
   260     0064                     _TXIF	set	100
   261     0039                     _RC1	set	57
   262     0038                     _RC0	set	56
   263     00C4                     _CREN	set	196
   264     00C7                     _SPEN	set	199
   265     0089                     _TRISEbits	set	137
   266     0099                     _SPBRG	set	153
   267     0089                     _TRISE	set	137
   268     0088                     _TRISD	set	136
   269     0087                     _TRISC	set	135
   270     0086                     _TRISB	set	134
   271     0085                     _TRISA	set	133
   272     0408                     _PS0	set	1032
   273     0409                     _PS1	set	1033
   274     040A                     _PS2	set	1034
   275     040B                     _PSA	set	1035
   276     040D                     _T0CS	set	1037
   277     04C5                     _TXEN	set	1221
   278     04C4                     _SYNC	set	1220
   279     04C2                     _BRGH	set	1218
   280     043F                     _TRISC7	set	1087
   281     043E                     _TRISC6	set	1086
   282     068E                     STR_8:
   283     068E  3443               	retlw	67	;'C'
   284     068F  346F               	retlw	111	;'o'
   285     0690  3464               	retlw	100	;'d'
   286     0691  3469               	retlw	105	;'i'
   287     0692  3463               	retlw	99	;'c'
   288     0693  3465               	retlw	101	;'e'
   289     0694  3420               	retlw	32	;' '
   290     0695  3453               	retlw	83	;'S'
   291     0696  3463               	retlw	99	;'c'
   292     0697  3461               	retlw	97	;'a'
   293     0698  3464               	retlw	100	;'d'
   294     0699  3475               	retlw	117	;'u'
   295     069A  3474               	retlw	116	;'t'
   296     069B  346F               	retlw	111	;'o'
   297     069C  3400               	retlw	0
   298     069D                     STR_6:
   299     069D  3441               	retlw	65	;'A'
   300     069E  3474               	retlw	116	;'t'
   301     069F  3474               	retlw	116	;'t'
   302     06A0  3465               	retlw	101	;'e'
   303     06A1  346E               	retlw	110	;'n'
   304     06A2  3464               	retlw	100	;'d'
   305     06A3  3465               	retlw	101	;'e'
   306     06A4  3472               	retlw	114	;'r'
   307     06A5  3465               	retlw	101	;'e'
   308     06A6  342E               	retlw	46	;'.'
   309     06A7  342E               	retlw	46	;'.'
   310     06A8  342E               	retlw	46	;'.'
   311     06A9  342E               	retlw	46	;'.'
   312     06AA  3400               	retlw	0
   313     06AB                     STR_5:
   314     06AB  3441               	retlw	65	;'A'
   315     06AC  3474               	retlw	116	;'t'
   316     06AD  3474               	retlw	116	;'t'
   317     06AE  3465               	retlw	101	;'e'
   318     06AF  346E               	retlw	110	;'n'
   319     06B0  3464               	retlw	100	;'d'
   320     06B1  3465               	retlw	101	;'e'
   321     06B2  3472               	retlw	114	;'r'
   322     06B3  3465               	retlw	101	;'e'
   323     06B4  342E               	retlw	46	;'.'
   324     06B5  342E               	retlw	46	;'.'
   325     06B6  342E               	retlw	46	;'.'
   326     06B7  3400               	retlw	0
   327     06B8                     STR_4:
   328     06B8  3441               	retlw	65	;'A'
   329     06B9  3474               	retlw	116	;'t'
   330     06BA  3474               	retlw	116	;'t'
   331     06BB  3465               	retlw	101	;'e'
   332     06BC  346E               	retlw	110	;'n'
   333     06BD  3464               	retlw	100	;'d'
   334     06BE  3465               	retlw	101	;'e'
   335     06BF  3472               	retlw	114	;'r'
   336     06C0  3465               	retlw	101	;'e'
   337     06C1  342E               	retlw	46	;'.'
   338     06C2  342E               	retlw	46	;'.'
   339     06C3  3400               	retlw	0
   340     06C4                     STR_3:
   341     06C4  3441               	retlw	65	;'A'
   342     06C5  3474               	retlw	116	;'t'
   343     06C6  3474               	retlw	116	;'t'
   344     06C7  3465               	retlw	101	;'e'
   345     06C8  346E               	retlw	110	;'n'
   346     06C9  3464               	retlw	100	;'d'
   347     06CA  3465               	retlw	101	;'e'
   348     06CB  3472               	retlw	114	;'r'
   349     06CC  3465               	retlw	101	;'e'
   350     06CD  342E               	retlw	46	;'.'
   351     06CE  3400               	retlw	0
   352     06CF                     STR_2:
   353     06CF  3441               	retlw	65	;'A'
   354     06D0  3474               	retlw	116	;'t'
   355     06D1  3474               	retlw	116	;'t'
   356     06D2  3465               	retlw	101	;'e'
   357     06D3  346E               	retlw	110	;'n'
   358     06D4  3464               	retlw	100	;'d'
   359     06D5  3465               	retlw	101	;'e'
   360     06D6  3472               	retlw	114	;'r'
   361     06D7  3465               	retlw	101	;'e'
   362     06D8  3400               	retlw	0
   363     06D9                     STR_1:
   364     06D9  3450               	retlw	80	;'P'
   365     06DA  3472               	retlw	114	;'r'
   366     06DB  3465               	retlw	101	;'e'
   367     06DC  346D               	retlw	109	;'m'
   368     06DD  3469               	retlw	105	;'i'
   369     06DE  3420               	retlw	32	;' '
   370     06DF  342A               	retlw	42	;'*'
   371     06E0  3400               	retlw	0
   372     06E1                     STR_7:
   373     06E1  344D               	retlw	77	;'M'
   374     06E2  3461               	retlw	97	;'a'
   375     06E3  346E               	retlw	110	;'n'
   376     06E4  3464               	retlw	100	;'d'
   377     06E5  3461               	retlw	97	;'a'
   378     06E6  3474               	retlw	116	;'t'
   379     06E7  346F               	retlw	111	;'o'
   380     06E8  3400               	retlw	0
   381                           
   382                           	psect	cinit
   383     0013                     start_initialization:	
   384                           ; #config settings
   385                           
   386     0013                     __initialization:
   387                           
   388                           ; Initialize objects allocated to BANK0
   389     0013  120A  118A  27FF  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   390     0018  00EE               	movwf	__pdataBANK0& (0+127)
   391                           
   392                           ; Clear objects allocated to BANK0
   393     0019  1383               	bcf	3,7	;select IRP bank0
   394     001A  3020               	movlw	low __pbssBANK0
   395     001B  0084               	movwf	4
   396     001C  3051               	movlw	low (__pbssBANK0+49)
   397     001D  120A  158A  267E  120A  118A  	fcall	clear_ram0
   398                           
   399                           ; Clear objects allocated to COMMON
   400     0022  01F5               	clrf	__pbssCOMMON& (0+127)
   401     0023  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   402     0024  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   403     0025  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   404                           
   405                           ; Clear objects allocated to BITCOMMON
   406     0026  01F9               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   407     0027                     end_of_initialization:	
   408                           ;End of C runtime variable initialization code
   409                           
   410     0027                     __end_of__initialization:
   411     0027  0183               	clrf	3
   412     0028  120A  118A  282B   	ljmp	_main	;jump to C main() function
   413                           
   414                           	psect	bitbssCOMMON
   415     03C8                     __pbitbssCOMMON:
   416     03C8                     _old_btn:
   417     03C8                     	ds	1
   418                           
   419                           	psect	bssCOMMON
   420     0075                     __pbssCOMMON:
   421     0075                     _old_stato:
   422     0075                     	ds	1
   423     0076                     _stato:
   424     0076                     	ds	1
   425     0077                     _rowScan:
   426     0077                     	ds	1
   427     0078                     _colScan:
   428     0078                     	ds	1
   429                           
   430                           	psect	bssBANK0
   431     0020                     __pbssBANK0:
   432     0020                     _stringa:
   433     0020                     	ds	16
   434     0030                     _data:
   435     0030                     	ds	6
   436     0036                     _codice:
   437     0036                     	ds	6
   438     003C                     _count:
   439     003C                     	ds	2
   440     003E                     _index:
   441     003E                     	ds	2
   442     0040                     _flag:
   443     0040                     	ds	2
   444     0042                     _stringPosition:
   445     0042                     	ds	2
   446     0044                     _randomNum:
   447     0044                     	ds	1
   448     0045                     _received:
   449     0045                     	ds	1
   450     0046                     _restart:
   451     0046                     	ds	1
   452     0047                     _keyok:
   453     0047                     	ds	1
   454     0048                     _keypressed:
   455     0048                     	ds	1
   456     0049                     _num5:
   457     0049                     	ds	1
   458     004A                     _num4:
   459     004A                     	ds	1
   460     004B                     _num3:
   461     004B                     	ds	1
   462     004C                     _num2:
   463     004C                     	ds	1
   464     004D                     _num1:
   465     004D                     	ds	1
   466     004E                     _print_countdown:
   467     004E                     	ds	3
   468                           
   469                           	psect	dataBANK0
   470     006E                     __pdataBANK0:
   471     006E                     _countdown:
   472     006E                     	ds	1
   473                           
   474                           	psect	clrtext
   475     0E7E                     clear_ram0:	
   476                           ;	Called with FSR containing the base address, and
   477                           ;	W with the last address+1
   478                           
   479     0E7E  0064               	clrwdt	;clear the watchdog before getting into this loop
   480     0E7F                     clrloop0:
   481     0E7F  0180               	clrf	0	;clear RAM location pointed to by FSR
   482     0E80  0A84               	incf	4,f	;increment pointer
   483     0E81  0604               	xorwf	4,w	;XOR with final address
   484     0E82  1903               	btfsc	3,2	;have we reached the end yet?
   485     0E83  3400               	retlw	0	;all done for this memory range, return
   486     0E84  0604               	xorwf	4,w	;XOR again to restore value
   487     0E85  2E7F               	goto	clrloop0	;do the next byte
   488                           
   489                           	psect	cstackBANK1
   490     00A0                     __pcstackBANK1:
   491     00A0                     ??_UART_Read:
   492                           
   493                           ; 1 bytes @ 0x0
   494     00A0                     	ds	3
   495                           
   496                           	psect	cstackCOMMON
   497     0070                     __pcstackCOMMON:
   498     0070                     ?_UART_Init:
   499     0070                     ?_initLCD:	
   500                           ; 1 bytes @ 0x0
   501                           
   502     0070                     ?_Timer0_Init:	
   503                           ; 1 bytes @ 0x0
   504                           
   505     0070                     ?_RS485_TxEnable:	
   506                           ; 1 bytes @ 0x0
   507                           
   508     0070                     ?_UART_Write:	
   509                           ; 1 bytes @ 0x0
   510                           
   511     0070                     ?_GenerateRandomNumber:	
   512                           ; 1 bytes @ 0x0
   513                           
   514     0070                     ?_KeyPadReader:	
   515                           ; 1 bytes @ 0x0
   516                           
   517     0070                     ?_RS485_RxEnable:	
   518                           ; 1 bytes @ 0x0
   519                           
   520     0070                     ?_UART_Read:	
   521                           ; 1 bytes @ 0x0
   522                           
   523     0070                     ?_main:	
   524                           ; 1 bytes @ 0x0
   525                           
   526     0070                     ?_ISR:	
   527                           ; 1 bytes @ 0x0
   528                           
   529     0070                     ??_ISR:	
   530                           ; 1 bytes @ 0x0
   531                           
   532                           
   533                           ; 1 bytes @ 0x0
   534     0070                     	ds	5
   535                           
   536                           	psect	cstackBANK0
   537     0051                     __pcstackBANK0:
   538     0051                     ??_UART_Init:
   539     0051                     ??_Timer0_Init:	
   540                           ; 1 bytes @ 0x0
   541                           
   542     0051                     ?_lcdSend:	
   543                           ; 1 bytes @ 0x0
   544                           
   545     0051                     ??_RS485_TxEnable:	
   546                           ; 1 bytes @ 0x0
   547                           
   548     0051                     ??_UART_Write:	
   549                           ; 1 bytes @ 0x0
   550                           
   551     0051                     ??_GenerateRandomNumber:	
   552                           ; 1 bytes @ 0x0
   553                           
   554     0051                     ??_KeyPadReader:	
   555                           ; 1 bytes @ 0x0
   556                           
   557     0051                     ??_RS485_RxEnable:	
   558                           ; 1 bytes @ 0x0
   559                           
   560     0051                     ?___bmul:	
   561                           ; 1 bytes @ 0x0
   562                           
   563     0051                     ?___awmod:	
   564                           ; 1 bytes @ 0x0
   565                           
   566     0051                     UART_Write@data:	
   567                           ; 2 bytes @ 0x0
   568                           
   569     0051                     lcdSend@tipo:	
   570                           ; 1 bytes @ 0x0
   571                           
   572     0051                     GenerateRandomNumber@randomNum:	
   573                           ; 1 bytes @ 0x0
   574                           
   575     0051                     ___bmul@multiplicand:	
   576                           ; 1 bytes @ 0x0
   577                           
   578     0051                     ___awmod@divisor:	
   579                           ; 1 bytes @ 0x0
   580                           
   581                           
   582                           ; 2 bytes @ 0x0
   583     0051                     	ds	1
   584     0052                     ??_lcdSend:
   585     0052                     ??___bmul:	
   586                           ; 1 bytes @ 0x1
   587                           
   588     0052                     lcdSend@dato:	
   589                           ; 1 bytes @ 0x1
   590                           
   591     0052                     GenerateRandomNumber@count:	
   592                           ; 1 bytes @ 0x1
   593                           
   594                           
   595                           ; 2 bytes @ 0x1
   596     0052                     	ds	1
   597     0053                     ??_initLCD:
   598     0053                     ?_lcdPrint:	
   599                           ; 1 bytes @ 0x2
   600                           
   601     0053                     ___bmul@product:	
   602                           ; 1 bytes @ 0x2
   603                           
   604     0053                     lcdPrint@str:	
   605                           ; 1 bytes @ 0x2
   606                           
   607     0053                     ___awmod@dividend:	
   608                           ; 2 bytes @ 0x2
   609                           
   610                           
   611                           ; 2 bytes @ 0x2
   612     0053                     	ds	1
   613     0054                     ___bmul@multiplier:
   614                           
   615                           ; 1 bytes @ 0x3
   616     0054                     	ds	1
   617     0055                     ??_lcdPrint:
   618     0055                     ?_potenza:	
   619                           ; 1 bytes @ 0x4
   620                           
   621     0055                     ??___awmod:	
   622                           ; 1 bytes @ 0x4
   623                           
   624     0055                     potenza@e:	
   625                           ; 1 bytes @ 0x4
   626                           
   627                           
   628                           ; 1 bytes @ 0x4
   629     0055                     	ds	1
   630     0056                     ??_potenza:
   631     0056                     ___awmod@counter:	
   632                           ; 1 bytes @ 0x5
   633                           
   634                           
   635                           ; 1 bytes @ 0x5
   636     0056                     	ds	1
   637     0057                     potenza@b:
   638     0057                     ___awmod@sign:	
   639                           ; 1 bytes @ 0x6
   640                           
   641                           
   642                           ; 1 bytes @ 0x6
   643     0057                     	ds	1
   644     0058                     lcdPrint@n:
   645     0058                     potenza@i:	
   646                           ; 2 bytes @ 0x7
   647                           
   648                           
   649                           ; 2 bytes @ 0x7
   650     0058                     	ds	2
   651     005A                     potenza@n:
   652                           
   653                           ; 1 bytes @ 0x9
   654     005A                     	ds	1
   655     005B                     ?___awdiv:
   656     005B                     ___awdiv@divisor:	
   657                           ; 2 bytes @ 0xA
   658                           
   659                           
   660                           ; 2 bytes @ 0xA
   661     005B                     	ds	2
   662     005D                     ___awdiv@dividend:
   663                           
   664                           ; 2 bytes @ 0xC
   665     005D                     	ds	2
   666     005F                     ??___awdiv:
   667                           
   668                           ; 1 bytes @ 0xE
   669     005F                     	ds	1
   670     0060                     ___awdiv@counter:
   671                           
   672                           ; 1 bytes @ 0xF
   673     0060                     	ds	1
   674     0061                     ___awdiv@sign:
   675                           
   676                           ; 1 bytes @ 0x10
   677     0061                     	ds	1
   678     0062                     ___awdiv@quotient:
   679                           
   680                           ; 2 bytes @ 0x11
   681     0062                     	ds	2
   682     0064                     ?_intToString:
   683     0064                     intToString@n:	
   684                           ; 1 bytes @ 0x13
   685                           
   686                           
   687                           ; 2 bytes @ 0x13
   688     0064                     	ds	2
   689     0066                     intToString@str:
   690                           
   691                           ; 1 bytes @ 0x15
   692     0066                     	ds	1
   693     0067                     ??_intToString:
   694                           
   695                           ; 1 bytes @ 0x16
   696     0067                     	ds	3
   697     006A                     intToString@t:
   698                           
   699                           ; 1 bytes @ 0x19
   700     006A                     	ds	1
   701     006B                     intToString@cifre:
   702                           
   703                           ; 1 bytes @ 0x1A
   704     006B                     	ds	1
   705     006C                     intToString@i:
   706                           
   707                           ; 1 bytes @ 0x1B
   708     006C                     	ds	1
   709     006D                     UART_Read@count:
   710                           
   711                           ; 1 bytes @ 0x1C
   712     006D                     	ds	1
   713     006E                     ??_main:
   714                           
   715                           	psect	maintext
   716     002B                     __pmaintext:	
   717                           ; 1 bytes @ 0x1D
   718 ;;
   719 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   720 ;;
   721 ;; *************** function _main *****************
   722 ;; Defined at:
   723 ;;		line 103 in file "main.c"
   724 ;; Parameters:    Size  Location     Type
   725 ;;		None
   726 ;; Auto vars:     Size  Location     Type
   727 ;;		None
   728 ;; Return value:  Size  Location     Type
   729 ;;                  1    wreg      void 
   730 ;; Registers used:
   731 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   732 ;; Tracked objects:
   733 ;;		On entry : B00/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   737 ;;      Params:         0       0       0       0       0
   738 ;;      Locals:         0       0       0       0       0
   739 ;;      Temps:          0       0       0       0       0
   740 ;;      Totals:         0       0       0       0       0
   741 ;;Total ram usage:        0 bytes
   742 ;; Hardware stack levels required when called: 6
   743 ;; This function calls:
   744 ;;		_GenerateRandomNumber
   745 ;;		_KeyPadReader
   746 ;;		_RS485_RxEnable
   747 ;;		_RS485_TxEnable
   748 ;;		_Timer0_Init
   749 ;;		_UART_Init
   750 ;;		_UART_Read
   751 ;;		_UART_Write
   752 ;;		_initLCD
   753 ;;		_lcdPrint
   754 ;;		_lcdSend
   755 ;; This function is called by:
   756 ;;		Startup code after reset
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760     002B                     _main:	
   761                           ;psect for function _main
   762                           
   763     002B                     l2581:	
   764                           ;incstack = 0
   765                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   766                           
   767                           
   768                           ;main.c: 105:     TRISA=0x00;
   769     002B  1683               	bsf	3,5	;RP0=1, select bank1
   770     002C  1303               	bcf	3,6	;RP1=0, select bank1
   771     002D  0185               	clrf	5	;volatile
   772                           
   773                           ;main.c: 106:  TRISB=0x00;
   774     002E  0186               	clrf	6	;volatile
   775                           
   776                           ;main.c: 107:  TRISC=0x00;
   777     002F  0187               	clrf	7	;volatile
   778                           
   779                           ;main.c: 108:  TRISD=0x00;
   780     0030  0188               	clrf	8	;volatile
   781                           
   782                           ;main.c: 109:     TRISE=0X00;
   783     0031  0189               	clrf	9	;volatile
   784     0032                     l2583:
   785                           
   786                           ;main.c: 110:     UART_Init();
   787     0032  120A  158A  269F  120A  118A  	fcall	_UART_Init
   788     0037                     l2585:
   789                           
   790                           ;main.c: 111:     initLCD();
   791     0037  120A  118A  2765  120A  118A  	fcall	_initLCD
   792     003C                     l2587:
   793                           
   794                           ;main.c: 112:     Timer0_Init();
   795     003C  120A  158A  2690  120A  118A  	fcall	_Timer0_Init
   796     0041                     l2589:
   797                           
   798                           ;main.c: 114:     {;main.c: 115:         lcdSend(0x01, 0);
   799     0041  1283               	bcf	3,5	;RP0=0, select bank0
   800     0042  1303               	bcf	3,6	;RP1=0, select bank0
   801     0043  01D1               	clrf	lcdSend@tipo
   802     0044  3001               	movlw	1
   803     0045  120A  158A  26B1  120A  118A  	fcall	_lcdSend
   804     004A                     l2591:
   805                           
   806                           ;main.c: 116:         lcdPrint("Premi *");
   807     004A  305F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   808     004B  1283               	bcf	3,5	;RP0=0, select bank0
   809     004C  1303               	bcf	3,6	;RP1=0, select bank0
   810     004D  00D3               	movwf	lcdPrint@str
   811     004E  3080               	movlw	128
   812     004F  00D4               	movwf	lcdPrint@str+1
   813     0050  120A  158A  26F4  120A  118A  	fcall	_lcdPrint
   814     0055                     l2593:
   815                           
   816                           ;main.c: 117:         RS485_TxEnable();
   817     0055  120A  158A  2679  120A  118A  	fcall	_RS485_TxEnable
   818     005A                     l2595:
   819                           
   820                           ;main.c: 118:         UART_Write('P');
   821     005A  3050               	movlw	80
   822     005B  120A  158A  2686  120A  118A  	fcall	_UART_Write
   823     0060                     l2597:
   824                           
   825                           ;main.c: 119:         UART_Write('r');
   826     0060  3072               	movlw	114
   827     0061  120A  158A  2686  120A  118A  	fcall	_UART_Write
   828     0066                     l2599:
   829                           
   830                           ;main.c: 120:         UART_Write('e');
   831     0066  3065               	movlw	101
   832     0067  120A  158A  2686  120A  118A  	fcall	_UART_Write
   833     006C                     l2601:
   834                           
   835                           ;main.c: 121:         UART_Write('m');
   836     006C  306D               	movlw	109
   837     006D  120A  158A  2686  120A  118A  	fcall	_UART_Write
   838     0072                     l2603:
   839                           
   840                           ;main.c: 122:         UART_Write('i');
   841     0072  3069               	movlw	105
   842     0073  120A  158A  2686  120A  118A  	fcall	_UART_Write
   843     0078                     l2605:
   844                           
   845                           ;main.c: 123:         UART_Write(' ');
   846     0078  3020               	movlw	32
   847     0079  120A  158A  2686  120A  118A  	fcall	_UART_Write
   848     007E                     l2607:
   849                           
   850                           ;main.c: 124:         UART_Write('*');
   851     007E  302A               	movlw	42
   852     007F  120A  158A  2686  120A  118A  	fcall	_UART_Write
   853     0084                     l2609:
   854                           
   855                           ;main.c: 125:         UART_Write('\r');
   856     0084  300D               	movlw	13
   857     0085  120A  158A  2686  120A  118A  	fcall	_UART_Write
   858     008A                     l2611:
   859                           
   860                           ;main.c: 126:         UART_Write('\n');
   861     008A  300A               	movlw	10
   862     008B  120A  158A  2686  120A  118A  	fcall	_UART_Write
   863     0090                     l2613:
   864                           
   865                           ;main.c: 128:         num1 = GenerateRandomNumber();
   866     0090  120A  158A  26C6  120A  118A  	fcall	_GenerateRandomNumber
   867     0095  1283               	bcf	3,5	;RP0=0, select bank0
   868     0096  1303               	bcf	3,6	;RP1=0, select bank0
   869     0097  00CD               	movwf	_num1
   870     0098                     l2615:
   871                           
   872                           ;main.c: 130:         num2 = GenerateRandomNumber();
   873     0098  120A  158A  26C6  120A  118A  	fcall	_GenerateRandomNumber
   874     009D  1283               	bcf	3,5	;RP0=0, select bank0
   875     009E  1303               	bcf	3,6	;RP1=0, select bank0
   876     009F  00CC               	movwf	_num2
   877     00A0                     l2617:
   878                           
   879                           ;main.c: 132:         num3 = GenerateRandomNumber();
   880     00A0  120A  158A  26C6  120A  118A  	fcall	_GenerateRandomNumber
   881     00A5  1283               	bcf	3,5	;RP0=0, select bank0
   882     00A6  1303               	bcf	3,6	;RP1=0, select bank0
   883     00A7  00CB               	movwf	_num3
   884     00A8                     l2619:
   885                           
   886                           ;main.c: 134:         num4 = GenerateRandomNumber();
   887     00A8  120A  158A  26C6  120A  118A  	fcall	_GenerateRandomNumber
   888     00AD  1283               	bcf	3,5	;RP0=0, select bank0
   889     00AE  1303               	bcf	3,6	;RP1=0, select bank0
   890     00AF  00CA               	movwf	_num4
   891     00B0                     l2621:
   892                           
   893                           ;main.c: 136:         num5 = GenerateRandomNumber();
   894     00B0  120A  158A  26C6  120A  118A  	fcall	_GenerateRandomNumber
   895     00B5  1283               	bcf	3,5	;RP0=0, select bank0
   896     00B6  1303               	bcf	3,6	;RP1=0, select bank0
   897     00B7  00C9               	movwf	_num5
   898                           
   899                           ;main.c: 138:         while (codice[0] == '\0')
   900     00B8  28CE               	goto	l2629
   901     00B9                     l2623:
   902                           
   903                           ;main.c: 139:         {;main.c: 140:             KeyPadReader();
   904     00B9  120A  118A  25DE  120A  118A  	fcall	_KeyPadReader
   905     00BE                     l2625:
   906                           
   907                           ;main.c: 141:             if (keys[keypressed] == '*'){
   908     00BE  1283               	bcf	3,5	;RP0=0, select bank0
   909     00BF  1303               	bcf	3,6	;RP1=0, select bank0
   910     00C0  0848               	movf	_keypressed,w
   911     00C1  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
   912     00C2  0084               	movwf	4
   913     00C3  120A  118A  2675  120A  118A  	fcall	stringdir
   914     00C8  3A2A               	xorlw	42
   915     00C9  1D03               	skipz
   916     00CA  28CC               	goto	u3021
   917     00CB  28CD               	goto	u3020
   918     00CC                     u3021:
   919     00CC  28CE               	goto	l2629
   920     00CD                     u3020:
   921     00CD  28D3               	goto	l2631
   922     00CE                     l2629:
   923                           
   924                           ;main.c: 138:         while (codice[0] == '\0')
   925     00CE  0836               	movf	_codice,w
   926     00CF  1903               	btfsc	3,2
   927     00D0  28D2               	goto	u3031
   928     00D1  28D3               	goto	u3030
   929     00D2                     u3031:
   930     00D2  28B9               	goto	l2623
   931     00D3                     u3030:
   932     00D3                     l2631:
   933                           
   934                           ;main.c: 147:             lcdSend(0x01, 0);
   935     00D3  01D1               	clrf	lcdSend@tipo
   936     00D4  3001               	movlw	1
   937     00D5  120A  158A  26B1  120A  118A  	fcall	_lcdSend
   938     00DA                     l2633:
   939                           
   940                           ;main.c: 148:             lcdPrint("Attendere");
   941     00DA  3055               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   942     00DB  1283               	bcf	3,5	;RP0=0, select bank0
   943     00DC  1303               	bcf	3,6	;RP1=0, select bank0
   944     00DD  00D3               	movwf	lcdPrint@str
   945     00DE  3080               	movlw	128
   946     00DF  00D4               	movwf	lcdPrint@str+1
   947     00E0  120A  158A  26F4  120A  118A  	fcall	_lcdPrint
   948     00E5                     l2635:
   949                           
   950                           ;main.c: 149:             RS485_TxEnable();
   951     00E5  120A  158A  2679  120A  118A  	fcall	_RS485_TxEnable
   952                           
   953                           ;main.c: 150:             while(num1 != 0x30 && num1 != 0x31 && num1 != 0x32 && num1 != 
      +                          0x33 &&
   954     00EA  28F3               	goto	l2639
   955     00EB                     l2637:
   956                           
   957                           ;main.c: 152:                   num1 != 0x38 && num1 != 0x39){;main.c: 153:             
      +                          num1 = GenerateRandomNumber();
   958     00EB  120A  158A  26C6  120A  118A  	fcall	_GenerateRandomNumber
   959     00F0  1283               	bcf	3,5	;RP0=0, select bank0
   960     00F1  1303               	bcf	3,6	;RP1=0, select bank0
   961     00F2  00CD               	movwf	_num1
   962     00F3                     l2639:
   963                           
   964                           ;main.c: 150:             while(num1 != 0x30 && num1 != 0x31 && num1 != 0x32 && num1 != 
      +                          0x33 &&
   965     00F3  3030               	movlw	48
   966     00F4  1283               	bcf	3,5	;RP0=0, select bank0
   967     00F5  1303               	bcf	3,6	;RP1=0, select bank0
   968     00F6  064D               	xorwf	_num1,w
   969     00F7  1903               	btfsc	3,2
   970     00F8  28FA               	goto	u3041
   971     00F9  28FB               	goto	u3040
   972     00FA                     u3041:
   973     00FA  2931               	goto	l2659
   974     00FB                     u3040:
   975     00FB                     l2641:
   976     00FB  3031               	movlw	49
   977     00FC  064D               	xorwf	_num1,w
   978     00FD  1903               	btfsc	3,2
   979     00FE  2900               	goto	u3051
   980     00FF  2901               	goto	u3050
   981     0100                     u3051:
   982     0100  2931               	goto	l2659
   983     0101                     u3050:
   984     0101                     l2643:
   985     0101  3032               	movlw	50
   986     0102  064D               	xorwf	_num1,w
   987     0103  1903               	btfsc	3,2
   988     0104  2906               	goto	u3061
   989     0105  2907               	goto	u3060
   990     0106                     u3061:
   991     0106  2931               	goto	l2659
   992     0107                     u3060:
   993     0107                     l2645:
   994     0107  3033               	movlw	51
   995     0108  064D               	xorwf	_num1,w
   996     0109  1903               	btfsc	3,2
   997     010A  290C               	goto	u3071
   998     010B  290D               	goto	u3070
   999     010C                     u3071:
  1000     010C  2931               	goto	l2659
  1001     010D                     u3070:
  1002     010D                     l2647:
  1003     010D  3034               	movlw	52
  1004     010E  064D               	xorwf	_num1,w
  1005     010F  1903               	btfsc	3,2
  1006     0110  2912               	goto	u3081
  1007     0111  2913               	goto	u3080
  1008     0112                     u3081:
  1009     0112  2931               	goto	l2659
  1010     0113                     u3080:
  1011     0113                     l2649:
  1012     0113  3035               	movlw	53
  1013     0114  064D               	xorwf	_num1,w
  1014     0115  1903               	btfsc	3,2
  1015     0116  2918               	goto	u3091
  1016     0117  2919               	goto	u3090
  1017     0118                     u3091:
  1018     0118  2931               	goto	l2659
  1019     0119                     u3090:
  1020     0119                     l2651:
  1021     0119  3036               	movlw	54
  1022     011A  064D               	xorwf	_num1,w
  1023     011B  1903               	btfsc	3,2
  1024     011C  291E               	goto	u3101
  1025     011D  291F               	goto	u3100
  1026     011E                     u3101:
  1027     011E  2931               	goto	l2659
  1028     011F                     u3100:
  1029     011F                     l2653:
  1030     011F  3037               	movlw	55
  1031     0120  064D               	xorwf	_num1,w
  1032     0121  1903               	btfsc	3,2
  1033     0122  2924               	goto	u3111
  1034     0123  2925               	goto	u3110
  1035     0124                     u3111:
  1036     0124  2931               	goto	l2659
  1037     0125                     u3110:
  1038     0125                     l2655:
  1039     0125  3038               	movlw	56
  1040     0126  064D               	xorwf	_num1,w
  1041     0127  1903               	btfsc	3,2
  1042     0128  292A               	goto	u3121
  1043     0129  292B               	goto	u3120
  1044     012A                     u3121:
  1045     012A  2931               	goto	l2659
  1046     012B                     u3120:
  1047     012B                     l2657:
  1048     012B  3039               	movlw	57
  1049     012C  064D               	xorwf	_num1,w
  1050     012D  1D03               	btfss	3,2
  1051     012E  2930               	goto	u3131
  1052     012F  2931               	goto	u3130
  1053     0130                     u3131:
  1054     0130  28EB               	goto	l2637
  1055     0131                     u3130:
  1056     0131                     l2659:
  1057                           
  1058                           ;main.c: 157:             lcdSend(0x01, 0);
  1059     0131  01D1               	clrf	lcdSend@tipo
  1060     0132  3001               	movlw	1
  1061     0133  120A  158A  26B1  120A  118A  	fcall	_lcdSend
  1062     0138                     l2661:
  1063                           
  1064                           ;main.c: 158:             lcdPrint("Attendere.");
  1065     0138  304A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1066     0139  1283               	bcf	3,5	;RP0=0, select bank0
  1067     013A  1303               	bcf	3,6	;RP1=0, select bank0
  1068     013B  00D3               	movwf	lcdPrint@str
  1069     013C  3080               	movlw	128
  1070     013D  00D4               	movwf	lcdPrint@str+1
  1071     013E  120A  158A  26F4  120A  118A  	fcall	_lcdPrint
  1072                           
  1073                           ;main.c: 159:             while(num2 != 0x30 && num2 != 0x31 && num2 != 0x32 && num2 != 
      +                          0x33 &&
  1074     0143  294C               	goto	l2665
  1075     0144                     l2663:
  1076                           
  1077                           ;main.c: 161:                   num2 != 0x38 && num2 != 0x39){;main.c: 162:             
      +                          num2 = GenerateRandomNumber();
  1078     0144  120A  158A  26C6  120A  118A  	fcall	_GenerateRandomNumber
  1079     0149  1283               	bcf	3,5	;RP0=0, select bank0
  1080     014A  1303               	bcf	3,6	;RP1=0, select bank0
  1081     014B  00CC               	movwf	_num2
  1082     014C                     l2665:
  1083                           
  1084                           ;main.c: 159:             while(num2 != 0x30 && num2 != 0x31 && num2 != 0x32 && num2 != 
      +                          0x33 &&
  1085     014C  3030               	movlw	48
  1086     014D  1283               	bcf	3,5	;RP0=0, select bank0
  1087     014E  1303               	bcf	3,6	;RP1=0, select bank0
  1088     014F  064C               	xorwf	_num2,w
  1089     0150  1903               	btfsc	3,2
  1090     0151  2953               	goto	u3141
  1091     0152  2954               	goto	u3140
  1092     0153                     u3141:
  1093     0153  298A               	goto	l2685
  1094     0154                     u3140:
  1095     0154                     l2667:
  1096     0154  3031               	movlw	49
  1097     0155  064C               	xorwf	_num2,w
  1098     0156  1903               	btfsc	3,2
  1099     0157  2959               	goto	u3151
  1100     0158  295A               	goto	u3150
  1101     0159                     u3151:
  1102     0159  298A               	goto	l2685
  1103     015A                     u3150:
  1104     015A                     l2669:
  1105     015A  3032               	movlw	50
  1106     015B  064C               	xorwf	_num2,w
  1107     015C  1903               	btfsc	3,2
  1108     015D  295F               	goto	u3161
  1109     015E  2960               	goto	u3160
  1110     015F                     u3161:
  1111     015F  298A               	goto	l2685
  1112     0160                     u3160:
  1113     0160                     l2671:
  1114     0160  3033               	movlw	51
  1115     0161  064C               	xorwf	_num2,w
  1116     0162  1903               	btfsc	3,2
  1117     0163  2965               	goto	u3171
  1118     0164  2966               	goto	u3170
  1119     0165                     u3171:
  1120     0165  298A               	goto	l2685
  1121     0166                     u3170:
  1122     0166                     l2673:
  1123     0166  3034               	movlw	52
  1124     0167  064C               	xorwf	_num2,w
  1125     0168  1903               	btfsc	3,2
  1126     0169  296B               	goto	u3181
  1127     016A  296C               	goto	u3180
  1128     016B                     u3181:
  1129     016B  298A               	goto	l2685
  1130     016C                     u3180:
  1131     016C                     l2675:
  1132     016C  3035               	movlw	53
  1133     016D  064C               	xorwf	_num2,w
  1134     016E  1903               	btfsc	3,2
  1135     016F  2971               	goto	u3191
  1136     0170  2972               	goto	u3190
  1137     0171                     u3191:
  1138     0171  298A               	goto	l2685
  1139     0172                     u3190:
  1140     0172                     l2677:
  1141     0172  3036               	movlw	54
  1142     0173  064C               	xorwf	_num2,w
  1143     0174  1903               	btfsc	3,2
  1144     0175  2977               	goto	u3201
  1145     0176  2978               	goto	u3200
  1146     0177                     u3201:
  1147     0177  298A               	goto	l2685
  1148     0178                     u3200:
  1149     0178                     l2679:
  1150     0178  3037               	movlw	55
  1151     0179  064C               	xorwf	_num2,w
  1152     017A  1903               	btfsc	3,2
  1153     017B  297D               	goto	u3211
  1154     017C  297E               	goto	u3210
  1155     017D                     u3211:
  1156     017D  298A               	goto	l2685
  1157     017E                     u3210:
  1158     017E                     l2681:
  1159     017E  3038               	movlw	56
  1160     017F  064C               	xorwf	_num2,w
  1161     0180  1903               	btfsc	3,2
  1162     0181  2983               	goto	u3221
  1163     0182  2984               	goto	u3220
  1164     0183                     u3221:
  1165     0183  298A               	goto	l2685
  1166     0184                     u3220:
  1167     0184                     l2683:
  1168     0184  3039               	movlw	57
  1169     0185  064C               	xorwf	_num2,w
  1170     0186  1D03               	btfss	3,2
  1171     0187  2989               	goto	u3231
  1172     0188  298A               	goto	u3230
  1173     0189                     u3231:
  1174     0189  2944               	goto	l2663
  1175     018A                     u3230:
  1176     018A                     l2685:
  1177                           
  1178                           ;main.c: 166:             lcdSend(0x01, 0);
  1179     018A  01D1               	clrf	lcdSend@tipo
  1180     018B  3001               	movlw	1
  1181     018C  120A  158A  26B1  120A  118A  	fcall	_lcdSend
  1182     0191                     l2687:
  1183                           
  1184                           ;main.c: 167:             lcdPrint("Attendere..");
  1185     0191  303E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1186     0192  1283               	bcf	3,5	;RP0=0, select bank0
  1187     0193  1303               	bcf	3,6	;RP1=0, select bank0
  1188     0194  00D3               	movwf	lcdPrint@str
  1189     0195  3080               	movlw	128
  1190     0196  00D4               	movwf	lcdPrint@str+1
  1191     0197  120A  158A  26F4  120A  118A  	fcall	_lcdPrint
  1192                           
  1193                           ;main.c: 168:             while(num3 != 0x30 && num3 != 0x31 && num3 != 0x32 && num3 != 
      +                          0x33 &&
  1194     019C  29A5               	goto	l2691
  1195     019D                     l2689:
  1196                           
  1197                           ;main.c: 170:                   num3 != 0x38 && num3 != 0x39){;main.c: 171:             
      +                          num3 = GenerateRandomNumber();
  1198     019D  120A  158A  26C6  120A  118A  	fcall	_GenerateRandomNumber
  1199     01A2  1283               	bcf	3,5	;RP0=0, select bank0
  1200     01A3  1303               	bcf	3,6	;RP1=0, select bank0
  1201     01A4  00CB               	movwf	_num3
  1202     01A5                     l2691:
  1203                           
  1204                           ;main.c: 168:             while(num3 != 0x30 && num3 != 0x31 && num3 != 0x32 && num3 != 
      +                          0x33 &&
  1205     01A5  3030               	movlw	48
  1206     01A6  1283               	bcf	3,5	;RP0=0, select bank0
  1207     01A7  1303               	bcf	3,6	;RP1=0, select bank0
  1208     01A8  064B               	xorwf	_num3,w
  1209     01A9  1903               	btfsc	3,2
  1210     01AA  29AC               	goto	u3241
  1211     01AB  29AD               	goto	u3240
  1212     01AC                     u3241:
  1213     01AC  29E3               	goto	l2711
  1214     01AD                     u3240:
  1215     01AD                     l2693:
  1216     01AD  3031               	movlw	49
  1217     01AE  064B               	xorwf	_num3,w
  1218     01AF  1903               	btfsc	3,2
  1219     01B0  29B2               	goto	u3251
  1220     01B1  29B3               	goto	u3250
  1221     01B2                     u3251:
  1222     01B2  29E3               	goto	l2711
  1223     01B3                     u3250:
  1224     01B3                     l2695:
  1225     01B3  3032               	movlw	50
  1226     01B4  064B               	xorwf	_num3,w
  1227     01B5  1903               	btfsc	3,2
  1228     01B6  29B8               	goto	u3261
  1229     01B7  29B9               	goto	u3260
  1230     01B8                     u3261:
  1231     01B8  29E3               	goto	l2711
  1232     01B9                     u3260:
  1233     01B9                     l2697:
  1234     01B9  3033               	movlw	51
  1235     01BA  064B               	xorwf	_num3,w
  1236     01BB  1903               	btfsc	3,2
  1237     01BC  29BE               	goto	u3271
  1238     01BD  29BF               	goto	u3270
  1239     01BE                     u3271:
  1240     01BE  29E3               	goto	l2711
  1241     01BF                     u3270:
  1242     01BF                     l2699:
  1243     01BF  3034               	movlw	52
  1244     01C0  064B               	xorwf	_num3,w
  1245     01C1  1903               	btfsc	3,2
  1246     01C2  29C4               	goto	u3281
  1247     01C3  29C5               	goto	u3280
  1248     01C4                     u3281:
  1249     01C4  29E3               	goto	l2711
  1250     01C5                     u3280:
  1251     01C5                     l2701:
  1252     01C5  3035               	movlw	53
  1253     01C6  064B               	xorwf	_num3,w
  1254     01C7  1903               	btfsc	3,2
  1255     01C8  29CA               	goto	u3291
  1256     01C9  29CB               	goto	u3290
  1257     01CA                     u3291:
  1258     01CA  29E3               	goto	l2711
  1259     01CB                     u3290:
  1260     01CB                     l2703:
  1261     01CB  3036               	movlw	54
  1262     01CC  064B               	xorwf	_num3,w
  1263     01CD  1903               	btfsc	3,2
  1264     01CE  29D0               	goto	u3301
  1265     01CF  29D1               	goto	u3300
  1266     01D0                     u3301:
  1267     01D0  29E3               	goto	l2711
  1268     01D1                     u3300:
  1269     01D1                     l2705:
  1270     01D1  3037               	movlw	55
  1271     01D2  064B               	xorwf	_num3,w
  1272     01D3  1903               	btfsc	3,2
  1273     01D4  29D6               	goto	u3311
  1274     01D5  29D7               	goto	u3310
  1275     01D6                     u3311:
  1276     01D6  29E3               	goto	l2711
  1277     01D7                     u3310:
  1278     01D7                     l2707:
  1279     01D7  3038               	movlw	56
  1280     01D8  064B               	xorwf	_num3,w
  1281     01D9  1903               	btfsc	3,2
  1282     01DA  29DC               	goto	u3321
  1283     01DB  29DD               	goto	u3320
  1284     01DC                     u3321:
  1285     01DC  29E3               	goto	l2711
  1286     01DD                     u3320:
  1287     01DD                     l2709:
  1288     01DD  3039               	movlw	57
  1289     01DE  064B               	xorwf	_num3,w
  1290     01DF  1D03               	btfss	3,2
  1291     01E0  29E2               	goto	u3331
  1292     01E1  29E3               	goto	u3330
  1293     01E2                     u3331:
  1294     01E2  299D               	goto	l2689
  1295     01E3                     u3330:
  1296     01E3                     l2711:
  1297                           
  1298                           ;main.c: 175:             lcdSend(0x01, 0);
  1299     01E3  01D1               	clrf	lcdSend@tipo
  1300     01E4  3001               	movlw	1
  1301     01E5  120A  158A  26B1  120A  118A  	fcall	_lcdSend
  1302     01EA                     l2713:
  1303                           
  1304                           ;main.c: 176:             lcdPrint("Attendere...");
  1305     01EA  3031               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1306     01EB  1283               	bcf	3,5	;RP0=0, select bank0
  1307     01EC  1303               	bcf	3,6	;RP1=0, select bank0
  1308     01ED  00D3               	movwf	lcdPrint@str
  1309     01EE  3080               	movlw	128
  1310     01EF  00D4               	movwf	lcdPrint@str+1
  1311     01F0  120A  158A  26F4  120A  118A  	fcall	_lcdPrint
  1312                           
  1313                           ;main.c: 177:             while(num4 != 0x30 && num4 != 0x31 && num4 != 0x32 && num4 != 
      +                          0x33 &&
  1314     01F5  29FE               	goto	l2717
  1315     01F6                     l2715:
  1316                           
  1317                           ;main.c: 179:                   num4 != 0x38 && num4 != 0x39){;main.c: 180:             
      +                          num4 = GenerateRandomNumber();
  1318     01F6  120A  158A  26C6  120A  118A  	fcall	_GenerateRandomNumber
  1319     01FB  1283               	bcf	3,5	;RP0=0, select bank0
  1320     01FC  1303               	bcf	3,6	;RP1=0, select bank0
  1321     01FD  00CA               	movwf	_num4
  1322     01FE                     l2717:
  1323                           
  1324                           ;main.c: 177:             while(num4 != 0x30 && num4 != 0x31 && num4 != 0x32 && num4 != 
      +                          0x33 &&
  1325     01FE  3030               	movlw	48
  1326     01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1327     0200  1303               	bcf	3,6	;RP1=0, select bank0
  1328     0201  064A               	xorwf	_num4,w
  1329     0202  1903               	btfsc	3,2
  1330     0203  2A05               	goto	u3341
  1331     0204  2A06               	goto	u3340
  1332     0205                     u3341:
  1333     0205  2A3C               	goto	l2737
  1334     0206                     u3340:
  1335     0206                     l2719:
  1336     0206  3031               	movlw	49
  1337     0207  064A               	xorwf	_num4,w
  1338     0208  1903               	btfsc	3,2
  1339     0209  2A0B               	goto	u3351
  1340     020A  2A0C               	goto	u3350
  1341     020B                     u3351:
  1342     020B  2A3C               	goto	l2737
  1343     020C                     u3350:
  1344     020C                     l2721:
  1345     020C  3032               	movlw	50
  1346     020D  064A               	xorwf	_num4,w
  1347     020E  1903               	btfsc	3,2
  1348     020F  2A11               	goto	u3361
  1349     0210  2A12               	goto	u3360
  1350     0211                     u3361:
  1351     0211  2A3C               	goto	l2737
  1352     0212                     u3360:
  1353     0212                     l2723:
  1354     0212  3033               	movlw	51
  1355     0213  064A               	xorwf	_num4,w
  1356     0214  1903               	btfsc	3,2
  1357     0215  2A17               	goto	u3371
  1358     0216  2A18               	goto	u3370
  1359     0217                     u3371:
  1360     0217  2A3C               	goto	l2737
  1361     0218                     u3370:
  1362     0218                     l2725:
  1363     0218  3034               	movlw	52
  1364     0219  064A               	xorwf	_num4,w
  1365     021A  1903               	btfsc	3,2
  1366     021B  2A1D               	goto	u3381
  1367     021C  2A1E               	goto	u3380
  1368     021D                     u3381:
  1369     021D  2A3C               	goto	l2737
  1370     021E                     u3380:
  1371     021E                     l2727:
  1372     021E  3035               	movlw	53
  1373     021F  064A               	xorwf	_num4,w
  1374     0220  1903               	btfsc	3,2
  1375     0221  2A23               	goto	u3391
  1376     0222  2A24               	goto	u3390
  1377     0223                     u3391:
  1378     0223  2A3C               	goto	l2737
  1379     0224                     u3390:
  1380     0224                     l2729:
  1381     0224  3036               	movlw	54
  1382     0225  064A               	xorwf	_num4,w
  1383     0226  1903               	btfsc	3,2
  1384     0227  2A29               	goto	u3401
  1385     0228  2A2A               	goto	u3400
  1386     0229                     u3401:
  1387     0229  2A3C               	goto	l2737
  1388     022A                     u3400:
  1389     022A                     l2731:
  1390     022A  3037               	movlw	55
  1391     022B  064A               	xorwf	_num4,w
  1392     022C  1903               	btfsc	3,2
  1393     022D  2A2F               	goto	u3411
  1394     022E  2A30               	goto	u3410
  1395     022F                     u3411:
  1396     022F  2A3C               	goto	l2737
  1397     0230                     u3410:
  1398     0230                     l2733:
  1399     0230  3038               	movlw	56
  1400     0231  064A               	xorwf	_num4,w
  1401     0232  1903               	btfsc	3,2
  1402     0233  2A35               	goto	u3421
  1403     0234  2A36               	goto	u3420
  1404     0235                     u3421:
  1405     0235  2A3C               	goto	l2737
  1406     0236                     u3420:
  1407     0236                     l2735:
  1408     0236  3039               	movlw	57
  1409     0237  064A               	xorwf	_num4,w
  1410     0238  1D03               	btfss	3,2
  1411     0239  2A3B               	goto	u3431
  1412     023A  2A3C               	goto	u3430
  1413     023B                     u3431:
  1414     023B  29F6               	goto	l2715
  1415     023C                     u3430:
  1416     023C                     l2737:
  1417                           
  1418                           ;main.c: 184:             lcdSend(0x01, 0);
  1419     023C  01D1               	clrf	lcdSend@tipo
  1420     023D  3001               	movlw	1
  1421     023E  120A  158A  26B1  120A  118A  	fcall	_lcdSend
  1422     0243                     l2739:
  1423                           
  1424                           ;main.c: 185:             lcdPrint("Attendere....");
  1425     0243  3023               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1426     0244  1283               	bcf	3,5	;RP0=0, select bank0
  1427     0245  1303               	bcf	3,6	;RP1=0, select bank0
  1428     0246  00D3               	movwf	lcdPrint@str
  1429     0247  3080               	movlw	128
  1430     0248  00D4               	movwf	lcdPrint@str+1
  1431     0249  120A  158A  26F4  120A  118A  	fcall	_lcdPrint
  1432                           
  1433                           ;main.c: 186:             while(num5 != 0x30 && num5 != 0x31 && num5 != 0x32 && num5 != 
      +                          0x33 &&
  1434     024E  2A57               	goto	l2743
  1435     024F                     l2741:
  1436                           
  1437                           ;main.c: 188:                   num5 != 0x38 && num5 != 0x39){;main.c: 189:             
      +                          num5 = GenerateRandomNumber();
  1438     024F  120A  158A  26C6  120A  118A  	fcall	_GenerateRandomNumber
  1439     0254  1283               	bcf	3,5	;RP0=0, select bank0
  1440     0255  1303               	bcf	3,6	;RP1=0, select bank0
  1441     0256  00C9               	movwf	_num5
  1442     0257                     l2743:
  1443                           
  1444                           ;main.c: 186:             while(num5 != 0x30 && num5 != 0x31 && num5 != 0x32 && num5 != 
      +                          0x33 &&
  1445     0257  3030               	movlw	48
  1446     0258  1283               	bcf	3,5	;RP0=0, select bank0
  1447     0259  1303               	bcf	3,6	;RP1=0, select bank0
  1448     025A  0649               	xorwf	_num5,w
  1449     025B  1903               	btfsc	3,2
  1450     025C  2A5E               	goto	u3441
  1451     025D  2A5F               	goto	u3440
  1452     025E                     u3441:
  1453     025E  2A95               	goto	l2763
  1454     025F                     u3440:
  1455     025F                     l2745:
  1456     025F  3031               	movlw	49
  1457     0260  0649               	xorwf	_num5,w
  1458     0261  1903               	btfsc	3,2
  1459     0262  2A64               	goto	u3451
  1460     0263  2A65               	goto	u3450
  1461     0264                     u3451:
  1462     0264  2A95               	goto	l2763
  1463     0265                     u3450:
  1464     0265                     l2747:
  1465     0265  3032               	movlw	50
  1466     0266  0649               	xorwf	_num5,w
  1467     0267  1903               	btfsc	3,2
  1468     0268  2A6A               	goto	u3461
  1469     0269  2A6B               	goto	u3460
  1470     026A                     u3461:
  1471     026A  2A95               	goto	l2763
  1472     026B                     u3460:
  1473     026B                     l2749:
  1474     026B  3033               	movlw	51
  1475     026C  0649               	xorwf	_num5,w
  1476     026D  1903               	btfsc	3,2
  1477     026E  2A70               	goto	u3471
  1478     026F  2A71               	goto	u3470
  1479     0270                     u3471:
  1480     0270  2A95               	goto	l2763
  1481     0271                     u3470:
  1482     0271                     l2751:
  1483     0271  3034               	movlw	52
  1484     0272  0649               	xorwf	_num5,w
  1485     0273  1903               	btfsc	3,2
  1486     0274  2A76               	goto	u3481
  1487     0275  2A77               	goto	u3480
  1488     0276                     u3481:
  1489     0276  2A95               	goto	l2763
  1490     0277                     u3480:
  1491     0277                     l2753:
  1492     0277  3035               	movlw	53
  1493     0278  0649               	xorwf	_num5,w
  1494     0279  1903               	btfsc	3,2
  1495     027A  2A7C               	goto	u3491
  1496     027B  2A7D               	goto	u3490
  1497     027C                     u3491:
  1498     027C  2A95               	goto	l2763
  1499     027D                     u3490:
  1500     027D                     l2755:
  1501     027D  3036               	movlw	54
  1502     027E  0649               	xorwf	_num5,w
  1503     027F  1903               	btfsc	3,2
  1504     0280  2A82               	goto	u3501
  1505     0281  2A83               	goto	u3500
  1506     0282                     u3501:
  1507     0282  2A95               	goto	l2763
  1508     0283                     u3500:
  1509     0283                     l2757:
  1510     0283  3037               	movlw	55
  1511     0284  0649               	xorwf	_num5,w
  1512     0285  1903               	btfsc	3,2
  1513     0286  2A88               	goto	u3511
  1514     0287  2A89               	goto	u3510
  1515     0288                     u3511:
  1516     0288  2A95               	goto	l2763
  1517     0289                     u3510:
  1518     0289                     l2759:
  1519     0289  3038               	movlw	56
  1520     028A  0649               	xorwf	_num5,w
  1521     028B  1903               	btfsc	3,2
  1522     028C  2A8E               	goto	u3521
  1523     028D  2A8F               	goto	u3520
  1524     028E                     u3521:
  1525     028E  2A95               	goto	l2763
  1526     028F                     u3520:
  1527     028F                     l2761:
  1528     028F  3039               	movlw	57
  1529     0290  0649               	xorwf	_num5,w
  1530     0291  1D03               	btfss	3,2
  1531     0292  2A94               	goto	u3531
  1532     0293  2A95               	goto	u3530
  1533     0294                     u3531:
  1534     0294  2A4F               	goto	l2741
  1535     0295                     u3530:
  1536     0295                     l2763:
  1537                           
  1538                           ;main.c: 192:             UART_Write(num1);
  1539     0295  084D               	movf	_num1,w
  1540     0296  120A  158A  2686  120A  118A  	fcall	_UART_Write
  1541                           
  1542                           ;main.c: 193:             UART_Write(num2);
  1543     029B  1283               	bcf	3,5	;RP0=0, select bank0
  1544     029C  1303               	bcf	3,6	;RP1=0, select bank0
  1545     029D  084C               	movf	_num2,w
  1546     029E  120A  158A  2686  120A  118A  	fcall	_UART_Write
  1547                           
  1548                           ;main.c: 194:             UART_Write(num3);
  1549     02A3  1283               	bcf	3,5	;RP0=0, select bank0
  1550     02A4  1303               	bcf	3,6	;RP1=0, select bank0
  1551     02A5  084B               	movf	_num3,w
  1552     02A6  120A  158A  2686  120A  118A  	fcall	_UART_Write
  1553                           
  1554                           ;main.c: 195:             UART_Write(num4);
  1555     02AB  1283               	bcf	3,5	;RP0=0, select bank0
  1556     02AC  1303               	bcf	3,6	;RP1=0, select bank0
  1557     02AD  084A               	movf	_num4,w
  1558     02AE  120A  158A  2686  120A  118A  	fcall	_UART_Write
  1559                           
  1560                           ;main.c: 196:             UART_Write(num5);
  1561     02B3  1283               	bcf	3,5	;RP0=0, select bank0
  1562     02B4  1303               	bcf	3,6	;RP1=0, select bank0
  1563     02B5  0849               	movf	_num5,w
  1564     02B6  120A  158A  2686  120A  118A  	fcall	_UART_Write
  1565                           
  1566                           ;main.c: 197:             UART_Write('\r');
  1567     02BB  300D               	movlw	13
  1568     02BC  120A  158A  2686  120A  118A  	fcall	_UART_Write
  1569                           
  1570                           ;main.c: 198:             UART_Write('\n');
  1571     02C1  300A               	movlw	10
  1572     02C2  120A  158A  2686  120A  118A  	fcall	_UART_Write
  1573                           
  1574                           ;main.c: 199:             lcdSend(0x01, 0);
  1575     02C7  1283               	bcf	3,5	;RP0=0, select bank0
  1576     02C8  1303               	bcf	3,6	;RP1=0, select bank0
  1577     02C9  01D1               	clrf	lcdSend@tipo
  1578     02CA  3001               	movlw	1
  1579     02CB  120A  158A  26B1  120A  118A  	fcall	_lcdSend
  1580                           
  1581                           ;main.c: 200:             lcdSend(num1, 1);
  1582     02D0  1283               	bcf	3,5	;RP0=0, select bank0
  1583     02D1  1303               	bcf	3,6	;RP1=0, select bank0
  1584     02D2  01D1               	clrf	lcdSend@tipo
  1585     02D3  0AD1               	incf	lcdSend@tipo,f
  1586     02D4  084D               	movf	_num1,w
  1587     02D5  120A  158A  26B1  120A  118A  	fcall	_lcdSend
  1588                           
  1589                           ;main.c: 201:             lcdSend(num2, 1);
  1590     02DA  1283               	bcf	3,5	;RP0=0, select bank0
  1591     02DB  1303               	bcf	3,6	;RP1=0, select bank0
  1592     02DC  01D1               	clrf	lcdSend@tipo
  1593     02DD  0AD1               	incf	lcdSend@tipo,f
  1594     02DE  084C               	movf	_num2,w
  1595     02DF  120A  158A  26B1  120A  118A  	fcall	_lcdSend
  1596                           
  1597                           ;main.c: 202:             lcdSend(num3, 1);
  1598     02E4  1283               	bcf	3,5	;RP0=0, select bank0
  1599     02E5  1303               	bcf	3,6	;RP1=0, select bank0
  1600     02E6  01D1               	clrf	lcdSend@tipo
  1601     02E7  0AD1               	incf	lcdSend@tipo,f
  1602     02E8  084B               	movf	_num3,w
  1603     02E9  120A  158A  26B1  120A  118A  	fcall	_lcdSend
  1604                           
  1605                           ;main.c: 203:             lcdSend(num4, 1);
  1606     02EE  1283               	bcf	3,5	;RP0=0, select bank0
  1607     02EF  1303               	bcf	3,6	;RP1=0, select bank0
  1608     02F0  01D1               	clrf	lcdSend@tipo
  1609     02F1  0AD1               	incf	lcdSend@tipo,f
  1610     02F2  084A               	movf	_num4,w
  1611     02F3  120A  158A  26B1  120A  118A  	fcall	_lcdSend
  1612                           
  1613                           ;main.c: 204:             lcdSend(num5, 1);
  1614     02F8  1283               	bcf	3,5	;RP0=0, select bank0
  1615     02F9  1303               	bcf	3,6	;RP1=0, select bank0
  1616     02FA  01D1               	clrf	lcdSend@tipo
  1617     02FB  0AD1               	incf	lcdSend@tipo,f
  1618     02FC  0849               	movf	_num5,w
  1619     02FD  120A  158A  26B1  120A  118A  	fcall	_lcdSend
  1620     0302                     l2765:
  1621                           
  1622                           ;main.c: 205:             keypressed = 0;
  1623     0302  1283               	bcf	3,5	;RP0=0, select bank0
  1624     0303  1303               	bcf	3,6	;RP1=0, select bank0
  1625     0304  01C8               	clrf	_keypressed
  1626     0305                     l2767:
  1627                           
  1628                           ;main.c: 206:             RS485_RxEnable();
  1629     0305  120A  158A  2674  120A  118A  	fcall	_RS485_RxEnable
  1630     030A                     l2769:
  1631                           
  1632                           ;main.c: 207:             flag = 1;
  1633     030A  3001               	movlw	1
  1634     030B  1283               	bcf	3,5	;RP0=0, select bank0
  1635     030C  1303               	bcf	3,6	;RP1=0, select bank0
  1636     030D  00C0               	movwf	_flag
  1637     030E  3000               	movlw	0
  1638     030F  00C1               	movwf	_flag+1
  1639     0310                     l2771:
  1640                           
  1641                           ;main.c: 208:             UART_Read();
  1642     0310  120A  118A  2319  120A  118A  	fcall	_UART_Read
  1643     0315  2841               	goto	l2589
  1644     0316  120A  118A  2810   	ljmp	start
  1645     0319                     __end_of_main:
  1646                           
  1647                           	psect	text1
  1648     0765                     __ptext1:	
  1649 ;; *************** function _initLCD *****************
  1650 ;; Defined at:
  1651 ;;		line 321 in file "main.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;		None
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;		None
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  1    wreg      void 
  1658 ;; Registers used:
  1659 ;;		wreg, status,2, status,0, pclath, cstack
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/0
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1665 ;;      Params:         0       0       0       0       0
  1666 ;;      Locals:         0       0       0       0       0
  1667 ;;      Temps:          0       2       0       0       0
  1668 ;;      Totals:         0       2       0       0       0
  1669 ;;Total ram usage:        2 bytes
  1670 ;; Hardware stack levels used: 1
  1671 ;; Hardware stack levels required when called: 3
  1672 ;; This function calls:
  1673 ;;		_lcdSend
  1674 ;; This function is called by:
  1675 ;;		_main
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679     0765                     _initLCD:	
  1680                           ;psect for function _initLCD
  1681                           
  1682     0765                     l2349:	
  1683                           ;incstack = 0
  1684                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  1685                           
  1686                           
  1687                           ;main.c: 322:     PORTEbits.RE2 = 0;
  1688     0765  1283               	bcf	3,5	;RP0=0, select bank0
  1689     0766  1303               	bcf	3,6	;RP1=0, select bank0
  1690     0767  1109               	bcf	9,2	;volatile
  1691                           
  1692                           ;main.c: 323:     PORTEbits.RE1 = 0;
  1693     0768  1089               	bcf	9,1	;volatile
  1694     0769                     l2351:
  1695                           
  1696                           ;main.c: 324:     _delay((unsigned long)((20)*(20000000/4000.0)));
  1697     0769  3082               	movlw	130
  1698     076A  1283               	bcf	3,5	;RP0=0, select bank0
  1699     076B  1303               	bcf	3,6	;RP1=0, select bank0
  1700     076C  00D4               	movwf	??_initLCD+1
  1701     076D  30DD               	movlw	221
  1702     076E  00D3               	movwf	??_initLCD
  1703     076F                     u3547:
  1704     076F  0BD3               	decfsz	??_initLCD,f
  1705     0770  2F6F               	goto	u3547
  1706     0771  0BD4               	decfsz	??_initLCD+1,f
  1707     0772  2F6F               	goto	u3547
  1708     0773                     l2353:
  1709                           
  1710                           ;main.c: 325:     PORTEbits.RE1 = 1;
  1711     0773  1283               	bcf	3,5	;RP0=0, select bank0
  1712     0774  1303               	bcf	3,6	;RP1=0, select bank0
  1713     0775  1489               	bsf	9,1	;volatile
  1714     0776                     l2355:
  1715                           
  1716                           ;main.c: 326:     lcdSend(0x38, 0);
  1717     0776  01D1               	clrf	lcdSend@tipo
  1718     0777  3038               	movlw	56
  1719     0778  120A  158A  26B1  120A  118A  	fcall	_lcdSend
  1720     077D                     l2357:
  1721                           
  1722                           ;main.c: 327:     _delay((unsigned long)((5)*(20000000/4000.0)));
  1723     077D  3021               	movlw	33
  1724     077E  1283               	bcf	3,5	;RP0=0, select bank0
  1725     077F  1303               	bcf	3,6	;RP1=0, select bank0
  1726     0780  00D4               	movwf	??_initLCD+1
  1727     0781  3075               	movlw	117
  1728     0782  00D3               	movwf	??_initLCD
  1729     0783                     u3557:
  1730     0783  0BD3               	decfsz	??_initLCD,f
  1731     0784  2F83               	goto	u3557
  1732     0785  0BD4               	decfsz	??_initLCD+1,f
  1733     0786  2F83               	goto	u3557
  1734     0787  2F88               	nop2
  1735                           
  1736                           ;main.c: 328:     lcdSend(0x38, 0);
  1737     0788  1283               	bcf	3,5	;RP0=0, select bank0
  1738     0789  1303               	bcf	3,6	;RP1=0, select bank0
  1739     078A  01D1               	clrf	lcdSend@tipo
  1740     078B  3038               	movlw	56
  1741     078C  120A  158A  26B1  120A  118A  	fcall	_lcdSend
  1742     0791                     l2359:
  1743                           
  1744                           ;main.c: 329:     _delay((unsigned long)((1)*(20000000/4000.0)));
  1745     0791  3007               	movlw	7
  1746     0792  1283               	bcf	3,5	;RP0=0, select bank0
  1747     0793  1303               	bcf	3,6	;RP1=0, select bank0
  1748     0794  00D4               	movwf	??_initLCD+1
  1749     0795  307C               	movlw	124
  1750     0796  00D3               	movwf	??_initLCD
  1751     0797                     u3567:
  1752     0797  0BD3               	decfsz	??_initLCD,f
  1753     0798  2F97               	goto	u3567
  1754     0799  0BD4               	decfsz	??_initLCD+1,f
  1755     079A  2F97               	goto	u3567
  1756     079B  0000               	nop
  1757     079C                     l2361:
  1758                           
  1759                           ;main.c: 330:     lcdSend(0x38, 0);
  1760     079C  1283               	bcf	3,5	;RP0=0, select bank0
  1761     079D  1303               	bcf	3,6	;RP1=0, select bank0
  1762     079E  01D1               	clrf	lcdSend@tipo
  1763     079F  3038               	movlw	56
  1764     07A0  120A  158A  26B1  120A  118A  	fcall	_lcdSend
  1765     07A5                     l2363:
  1766                           
  1767                           ;main.c: 331:     lcdSend(0x08, 0);
  1768     07A5  1283               	bcf	3,5	;RP0=0, select bank0
  1769     07A6  1303               	bcf	3,6	;RP1=0, select bank0
  1770     07A7  01D1               	clrf	lcdSend@tipo
  1771     07A8  3008               	movlw	8
  1772     07A9  120A  158A  26B1  120A  118A  	fcall	_lcdSend
  1773     07AE                     l2365:
  1774                           
  1775                           ;main.c: 332:     lcdSend(0x0F, 0);
  1776     07AE  1283               	bcf	3,5	;RP0=0, select bank0
  1777     07AF  1303               	bcf	3,6	;RP1=0, select bank0
  1778     07B0  01D1               	clrf	lcdSend@tipo
  1779     07B1  300F               	movlw	15
  1780     07B2  120A  158A  26B1  120A  118A  	fcall	_lcdSend
  1781     07B7                     l2367:
  1782                           
  1783                           ;main.c: 333:     lcdSend(0x01, 0);
  1784     07B7  1283               	bcf	3,5	;RP0=0, select bank0
  1785     07B8  1303               	bcf	3,6	;RP1=0, select bank0
  1786     07B9  01D1               	clrf	lcdSend@tipo
  1787     07BA  3001               	movlw	1
  1788     07BB  120A  158A  26B1  120A  118A  	fcall	_lcdSend
  1789     07C0                     l2369:
  1790                           
  1791                           ;main.c: 334:     lcdSend(0x0C, 0);
  1792     07C0  1283               	bcf	3,5	;RP0=0, select bank0
  1793     07C1  1303               	bcf	3,6	;RP1=0, select bank0
  1794     07C2  01D1               	clrf	lcdSend@tipo
  1795     07C3  300C               	movlw	12
  1796     07C4  120A  158A  26B1  120A  118A  	fcall	_lcdSend
  1797     07C9                     l2371:
  1798                           
  1799                           ;main.c: 335:     lcdSend(0x80, 0);
  1800     07C9  1283               	bcf	3,5	;RP0=0, select bank0
  1801     07CA  1303               	bcf	3,6	;RP1=0, select bank0
  1802     07CB  01D1               	clrf	lcdSend@tipo
  1803     07CC  3080               	movlw	128
  1804     07CD  120A  158A  26B1  120A  118A  	fcall	_lcdSend
  1805     07D2                     l212:
  1806     07D2  0008               	return
  1807     07D3                     __end_of_initLCD:
  1808                           
  1809                           	psect	text2
  1810     0319                     __ptext2:	
  1811 ;; *************** function _UART_Read *****************
  1812 ;; Defined at:
  1813 ;;		line 247 in file "main.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;		None
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;  count           1   28[BANK0 ] unsigned char 
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  1    wreg      unsigned char 
  1820 ;; Registers used:
  1821 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1827 ;;      Params:         0       0       0       0       0
  1828 ;;      Locals:         0       1       0       0       0
  1829 ;;      Temps:          0       0       3       0       0
  1830 ;;      Totals:         0       1       3       0       0
  1831 ;;Total ram usage:        4 bytes
  1832 ;; Hardware stack levels used: 1
  1833 ;; Hardware stack levels required when called: 5
  1834 ;; This function calls:
  1835 ;;		_RS485_RxEnable
  1836 ;;		_RS485_TxEnable
  1837 ;;		_UART_Write
  1838 ;;		_intToString
  1839 ;;		_lcdPrint
  1840 ;;		_lcdSend
  1841 ;; This function is called by:
  1842 ;;		_main
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846     0319                     _UART_Read:	
  1847                           ;psect for function _UART_Read
  1848                           
  1849     0319                     l2449:	
  1850                           ;incstack = 0
  1851                           ; Regs used in _UART_Read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1852                           
  1853                           
  1854                           ;main.c: 248:     char count = 0;
  1855     0319  1283               	bcf	3,5	;RP0=0, select bank0
  1856     031A  1303               	bcf	3,6	;RP1=0, select bank0
  1857     031B  01ED               	clrf	UART_Read@count
  1858     031C                     l2451:
  1859                           
  1860                           ;main.c: 249:     countdown = 60;
  1861     031C  303C               	movlw	60
  1862     031D  00EE               	movwf	_countdown
  1863                           
  1864                           ;main.c: 250:     while (countdown != 0){
  1865     031E  2CE2               	goto	l2565
  1866     031F                     l2453:
  1867                           
  1868                           ;main.c: 251:         if (count != 5){
  1869     031F  3005               	movlw	5
  1870     0320  066D               	xorwf	UART_Read@count,w
  1871     0321  1903               	btfsc	3,2
  1872     0322  2B24               	goto	u2901
  1873     0323  2B25               	goto	u2900
  1874     0324                     u2901:
  1875     0324  2C78               	goto	l2535
  1876     0325                     u2900:
  1877     0325                     l2455:
  1878                           
  1879                           ;main.c: 252:             if(keypressed != 0 && count == 0){
  1880     0325  0848               	movf	_keypressed,w
  1881     0326  1903               	btfsc	3,2
  1882     0327  2B29               	goto	u2911
  1883     0328  2B2A               	goto	u2910
  1884     0329                     u2911:
  1885     0329  2B5B               	goto	l2469
  1886     032A                     u2910:
  1887     032A                     l2457:
  1888     032A  086D               	movf	UART_Read@count,w
  1889     032B  1D03               	btfss	3,2
  1890     032C  2B2E               	goto	u2921
  1891     032D  2B2F               	goto	u2920
  1892     032E                     u2921:
  1893     032E  2B5B               	goto	l2469
  1894     032F                     u2920:
  1895     032F                     l2459:
  1896                           
  1897                           ;main.c: 253:                 lcdSend(0x01, 0);
  1898     032F  01D1               	clrf	lcdSend@tipo
  1899     0330  3001               	movlw	1
  1900     0331  120A  158A  26B1  120A  118A  	fcall	_lcdSend
  1901     0336                     l2461:
  1902                           
  1903                           ;main.c: 254:                 lcdSend(keys[keypressed], 1);
  1904     0336  1283               	bcf	3,5	;RP0=0, select bank0
  1905     0337  1303               	bcf	3,6	;RP1=0, select bank0
  1906     0338  01D1               	clrf	lcdSend@tipo
  1907     0339  0AD1               	incf	lcdSend@tipo,f
  1908     033A  0848               	movf	_keypressed,w
  1909     033B  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  1910     033C  0084               	movwf	4
  1911     033D  120A  118A  2675  120A  118A  	fcall	stringdir
  1912     0342  120A  158A  26B1  120A  118A  	fcall	_lcdSend
  1913     0347                     l2463:
  1914                           
  1915                           ;main.c: 255:                 num1 = keys[keypressed];
  1916     0347  1283               	bcf	3,5	;RP0=0, select bank0
  1917     0348  1303               	bcf	3,6	;RP1=0, select bank0
  1918     0349  0848               	movf	_keypressed,w
  1919     034A  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  1920     034B  0084               	movwf	4
  1921     034C  120A  118A  2675  120A  118A  	fcall	stringdir
  1922     0351  00CD               	movwf	_num1
  1923     0352                     l2465:
  1924                           
  1925                           ;main.c: 256:                 keypressed = 0;
  1926     0352  01C8               	clrf	_keypressed
  1927     0353                     l2467:
  1928                           
  1929                           ;main.c: 257:                 count ++;
  1930     0353  3001               	movlw	1
  1931     0354  1683               	bsf	3,5	;RP0=1, select bank1
  1932     0355  1303               	bcf	3,6	;RP1=0, select bank1
  1933     0356  00A0               	movwf	??_UART_Read^(0+128)
  1934     0357  0820               	movf	??_UART_Read^(0+128),w
  1935     0358  1283               	bcf	3,5	;RP0=0, select bank0
  1936     0359  1303               	bcf	3,6	;RP1=0, select bank0
  1937     035A  07ED               	addwf	UART_Read@count,f
  1938     035B                     l2469:
  1939                           
  1940                           ;main.c: 259:             if(keypressed != 0 && count == 1){
  1941     035B  0848               	movf	_keypressed,w
  1942     035C  1903               	btfsc	3,2
  1943     035D  2B5F               	goto	u2931
  1944     035E  2B60               	goto	u2930
  1945     035F                     u2931:
  1946     035F  2B92               	goto	l2483
  1947     0360                     u2930:
  1948     0360                     l2471:
  1949     0360  036D               	decf	UART_Read@count,w
  1950     0361  1D03               	btfss	3,2
  1951     0362  2B64               	goto	u2941
  1952     0363  2B65               	goto	u2940
  1953     0364                     u2941:
  1954     0364  2B92               	goto	l2483
  1955     0365                     u2940:
  1956     0365                     l2473:
  1957                           
  1958                           ;main.c: 260:                 lcdSend(0x80 + count, 0);
  1959     0365  01D1               	clrf	lcdSend@tipo
  1960     0366  086D               	movf	UART_Read@count,w
  1961     0367  3E80               	addlw	128
  1962     0368  120A  158A  26B1  120A  118A  	fcall	_lcdSend
  1963     036D                     l2475:
  1964                           
  1965                           ;main.c: 261:                 lcdSend(keys[keypressed], 1);
  1966     036D  1283               	bcf	3,5	;RP0=0, select bank0
  1967     036E  1303               	bcf	3,6	;RP1=0, select bank0
  1968     036F  01D1               	clrf	lcdSend@tipo
  1969     0370  0AD1               	incf	lcdSend@tipo,f
  1970     0371  0848               	movf	_keypressed,w
  1971     0372  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  1972     0373  0084               	movwf	4
  1973     0374  120A  118A  2675  120A  118A  	fcall	stringdir
  1974     0379  120A  158A  26B1  120A  118A  	fcall	_lcdSend
  1975     037E                     l2477:
  1976                           
  1977                           ;main.c: 262:                 num2 = keys[keypressed];
  1978     037E  1283               	bcf	3,5	;RP0=0, select bank0
  1979     037F  1303               	bcf	3,6	;RP1=0, select bank0
  1980     0380  0848               	movf	_keypressed,w
  1981     0381  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  1982     0382  0084               	movwf	4
  1983     0383  120A  118A  2675  120A  118A  	fcall	stringdir
  1984     0388  00CC               	movwf	_num2
  1985     0389                     l2479:
  1986                           
  1987                           ;main.c: 263:                 keypressed = 0;
  1988     0389  01C8               	clrf	_keypressed
  1989     038A                     l2481:
  1990                           
  1991                           ;main.c: 264:                 count ++;
  1992     038A  3001               	movlw	1
  1993     038B  1683               	bsf	3,5	;RP0=1, select bank1
  1994     038C  1303               	bcf	3,6	;RP1=0, select bank1
  1995     038D  00A0               	movwf	??_UART_Read^(0+128)
  1996     038E  0820               	movf	??_UART_Read^(0+128),w
  1997     038F  1283               	bcf	3,5	;RP0=0, select bank0
  1998     0390  1303               	bcf	3,6	;RP1=0, select bank0
  1999     0391  07ED               	addwf	UART_Read@count,f
  2000     0392                     l2483:
  2001                           
  2002                           ;main.c: 266:             if(keypressed != 0 && count == 2){
  2003     0392  0848               	movf	_keypressed,w
  2004     0393  1903               	btfsc	3,2
  2005     0394  2B96               	goto	u2951
  2006     0395  2B97               	goto	u2950
  2007     0396                     u2951:
  2008     0396  2BCA               	goto	l2497
  2009     0397                     u2950:
  2010     0397                     l2485:
  2011     0397  3002               	movlw	2
  2012     0398  066D               	xorwf	UART_Read@count,w
  2013     0399  1D03               	btfss	3,2
  2014     039A  2B9C               	goto	u2961
  2015     039B  2B9D               	goto	u2960
  2016     039C                     u2961:
  2017     039C  2BCA               	goto	l2497
  2018     039D                     u2960:
  2019     039D                     l2487:
  2020                           
  2021                           ;main.c: 267:                 lcdSend(0x80 + count, 0);
  2022     039D  01D1               	clrf	lcdSend@tipo
  2023     039E  086D               	movf	UART_Read@count,w
  2024     039F  3E80               	addlw	128
  2025     03A0  120A  158A  26B1  120A  118A  	fcall	_lcdSend
  2026     03A5                     l2489:
  2027                           
  2028                           ;main.c: 268:                 lcdSend(keys[keypressed], 1);
  2029     03A5  1283               	bcf	3,5	;RP0=0, select bank0
  2030     03A6  1303               	bcf	3,6	;RP1=0, select bank0
  2031     03A7  01D1               	clrf	lcdSend@tipo
  2032     03A8  0AD1               	incf	lcdSend@tipo,f
  2033     03A9  0848               	movf	_keypressed,w
  2034     03AA  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2035     03AB  0084               	movwf	4
  2036     03AC  120A  118A  2675  120A  118A  	fcall	stringdir
  2037     03B1  120A  158A  26B1  120A  118A  	fcall	_lcdSend
  2038     03B6                     l2491:
  2039                           
  2040                           ;main.c: 269:                 num3 = keys[keypressed];
  2041     03B6  1283               	bcf	3,5	;RP0=0, select bank0
  2042     03B7  1303               	bcf	3,6	;RP1=0, select bank0
  2043     03B8  0848               	movf	_keypressed,w
  2044     03B9  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2045     03BA  0084               	movwf	4
  2046     03BB  120A  118A  2675  120A  118A  	fcall	stringdir
  2047     03C0  00CB               	movwf	_num3
  2048     03C1                     l2493:
  2049                           
  2050                           ;main.c: 270:                 keypressed = 0;
  2051     03C1  01C8               	clrf	_keypressed
  2052     03C2                     l2495:
  2053                           
  2054                           ;main.c: 271:                 count ++;
  2055     03C2  3001               	movlw	1
  2056     03C3  1683               	bsf	3,5	;RP0=1, select bank1
  2057     03C4  1303               	bcf	3,6	;RP1=0, select bank1
  2058     03C5  00A0               	movwf	??_UART_Read^(0+128)
  2059     03C6  0820               	movf	??_UART_Read^(0+128),w
  2060     03C7  1283               	bcf	3,5	;RP0=0, select bank0
  2061     03C8  1303               	bcf	3,6	;RP1=0, select bank0
  2062     03C9  07ED               	addwf	UART_Read@count,f
  2063     03CA                     l2497:
  2064                           
  2065                           ;main.c: 273:             if(keypressed != 0 && count == 3){
  2066     03CA  0848               	movf	_keypressed,w
  2067     03CB  1903               	btfsc	3,2
  2068     03CC  2BCE               	goto	u2971
  2069     03CD  2BCF               	goto	u2970
  2070     03CE                     u2971:
  2071     03CE  2C02               	goto	l2511
  2072     03CF                     u2970:
  2073     03CF                     l2499:
  2074     03CF  3003               	movlw	3
  2075     03D0  066D               	xorwf	UART_Read@count,w
  2076     03D1  1D03               	btfss	3,2
  2077     03D2  2BD4               	goto	u2981
  2078     03D3  2BD5               	goto	u2980
  2079     03D4                     u2981:
  2080     03D4  2C02               	goto	l2511
  2081     03D5                     u2980:
  2082     03D5                     l2501:
  2083                           
  2084                           ;main.c: 274:                 lcdSend(0x80 + count, 0);
  2085     03D5  01D1               	clrf	lcdSend@tipo
  2086     03D6  086D               	movf	UART_Read@count,w
  2087     03D7  3E80               	addlw	128
  2088     03D8  120A  158A  26B1  120A  118A  	fcall	_lcdSend
  2089     03DD                     l2503:
  2090                           
  2091                           ;main.c: 275:                 lcdSend(keys[keypressed], 1);
  2092     03DD  1283               	bcf	3,5	;RP0=0, select bank0
  2093     03DE  1303               	bcf	3,6	;RP1=0, select bank0
  2094     03DF  01D1               	clrf	lcdSend@tipo
  2095     03E0  0AD1               	incf	lcdSend@tipo,f
  2096     03E1  0848               	movf	_keypressed,w
  2097     03E2  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2098     03E3  0084               	movwf	4
  2099     03E4  120A  118A  2675  120A  118A  	fcall	stringdir
  2100     03E9  120A  158A  26B1  120A  118A  	fcall	_lcdSend
  2101     03EE                     l2505:
  2102                           
  2103                           ;main.c: 276:                 num4 = keys[keypressed];
  2104     03EE  1283               	bcf	3,5	;RP0=0, select bank0
  2105     03EF  1303               	bcf	3,6	;RP1=0, select bank0
  2106     03F0  0848               	movf	_keypressed,w
  2107     03F1  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2108     03F2  0084               	movwf	4
  2109     03F3  120A  118A  2675  120A  118A  	fcall	stringdir
  2110     03F8  00CA               	movwf	_num4
  2111     03F9                     l2507:
  2112                           
  2113                           ;main.c: 277:                 keypressed = 0;
  2114     03F9  01C8               	clrf	_keypressed
  2115     03FA                     l2509:
  2116                           
  2117                           ;main.c: 278:                 count ++;
  2118     03FA  3001               	movlw	1
  2119     03FB  1683               	bsf	3,5	;RP0=1, select bank1
  2120     03FC  1303               	bcf	3,6	;RP1=0, select bank1
  2121     03FD  00A0               	movwf	??_UART_Read^(0+128)
  2122     03FE  0820               	movf	??_UART_Read^(0+128),w
  2123     03FF  1283               	bcf	3,5	;RP0=0, select bank0
  2124     0400  1303               	bcf	3,6	;RP1=0, select bank0
  2125     0401  07ED               	addwf	UART_Read@count,f
  2126     0402                     l2511:
  2127                           
  2128                           ;main.c: 280:             if(keypressed != 0 && count == 4){
  2129     0402  0848               	movf	_keypressed,w
  2130     0403  1903               	btfsc	3,2
  2131     0404  2C06               	goto	u2991
  2132     0405  2C07               	goto	u2990
  2133     0406                     u2991:
  2134     0406  2C3A               	goto	l2525
  2135     0407                     u2990:
  2136     0407                     l2513:
  2137     0407  3004               	movlw	4
  2138     0408  066D               	xorwf	UART_Read@count,w
  2139     0409  1D03               	btfss	3,2
  2140     040A  2C0C               	goto	u3001
  2141     040B  2C0D               	goto	u3000
  2142     040C                     u3001:
  2143     040C  2C3A               	goto	l2525
  2144     040D                     u3000:
  2145     040D                     l2515:
  2146                           
  2147                           ;main.c: 281:                 lcdSend(0x80 + count, 0);
  2148     040D  01D1               	clrf	lcdSend@tipo
  2149     040E  086D               	movf	UART_Read@count,w
  2150     040F  3E80               	addlw	128
  2151     0410  120A  158A  26B1  120A  118A  	fcall	_lcdSend
  2152     0415                     l2517:
  2153                           
  2154                           ;main.c: 282:                 lcdSend(keys[keypressed], 1);
  2155     0415  1283               	bcf	3,5	;RP0=0, select bank0
  2156     0416  1303               	bcf	3,6	;RP1=0, select bank0
  2157     0417  01D1               	clrf	lcdSend@tipo
  2158     0418  0AD1               	incf	lcdSend@tipo,f
  2159     0419  0848               	movf	_keypressed,w
  2160     041A  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2161     041B  0084               	movwf	4
  2162     041C  120A  118A  2675  120A  118A  	fcall	stringdir
  2163     0421  120A  158A  26B1  120A  118A  	fcall	_lcdSend
  2164     0426                     l2519:
  2165                           
  2166                           ;main.c: 283:                 num5 = keys[keypressed];
  2167     0426  1283               	bcf	3,5	;RP0=0, select bank0
  2168     0427  1303               	bcf	3,6	;RP1=0, select bank0
  2169     0428  0848               	movf	_keypressed,w
  2170     0429  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2171     042A  0084               	movwf	4
  2172     042B  120A  118A  2675  120A  118A  	fcall	stringdir
  2173     0430  00C9               	movwf	_num5
  2174     0431                     l2521:
  2175                           
  2176                           ;main.c: 284:                 keypressed = 0;
  2177     0431  01C8               	clrf	_keypressed
  2178     0432                     l2523:
  2179                           
  2180                           ;main.c: 285:                 count ++;
  2181     0432  3001               	movlw	1
  2182     0433  1683               	bsf	3,5	;RP0=1, select bank1
  2183     0434  1303               	bcf	3,6	;RP1=0, select bank1
  2184     0435  00A0               	movwf	??_UART_Read^(0+128)
  2185     0436  0820               	movf	??_UART_Read^(0+128),w
  2186     0437  1283               	bcf	3,5	;RP0=0, select bank0
  2187     0438  1303               	bcf	3,6	;RP1=0, select bank0
  2188     0439  07ED               	addwf	UART_Read@count,f
  2189     043A                     l2525:
  2190                           
  2191                           ;main.c: 287:             intToString(countdown, print_countdown);
  2192     043A  086E               	movf	_countdown,w
  2193     043B  1683               	bsf	3,5	;RP0=1, select bank1
  2194     043C  1303               	bcf	3,6	;RP1=0, select bank1
  2195     043D  00A0               	movwf	??_UART_Read^(0+128)
  2196     043E  01A1               	clrf	(??_UART_Read^(0+128)+1)
  2197     043F  0820               	movf	??_UART_Read^(0+128),w
  2198     0440  1283               	bcf	3,5	;RP0=0, select bank0
  2199     0441  1303               	bcf	3,6	;RP1=0, select bank0
  2200     0442  00E4               	movwf	intToString@n
  2201     0443  1683               	bsf	3,5	;RP0=1, select bank1
  2202     0444  1303               	bcf	3,6	;RP1=0, select bank1
  2203     0445  0821               	movf	(??_UART_Read+1)^(0+128),w
  2204     0446  1283               	bcf	3,5	;RP0=0, select bank0
  2205     0447  1303               	bcf	3,6	;RP1=0, select bank0
  2206     0448  00E5               	movwf	intToString@n+1
  2207     0449  304E               	movlw	(low (_print_countdown| 0))& (0+255)
  2208     044A  00E6               	movwf	intToString@str
  2209     044B  120A  118A  26E9  120A  118A  	fcall	_intToString
  2210     0450                     l2527:
  2211                           
  2212                           ;main.c: 288:             lcdSend(0xC0, 0);
  2213     0450  1283               	bcf	3,5	;RP0=0, select bank0
  2214     0451  1303               	bcf	3,6	;RP1=0, select bank0
  2215     0452  01D1               	clrf	lcdSend@tipo
  2216     0453  30C0               	movlw	192
  2217     0454  120A  158A  26B1  120A  118A  	fcall	_lcdSend
  2218     0459                     l2529:
  2219                           
  2220                           ;main.c: 289:             lcdPrint(print_countdown);
  2221     0459  304E               	movlw	(low (_print_countdown| 0))& (0+255)
  2222     045A  1283               	bcf	3,5	;RP0=0, select bank0
  2223     045B  1303               	bcf	3,6	;RP1=0, select bank0
  2224     045C  00D3               	movwf	lcdPrint@str
  2225     045D  3000               	movlw	0
  2226     045E  00D4               	movwf	lcdPrint@str+1
  2227     045F  120A  158A  26F4  120A  118A  	fcall	_lcdPrint
  2228     0464                     l2531:
  2229                           
  2230                           ;main.c: 290:             countdown --;
  2231     0464  3001               	movlw	1
  2232     0465  1283               	bcf	3,5	;RP0=0, select bank0
  2233     0466  1303               	bcf	3,6	;RP1=0, select bank0
  2234     0467  02EE               	subwf	_countdown,f
  2235     0468                     l2533:
  2236                           
  2237                           ;main.c: 291:             _delay((unsigned long)((80)*(20000000/4000.0)));
  2238     0468  3003               	movlw	3
  2239     0469  1683               	bsf	3,5	;RP0=1, select bank1
  2240     046A  1303               	bcf	3,6	;RP1=0, select bank1
  2241     046B  00A2               	movwf	(??_UART_Read^(0+128)+2)
  2242     046C  3008               	movlw	8
  2243     046D  00A1               	movwf	(??_UART_Read^(0+128)+1)
  2244     046E  3076               	movlw	118
  2245     046F  00A0               	movwf	??_UART_Read^(0+128)
  2246     0470                     u3577:
  2247     0470  0BA0               	decfsz	??_UART_Read^(0+128),f
  2248     0471  2C70               	goto	u3577
  2249     0472  0BA1               	decfsz	(??_UART_Read^(0+128)+1),f
  2250     0473  2C70               	goto	u3577
  2251     0474  0BA2               	decfsz	(??_UART_Read^(0+128)+2),f
  2252     0475  2C70               	goto	u3577
  2253     0476  0000               	nop
  2254                           
  2255                           ;main.c: 292:         }
  2256     0477  2CE2               	goto	l2565
  2257     0478                     l2535:
  2258                           
  2259                           ;main.c: 294:             RS485_TxEnable();
  2260     0478  120A  158A  2679  120A  118A  	fcall	_RS485_TxEnable
  2261     047D                     l2537:
  2262                           
  2263                           ;main.c: 295:             UART_Write(num1);
  2264     047D  1283               	bcf	3,5	;RP0=0, select bank0
  2265     047E  1303               	bcf	3,6	;RP1=0, select bank0
  2266     047F  084D               	movf	_num1,w
  2267     0480  120A  158A  2686  120A  118A  	fcall	_UART_Write
  2268     0485                     l2539:
  2269                           
  2270                           ;main.c: 296:             UART_Write(num2);
  2271     0485  1283               	bcf	3,5	;RP0=0, select bank0
  2272     0486  1303               	bcf	3,6	;RP1=0, select bank0
  2273     0487  084C               	movf	_num2,w
  2274     0488  120A  158A  2686  120A  118A  	fcall	_UART_Write
  2275     048D                     l2541:
  2276                           
  2277                           ;main.c: 297:             UART_Write(num3);
  2278     048D  1283               	bcf	3,5	;RP0=0, select bank0
  2279     048E  1303               	bcf	3,6	;RP1=0, select bank0
  2280     048F  084B               	movf	_num3,w
  2281     0490  120A  158A  2686  120A  118A  	fcall	_UART_Write
  2282     0495                     l2543:
  2283                           
  2284                           ;main.c: 298:             UART_Write(num4);
  2285     0495  1283               	bcf	3,5	;RP0=0, select bank0
  2286     0496  1303               	bcf	3,6	;RP1=0, select bank0
  2287     0497  084A               	movf	_num4,w
  2288     0498  120A  158A  2686  120A  118A  	fcall	_UART_Write
  2289     049D                     l2545:
  2290                           
  2291                           ;main.c: 299:             UART_Write(num5);
  2292     049D  1283               	bcf	3,5	;RP0=0, select bank0
  2293     049E  1303               	bcf	3,6	;RP1=0, select bank0
  2294     049F  0849               	movf	_num5,w
  2295     04A0  120A  158A  2686  120A  118A  	fcall	_UART_Write
  2296     04A5                     l2547:
  2297                           
  2298                           ;main.c: 300:             UART_Write('\r');
  2299     04A5  300D               	movlw	13
  2300     04A6  120A  158A  2686  120A  118A  	fcall	_UART_Write
  2301     04AB                     l2549:
  2302                           
  2303                           ;main.c: 301:             UART_Write('\n');
  2304     04AB  300A               	movlw	10
  2305     04AC  120A  158A  2686  120A  118A  	fcall	_UART_Write
  2306     04B1                     l2551:
  2307                           
  2308                           ;main.c: 302:             RS485_RxEnable();
  2309     04B1  120A  158A  2674  120A  118A  	fcall	_RS485_RxEnable
  2310                           
  2311                           ;main.c: 303:             lcdSend(0x01, 0);
  2312     04B6  1283               	bcf	3,5	;RP0=0, select bank0
  2313     04B7  1303               	bcf	3,6	;RP1=0, select bank0
  2314     04B8  01D1               	clrf	lcdSend@tipo
  2315     04B9  3001               	movlw	1
  2316     04BA  120A  158A  26B1  120A  118A  	fcall	_lcdSend
  2317     04BF                     l2553:
  2318                           
  2319                           ;main.c: 304:             lcdPrint("Mandato");
  2320     04BF  3067               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2321     04C0  1283               	bcf	3,5	;RP0=0, select bank0
  2322     04C1  1303               	bcf	3,6	;RP1=0, select bank0
  2323     04C2  00D3               	movwf	lcdPrint@str
  2324     04C3  3080               	movlw	128
  2325     04C4  00D4               	movwf	lcdPrint@str+1
  2326     04C5  120A  158A  26F4  120A  118A  	fcall	_lcdPrint
  2327     04CA                     l2555:
  2328                           
  2329                           ;main.c: 305:             RCIF = 0;
  2330     04CA  1283               	bcf	3,5	;RP0=0, select bank0
  2331     04CB  1303               	bcf	3,6	;RP1=0, select bank0
  2332     04CC  128C               	bcf	12,5	;volatile
  2333     04CD                     l2557:
  2334                           
  2335                           ;main.c: 306:             countdown = 60;
  2336     04CD  303C               	movlw	60
  2337     04CE  00EE               	movwf	_countdown
  2338     04CF                     l2559:
  2339                           
  2340                           ;main.c: 307:             _delay((unsigned long)((1000)*(20000000/4000.0)));
  2341     04CF  301A               	movlw	26
  2342     04D0  1683               	bsf	3,5	;RP0=1, select bank1
  2343     04D1  1303               	bcf	3,6	;RP1=0, select bank1
  2344     04D2  00A2               	movwf	(??_UART_Read^(0+128)+2)
  2345     04D3  305E               	movlw	94
  2346     04D4  00A1               	movwf	(??_UART_Read^(0+128)+1)
  2347     04D5  306D               	movlw	109
  2348     04D6  00A0               	movwf	??_UART_Read^(0+128)
  2349     04D7                     u3587:
  2350     04D7  0BA0               	decfsz	??_UART_Read^(0+128),f
  2351     04D8  2CD7               	goto	u3587
  2352     04D9  0BA1               	decfsz	(??_UART_Read^(0+128)+1),f
  2353     04DA  2CD7               	goto	u3587
  2354     04DB  0BA2               	decfsz	(??_UART_Read^(0+128)+2),f
  2355     04DC  2CD7               	goto	u3587
  2356     04DD  2CDE               	nop2
  2357     04DE                     l2561:
  2358                           
  2359                           ;main.c: 308:             return RCREG;;	Return value of _UART_Read is never used
  2360     04DE  1283               	bcf	3,5	;RP0=0, select bank0
  2361     04DF  1303               	bcf	3,6	;RP1=0, select bank0
  2362     04E0  081A               	movf	26,w	;volatile
  2363     04E1  2CFC               	goto	l208
  2364     04E2                     l2565:
  2365                           
  2366                           ;main.c: 250:     while (countdown != 0){
  2367     04E2  1283               	bcf	3,5	;RP0=0, select bank0
  2368     04E3  1303               	bcf	3,6	;RP1=0, select bank0
  2369     04E4  086E               	movf	_countdown,w
  2370     04E5  1D03               	btfss	3,2
  2371     04E6  2CE8               	goto	u3011
  2372     04E7  2CE9               	goto	u3010
  2373     04E8                     u3011:
  2374     04E8  2B1F               	goto	l2453
  2375     04E9                     u3010:
  2376     04E9                     l2567:
  2377                           
  2378                           ;main.c: 311:     lcdSend(0x01, 0);
  2379     04E9  01D1               	clrf	lcdSend@tipo
  2380     04EA  3001               	movlw	1
  2381     04EB  120A  158A  26B1  120A  118A  	fcall	_lcdSend
  2382     04F0                     l2569:
  2383                           
  2384                           ;main.c: 312:     lcdPrint("Codice Scaduto");
  2385     04F0  3014               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2386     04F1  1283               	bcf	3,5	;RP0=0, select bank0
  2387     04F2  1303               	bcf	3,6	;RP1=0, select bank0
  2388     04F3  00D3               	movwf	lcdPrint@str
  2389     04F4  3080               	movlw	128
  2390     04F5  00D4               	movwf	lcdPrint@str+1
  2391     04F6  120A  158A  26F4  120A  118A  	fcall	_lcdPrint
  2392     04FB  2CCA               	goto	l2555
  2393     04FC                     l208:
  2394     04FC  0008               	return
  2395     04FD                     __end_of_UART_Read:
  2396                           
  2397                           	psect	text3
  2398     0EF4                     __ptext3:	
  2399 ;; *************** function _lcdPrint *****************
  2400 ;; Defined at:
  2401 ;;		line 359 in file "main.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;  str             2    2[BANK0 ] PTR unsigned char 
  2404 ;;		 -> STR_8(15), STR_7(8), print_countdown(3), STR_6(14), 
  2405 ;;		 -> STR_5(13), STR_4(12), STR_3(11), STR_2(10), 
  2406 ;;		 -> STR_1(8), 
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;  n               2    7[BANK0 ] int 
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      void 
  2411 ;; Registers used:
  2412 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2418 ;;      Params:         0       2       0       0       0
  2419 ;;      Locals:         0       2       0       0       0
  2420 ;;      Temps:          0       3       0       0       0
  2421 ;;      Totals:         0       7       0       0       0
  2422 ;;Total ram usage:        7 bytes
  2423 ;; Hardware stack levels used: 1
  2424 ;; Hardware stack levels required when called: 3
  2425 ;; This function calls:
  2426 ;;		_lcdSend
  2427 ;; This function is called by:
  2428 ;;		_main
  2429 ;;		_UART_Read
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433     0EF4                     _lcdPrint:	
  2434                           ;psect for function _lcdPrint
  2435                           
  2436     0EF4                     l2299:	
  2437                           ;incstack = 0
  2438                           ; Regs used in _lcdPrint: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2439                           
  2440                           
  2441                           ;main.c: 360:     int n = 0;
  2442     0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  2443     0EF5  1303               	bcf	3,6	;RP1=0, select bank0
  2444     0EF6  01D8               	clrf	lcdPrint@n
  2445     0EF7  01D9               	clrf	lcdPrint@n+1
  2446                           
  2447                           ;main.c: 361:     while (str[n] != '\0') {
  2448     0EF8  2F1F               	goto	l2305
  2449     0EF9                     l2301:
  2450                           
  2451                           ;main.c: 362:         lcdSend(str[n++], 1);
  2452     0EF9  01D1               	clrf	lcdSend@tipo
  2453     0EFA  0AD1               	incf	lcdSend@tipo,f
  2454     0EFB  0858               	movf	lcdPrint@n,w
  2455     0EFC  0753               	addwf	lcdPrint@str,w
  2456     0EFD  00D6               	movwf	??_lcdPrint+1
  2457     0EFE  0854               	movf	lcdPrint@str+1,w
  2458     0EFF  00D5               	movwf	??_lcdPrint
  2459     0F00  1803               	skipnc
  2460     0F01  0AD5               	incf	??_lcdPrint,f
  2461     0F02  1FD8               	btfss	lcdPrint@n,7
  2462     0F03  2F05               	goto	u2730
  2463     0F04  03D5               	decf	??_lcdPrint,f
  2464     0F05                     u2730:
  2465     0F05  1283               	bcf	3,5	;RP0=0, select bank0
  2466     0F06  1303               	bcf	3,6	;RP1=0, select bank0
  2467     0F07  0855               	movf	??_lcdPrint,w
  2468     0F08  00D7               	movwf	??_lcdPrint+2
  2469     0F09  0857               	movf	??_lcdPrint+2,w
  2470     0F0A  00FF               	movwf	btemp+1
  2471     0F0B  0856               	movf	??_lcdPrint+1,w
  2472     0F0C  0084               	movwf	4
  2473     0F0D  120A  118A  266B  120A  158A  	fcall	stringtab
  2474     0F12  120A  158A  26B1  120A  158A  	fcall	_lcdSend
  2475     0F17                     l2303:
  2476     0F17  3001               	movlw	1
  2477     0F18  1283               	bcf	3,5	;RP0=0, select bank0
  2478     0F19  1303               	bcf	3,6	;RP1=0, select bank0
  2479     0F1A  07D8               	addwf	lcdPrint@n,f
  2480     0F1B  1803               	skipnc
  2481     0F1C  0AD9               	incf	lcdPrint@n+1,f
  2482     0F1D  3000               	movlw	0
  2483     0F1E  07D9               	addwf	lcdPrint@n+1,f
  2484     0F1F                     l2305:
  2485                           
  2486                           ;main.c: 361:     while (str[n] != '\0') {
  2487     0F1F  0858               	movf	lcdPrint@n,w
  2488     0F20  0753               	addwf	lcdPrint@str,w
  2489     0F21  00D6               	movwf	??_lcdPrint+1
  2490     0F22  0854               	movf	lcdPrint@str+1,w
  2491     0F23  00D5               	movwf	??_lcdPrint
  2492     0F24  1803               	skipnc
  2493     0F25  0AD5               	incf	??_lcdPrint,f
  2494     0F26  1FD8               	btfss	lcdPrint@n,7
  2495     0F27  2F29               	goto	u2740
  2496     0F28  03D5               	decf	??_lcdPrint,f
  2497     0F29                     u2740:
  2498     0F29  1283               	bcf	3,5	;RP0=0, select bank0
  2499     0F2A  1303               	bcf	3,6	;RP1=0, select bank0
  2500     0F2B  0855               	movf	??_lcdPrint,w
  2501     0F2C  00D7               	movwf	??_lcdPrint+2
  2502     0F2D  0857               	movf	??_lcdPrint+2,w
  2503     0F2E  00FF               	movwf	btemp+1
  2504     0F2F  0856               	movf	??_lcdPrint+1,w
  2505     0F30  0084               	movwf	4
  2506     0F31  120A  118A  266B  120A  158A  	fcall	stringtab
  2507     0F36  3A00               	xorlw	0
  2508     0F37  1D03               	skipz
  2509     0F38  2F3A               	goto	u2751
  2510     0F39  2F3B               	goto	u2750
  2511     0F3A                     u2751:
  2512     0F3A  2EF9               	goto	l2301
  2513     0F3B                     u2750:
  2514     0F3B                     l221:
  2515     0F3B  0008               	return
  2516     0F3C                     __end_of_lcdPrint:
  2517                           
  2518                           	psect	text4
  2519     0EB1                     __ptext4:	
  2520 ;; *************** function _lcdSend *****************
  2521 ;; Defined at:
  2522 ;;		line 338 in file "main.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;  dato            1    wreg     unsigned char 
  2525 ;;  tipo            1    0[BANK0 ] unsigned char 
  2526 ;; Auto vars:     Size  Location     Type
  2527 ;;  dato            1    1[BANK0 ] unsigned char 
  2528 ;; Return value:  Size  Location     Type
  2529 ;;                  1    wreg      void 
  2530 ;; Registers used:
  2531 ;;		wreg, status,2, status,0
  2532 ;; Tracked objects:
  2533 ;;		On entry : 0/0
  2534 ;;		On exit  : 0/0
  2535 ;;		Unchanged: 0/0
  2536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2537 ;;      Params:         0       1       0       0       0
  2538 ;;      Locals:         0       1       0       0       0
  2539 ;;      Temps:          0       0       0       0       0
  2540 ;;      Totals:         0       2       0       0       0
  2541 ;;Total ram usage:        2 bytes
  2542 ;; Hardware stack levels used: 1
  2543 ;; Hardware stack levels required when called: 2
  2544 ;; This function calls:
  2545 ;;		Nothing
  2546 ;; This function is called by:
  2547 ;;		_main
  2548 ;;		_UART_Read
  2549 ;;		_initLCD
  2550 ;;		_lcdPrint
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554     0EB1                     _lcdSend:	
  2555                           ;psect for function _lcdSend
  2556                           
  2557                           
  2558                           ;incstack = 0
  2559                           ; Regs used in _lcdSend: [wreg+status,2+status,0]
  2560                           ;lcdSend@dato stored from wreg
  2561     0EB1  1283               	bcf	3,5	;RP0=0, select bank0
  2562     0EB2  1303               	bcf	3,6	;RP1=0, select bank0
  2563     0EB3  00D2               	movwf	lcdSend@dato
  2564     0EB4                     l2231:
  2565                           
  2566                           ;main.c: 342:     TRISD = 0x00;
  2567     0EB4  1683               	bsf	3,5	;RP0=1, select bank1
  2568     0EB5  1303               	bcf	3,6	;RP1=0, select bank1
  2569     0EB6  0188               	clrf	8	;volatile
  2570     0EB7                     l2233:
  2571                           
  2572                           ;main.c: 343:     TRISEbits.TRISE1 = 0;
  2573     0EB7  1089               	bcf	9,1	;volatile
  2574     0EB8                     l2235:
  2575                           
  2576                           ;main.c: 344:     TRISEbits.TRISE2 = 0;
  2577     0EB8  1109               	bcf	9,2	;volatile
  2578     0EB9                     l2237:
  2579                           
  2580                           ;main.c: 349:     PORTEbits.RE1 = 1;
  2581     0EB9  1283               	bcf	3,5	;RP0=0, select bank0
  2582     0EBA  1303               	bcf	3,6	;RP1=0, select bank0
  2583     0EBB  1489               	bsf	9,1	;volatile
  2584     0EBC                     l2239:
  2585                           
  2586                           ;main.c: 351:     PORTD = dato;
  2587     0EBC  0852               	movf	lcdSend@dato,w
  2588     0EBD  0088               	movwf	8	;volatile
  2589     0EBE                     l2241:
  2590                           
  2591                           ;main.c: 352:     PORTEbits.RE2 = tipo;
  2592     0EBE  0C51               	rrf	lcdSend@tipo,w
  2593     0EBF  1C03               	skipc
  2594     0EC0  1109               	bcf	9,2	;volatile
  2595     0EC1  1803               	skipnc
  2596     0EC2  1509               	bsf	9,2	;volatile
  2597     0EC3                     l2243:
  2598                           
  2599                           ;main.c: 354:     PORTEbits.RE1 = 0;
  2600     0EC3  1089               	bcf	9,1	;volatile
  2601     0EC4                     l2245:
  2602                           
  2603                           ;main.c: 356:     PORTEbits.RE1 = 1;
  2604     0EC4  1489               	bsf	9,1	;volatile
  2605     0EC5                     l215:
  2606     0EC5  0008               	return
  2607     0EC6                     __end_of_lcdSend:
  2608                           
  2609                           	psect	text5
  2610     06E9                     __ptext5:	
  2611 ;; *************** function _intToString *****************
  2612 ;; Defined at:
  2613 ;;		line 573 in file "main.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;  n               2   19[BANK0 ] int 
  2616 ;;  str             1   21[BANK0 ] PTR unsigned char 
  2617 ;;		 -> print_countdown(3), 
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;  t               1   25[BANK0 ] unsigned char 
  2620 ;;  i               1   27[BANK0 ] unsigned char 
  2621 ;;  cifre           1   26[BANK0 ] unsigned char 
  2622 ;; Return value:  Size  Location     Type
  2623 ;;                  1    wreg      void 
  2624 ;; Registers used:
  2625 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2631 ;;      Params:         0       3       0       0       0
  2632 ;;      Locals:         0       3       0       0       0
  2633 ;;      Temps:          0       3       0       0       0
  2634 ;;      Totals:         0       9       0       0       0
  2635 ;;Total ram usage:        9 bytes
  2636 ;; Hardware stack levels used: 1
  2637 ;; Hardware stack levels required when called: 4
  2638 ;; This function calls:
  2639 ;;		___awdiv
  2640 ;;		___awmod
  2641 ;;		_potenza
  2642 ;; This function is called by:
  2643 ;;		_UART_Read
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647     06E9                     _intToString:	
  2648                           ;psect for function _intToString
  2649                           
  2650     06E9                     l2315:	
  2651                           ;incstack = 0
  2652                           ; Regs used in _intToString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2653                           
  2654                           
  2655                           ;main.c: 576:     char cifre = 1;
  2656     06E9  1283               	bcf	3,5	;RP0=0, select bank0
  2657     06EA  1303               	bcf	3,6	;RP1=0, select bank0
  2658     06EB  01EB               	clrf	intToString@cifre
  2659     06EC  0AEB               	incf	intToString@cifre,f
  2660     06ED                     l2317:
  2661                           
  2662                           ;main.c: 579:     while (n / potenza(10, cifre)) cifre++;
  2663     06ED  2EF2               	goto	l2321
  2664     06EE                     l2319:
  2665     06EE  3001               	movlw	1
  2666     06EF  00E7               	movwf	??_intToString
  2667     06F0  0867               	movf	??_intToString,w
  2668     06F1  07EB               	addwf	intToString@cifre,f
  2669     06F2                     l2321:
  2670     06F2  086B               	movf	intToString@cifre,w
  2671     06F3  00D5               	movwf	potenza@e
  2672     06F4  300A               	movlw	10
  2673     06F5  120A  118A  27D3  120A  118A  	fcall	_potenza
  2674     06FA  1283               	bcf	3,5	;RP0=0, select bank0
  2675     06FB  1303               	bcf	3,6	;RP1=0, select bank0
  2676     06FC  00E7               	movwf	??_intToString
  2677     06FD  01E8               	clrf	??_intToString+1
  2678     06FE  0867               	movf	??_intToString,w
  2679     06FF  00DB               	movwf	___awdiv@divisor
  2680     0700  0868               	movf	??_intToString+1,w
  2681     0701  00DC               	movwf	___awdiv@divisor+1
  2682     0702  0865               	movf	intToString@n+1,w
  2683     0703  00DE               	movwf	___awdiv@dividend+1
  2684     0704  0864               	movf	intToString@n,w
  2685     0705  00DD               	movwf	___awdiv@dividend
  2686     0706  120A  158A  2797  120A  118A  	fcall	___awdiv
  2687     070B  1283               	bcf	3,5	;RP0=0, select bank0
  2688     070C  1303               	bcf	3,6	;RP1=0, select bank0
  2689     070D  085B               	movf	?___awdiv,w
  2690     070E  045C               	iorwf	?___awdiv+1,w
  2691     070F  1D03               	btfss	3,2
  2692     0710  2F12               	goto	u2771
  2693     0711  2F13               	goto	u2770
  2694     0712                     u2771:
  2695     0712  2EEE               	goto	l2319
  2696     0713                     u2770:
  2697     0713                     l2323:
  2698                           
  2699                           ;main.c: 581:     for (i = 0; i < cifre; i++) {
  2700     0713  01EC               	clrf	intToString@i
  2701     0714  2F57               	goto	l2333
  2702     0715                     l2325:
  2703                           
  2704                           ;main.c: 582:         char t = potenza(10, cifre - 1 - i);
  2705     0715  086C               	movf	intToString@i,w
  2706     0716  026B               	subwf	intToString@cifre,w
  2707     0717  3EFF               	addlw	255
  2708     0718  00D5               	movwf	potenza@e
  2709     0719  300A               	movlw	10
  2710     071A  120A  118A  27D3  120A  118A  	fcall	_potenza
  2711     071F  1283               	bcf	3,5	;RP0=0, select bank0
  2712     0720  1303               	bcf	3,6	;RP1=0, select bank0
  2713     0721  00EA               	movwf	intToString@t
  2714     0722                     l2327:
  2715                           
  2716                           ;main.c: 583:         str[i] = '0' + (char) (n / t);
  2717     0722  086C               	movf	intToString@i,w
  2718     0723  0766               	addwf	intToString@str,w
  2719     0724  00E7               	movwf	??_intToString
  2720     0725  0867               	movf	??_intToString,w
  2721     0726  0084               	movwf	4
  2722     0727  086A               	movf	intToString@t,w
  2723     0728  00E8               	movwf	??_intToString+1
  2724     0729  01E9               	clrf	??_intToString+2
  2725     072A  0868               	movf	??_intToString+1,w
  2726     072B  00DB               	movwf	___awdiv@divisor
  2727     072C  0869               	movf	??_intToString+2,w
  2728     072D  00DC               	movwf	___awdiv@divisor+1
  2729     072E  0865               	movf	intToString@n+1,w
  2730     072F  00DE               	movwf	___awdiv@dividend+1
  2731     0730  0864               	movf	intToString@n,w
  2732     0731  00DD               	movwf	___awdiv@dividend
  2733     0732  120A  158A  2797  120A  118A  	fcall	___awdiv
  2734     0737  1283               	bcf	3,5	;RP0=0, select bank0
  2735     0738  1303               	bcf	3,6	;RP1=0, select bank0
  2736     0739  085B               	movf	?___awdiv,w
  2737     073A  3E30               	addlw	48
  2738     073B  1383               	bcf	3,7	;select IRP bank0
  2739     073C  0080               	movwf	0
  2740     073D                     l2329:
  2741                           
  2742                           ;main.c: 584:         n = n % t;
  2743     073D  086A               	movf	intToString@t,w
  2744     073E  00E7               	movwf	??_intToString
  2745     073F  01E8               	clrf	??_intToString+1
  2746     0740  0867               	movf	??_intToString,w
  2747     0741  00D1               	movwf	___awmod@divisor
  2748     0742  0868               	movf	??_intToString+1,w
  2749     0743  00D2               	movwf	___awmod@divisor+1
  2750     0744  0865               	movf	intToString@n+1,w
  2751     0745  00D4               	movwf	___awmod@dividend+1
  2752     0746  0864               	movf	intToString@n,w
  2753     0747  00D3               	movwf	___awmod@dividend
  2754     0748  120A  158A  273C  120A  118A  	fcall	___awmod
  2755     074D  1283               	bcf	3,5	;RP0=0, select bank0
  2756     074E  1303               	bcf	3,6	;RP1=0, select bank0
  2757     074F  0852               	movf	?___awmod+1,w
  2758     0750  00E5               	movwf	intToString@n+1
  2759     0751  0851               	movf	?___awmod,w
  2760     0752  00E4               	movwf	intToString@n
  2761     0753                     l2331:
  2762                           
  2763                           ;main.c: 585:     }
  2764     0753  3001               	movlw	1
  2765     0754  00E7               	movwf	??_intToString
  2766     0755  0867               	movf	??_intToString,w
  2767     0756  07EC               	addwf	intToString@i,f
  2768     0757                     l2333:
  2769     0757  086B               	movf	intToString@cifre,w
  2770     0758  026C               	subwf	intToString@i,w
  2771     0759  1C03               	skipc
  2772     075A  2F5C               	goto	u2781
  2773     075B  2F5D               	goto	u2780
  2774     075C                     u2781:
  2775     075C  2F15               	goto	l2325
  2776     075D                     u2780:
  2777     075D                     l2335:
  2778                           
  2779                           ;main.c: 587:     str[i] = '\0';
  2780     075D  086C               	movf	intToString@i,w
  2781     075E  0766               	addwf	intToString@str,w
  2782     075F  00E7               	movwf	??_intToString
  2783     0760  0867               	movf	??_intToString,w
  2784     0761  0084               	movwf	4
  2785     0762  1383               	bcf	3,7	;select IRP bank0
  2786     0763  0180               	clrf	0
  2787     0764                     l317:
  2788     0764  0008               	return
  2789     0765                     __end_of_intToString:
  2790                           
  2791                           	psect	text6
  2792     07D3                     __ptext6:	
  2793 ;; *************** function _potenza *****************
  2794 ;; Defined at:
  2795 ;;		line 565 in file "main.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;  b               1    wreg     unsigned char 
  2798 ;;  e               1    4[BANK0 ] unsigned char 
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;  b               1    6[BANK0 ] unsigned char 
  2801 ;;  i               2    7[BANK0 ] int 
  2802 ;;  n               1    9[BANK0 ] unsigned char 
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  1    wreg      unsigned char 
  2805 ;; Registers used:
  2806 ;;		wreg, status,2, status,0, pclath, cstack
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2812 ;;      Params:         0       1       0       0       0
  2813 ;;      Locals:         0       4       0       0       0
  2814 ;;      Temps:          0       1       0       0       0
  2815 ;;      Totals:         0       6       0       0       0
  2816 ;;Total ram usage:        6 bytes
  2817 ;; Hardware stack levels used: 1
  2818 ;; Hardware stack levels required when called: 3
  2819 ;; This function calls:
  2820 ;;		___bmul
  2821 ;; This function is called by:
  2822 ;;		_intToString
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826     07D3                     _potenza:	
  2827                           ;psect for function _potenza
  2828                           
  2829                           
  2830                           ;incstack = 0
  2831                           ; Regs used in _potenza: [wreg+status,2+status,0+pclath+cstack]
  2832                           ;potenza@b stored from wreg
  2833     07D3  1283               	bcf	3,5	;RP0=0, select bank0
  2834     07D4  1303               	bcf	3,6	;RP1=0, select bank0
  2835     07D5  00D7               	movwf	potenza@b
  2836     07D6                     l2247:
  2837                           
  2838                           ;main.c: 566:     char n = 1;
  2839     07D6  01DA               	clrf	potenza@n
  2840     07D7  0ADA               	incf	potenza@n,f
  2841     07D8                     l2249:
  2842                           
  2843                           ;main.c: 567:     for (int i = 0; i < e; i++) {
  2844     07D8  01D8               	clrf	potenza@i
  2845     07D9  01D9               	clrf	potenza@i+1
  2846     07DA  2FEE               	goto	l2255
  2847     07DB                     l2251:
  2848                           
  2849                           ;main.c: 568:         n = n * b;
  2850     07DB  1283               	bcf	3,5	;RP0=0, select bank0
  2851     07DC  1303               	bcf	3,6	;RP1=0, select bank0
  2852     07DD  0857               	movf	potenza@b,w
  2853     07DE  00D1               	movwf	___bmul@multiplicand
  2854     07DF  085A               	movf	potenza@n,w
  2855     07E0  120A  158A  26DD  120A  118A  	fcall	___bmul
  2856     07E5  1283               	bcf	3,5	;RP0=0, select bank0
  2857     07E6  1303               	bcf	3,6	;RP1=0, select bank0
  2858     07E7  00DA               	movwf	potenza@n
  2859     07E8                     l2253:
  2860                           
  2861                           ;main.c: 569:     }
  2862     07E8  3001               	movlw	1
  2863     07E9  07D8               	addwf	potenza@i,f
  2864     07EA  1803               	skipnc
  2865     07EB  0AD9               	incf	potenza@i+1,f
  2866     07EC  3000               	movlw	0
  2867     07ED  07D9               	addwf	potenza@i+1,f
  2868     07EE                     l2255:
  2869     07EE  0859               	movf	potenza@i+1,w
  2870     07EF  3A80               	xorlw	128
  2871     07F0  00D6               	movwf	??_potenza
  2872     07F1  3080               	movlw	128
  2873     07F2  0256               	subwf	??_potenza,w
  2874     07F3  1D03               	skipz
  2875     07F4  2FF7               	goto	u2635
  2876     07F5  0855               	movf	potenza@e,w
  2877     07F6  0258               	subwf	potenza@i,w
  2878     07F7                     u2635:
  2879     07F7  1C03               	skipc
  2880     07F8  2FFA               	goto	u2631
  2881     07F9  2FFB               	goto	u2630
  2882     07FA                     u2631:
  2883     07FA  2FDB               	goto	l2251
  2884     07FB                     u2630:
  2885     07FB                     l2257:
  2886                           
  2887                           ;main.c: 570:     return n;
  2888     07FB  1283               	bcf	3,5	;RP0=0, select bank0
  2889     07FC  1303               	bcf	3,6	;RP1=0, select bank0
  2890     07FD  085A               	movf	potenza@n,w
  2891     07FE                     l308:
  2892     07FE  0008               	return
  2893     07FF                     __end_of_potenza:
  2894                           
  2895                           	psect	text7
  2896     0EDD                     __ptext7:	
  2897 ;; *************** function ___bmul *****************
  2898 ;; Defined at:
  2899 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  2900 ;; Parameters:    Size  Location     Type
  2901 ;;  multiplier      1    wreg     unsigned char 
  2902 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;  multiplier      1    3[BANK0 ] unsigned char 
  2905 ;;  product         1    2[BANK0 ] unsigned char 
  2906 ;; Return value:  Size  Location     Type
  2907 ;;                  1    wreg      unsigned char 
  2908 ;; Registers used:
  2909 ;;		wreg, status,2, status,0
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2915 ;;      Params:         0       1       0       0       0
  2916 ;;      Locals:         0       2       0       0       0
  2917 ;;      Temps:          0       1       0       0       0
  2918 ;;      Totals:         0       4       0       0       0
  2919 ;;Total ram usage:        4 bytes
  2920 ;; Hardware stack levels used: 1
  2921 ;; Hardware stack levels required when called: 2
  2922 ;; This function calls:
  2923 ;;		Nothing
  2924 ;; This function is called by:
  2925 ;;		_potenza
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929     0EDD                     ___bmul:	
  2930                           ;psect for function ___bmul
  2931                           
  2932                           
  2933                           ;incstack = 0
  2934                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2935                           ;___bmul@multiplier stored from wreg
  2936     0EDD  1283               	bcf	3,5	;RP0=0, select bank0
  2937     0EDE  1303               	bcf	3,6	;RP1=0, select bank0
  2938     0EDF  00D4               	movwf	___bmul@multiplier
  2939     0EE0                     l2217:
  2940     0EE0  01D3               	clrf	___bmul@product
  2941     0EE1                     l2219:
  2942     0EE1  1C54               	btfss	___bmul@multiplier,0
  2943     0EE2  2EE4               	goto	u2611
  2944     0EE3  2EE5               	goto	u2610
  2945     0EE4                     u2611:
  2946     0EE4  2EE9               	goto	l2223
  2947     0EE5                     u2610:
  2948     0EE5                     l2221:
  2949     0EE5  0851               	movf	___bmul@multiplicand,w
  2950     0EE6  00D2               	movwf	??___bmul
  2951     0EE7  0852               	movf	??___bmul,w
  2952     0EE8  07D3               	addwf	___bmul@product,f
  2953     0EE9                     l2223:
  2954     0EE9  1003               	clrc
  2955     0EEA  0DD1               	rlf	___bmul@multiplicand,f
  2956     0EEB                     l2225:
  2957     0EEB  1003               	clrc
  2958     0EEC  0CD4               	rrf	___bmul@multiplier,f
  2959     0EED  0854               	movf	___bmul@multiplier,w
  2960     0EEE  1D03               	btfss	3,2
  2961     0EEF  2EF1               	goto	u2621
  2962     0EF0  2EF2               	goto	u2620
  2963     0EF1                     u2621:
  2964     0EF1  2EE1               	goto	l2219
  2965     0EF2                     u2620:
  2966     0EF2                     l2227:
  2967     0EF2  0853               	movf	___bmul@product,w
  2968     0EF3                     l429:
  2969     0EF3  0008               	return
  2970     0EF4                     __end_of___bmul:
  2971                           
  2972                           	psect	text8
  2973     0F3C                     __ptext8:	
  2974 ;; *************** function ___awmod *****************
  2975 ;; Defined at:
  2976 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  2977 ;; Parameters:    Size  Location     Type
  2978 ;;  divisor         2    0[BANK0 ] int 
  2979 ;;  dividend        2    2[BANK0 ] int 
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;  sign            1    6[BANK0 ] unsigned char 
  2982 ;;  counter         1    5[BANK0 ] unsigned char 
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  2    0[BANK0 ] int 
  2985 ;; Registers used:
  2986 ;;		wreg, status,2, status,0
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2992 ;;      Params:         0       4       0       0       0
  2993 ;;      Locals:         0       2       0       0       0
  2994 ;;      Temps:          0       1       0       0       0
  2995 ;;      Totals:         0       7       0       0       0
  2996 ;;Total ram usage:        7 bytes
  2997 ;; Hardware stack levels used: 1
  2998 ;; Hardware stack levels required when called: 2
  2999 ;; This function calls:
  3000 ;;		Nothing
  3001 ;; This function is called by:
  3002 ;;		_intToString
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006     0F3C                     ___awmod:	
  3007                           ;psect for function ___awmod
  3008                           
  3009     0F3C                     l2261:	
  3010                           ;incstack = 0
  3011                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3012                           
  3013     0F3C  1283               	bcf	3,5	;RP0=0, select bank0
  3014     0F3D  1303               	bcf	3,6	;RP1=0, select bank0
  3015     0F3E  01D7               	clrf	___awmod@sign
  3016     0F3F                     l2263:
  3017     0F3F  1FD4               	btfss	___awmod@dividend+1,7
  3018     0F40  2F42               	goto	u2641
  3019     0F41  2F43               	goto	u2640
  3020     0F42                     u2641:
  3021     0F42  2F4A               	goto	l2269
  3022     0F43                     u2640:
  3023     0F43                     l2265:
  3024     0F43  09D3               	comf	___awmod@dividend,f
  3025     0F44  09D4               	comf	___awmod@dividend+1,f
  3026     0F45  0AD3               	incf	___awmod@dividend,f
  3027     0F46  1903               	skipnz
  3028     0F47  0AD4               	incf	___awmod@dividend+1,f
  3029     0F48                     l2267:
  3030     0F48  01D7               	clrf	___awmod@sign
  3031     0F49  0AD7               	incf	___awmod@sign,f
  3032     0F4A                     l2269:
  3033     0F4A  1FD2               	btfss	___awmod@divisor+1,7
  3034     0F4B  2F4D               	goto	u2651
  3035     0F4C  2F4E               	goto	u2650
  3036     0F4D                     u2651:
  3037     0F4D  2F53               	goto	l2273
  3038     0F4E                     u2650:
  3039     0F4E                     l2271:
  3040     0F4E  09D1               	comf	___awmod@divisor,f
  3041     0F4F  09D2               	comf	___awmod@divisor+1,f
  3042     0F50  0AD1               	incf	___awmod@divisor,f
  3043     0F51  1903               	skipnz
  3044     0F52  0AD2               	incf	___awmod@divisor+1,f
  3045     0F53                     l2273:
  3046     0F53  0851               	movf	___awmod@divisor,w
  3047     0F54  0452               	iorwf	___awmod@divisor+1,w
  3048     0F55  1903               	btfsc	3,2
  3049     0F56  2F58               	goto	u2661
  3050     0F57  2F59               	goto	u2660
  3051     0F58                     u2661:
  3052     0F58  2F88               	goto	l2291
  3053     0F59                     u2660:
  3054     0F59                     l2275:
  3055     0F59  01D6               	clrf	___awmod@counter
  3056     0F5A  0AD6               	incf	___awmod@counter,f
  3057     0F5B  2F67               	goto	l2281
  3058     0F5C                     l2277:
  3059     0F5C  3001               	movlw	1
  3060     0F5D                     u2675:
  3061     0F5D  1003               	clrc
  3062     0F5E  0DD1               	rlf	___awmod@divisor,f
  3063     0F5F  0DD2               	rlf	___awmod@divisor+1,f
  3064     0F60  3EFF               	addlw	-1
  3065     0F61  1D03               	skipz
  3066     0F62  2F5D               	goto	u2675
  3067     0F63                     l2279:
  3068     0F63  3001               	movlw	1
  3069     0F64  00D5               	movwf	??___awmod
  3070     0F65  0855               	movf	??___awmod,w
  3071     0F66  07D6               	addwf	___awmod@counter,f
  3072     0F67                     l2281:
  3073     0F67  1FD2               	btfss	___awmod@divisor+1,7
  3074     0F68  2F6A               	goto	u2681
  3075     0F69  2F6B               	goto	u2680
  3076     0F6A                     u2681:
  3077     0F6A  2F5C               	goto	l2277
  3078     0F6B                     u2680:
  3079     0F6B                     l2283:
  3080     0F6B  0852               	movf	___awmod@divisor+1,w
  3081     0F6C  0254               	subwf	___awmod@dividend+1,w
  3082     0F6D  1D03               	skipz
  3083     0F6E  2F71               	goto	u2695
  3084     0F6F  0851               	movf	___awmod@divisor,w
  3085     0F70  0253               	subwf	___awmod@dividend,w
  3086     0F71                     u2695:
  3087     0F71  1C03               	skipc
  3088     0F72  2F74               	goto	u2691
  3089     0F73  2F75               	goto	u2690
  3090     0F74                     u2691:
  3091     0F74  2F7B               	goto	l2287
  3092     0F75                     u2690:
  3093     0F75                     l2285:
  3094     0F75  0851               	movf	___awmod@divisor,w
  3095     0F76  02D3               	subwf	___awmod@dividend,f
  3096     0F77  0852               	movf	___awmod@divisor+1,w
  3097     0F78  1C03               	skipc
  3098     0F79  03D4               	decf	___awmod@dividend+1,f
  3099     0F7A  02D4               	subwf	___awmod@dividend+1,f
  3100     0F7B                     l2287:
  3101     0F7B  3001               	movlw	1
  3102     0F7C                     u2705:
  3103     0F7C  1003               	clrc
  3104     0F7D  0CD2               	rrf	___awmod@divisor+1,f
  3105     0F7E  0CD1               	rrf	___awmod@divisor,f
  3106     0F7F  3EFF               	addlw	-1
  3107     0F80  1D03               	skipz
  3108     0F81  2F7C               	goto	u2705
  3109     0F82                     l2289:
  3110     0F82  3001               	movlw	1
  3111     0F83  02D6               	subwf	___awmod@counter,f
  3112     0F84  1D03               	btfss	3,2
  3113     0F85  2F87               	goto	u2711
  3114     0F86  2F88               	goto	u2710
  3115     0F87                     u2711:
  3116     0F87  2F6B               	goto	l2283
  3117     0F88                     u2710:
  3118     0F88                     l2291:
  3119     0F88  0857               	movf	___awmod@sign,w
  3120     0F89  1903               	btfsc	3,2
  3121     0F8A  2F8C               	goto	u2721
  3122     0F8B  2F8D               	goto	u2720
  3123     0F8C                     u2721:
  3124     0F8C  2F92               	goto	l2295
  3125     0F8D                     u2720:
  3126     0F8D                     l2293:
  3127     0F8D  09D3               	comf	___awmod@dividend,f
  3128     0F8E  09D4               	comf	___awmod@dividend+1,f
  3129     0F8F  0AD3               	incf	___awmod@dividend,f
  3130     0F90  1903               	skipnz
  3131     0F91  0AD4               	incf	___awmod@dividend+1,f
  3132     0F92                     l2295:
  3133     0F92  0854               	movf	___awmod@dividend+1,w
  3134     0F93  00D2               	movwf	?___awmod+1
  3135     0F94  0853               	movf	___awmod@dividend,w
  3136     0F95  00D1               	movwf	?___awmod
  3137     0F96                     l569:
  3138     0F96  0008               	return
  3139     0F97                     __end_of___awmod:
  3140                           
  3141                           	psect	text9
  3142     0F97                     __ptext9:	
  3143 ;; *************** function ___awdiv *****************
  3144 ;; Defined at:
  3145 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  3146 ;; Parameters:    Size  Location     Type
  3147 ;;  divisor         2   10[BANK0 ] int 
  3148 ;;  dividend        2   12[BANK0 ] int 
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;  quotient        2   17[BANK0 ] int 
  3151 ;;  sign            1   16[BANK0 ] unsigned char 
  3152 ;;  counter         1   15[BANK0 ] unsigned char 
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  2   10[BANK0 ] int 
  3155 ;; Registers used:
  3156 ;;		wreg, status,2, status,0
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3162 ;;      Params:         0       4       0       0       0
  3163 ;;      Locals:         0       4       0       0       0
  3164 ;;      Temps:          0       1       0       0       0
  3165 ;;      Totals:         0       9       0       0       0
  3166 ;;Total ram usage:        9 bytes
  3167 ;; Hardware stack levels used: 1
  3168 ;; Hardware stack levels required when called: 2
  3169 ;; This function calls:
  3170 ;;		Nothing
  3171 ;; This function is called by:
  3172 ;;		_intToString
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176     0F97                     ___awdiv:	
  3177                           ;psect for function ___awdiv
  3178                           
  3179     0F97                     l1607:	
  3180                           ;incstack = 0
  3181                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3182                           
  3183     0F97  1283               	bcf	3,5	;RP0=0, select bank0
  3184     0F98  1303               	bcf	3,6	;RP1=0, select bank0
  3185     0F99  01E1               	clrf	___awdiv@sign
  3186     0F9A                     l1609:
  3187     0F9A  1FDC               	btfss	___awdiv@divisor+1,7
  3188     0F9B  2F9D               	goto	u1341
  3189     0F9C  2F9E               	goto	u1340
  3190     0F9D                     u1341:
  3191     0F9D  2FA5               	goto	l1615
  3192     0F9E                     u1340:
  3193     0F9E                     l1611:
  3194     0F9E  09DB               	comf	___awdiv@divisor,f
  3195     0F9F  09DC               	comf	___awdiv@divisor+1,f
  3196     0FA0  0ADB               	incf	___awdiv@divisor,f
  3197     0FA1  1903               	skipnz
  3198     0FA2  0ADC               	incf	___awdiv@divisor+1,f
  3199     0FA3                     l1613:
  3200     0FA3  01E1               	clrf	___awdiv@sign
  3201     0FA4  0AE1               	incf	___awdiv@sign,f
  3202     0FA5                     l1615:
  3203     0FA5  1FDE               	btfss	___awdiv@dividend+1,7
  3204     0FA6  2FA8               	goto	u1351
  3205     0FA7  2FA9               	goto	u1350
  3206     0FA8                     u1351:
  3207     0FA8  2FB2               	goto	l1621
  3208     0FA9                     u1350:
  3209     0FA9                     l1617:
  3210     0FA9  09DD               	comf	___awdiv@dividend,f
  3211     0FAA  09DE               	comf	___awdiv@dividend+1,f
  3212     0FAB  0ADD               	incf	___awdiv@dividend,f
  3213     0FAC  1903               	skipnz
  3214     0FAD  0ADE               	incf	___awdiv@dividend+1,f
  3215     0FAE                     l1619:
  3216     0FAE  3001               	movlw	1
  3217     0FAF  00DF               	movwf	??___awdiv
  3218     0FB0  085F               	movf	??___awdiv,w
  3219     0FB1  06E1               	xorwf	___awdiv@sign,f
  3220     0FB2                     l1621:
  3221     0FB2  01E2               	clrf	___awdiv@quotient
  3222     0FB3  01E3               	clrf	___awdiv@quotient+1
  3223     0FB4                     l1623:
  3224     0FB4  085B               	movf	___awdiv@divisor,w
  3225     0FB5  045C               	iorwf	___awdiv@divisor+1,w
  3226     0FB6  1903               	btfsc	3,2
  3227     0FB7  2FB9               	goto	u1361
  3228     0FB8  2FBA               	goto	u1360
  3229     0FB9                     u1361:
  3230     0FB9  2FF1               	goto	l1643
  3231     0FBA                     u1360:
  3232     0FBA                     l1625:
  3233     0FBA  01E0               	clrf	___awdiv@counter
  3234     0FBB  0AE0               	incf	___awdiv@counter,f
  3235     0FBC  2FC8               	goto	l1631
  3236     0FBD                     l1627:
  3237     0FBD  3001               	movlw	1
  3238     0FBE                     u1375:
  3239     0FBE  1003               	clrc
  3240     0FBF  0DDB               	rlf	___awdiv@divisor,f
  3241     0FC0  0DDC               	rlf	___awdiv@divisor+1,f
  3242     0FC1  3EFF               	addlw	-1
  3243     0FC2  1D03               	skipz
  3244     0FC3  2FBE               	goto	u1375
  3245     0FC4                     l1629:
  3246     0FC4  3001               	movlw	1
  3247     0FC5  00DF               	movwf	??___awdiv
  3248     0FC6  085F               	movf	??___awdiv,w
  3249     0FC7  07E0               	addwf	___awdiv@counter,f
  3250     0FC8                     l1631:
  3251     0FC8  1FDC               	btfss	___awdiv@divisor+1,7
  3252     0FC9  2FCB               	goto	u1381
  3253     0FCA  2FCC               	goto	u1380
  3254     0FCB                     u1381:
  3255     0FCB  2FBD               	goto	l1627
  3256     0FCC                     u1380:
  3257     0FCC                     l1633:
  3258     0FCC  3001               	movlw	1
  3259     0FCD                     u1395:
  3260     0FCD  1003               	clrc
  3261     0FCE  0DE2               	rlf	___awdiv@quotient,f
  3262     0FCF  0DE3               	rlf	___awdiv@quotient+1,f
  3263     0FD0  3EFF               	addlw	-1
  3264     0FD1  1D03               	skipz
  3265     0FD2  2FCD               	goto	u1395
  3266     0FD3  085C               	movf	___awdiv@divisor+1,w
  3267     0FD4  025E               	subwf	___awdiv@dividend+1,w
  3268     0FD5  1D03               	skipz
  3269     0FD6  2FD9               	goto	u1405
  3270     0FD7  085B               	movf	___awdiv@divisor,w
  3271     0FD8  025D               	subwf	___awdiv@dividend,w
  3272     0FD9                     u1405:
  3273     0FD9  1C03               	skipc
  3274     0FDA  2FDC               	goto	u1401
  3275     0FDB  2FDD               	goto	u1400
  3276     0FDC                     u1401:
  3277     0FDC  2FE4               	goto	l1639
  3278     0FDD                     u1400:
  3279     0FDD                     l1635:
  3280     0FDD  085B               	movf	___awdiv@divisor,w
  3281     0FDE  02DD               	subwf	___awdiv@dividend,f
  3282     0FDF  085C               	movf	___awdiv@divisor+1,w
  3283     0FE0  1C03               	skipc
  3284     0FE1  03DE               	decf	___awdiv@dividend+1,f
  3285     0FE2  02DE               	subwf	___awdiv@dividend+1,f
  3286     0FE3                     l1637:
  3287     0FE3  1462               	bsf	___awdiv@quotient,0
  3288     0FE4                     l1639:
  3289     0FE4  3001               	movlw	1
  3290     0FE5                     u1415:
  3291     0FE5  1003               	clrc
  3292     0FE6  0CDC               	rrf	___awdiv@divisor+1,f
  3293     0FE7  0CDB               	rrf	___awdiv@divisor,f
  3294     0FE8  3EFF               	addlw	-1
  3295     0FE9  1D03               	skipz
  3296     0FEA  2FE5               	goto	u1415
  3297     0FEB                     l1641:
  3298     0FEB  3001               	movlw	1
  3299     0FEC  02E0               	subwf	___awdiv@counter,f
  3300     0FED  1D03               	btfss	3,2
  3301     0FEE  2FF0               	goto	u1421
  3302     0FEF  2FF1               	goto	u1420
  3303     0FF0                     u1421:
  3304     0FF0  2FCC               	goto	l1633
  3305     0FF1                     u1420:
  3306     0FF1                     l1643:
  3307     0FF1  0861               	movf	___awdiv@sign,w
  3308     0FF2  1903               	btfsc	3,2
  3309     0FF3  2FF5               	goto	u1431
  3310     0FF4  2FF6               	goto	u1430
  3311     0FF5                     u1431:
  3312     0FF5  2FFB               	goto	l1647
  3313     0FF6                     u1430:
  3314     0FF6                     l1645:
  3315     0FF6  09E2               	comf	___awdiv@quotient,f
  3316     0FF7  09E3               	comf	___awdiv@quotient+1,f
  3317     0FF8  0AE2               	incf	___awdiv@quotient,f
  3318     0FF9  1903               	skipnz
  3319     0FFA  0AE3               	incf	___awdiv@quotient+1,f
  3320     0FFB                     l1647:
  3321     0FFB  0863               	movf	___awdiv@quotient+1,w
  3322     0FFC  00DC               	movwf	?___awdiv+1
  3323     0FFD  0862               	movf	___awdiv@quotient,w
  3324     0FFE  00DB               	movwf	?___awdiv
  3325     0FFF                     l556:
  3326     0FFF  0008               	return
  3327     1000                     __end_of___awdiv:
  3328                           
  3329                           	psect	text10
  3330     0E86                     __ptext10:	
  3331 ;; *************** function _UART_Write *****************
  3332 ;; Defined at:
  3333 ;;		line 241 in file "main.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;  data            1    wreg     unsigned char 
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;  data            1    0[BANK0 ] unsigned char 
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  1    wreg      void 
  3340 ;; Registers used:
  3341 ;;		wreg
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3347 ;;      Params:         0       0       0       0       0
  3348 ;;      Locals:         0       1       0       0       0
  3349 ;;      Temps:          0       0       0       0       0
  3350 ;;      Totals:         0       1       0       0       0
  3351 ;;Total ram usage:        1 bytes
  3352 ;; Hardware stack levels used: 1
  3353 ;; Hardware stack levels required when called: 2
  3354 ;; This function calls:
  3355 ;;		Nothing
  3356 ;; This function is called by:
  3357 ;;		_main
  3358 ;;		_UART_Read
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           
  3362     0E86                     _UART_Write:	
  3363                           ;psect for function _UART_Write
  3364                           
  3365                           
  3366                           ;incstack = 0
  3367                           ; Regs used in _UART_Write: [wreg]
  3368                           ;UART_Write@data stored from wreg
  3369     0E86  1283               	bcf	3,5	;RP0=0, select bank0
  3370     0E87  1303               	bcf	3,6	;RP1=0, select bank0
  3371     0E88  00D1               	movwf	UART_Write@data
  3372     0E89                     l2309:
  3373     0E89                     l193:	
  3374                           ;main.c: 242:     while (!TXIF)
  3375                           
  3376                           
  3377                           ;main.c: 242:     while (!TXIF)
  3378     0E89  1E0C               	btfss	12,4	;volatile
  3379     0E8A  2E8C               	goto	u2761
  3380     0E8B  2E8D               	goto	u2760
  3381     0E8C                     u2761:
  3382     0E8C  2E89               	goto	l193
  3383     0E8D                     u2760:
  3384     0E8D                     l2311:
  3385                           
  3386                           ;main.c: 244:     TXREG = data;
  3387     0E8D  0851               	movf	UART_Write@data,w
  3388     0E8E  0099               	movwf	25	;volatile
  3389     0E8F                     l196:
  3390     0E8F  0008               	return
  3391     0E90                     __end_of_UART_Write:
  3392                           
  3393                           	psect	text11
  3394     0E79                     __ptext11:	
  3395 ;; *************** function _RS485_TxEnable *****************
  3396 ;; Defined at:
  3397 ;;		line 231 in file "main.c"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;		None
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;		None
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  1    wreg      void 
  3404 ;; Registers used:
  3405 ;;		None
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3411 ;;      Params:         0       0       0       0       0
  3412 ;;      Locals:         0       0       0       0       0
  3413 ;;      Temps:          0       0       0       0       0
  3414 ;;      Totals:         0       0       0       0       0
  3415 ;;Total ram usage:        0 bytes
  3416 ;; Hardware stack levels used: 1
  3417 ;; Hardware stack levels required when called: 2
  3418 ;; This function calls:
  3419 ;;		Nothing
  3420 ;; This function is called by:
  3421 ;;		_main
  3422 ;;		_UART_Read
  3423 ;; This function uses a non-reentrant model
  3424 ;;
  3425                           
  3426     0E79                     _RS485_TxEnable:	
  3427                           ;psect for function _RS485_TxEnable
  3428                           
  3429     0E79                     l2307:	
  3430                           ;incstack = 0
  3431                           ; Regs used in _RS485_TxEnable: []
  3432                           
  3433                           
  3434                           ;main.c: 232:     RC0 = 1;
  3435     0E79  1283               	bcf	3,5	;RP0=0, select bank0
  3436     0E7A  1303               	bcf	3,6	;RP1=0, select bank0
  3437     0E7B  1407               	bsf	7,0	;volatile
  3438                           
  3439                           ;main.c: 233:     RC1 = 0;
  3440     0E7C  1087               	bcf	7,1	;volatile
  3441     0E7D                     l187:
  3442     0E7D  0008               	return
  3443     0E7E                     __end_of_RS485_TxEnable:
  3444                           
  3445                           	psect	text12
  3446     0E74                     __ptext12:	
  3447 ;; *************** function _RS485_RxEnable *****************
  3448 ;; Defined at:
  3449 ;;		line 236 in file "main.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;		None
  3452 ;; Auto vars:     Size  Location     Type
  3453 ;;		None
  3454 ;; Return value:  Size  Location     Type
  3455 ;;                  1    wreg      void 
  3456 ;; Registers used:
  3457 ;;		None
  3458 ;; Tracked objects:
  3459 ;;		On entry : 0/0
  3460 ;;		On exit  : 0/0
  3461 ;;		Unchanged: 0/0
  3462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3463 ;;      Params:         0       0       0       0       0
  3464 ;;      Locals:         0       0       0       0       0
  3465 ;;      Temps:          0       0       0       0       0
  3466 ;;      Totals:         0       0       0       0       0
  3467 ;;Total ram usage:        0 bytes
  3468 ;; Hardware stack levels used: 1
  3469 ;; Hardware stack levels required when called: 2
  3470 ;; This function calls:
  3471 ;;		Nothing
  3472 ;; This function is called by:
  3473 ;;		_main
  3474 ;;		_UART_Read
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478     0E74                     _RS485_RxEnable:	
  3479                           ;psect for function _RS485_RxEnable
  3480                           
  3481     0E74                     l2313:	
  3482                           ;incstack = 0
  3483                           ; Regs used in _RS485_RxEnable: []
  3484                           
  3485                           
  3486                           ;main.c: 237:     RC0 = 0;
  3487     0E74  1283               	bcf	3,5	;RP0=0, select bank0
  3488     0E75  1303               	bcf	3,6	;RP1=0, select bank0
  3489     0E76  1007               	bcf	7,0	;volatile
  3490                           
  3491                           ;main.c: 238:     RC1 = 1;
  3492     0E77  1487               	bsf	7,1	;volatile
  3493     0E78                     l190:
  3494     0E78  0008               	return
  3495     0E79                     __end_of_RS485_RxEnable:
  3496                           
  3497                           	psect	text13
  3498     0E9F                     __ptext13:	
  3499 ;; *************** function _UART_Init *****************
  3500 ;; Defined at:
  3501 ;;		line 213 in file "main.c"
  3502 ;; Parameters:    Size  Location     Type
  3503 ;;		None
  3504 ;; Auto vars:     Size  Location     Type
  3505 ;;		None
  3506 ;; Return value:  Size  Location     Type
  3507 ;;                  1    wreg      void 
  3508 ;; Registers used:
  3509 ;;		wreg
  3510 ;; Tracked objects:
  3511 ;;		On entry : 0/0
  3512 ;;		On exit  : 0/0
  3513 ;;		Unchanged: 0/0
  3514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3515 ;;      Params:         0       0       0       0       0
  3516 ;;      Locals:         0       0       0       0       0
  3517 ;;      Temps:          0       0       0       0       0
  3518 ;;      Totals:         0       0       0       0       0
  3519 ;;Total ram usage:        0 bytes
  3520 ;; Hardware stack levels used: 1
  3521 ;; Hardware stack levels required when called: 2
  3522 ;; This function calls:
  3523 ;;		Nothing
  3524 ;; This function is called by:
  3525 ;;		_main
  3526 ;; This function uses a non-reentrant model
  3527 ;;
  3528                           
  3529     0E9F                     _UART_Init:	
  3530                           ;psect for function _UART_Init
  3531                           
  3532     0E9F                     l2337:	
  3533                           ;incstack = 0
  3534                           ; Regs used in _UART_Init: [wreg]
  3535                           
  3536                           
  3537                           ;main.c: 215:     TRISC6 = 0;
  3538     0E9F  1683               	bsf	3,5	;RP0=1, select bank1
  3539     0EA0  1303               	bcf	3,6	;RP1=0, select bank1
  3540     0EA1  1307               	bcf	7,6	;volatile
  3541                           
  3542                           ;main.c: 216:     TRISC7 = 1;
  3543     0EA2  1787               	bsf	7,7	;volatile
  3544                           
  3545                           ;main.c: 219:     BRGH = 1;
  3546     0EA3  1518               	bsf	24,2	;volatile
  3547     0EA4                     l2339:
  3548                           
  3549                           ;main.c: 220:     SPBRG = 51;
  3550     0EA4  3033               	movlw	51
  3551     0EA5  0099               	movwf	25	;volatile
  3552     0EA6                     l2341:
  3553                           
  3554                           ;main.c: 223:     SYNC = 0;
  3555     0EA6  1218               	bcf	24,4	;volatile
  3556     0EA7                     l2343:
  3557                           
  3558                           ;main.c: 224:     SPEN = 1;
  3559     0EA7  1283               	bcf	3,5	;RP0=0, select bank0
  3560     0EA8  1303               	bcf	3,6	;RP1=0, select bank0
  3561     0EA9  1798               	bsf	24,7	;volatile
  3562     0EAA                     l2345:
  3563                           
  3564                           ;main.c: 227:     TXEN = 1;
  3565     0EAA  1683               	bsf	3,5	;RP0=1, select bank1
  3566     0EAB  1303               	bcf	3,6	;RP1=0, select bank1
  3567     0EAC  1698               	bsf	24,5	;volatile
  3568     0EAD                     l2347:
  3569                           
  3570                           ;main.c: 228:     CREN = 1;
  3571     0EAD  1283               	bcf	3,5	;RP0=0, select bank0
  3572     0EAE  1303               	bcf	3,6	;RP1=0, select bank0
  3573     0EAF  1618               	bsf	24,4	;volatile
  3574     0EB0                     l184:
  3575     0EB0  0008               	return
  3576     0EB1                     __end_of_UART_Init:
  3577                           
  3578                           	psect	text14
  3579     0E90                     __ptext14:	
  3580 ;; *************** function _Timer0_Init *****************
  3581 ;; Defined at:
  3582 ;;		line 458 in file "main.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;		None
  3585 ;; Auto vars:     Size  Location     Type
  3586 ;;		None
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  1    wreg      void 
  3589 ;; Registers used:
  3590 ;;		wreg
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3596 ;;      Params:         0       0       0       0       0
  3597 ;;      Locals:         0       0       0       0       0
  3598 ;;      Temps:          0       0       0       0       0
  3599 ;;      Totals:         0       0       0       0       0
  3600 ;;Total ram usage:        0 bytes
  3601 ;; Hardware stack levels used: 1
  3602 ;; Hardware stack levels required when called: 2
  3603 ;; This function calls:
  3604 ;;		Nothing
  3605 ;; This function is called by:
  3606 ;;		_main
  3607 ;; This function uses a non-reentrant model
  3608 ;;
  3609                           
  3610     0E90                     _Timer0_Init:	
  3611                           ;psect for function _Timer0_Init
  3612                           
  3613     0E90                     l2373:	
  3614                           ;incstack = 0
  3615                           ; Regs used in _Timer0_Init: [wreg]
  3616                           
  3617                           
  3618                           ;main.c: 460:     T0CS = 0;
  3619     0E90  1683               	bsf	3,5	;RP0=1, select bank1
  3620     0E91  1303               	bcf	3,6	;RP1=0, select bank1
  3621     0E92  1281               	bcf	1,5	;volatile
  3622                           
  3623                           ;main.c: 461:     PSA = 0;
  3624     0E93  1181               	bcf	1,3	;volatile
  3625                           
  3626                           ;main.c: 462:     PS2 = 1;
  3627     0E94  1501               	bsf	1,2	;volatile
  3628                           
  3629                           ;main.c: 463:     PS1 = 1;
  3630     0E95  1481               	bsf	1,1	;volatile
  3631                           
  3632                           ;main.c: 464:     PS0 = 1;
  3633     0E96  1401               	bsf	1,0	;volatile
  3634     0E97                     l2375:
  3635                           
  3636                           ;main.c: 467:     TMR0 = 6;
  3637     0E97  3006               	movlw	6
  3638     0E98  1283               	bcf	3,5	;RP0=0, select bank0
  3639     0E99  1303               	bcf	3,6	;RP1=0, select bank0
  3640     0E9A  0081               	movwf	1	;volatile
  3641     0E9B                     l2377:
  3642                           
  3643                           ;main.c: 468:     TMR0IF = 0;
  3644     0E9B  110B               	bcf	11,2	;volatile
  3645     0E9C                     l2379:
  3646                           
  3647                           ;main.c: 469:     TMR0IE = 1;
  3648     0E9C  168B               	bsf	11,5	;volatile
  3649     0E9D                     l2381:
  3650                           
  3651                           ;main.c: 470:     GIE = 1;
  3652     0E9D  178B               	bsf	11,7	;volatile
  3653     0E9E                     l283:
  3654     0E9E  0008               	return
  3655     0E9F                     __end_of_Timer0_Init:
  3656                           
  3657                           	psect	text15
  3658     05DE                     __ptext15:	
  3659 ;; *************** function _KeyPadReader *****************
  3660 ;; Defined at:
  3661 ;;		line 483 in file "main.c"
  3662 ;; Parameters:    Size  Location     Type
  3663 ;;		None
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;		None
  3666 ;; Return value:  Size  Location     Type
  3667 ;;                  1    wreg      unsigned char 
  3668 ;; Registers used:
  3669 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/0
  3672 ;;		On exit  : 0/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3675 ;;      Params:         0       0       0       0       0
  3676 ;;      Locals:         0       0       0       0       0
  3677 ;;      Temps:          0       2       0       0       0
  3678 ;;      Totals:         0       2       0       0       0
  3679 ;;Total ram usage:        2 bytes
  3680 ;; Hardware stack levels used: 2
  3681 ;; Hardware stack levels required when called: 2
  3682 ;; This function calls:
  3683 ;;		Nothing
  3684 ;; This function is called by:
  3685 ;;		_main
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           
  3689     05DE                     _KeyPadReader:	
  3690                           ;psect for function _KeyPadReader
  3691                           
  3692     05DE                     l2395:	
  3693                           ;incstack = 0
  3694                           ; Regs used in _KeyPadReader: [wreg-fsr0h+status,2+status,0+pclath]
  3695                           
  3696                           
  3697                           ;main.c: 484:     TRISD |= 0x0F;
  3698     05DE  300F               	movlw	15
  3699     05DF  1283               	bcf	3,5	;RP0=0, select bank0
  3700     05E0  1303               	bcf	3,6	;RP1=0, select bank0
  3701     05E1  00D1               	movwf	??_KeyPadReader
  3702     05E2  0851               	movf	??_KeyPadReader,w
  3703     05E3  1683               	bsf	3,5	;RP0=1, select bank1
  3704     05E4  1303               	bcf	3,6	;RP1=0, select bank1
  3705     05E5  0488               	iorwf	8,f	;volatile
  3706     05E6                     l2397:
  3707                           
  3708                           ;main.c: 487:     for (colScan = 0; colScan < 3; colScan++) {
  3709     05E6  01F8               	clrf	_colScan
  3710     05E7                     l2399:
  3711     05E7  3003               	movlw	3
  3712     05E8  0278               	subwf	_colScan,w
  3713     05E9  1C03               	skipc
  3714     05EA  2DEC               	goto	u2801
  3715     05EB  2DED               	goto	u2800
  3716     05EC                     u2801:
  3717     05EC  2DEE               	goto	l2403
  3718     05ED                     u2800:
  3719     05ED  2DE6               	goto	l2397
  3720     05EE                     l2403:
  3721                           
  3722                           ;main.c: 488:         PORTB = PORTB | 0x07;
  3723     05EE  1283               	bcf	3,5	;RP0=0, select bank0
  3724     05EF  1303               	bcf	3,6	;RP1=0, select bank0
  3725     05F0  0806               	movf	6,w	;volatile
  3726     05F1  3807               	iorlw	7
  3727     05F2  0086               	movwf	6	;volatile
  3728     05F3                     l2405:
  3729                           
  3730                           ;main.c: 489:         PORTB &= colMask[colScan];
  3731     05F3  0878               	movf	_colScan,w
  3732     05F4  3E11               	addlw	low ((_colMask-__stringbase)| (0+32768))
  3733     05F5  0084               	movwf	4
  3734     05F6  120A  118A  2675  120A  118A  	fcall	stringdir
  3735     05FB  00D1               	movwf	??_KeyPadReader
  3736     05FC  0851               	movf	??_KeyPadReader,w
  3737     05FD  0586               	andwf	6,f	;volatile
  3738     05FE                     l2407:
  3739                           
  3740                           ;main.c: 492:         for (rowScan = 0; rowScan < 4; rowScan++) {
  3741     05FE  01F7               	clrf	_rowScan
  3742     05FF                     l2409:
  3743     05FF  3004               	movlw	4
  3744     0600  0277               	subwf	_rowScan,w
  3745     0601  1C03               	skipc
  3746     0602  2E04               	goto	u2811
  3747     0603  2E05               	goto	u2810
  3748     0604                     u2811:
  3749     0604  2E06               	goto	l2413
  3750     0605                     u2810:
  3751     0605  2E65               	goto	l2445
  3752     0606                     l2413:
  3753                           
  3754                           ;main.c: 493:             if (!(PORTD & rowMask[rowScan]) && (old_btn)) {
  3755     0606  0877               	movf	_rowScan,w
  3756     0607  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  3757     0608  0084               	movwf	4
  3758     0609  120A  118A  2675  120A  118A  	fcall	stringdir
  3759     060E  0508               	andwf	8,w	;volatile
  3760     060F  1D03               	btfss	3,2
  3761     0610  2E12               	goto	u2821
  3762     0611  2E13               	goto	u2820
  3763     0612                     u2821:
  3764     0612  2E1C               	goto	l2421
  3765     0613                     u2820:
  3766     0613                     l2415:
  3767     0613  1C79               	btfss	_old_btn/(0+8),_old_btn& (0+7)
  3768     0614  2E16               	goto	u2831
  3769     0615  2E17               	goto	u2830
  3770     0616                     u2831:
  3771     0616  2E1C               	goto	l2421
  3772     0617                     u2830:
  3773     0617                     l2417:
  3774                           
  3775                           ;main.c: 494:                 old_btn = 0;
  3776     0617  1079               	bcf	_old_btn/(0+8),_old_btn& (0+7)
  3777     0618                     l2419:
  3778                           
  3779                           ;main.c: 495:                 stato++;
  3780     0618  3001               	movlw	1
  3781     0619  00D1               	movwf	??_KeyPadReader
  3782     061A  0851               	movf	??_KeyPadReader,w
  3783     061B  07F6               	addwf	_stato,f
  3784     061C                     l2421:
  3785                           
  3786                           ;main.c: 497:             if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  3787     061C  0877               	movf	_rowScan,w
  3788     061D  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  3789     061E  0084               	movwf	4
  3790     061F  120A  118A  2675  120A  118A  	fcall	stringdir
  3791     0624  0508               	andwf	8,w	;volatile
  3792     0625  1903               	btfsc	3,2
  3793     0626  2E28               	goto	u2841
  3794     0627  2E29               	goto	u2840
  3795     0628                     u2841:
  3796     0628  2E4C               	goto	l2433
  3797     0629                     u2840:
  3798     0629                     l2423:
  3799     0629  1879               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  3800     062A  2E2C               	goto	u2851
  3801     062B  2E2D               	goto	u2850
  3802     062C                     u2851:
  3803     062C  2E4C               	goto	l2433
  3804     062D                     u2850:
  3805     062D                     l2425:
  3806                           
  3807                           ;main.c: 498:                 _delay((unsigned long)((10)*(20000000/4000.0)));
  3808     062D  3041               	movlw	65
  3809     062E  1283               	bcf	3,5	;RP0=0, select bank0
  3810     062F  1303               	bcf	3,6	;RP1=0, select bank0
  3811     0630  00D2               	movwf	??_KeyPadReader+1
  3812     0631  30ED               	movlw	237
  3813     0632  00D1               	movwf	??_KeyPadReader
  3814     0633                     u3597:
  3815     0633  0BD1               	decfsz	??_KeyPadReader,f
  3816     0634  2E33               	goto	u3597
  3817     0635  0BD2               	decfsz	??_KeyPadReader+1,f
  3818     0636  2E33               	goto	u3597
  3819     0637  2E38               	nop2
  3820     0638                     l2427:
  3821                           
  3822                           ;main.c: 499:                 if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  3823     0638  0877               	movf	_rowScan,w
  3824     0639  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  3825     063A  0084               	movwf	4
  3826     063B  120A  118A  2675  120A  118A  	fcall	stringdir
  3827     0640  1283               	bcf	3,5	;RP0=0, select bank0
  3828     0641  1303               	bcf	3,6	;RP1=0, select bank0
  3829     0642  0508               	andwf	8,w	;volatile
  3830     0643  1903               	btfsc	3,2
  3831     0644  2E46               	goto	u2861
  3832     0645  2E47               	goto	u2860
  3833     0646                     u2861:
  3834     0646  2E4C               	goto	l2433
  3835     0647                     u2860:
  3836     0647                     l2429:
  3837     0647  1879               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  3838     0648  2E4A               	goto	u2871
  3839     0649  2E4B               	goto	u2870
  3840     064A                     u2871:
  3841     064A  2E4C               	goto	l2433
  3842     064B                     u2870:
  3843     064B                     l2431:
  3844                           
  3845                           ;main.c: 500:                     old_btn = 1;
  3846     064B  1479               	bsf	_old_btn/(0+8),_old_btn& (0+7)
  3847     064C                     l2433:
  3848                           
  3849                           ;main.c: 503:             if (stato != old_stato) {
  3850     064C  0876               	movf	_stato,w
  3851     064D  0675               	xorwf	_old_stato,w
  3852     064E  1903               	skipnz
  3853     064F  2E51               	goto	u2881
  3854     0650  2E52               	goto	u2880
  3855     0651                     u2881:
  3856     0651  2E60               	goto	l2441
  3857     0652                     u2880:
  3858     0652                     l2435:
  3859                           
  3860                           ;main.c: 504:                 keypressed = rowScan + (4 * colScan);
  3861     0652  0878               	movf	_colScan,w
  3862     0653  00D1               	movwf	??_KeyPadReader
  3863     0654  3002               	movlw	2
  3864     0655                     u2895:
  3865     0655  1003               	clrc
  3866     0656  0DD1               	rlf	??_KeyPadReader,f
  3867     0657  3EFF               	addlw	-1
  3868     0658  1D03               	skipz
  3869     0659  2E55               	goto	u2895
  3870     065A  0877               	movf	_rowScan,w
  3871     065B  0751               	addwf	??_KeyPadReader,w
  3872     065C  00C8               	movwf	_keypressed
  3873     065D                     l2437:
  3874                           
  3875                           ;main.c: 507:                 old_stato = stato;
  3876     065D  0876               	movf	_stato,w
  3877     065E  00F5               	movwf	_old_stato
  3878     065F  2E6A               	goto	l301
  3879     0660                     l2441:
  3880                           
  3881                           ;main.c: 510:         }
  3882     0660  3001               	movlw	1
  3883     0661  00D1               	movwf	??_KeyPadReader
  3884     0662  0851               	movf	??_KeyPadReader,w
  3885     0663  07F7               	addwf	_rowScan,f
  3886     0664  2DFF               	goto	l2409
  3887     0665                     l2445:
  3888                           
  3889                           ;main.c: 511:     }
  3890     0665  3001               	movlw	1
  3891     0666  00D1               	movwf	??_KeyPadReader
  3892     0667  0851               	movf	??_KeyPadReader,w
  3893     0668  07F8               	addwf	_colScan,f
  3894     0669  2DE7               	goto	l2399
  3895     066A                     l301:
  3896     066A  0008               	return
  3897     066B                     __end_of_KeyPadReader:
  3898                           
  3899                           	psect	text16
  3900     0EC6                     __ptext16:	
  3901 ;; *************** function _GenerateRandomNumber *****************
  3902 ;; Defined at:
  3903 ;;		line 473 in file "main.c"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;		None
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;  count           2    1[BANK0 ] unsigned int 
  3908 ;;  randomNum       1    0[BANK0 ] unsigned char 
  3909 ;; Return value:  Size  Location     Type
  3910 ;;                  1    wreg      unsigned char 
  3911 ;; Registers used:
  3912 ;;		wreg, status,2, status,0
  3913 ;; Tracked objects:
  3914 ;;		On entry : 0/0
  3915 ;;		On exit  : 0/0
  3916 ;;		Unchanged: 0/0
  3917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3918 ;;      Params:         0       0       0       0       0
  3919 ;;      Locals:         0       3       0       0       0
  3920 ;;      Temps:          0       0       0       0       0
  3921 ;;      Totals:         0       3       0       0       0
  3922 ;;Total ram usage:        3 bytes
  3923 ;; Hardware stack levels used: 1
  3924 ;; Hardware stack levels required when called: 2
  3925 ;; This function calls:
  3926 ;;		Nothing
  3927 ;; This function is called by:
  3928 ;;		_main
  3929 ;; This function uses a non-reentrant model
  3930 ;;
  3931                           
  3932     0EC6                     _GenerateRandomNumber:	
  3933                           ;psect for function _GenerateRandomNumber
  3934                           
  3935     0EC6                     l2383:	
  3936                           ;incstack = 0
  3937                           ; Regs used in _GenerateRandomNumber: [wreg+status,2+status,0]
  3938                           
  3939                           
  3940                           ;main.c: 474:     unsigned int count = 0;
  3941     0EC6  1283               	bcf	3,5	;RP0=0, select bank0
  3942     0EC7  1303               	bcf	3,6	;RP1=0, select bank0
  3943     0EC8  01D2               	clrf	GenerateRandomNumber@count
  3944     0EC9  01D3               	clrf	GenerateRandomNumber@count+1
  3945                           
  3946                           ;main.c: 475:     while (count != 186){
  3947     0ECA  2ED1               	goto	l2387
  3948     0ECB                     l2385:
  3949                           
  3950                           ;main.c: 476:         count++;
  3951     0ECB  3001               	movlw	1
  3952     0ECC  07D2               	addwf	GenerateRandomNumber@count,f
  3953     0ECD  1803               	skipnc
  3954     0ECE  0AD3               	incf	GenerateRandomNumber@count+1,f
  3955     0ECF  3000               	movlw	0
  3956     0ED0  07D3               	addwf	GenerateRandomNumber@count+1,f
  3957     0ED1                     l2387:
  3958                           
  3959                           ;main.c: 475:     while (count != 186){
  3960     0ED1  30BA               	movlw	186
  3961     0ED2  0652               	xorwf	GenerateRandomNumber@count,w
  3962     0ED3  0453               	iorwf	GenerateRandomNumber@count+1,w
  3963     0ED4  1D03               	btfss	3,2
  3964     0ED5  2ED7               	goto	u2791
  3965     0ED6  2ED8               	goto	u2790
  3966     0ED7                     u2791:
  3967     0ED7  2ECB               	goto	l2385
  3968     0ED8                     u2790:
  3969     0ED8                     l2389:
  3970                           
  3971                           ;main.c: 478:     unsigned char randomNum = TMR0;
  3972     0ED8  0801               	movf	1,w	;volatile
  3973     0ED9  00D1               	movwf	GenerateRandomNumber@randomNum
  3974     0EDA                     l2391:
  3975                           
  3976                           ;main.c: 479:     TMR0IF = 0;
  3977     0EDA  110B               	bcf	11,2	;volatile
  3978                           
  3979                           ;main.c: 480:     return randomNum;
  3980     0EDB  0851               	movf	GenerateRandomNumber@randomNum,w
  3981     0EDC                     l289:
  3982     0EDC  0008               	return
  3983     0EDD                     __end_of_GenerateRandomNumber:
  3984                           
  3985                           	psect	text17
  3986     04FD                     __ptext17:	
  3987 ;; *************** function _ISR *****************
  3988 ;; Defined at:
  3989 ;;		line 366 in file "main.c"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;		None
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;		None
  3994 ;; Return value:  Size  Location     Type
  3995 ;;                  1    wreg      void 
  3996 ;; Registers used:
  3997 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4003 ;;      Params:         0       0       0       0       0
  4004 ;;      Locals:         0       0       0       0       0
  4005 ;;      Temps:          5       0       0       0       0
  4006 ;;      Totals:         5       0       0       0       0
  4007 ;;Total ram usage:        5 bytes
  4008 ;; Hardware stack levels used: 2
  4009 ;; This function calls:
  4010 ;;		Nothing
  4011 ;; This function is called by:
  4012 ;;		Interrupt level 1
  4013 ;; This function uses a non-reentrant model
  4014 ;;
  4015                           
  4016     04FD                     _ISR:	
  4017                           ;psect for function _ISR
  4018                           
  4019     04FD                     i1l2163:
  4020     04FD                     i1l226:	
  4021                           ;main.c: 369:     }
  4022                           
  4023                           
  4024                           ;main.c: 367:     while (!TMR0IF){
  4025     04FD  1D0B               	btfss	11,2	;volatile
  4026     04FE  2D00               	goto	u234_21
  4027     04FF  2D01               	goto	u234_20
  4028     0500                     u234_21:
  4029     0500  2CFD               	goto	i1l226
  4030     0501                     u234_20:
  4031     0501                     i1l228:
  4032                           
  4033                           ;main.c: 370:     TMR0IF = 0;
  4034     0501  110B               	bcf	11,2	;volatile
  4035     0502                     i1l229:	
  4036                           ;main.c: 373:     }
  4037                           
  4038                           
  4039                           ;main.c: 371:     while (!TMR0IF){
  4040     0502  1D0B               	btfss	11,2	;volatile
  4041     0503  2D05               	goto	u235_21
  4042     0504  2D06               	goto	u235_20
  4043     0505                     u235_21:
  4044     0505  2D02               	goto	i1l229
  4045     0506                     u235_20:
  4046     0506                     i1l231:
  4047                           
  4048                           ;main.c: 374:     TMR0IF = 0;
  4049     0506  110B               	bcf	11,2	;volatile
  4050     0507                     i1l232:	
  4051                           ;main.c: 377:     }
  4052                           
  4053                           
  4054                           ;main.c: 375:     while (!TMR0IF){
  4055     0507  1D0B               	btfss	11,2	;volatile
  4056     0508  2D0A               	goto	u236_21
  4057     0509  2D0B               	goto	u236_20
  4058     050A                     u236_21:
  4059     050A  2D07               	goto	i1l232
  4060     050B                     u236_20:
  4061     050B                     i1l234:
  4062                           
  4063                           ;main.c: 378:     TMR0IF = 0;
  4064     050B  110B               	bcf	11,2	;volatile
  4065     050C                     i1l235:	
  4066                           ;main.c: 381:     }
  4067                           
  4068                           
  4069                           ;main.c: 379:     while (!TMR0IF){
  4070     050C  1D0B               	btfss	11,2	;volatile
  4071     050D  2D0F               	goto	u237_21
  4072     050E  2D10               	goto	u237_20
  4073     050F                     u237_21:
  4074     050F  2D0C               	goto	i1l235
  4075     0510                     u237_20:
  4076     0510                     i1l237:
  4077                           
  4078                           ;main.c: 382:     TMR0IF = 0;
  4079     0510  110B               	bcf	11,2	;volatile
  4080     0511                     i1l238:	
  4081                           ;main.c: 385:     }
  4082                           
  4083                           
  4084                           ;main.c: 383:     while (!TMR0IF){
  4085     0511  1D0B               	btfss	11,2	;volatile
  4086     0512  2D14               	goto	u238_21
  4087     0513  2D15               	goto	u238_20
  4088     0514                     u238_21:
  4089     0514  2D11               	goto	i1l238
  4090     0515                     u238_20:
  4091     0515                     i1l240:
  4092                           
  4093                           ;main.c: 386:     TMR0IF = 0;
  4094     0515  110B               	bcf	11,2	;volatile
  4095     0516                     i1l241:	
  4096                           ;main.c: 389:     }
  4097                           
  4098                           
  4099                           ;main.c: 387:     while (!TMR0IF){
  4100     0516  1D0B               	btfss	11,2	;volatile
  4101     0517  2D19               	goto	u239_21
  4102     0518  2D1A               	goto	u239_20
  4103     0519                     u239_21:
  4104     0519  2D16               	goto	i1l241
  4105     051A                     u239_20:
  4106     051A                     i1l243:
  4107                           
  4108                           ;main.c: 390:     TMR0IF = 0;
  4109     051A  110B               	bcf	11,2	;volatile
  4110     051B                     i1l244:	
  4111                           ;main.c: 393:     }
  4112                           
  4113                           
  4114                           ;main.c: 391:     while (!TMR0IF){
  4115     051B  1D0B               	btfss	11,2	;volatile
  4116     051C  2D1E               	goto	u240_21
  4117     051D  2D1F               	goto	u240_20
  4118     051E                     u240_21:
  4119     051E  2D1B               	goto	i1l244
  4120     051F                     u240_20:
  4121     051F                     i1l246:
  4122                           
  4123                           ;main.c: 394:     TMR0IF = 0;
  4124     051F  110B               	bcf	11,2	;volatile
  4125     0520                     i1l247:	
  4126                           ;main.c: 397:     }
  4127                           
  4128                           
  4129                           ;main.c: 395:     while (!TMR0IF){
  4130     0520  1D0B               	btfss	11,2	;volatile
  4131     0521  2D23               	goto	u241_21
  4132     0522  2D24               	goto	u241_20
  4133     0523                     u241_21:
  4134     0523  2D20               	goto	i1l247
  4135     0524                     u241_20:
  4136     0524                     i1l249:
  4137                           
  4138                           ;main.c: 398:     TMR0IF = 0;
  4139     0524  110B               	bcf	11,2	;volatile
  4140     0525                     i1l250:	
  4141                           ;main.c: 401:     }
  4142                           
  4143                           
  4144                           ;main.c: 399:     while (!TMR0IF){
  4145     0525  1D0B               	btfss	11,2	;volatile
  4146     0526  2D28               	goto	u242_21
  4147     0527  2D29               	goto	u242_20
  4148     0528                     u242_21:
  4149     0528  2D25               	goto	i1l250
  4150     0529                     u242_20:
  4151     0529                     i1l252:
  4152                           
  4153                           ;main.c: 402:     TMR0IF = 0;
  4154     0529  110B               	bcf	11,2	;volatile
  4155     052A                     i1l253:	
  4156                           ;main.c: 405:     }
  4157                           
  4158                           
  4159                           ;main.c: 403:     while (!TMR0IF){
  4160     052A  1D0B               	btfss	11,2	;volatile
  4161     052B  2D2D               	goto	u243_21
  4162     052C  2D2E               	goto	u243_20
  4163     052D                     u243_21:
  4164     052D  2D2A               	goto	i1l253
  4165     052E                     u243_20:
  4166     052E                     i1l255:
  4167                           
  4168                           ;main.c: 406:     TMR0IF = 0;
  4169     052E  110B               	bcf	11,2	;volatile
  4170     052F                     i1l256:	
  4171                           ;main.c: 409:     }
  4172                           
  4173                           
  4174                           ;main.c: 407:     while (!TMR0IF){
  4175     052F  1D0B               	btfss	11,2	;volatile
  4176     0530  2D32               	goto	u244_21
  4177     0531  2D33               	goto	u244_20
  4178     0532                     u244_21:
  4179     0532  2D2F               	goto	i1l256
  4180     0533                     u244_20:
  4181     0533                     i1l258:
  4182                           
  4183                           ;main.c: 410:     TMR0IF = 0;
  4184     0533  110B               	bcf	11,2	;volatile
  4185     0534                     i1l259:	
  4186                           ;main.c: 413:     }
  4187                           
  4188                           
  4189                           ;main.c: 411:     while (!TMR0IF){
  4190     0534  1D0B               	btfss	11,2	;volatile
  4191     0535  2D37               	goto	u245_21
  4192     0536  2D38               	goto	u245_20
  4193     0537                     u245_21:
  4194     0537  2D34               	goto	i1l259
  4195     0538                     u245_20:
  4196     0538                     i1l261:
  4197                           
  4198                           ;main.c: 414:     TMR0IF = 0;
  4199     0538  110B               	bcf	11,2	;volatile
  4200     0539                     i1l262:	
  4201                           ;main.c: 417:     }
  4202                           
  4203                           
  4204                           ;main.c: 415:     while (!TMR0IF){
  4205     0539  1D0B               	btfss	11,2	;volatile
  4206     053A  2D3C               	goto	u246_21
  4207     053B  2D3D               	goto	u246_20
  4208     053C                     u246_21:
  4209     053C  2D39               	goto	i1l262
  4210     053D                     u246_20:
  4211     053D                     i1l264:
  4212                           
  4213                           ;main.c: 418:     TMR0IF = 0;
  4214     053D  110B               	bcf	11,2	;volatile
  4215     053E                     i1l265:	
  4216                           ;main.c: 421:     }
  4217                           
  4218                           
  4219                           ;main.c: 419:     while (!TMR0IF){
  4220     053E  1D0B               	btfss	11,2	;volatile
  4221     053F  2D41               	goto	u247_21
  4222     0540  2D42               	goto	u247_20
  4223     0541                     u247_21:
  4224     0541  2D3E               	goto	i1l265
  4225     0542                     u247_20:
  4226     0542                     i1l267:
  4227                           
  4228                           ;main.c: 422:     TMR0IF = 0;
  4229     0542  110B               	bcf	11,2	;volatile
  4230     0543                     i1l268:	
  4231                           ;main.c: 425:     }
  4232                           
  4233                           
  4234                           ;main.c: 423:     while (!TMR0IF){
  4235     0543  1D0B               	btfss	11,2	;volatile
  4236     0544  2D46               	goto	u248_21
  4237     0545  2D47               	goto	u248_20
  4238     0546                     u248_21:
  4239     0546  2D43               	goto	i1l268
  4240     0547                     u248_20:
  4241     0547                     i1l270:
  4242                           
  4243                           ;main.c: 426:     TMR0IF = 0;
  4244     0547  110B               	bcf	11,2	;volatile
  4245     0548                     i1l2165:
  4246                           
  4247                           ;main.c: 427:     if(flag == 1){
  4248     0548  1283               	bcf	3,5	;RP0=0, select bank0
  4249     0549  1303               	bcf	3,6	;RP1=0, select bank0
  4250     054A  0340               	decf	_flag,w
  4251     054B  0441               	iorwf	_flag+1,w
  4252     054C  1D03               	btfss	3,2
  4253     054D  2D4F               	goto	u249_21
  4254     054E  2D50               	goto	u249_20
  4255     054F                     u249_21:
  4256     054F  2DD3               	goto	i1l280
  4257     0550                     u249_20:
  4258     0550                     i1l2167:
  4259                           
  4260                           ;main.c: 428:         TRISD |= 0x0F;
  4261     0550  300F               	movlw	15
  4262     0551  00F0               	movwf	??_ISR
  4263     0552  0870               	movf	??_ISR,w
  4264     0553  1683               	bsf	3,5	;RP0=1, select bank1
  4265     0554  1303               	bcf	3,6	;RP1=0, select bank1
  4266     0555  0488               	iorwf	8,f	;volatile
  4267     0556                     i1l2169:
  4268                           
  4269                           ;main.c: 430:         for (colScan = 0; colScan < 3; colScan++) {
  4270     0556  01F8               	clrf	_colScan
  4271     0557                     i1l2171:
  4272     0557  3003               	movlw	3
  4273     0558  0278               	subwf	_colScan,w
  4274     0559  1C03               	skipc
  4275     055A  2D5C               	goto	u250_21
  4276     055B  2D5D               	goto	u250_20
  4277     055C                     u250_21:
  4278     055C  2D5E               	goto	i1l2175
  4279     055D                     u250_20:
  4280     055D  2DD0               	goto	i1l2215
  4281     055E                     i1l2175:
  4282                           
  4283                           ;main.c: 431:             PORTB = PORTB | 0x07;
  4284     055E  1283               	bcf	3,5	;RP0=0, select bank0
  4285     055F  0806               	movf	6,w	;volatile
  4286     0560  3807               	iorlw	7
  4287     0561  0086               	movwf	6	;volatile
  4288     0562                     i1l2177:
  4289                           
  4290                           ;main.c: 432:             PORTB &= colMask[colScan];
  4291     0562  0878               	movf	_colScan,w
  4292     0563  3E11               	addlw	low ((_colMask-__stringbase)| (0+32768))
  4293     0564  0084               	movwf	4
  4294     0565  120A  118A  2675  120A  118A  	fcall	stringdir
  4295     056A  00F0               	movwf	??_ISR
  4296     056B  0870               	movf	??_ISR,w
  4297     056C  0586               	andwf	6,f	;volatile
  4298     056D                     i1l2179:
  4299                           
  4300                           ;main.c: 435:             for (rowScan = 0; rowScan < 4; rowScan++) {
  4301     056D  01F7               	clrf	_rowScan
  4302     056E                     i1l2181:
  4303     056E  3004               	movlw	4
  4304     056F  0277               	subwf	_rowScan,w
  4305     0570  1C03               	skipc
  4306     0571  2D73               	goto	u251_21
  4307     0572  2D74               	goto	u251_20
  4308     0573                     u251_21:
  4309     0573  2D75               	goto	i1l2185
  4310     0574                     u251_20:
  4311     0574  2DCB               	goto	i1l2211
  4312     0575                     i1l2185:
  4313                           
  4314                           ;main.c: 436:                 if (!(PORTD & rowMask[rowScan]) && (old_btn)) {
  4315     0575  0877               	movf	_rowScan,w
  4316     0576  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  4317     0577  0084               	movwf	4
  4318     0578  120A  118A  2675  120A  118A  	fcall	stringdir
  4319     057D  0508               	andwf	8,w	;volatile
  4320     057E  1D03               	btfss	3,2
  4321     057F  2D81               	goto	u252_21
  4322     0580  2D82               	goto	u252_20
  4323     0581                     u252_21:
  4324     0581  2D8B               	goto	i1l2193
  4325     0582                     u252_20:
  4326     0582                     i1l2187:
  4327     0582  1C79               	btfss	_old_btn/(0+8),_old_btn& (0+7)
  4328     0583  2D85               	goto	u253_21
  4329     0584  2D86               	goto	u253_20
  4330     0585                     u253_21:
  4331     0585  2D8B               	goto	i1l2193
  4332     0586                     u253_20:
  4333     0586                     i1l2189:
  4334                           
  4335                           ;main.c: 437:                     old_btn = 0;
  4336     0586  1079               	bcf	_old_btn/(0+8),_old_btn& (0+7)
  4337     0587                     i1l2191:
  4338                           
  4339                           ;main.c: 438:                     stato++;
  4340     0587  3001               	movlw	1
  4341     0588  00F0               	movwf	??_ISR
  4342     0589  0870               	movf	??_ISR,w
  4343     058A  07F6               	addwf	_stato,f
  4344     058B                     i1l2193:
  4345                           
  4346                           ;main.c: 440:                 if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  4347     058B  0877               	movf	_rowScan,w
  4348     058C  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  4349     058D  0084               	movwf	4
  4350     058E  120A  118A  2675  120A  118A  	fcall	stringdir
  4351     0593  0508               	andwf	8,w	;volatile
  4352     0594  1903               	btfsc	3,2
  4353     0595  2D97               	goto	u254_21
  4354     0596  2D98               	goto	u254_20
  4355     0597                     u254_21:
  4356     0597  2DAE               	goto	i1l2203
  4357     0598                     u254_20:
  4358     0598                     i1l2195:
  4359     0598  1879               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  4360     0599  2D9B               	goto	u255_21
  4361     059A  2D9C               	goto	u255_20
  4362     059B                     u255_21:
  4363     059B  2DAE               	goto	i1l2203
  4364     059C                     u255_20:
  4365     059C                     i1l2197:
  4366                           
  4367                           ;main.c: 442:                     if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  4368     059C  0877               	movf	_rowScan,w
  4369     059D  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  4370     059E  0084               	movwf	4
  4371     059F  120A  118A  2675  120A  118A  	fcall	stringdir
  4372     05A4  0508               	andwf	8,w	;volatile
  4373     05A5  1903               	btfsc	3,2
  4374     05A6  2DA8               	goto	u256_21
  4375     05A7  2DA9               	goto	u256_20
  4376     05A8                     u256_21:
  4377     05A8  2DAE               	goto	i1l2203
  4378     05A9                     u256_20:
  4379     05A9                     i1l2199:
  4380     05A9  1879               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  4381     05AA  2DAC               	goto	u257_21
  4382     05AB  2DAD               	goto	u257_20
  4383     05AC                     u257_21:
  4384     05AC  2DAE               	goto	i1l2203
  4385     05AD                     u257_20:
  4386     05AD                     i1l2201:
  4387                           
  4388                           ;main.c: 443:                         old_btn = 1;
  4389     05AD  1479               	bsf	_old_btn/(0+8),_old_btn& (0+7)
  4390     05AE                     i1l2203:
  4391                           
  4392                           ;main.c: 446:                 if (stato != old_stato) {
  4393     05AE  0876               	movf	_stato,w
  4394     05AF  0675               	xorwf	_old_stato,w
  4395     05B0  1903               	skipnz
  4396     05B1  2DB3               	goto	u258_21
  4397     05B2  2DB4               	goto	u258_20
  4398     05B3                     u258_21:
  4399     05B3  2DC1               	goto	i1l2209
  4400     05B4                     u258_20:
  4401     05B4                     i1l2205:
  4402                           
  4403                           ;main.c: 447:                     keypressed = rowScan + (4 * colScan);
  4404     05B4  0878               	movf	_colScan,w
  4405     05B5  00F0               	movwf	??_ISR
  4406     05B6  3002               	movlw	2
  4407     05B7                     u259_25:
  4408     05B7  1003               	clrc
  4409     05B8  0DF0               	rlf	??_ISR,f
  4410     05B9  3EFF               	addlw	-1
  4411     05BA  1D03               	skipz
  4412     05BB  2DB7               	goto	u259_25
  4413     05BC  0877               	movf	_rowScan,w
  4414     05BD  0770               	addwf	??_ISR,w
  4415     05BE  00C8               	movwf	_keypressed
  4416     05BF                     i1l2207:
  4417                           
  4418                           ;main.c: 450:                     old_stato = stato;
  4419     05BF  0876               	movf	_stato,w
  4420     05C0  00F5               	movwf	_old_stato
  4421     05C1                     i1l2209:
  4422                           
  4423                           ;main.c: 452:             }
  4424     05C1  3001               	movlw	1
  4425     05C2  00F0               	movwf	??_ISR
  4426     05C3  0870               	movf	??_ISR,w
  4427     05C4  07F7               	addwf	_rowScan,f
  4428     05C5  3004               	movlw	4
  4429     05C6  0277               	subwf	_rowScan,w
  4430     05C7  1C03               	skipc
  4431     05C8  2DCA               	goto	u260_21
  4432     05C9  2DCB               	goto	u260_20
  4433     05CA                     u260_21:
  4434     05CA  2D75               	goto	i1l2185
  4435     05CB                     u260_20:
  4436     05CB                     i1l2211:
  4437                           
  4438                           ;main.c: 453:         }
  4439     05CB  3001               	movlw	1
  4440     05CC  00F0               	movwf	??_ISR
  4441     05CD  0870               	movf	??_ISR,w
  4442     05CE  07F8               	addwf	_colScan,f
  4443     05CF  2D57               	goto	i1l2171
  4444     05D0                     i1l2215:
  4445                           
  4446                           ;main.c: 454:         TRISD |= 0x00;
  4447     05D0  1683               	bsf	3,5	;RP0=1, select bank1
  4448     05D1  1303               	bcf	3,6	;RP1=0, select bank1
  4449     05D2  0808               	movf	8,w	;volatile
  4450     05D3                     i1l280:
  4451     05D3  0874               	movf	??_ISR+4,w
  4452     05D4  00FF               	movwf	btemp+1
  4453     05D5  0873               	movf	??_ISR+3,w
  4454     05D6  008A               	movwf	10
  4455     05D7  0872               	movf	??_ISR+2,w
  4456     05D8  0084               	movwf	4
  4457     05D9  0E71               	swapf	??_ISR+1,w
  4458     05DA  0083               	movwf	3
  4459     05DB  0EFE               	swapf	btemp,f
  4460     05DC  0E7E               	swapf	btemp,w
  4461     05DD  0009               	retfie
  4462     05DE                     __end_of_ISR:
  4463     007E                     btemp	set	126	;btemp
  4464     007E                     wtemp0	set	126
  4465                           
  4466                           	psect	intentry
  4467     0004                     __pintentry:	
  4468                           ;incstack = 0
  4469                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath]
  4470                           
  4471     0004                     interrupt_function:
  4472     007E                     saved_w	set	btemp
  4473     0004  00FE               	movwf	btemp
  4474     0005  0E03               	swapf	3,w
  4475     0006  00F1               	movwf	??_ISR+1
  4476     0007  0804               	movf	4,w
  4477     0008  00F2               	movwf	??_ISR+2
  4478     0009  080A               	movf	10,w
  4479     000A  00F3               	movwf	??_ISR+3
  4480     000B  087F               	movf	btemp+1,w
  4481     000C  00F4               	movwf	??_ISR+4
  4482     000D  120A  118A  2CFD   	ljmp	_ISR
  4483                           
  4484                           	psect	idloc
  4485                           
  4486                           ;Config register IDLOC0 @ 0x2000
  4487                           ;	unspecified, using default values
  4488     2000                     	org	8192
  4489     2000  3FFF               	dw	16383
  4490                           
  4491                           ;Config register IDLOC1 @ 0x2001
  4492                           ;	unspecified, using default values
  4493     2001                     	org	8193
  4494     2001  3FFF               	dw	16383
  4495                           
  4496                           ;Config register IDLOC2 @ 0x2002
  4497                           ;	unspecified, using default values
  4498     2002                     	org	8194
  4499     2002  3FFF               	dw	16383
  4500                           
  4501                           ;Config register IDLOC3 @ 0x2003
  4502                           ;	unspecified, using default values
  4503     2003                     	org	8195
  4504     2003  3FFF               	dw	16383
  4505                           
  4506                           	psect	config
  4507                           
  4508                           ;Config register CONFIG @ 0x2007
  4509                           ;	Oscillator Selection bits
  4510                           ;	FOSC = HS, HS oscillator
  4511                           ;	Watchdog Timer Enable bit
  4512                           ;	WDTE = OFF, WDT disabled
  4513                           ;	Power-up Timer Enable bit
  4514                           ;	PWRTE = OFF, PWRT disabled
  4515                           ;	Brown-out Reset Enable bit
  4516                           ;	BOREN = OFF, BOR disabled
  4517                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4518                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  4519                           ;	Data EEPROM Memory Code Protection bit
  4520                           ;	CPD = OFF, Data EEPROM code protection off
  4521                           ;	Flash Program Memory Write Enable bits
  4522                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4523                           ;	In-Circuit Debugger Mode bit
  4524                           ;	DEBUG = 0x1, unprogrammed default
  4525                           ;	Flash Program Memory Code Protection bit
  4526                           ;	CP = OFF, Code protection off
  4527     2007                     	org	8199
  4528     2007  3F3A               	dw	16186

Data Sizes:
    Strings     91
    Constant    19
    Data        1
    BSS         53
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     29      79
    BANK1            80      3       3
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    intToString@str	PTR unsigned char  size(1) Largest target is 3
		 -> print_countdown(BANK0[3]), 

    lcdPrint@str	PTR unsigned char  size(2) Largest target is 15
		 -> STR_8(CODE[15]), STR_7(CODE[8]), print_countdown(BANK0[3]), STR_6(CODE[14]), 
		 -> STR_5(CODE[13]), STR_4(CODE[12]), STR_3(CODE[11]), STR_2(CODE[10]), 
		 -> STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_UART_Read
    _initLCD->_lcdSend
    _UART_Read->_intToString
    _lcdPrint->_lcdSend
    _intToString->___awdiv
    _potenza->___bmul
    ___awdiv->_potenza

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_UART_Read

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   20376
               _GenerateRandomNumber
                       _KeyPadReader
                     _RS485_RxEnable
                     _RS485_TxEnable
                        _Timer0_Init
                          _UART_Init
                          _UART_Read
                         _UART_Write
                            _initLCD
                           _lcdPrint
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0    3122
                                              2 BANK0      2     2      0
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _UART_Read                                            4     4      0    9968
                                             28 BANK0      1     1      0
                                              0 BANK1      3     3      0
                     _RS485_RxEnable
                     _RS485_TxEnable
                         _UART_Write
                        _intToString
                           _lcdPrint
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _lcdPrint                                             7     5      2    4062
                                              2 BANK0      7     5      2
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _lcdSend                                              2     1      1    3122
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _intToString                                          9     6      3    2425
                                             19 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                            _potenza
 ---------------------------------------------------------------------------------
 (3) _potenza                                              6     5      1     573
                                              4 BANK0      6     5      1
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     226
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     613
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     604
                                             10 BANK0      9     5      4
                            _potenza (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RS485_TxEnable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RS485_RxEnable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _KeyPadReader                                         2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _GenerateRandomNumber                                 3     3      0      71
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GenerateRandomNumber
   _KeyPadReader
   _RS485_RxEnable
   _RS485_TxEnable
   _Timer0_Init
   _UART_Init
   _UART_Read
     _RS485_RxEnable
     _RS485_TxEnable
     _UART_Write
     _intToString
       ___awdiv
         _potenza (ARG)
           ___bmul
       ___awmod
       _potenza
     _lcdPrint
       _lcdSend
     _lcdSend
   _UART_Write
   _initLCD
     _lcdSend
   _lcdPrint
   _lcdSend

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      3       3       7        3.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1D      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       1       0        7.1%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5C      12        0.0%
ABS                  0      0      5C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Jun 19 17:29:45 2023

                            pc 0002                 ___bmul@product 0053                   ___awdiv@sign 0061  
                           fsr 0004                            l212 07D2                            l301 066A  
                          l221 0F3B                            l215 0EC5                            l208 04FC  
                          l308 07FE                            l317 0764                            l190 0E78  
                          l184 0EB0                            l193 0E89                            l283 0E9E  
                          l187 0E7D                            l196 0E8F                            l429 0EF3  
                          l289 0EDC                            l556 0FFF                            l569 0F96  
                          _GIE 005F                            _RC0 0038                            _RC1 0039  
                          _PS0 0408                            _PS1 0409                            _PS2 040A  
                          _ISR 04FD                            _PSA 040B                            fsr0 0004  
                          indf 0000                   ___awmod@sign 0057                           ?_ISR 0070  
                         l2221 0EE5                           l2301 0EF9                           l2311 0E8D  
                         l2223 0EE9                           l2231 0EB4                           l2303 0F17  
                         l2313 0E74                           l2225 0EEB                           l2217 0EE0  
                         l2321 06F2                           l2241 0EBE                           l2233 0EB7  
                         l2305 0F1F                           l2403 05EE                           l2307 0E79  
                         l1611 0F9E                           l2227 0EF2                           l2219 0EE1  
                         l2251 07DB                           l2331 0753                           l2323 0713  
                         l2315 06E9                           l2243 0EC3                           l2235 0EB8  
                         l2421 061C                           l2413 0606                           l2405 05F3  
                         l2341 0EA6                           l2309 0E89                           l1621 0FB2  
                         l1613 0FA3                           l2261 0F3C                           l2253 07E8  
                         l2325 0715                           l2333 0757                           l2317 06ED  
                         l2245 0EC4                           l2237 0EB9                           l2501 03D5  
                         l2431 064B                           l2423 0629                           l2415 0613  
                         l2407 05FE                           l2343 0EA7                           l1631 0FC8  
                         l1623 0FB4                           l1615 0FA5                           l1607 0F97  
                         l2271 0F4E                           l2263 0F3F                           l2255 07EE  
                         l2247 07D6                           l2335 075D                           l2327 0722  
                         l2319 06EE                           l2239 0EBC                           l2503 03DD  
                         l2511 0402                           l2351 0769                           l2441 0660  
                         l2425 062D                           l2433 064C                           l2417 0617  
                         l2409 05FF                           l2345 0EAA                           l2337 0E9F  
                         l1641 0FEB                           l1633 0FCC                           l1625 0FBA  
                         l1617 0FA9                           l1609 0F9A                           l2281 0F67  
                         l2273 0F53                           l2265 0F43                           l2257 07FB  
                         l2249 07D8                           l2329 073D                           l2521 0431  
                         l2513 0407                           l2505 03EE                           l2361 079C  
                         l2353 0773                           l2601 006C                           l2435 0652  
                         l2427 0638                           l2419 0618                           l2347 0EAD  
                         l2339 0EA4                           l1635 0FDD                           l1627 0FBD  
                         l1643 0FF1                           l1619 0FAE                           l2283 0F6B  
                         l2275 0F59                           l2291 0F88                           l2267 0F48  
                         l2531 0464                           l2523 0432                           l2515 040D  
                         l2507 03F9                           l2451 031C                           l2371 07C9  
                         l2363 07A5                           l2355 0776                           l2611 008A  
                         l2603 0072                           l2437 065D                           l2429 0647  
                         l2445 0665                           l2381 0E9D                           l2373 0E90  
                         l1645 0FF6                           l1637 0FE3                           l1629 0FC4  
                         l2293 0F8D                           l2285 0F75                           l2277 0F5C  
                         l2269 0F4A                           l2541 048D                           l2533 0468  
                         l2517 0415                           l2525 043A                           l2509 03FA  
                         l2461 0336                           l2453 031F                           l2365 07AE  
                         l2357 077D                           l2349 0765                           l2701 01C5  
                         l2621 00B0                           l2613 0090                           l2605 0078  
                         l2391 0EDA                           l2383 0EC6                           l2375 0E97  
                         l1647 0FFB                           l1639 0FE4                           l2295 0F92  
                         l2287 0F7B                           l2279 0F63                           l2551 04B1  
                         l2543 0495                           l2527 0450                           l2519 0426  
                         l2471 0360                           l2463 0347                           l2455 0325  
                         l2535 0478                           l2367 07B7                           l2359 0791  
                         l2703 01CB                           l2711 01E3                           l2631 00D3  
                         l2623 00B9                           l2615 0098                           l2607 007E  
                         l2385 0ECB                           l2377 0E9B                           l2289 0F82  
                         l2561 04DE                           l2553 04BF                           l2545 049D  
                         l2537 047D                           l2529 0459                           l2481 038A  
                         l2473 0365                           l2465 0352                           l2457 032A  
                         l2449 0319                           l2369 07C0                           l2721 020C  
                         l2713 01EA                           l2705 01D1                           l2641 00FB  
                         l2633 00DA                           l2625 00BE                           l2617 00A0  
                         l2609 0084                           l2387 0ED1                           l2395 05DE  
                         l2379 0E9C                           l2299 0EF4                           l2555 04CA  
                         l2547 04A5                           l2539 0485                           l2491 03B6  
                         l2475 036D                           l2483 0392                           l2467 0353  
                         l2459 032F                           l2731 022A                           l2723 0212  
                         l2715 01F6                           l2707 01D7                           l2651 0119  
                         l2643 0101                           l2635 00E5                           l2619 00A8  
                         l2389 0ED8                           l2397 05E6                           l2557 04CD  
                         l2549 04AB                           l2493 03C1                           l2485 0397  
                         l2477 037E                           l2469 035B                           l2565 04E2  
                         l2741 024F                           l2733 0230                           l2725 0218  
                         l2717 01FE                           l2709 01DD                           l2661 0138  
                         l2653 011F                           l2645 0107                           l2637 00EB  
                         l2629 00CE                           l2581 002B                           l2399 05E7  
                         l2567 04E9                           l2559 04CF                           l2495 03C2  
                         l2487 039D                           l2479 0389                           l2751 0271  
                         l2743 0257                           l2735 0236                           l2727 021E  
                         l2719 0206                           l2671 0160                           l2663 0144  
                         l2655 0125                           l2647 010D                           l2639 00F3  
                         l2591 004A                           l2583 0032                           l2569 04F0  
                         l2489 03A5                           l2497 03CA                           l2761 028F  
                         l2753 0277                           l2745 025F                           l2729 0224  
                         l2737 023C                           l2681 017E                           l2673 0166  
                         l2665 014C                           l2657 012B                           l2649 0113  
                         l2593 0055                           l2585 0037                           l2499 03CF  
                         l2771 0310                           l2755 027D                           l2747 0265  
                         l2763 0295                           l2739 0243                           l2691 01A5  
                         l2683 0184                           l2675 016C                           l2667 0154  
                         l2659 0131                           l2595 005A                           l2587 003C  
                         l2765 0302                           l2757 0283                           l2749 026B  
                         l2693 01AD                           l2677 0172                           l2669 015A  
                         l2685 018A                           l2597 0060                           l2589 0041  
                         l2767 0305                           l2759 0289                           l2695 01B3  
                         l2687 0191                           l2679 0178                           l2599 0066  
                         l2769 030A                           l2697 01B9                           l2689 019D  
                         l2699 01BF                           STR_1 06D9                           STR_2 06CF  
                         STR_3 06C4                           STR_4 06B8                           STR_5 06AB  
                         STR_6 069D                           STR_7 06E1                           STR_8 068E  
                         _BRGH 04C2                           _CREN 00C4                           _T0CS 040D  
                         u1400 0FDD                           u3000 040D                           u1401 0FDC  
                         u3001 040C                           u3010 04E9                           u3011 04E8  
                         u1420 0FF1                           u1340 0F9E                           u3100 011F  
                         u3020 00CD                           u1421 0FF0                           u1405 0FD9  
                         u1341 0F9D                           u3101 011E                           u3021 00CC  
                         u1430 0FF6                           u1350 0FA9                           u3110 0125  
                         u3030 00D3                           u1431 0FF5                           u1415 0FE5  
                         u1351 0FA8                           u3111 0124                           u3031 00D2  
                         u1360 0FBA                           u3200 0178                           u3120 012B  
                         u3040 00FB                           u1361 0FB9                           u3201 0177  
                         u3121 012A                           u3041 00FA                           u3210 017E  
                         u3130 0131                           u3050 0101                           u3211 017D  
                         u3131 0130                           u3051 0100                           u1380 0FCC  
                         u3300 01D1                           u3220 0184                           u3140 0154  
                         u3060 0107                           u1381 0FCB                           u3301 01D0  
                         u3221 0183                           u3141 0153                           u3061 0106  
                         u3310 01D7                           u3230 018A                           u3150 015A  
                         u3070 010D                           u1375 0FBE                           u3311 01D6  
                         u3231 0189                           u3151 0159                           u3071 010C  
                         u3400 022A                           u3320 01DD                           u3240 01AD  
                         u3160 0160                           u3080 0113                           u3401 0229  
                         u3321 01DC                           u3241 01AC                           u3161 015F  
                         u3081 0112                           u2610 0EE5                           u3410 0230  
                         u3330 01E3                           u3250 01B3                           u3170 0166  
                         u3090 0119                           u1395 0FCD                           u2611 0EE4  
                         u3411 022F                           u3331 01E2                           u3251 01B2  
                         u3171 0165                           u3091 0118                           u2620 0EF2  
                         u3500 0283                           u3420 0236                           u3340 0206  
                         u3260 01B9                           u3180 016C                           u2621 0EF1  
                         u3501 0282                           u3421 0235                           u3341 0205  
                         u3261 01B8                           u3181 016B                           u2710 0F88  
                         u2630 07FB                           u3510 0289                           u3430 023C  
                         u3350 020C                           u3270 01BF                           u3190 0172  
                         u2711 0F87                           u2631 07FA                           u3511 0288  
                         u3431 023B                           u3351 020B                           u3271 01BE  
                         u3191 0171                           u2800 05ED                           u2720 0F8D  
                         u2640 0F43                           u3520 028F                           u3440 025F  
                         u3360 0212                           u3280 01C5                           u2801 05EC  
                         u2721 0F8C                           u2705 0F7C                           u2641 0F42  
                         u3521 028E                           u3441 025E                           u3361 0211  
                         u3281 01C4                           u2810 0605                           u2650 0F4E  
                         u2730 0F05                           u3530 0295                           u3450 0265  
                         u3370 0218                           u3290 01CB                           u2811 0604  
                         u2651 0F4D                           u2635 07F7                           u3531 0294  
                         u3451 0264                           u3371 0217                           u3291 01CA  
                         u2820 0613                           u2660 0F59                           u2740 0F29  
                         u2900 0325                           u3460 026B                           u3380 021E  
                         u2821 0612                           u2661 0F58                           u2901 0324  
                         u3461 026A                           u3381 021D                           u2830 0617  
                         u2750 0F3B                           u2910 032A                           u3470 0271  
                         u3390 0224                           u2831 0616                           u2751 0F3A  
                         u2911 0329                           u3471 0270                           u3391 0223  
                         u2840 0629                           u2760 0E8D                           u2680 0F6B  
                         u2920 032F                           u3480 0277                           u2841 0628  
                         u2761 0E8C                           u2681 0F6A                           u2921 032E  
                         u3481 0276                           u2850 062D                           u2690 0F75  
                         u2770 0713                           u2930 0360                           u3490 027D  
                         u2851 062C                           u2691 0F74                           u2675 0F5D  
                         u2771 0712                           u2931 035F                           u3547 076F  
                         u3491 027C                           u2860 0647                           u2780 075D  
                         u2940 0365                           u2861 0646                           u2781 075C  
                         u2941 0364                           u3557 0783                           u2790 0ED8  
                         u2870 064B                           u2950 0397                           u2791 0ED7  
                         u2871 064A                           u2695 0F71                           u2951 0396  
                         u3567 0797                           u2880 0652                           u2960 039D  
                         u2881 0651                           u3577 0470                           u2961 039C  
                         u2970 03CF                           u3587 04D7                           u2971 03CE  
                         u2980 03D5                           _RCIF 0065                           u3597 0633  
                         u2981 03D4                           u2990 0407                           u2895 0655  
                         u2991 0406                 ??_KeyPadReader 0051                           _TMR0 0001  
                         _SPEN 00C7                           _TXEN 04C5                           _TXIF 0064  
                         _SYNC 04C4                           _data 0030                           _flag 0040  
                         _main 002B                           _num1 004D                           _num2 004C  
                         _num3 004B                           _keys 067B                           _num4 004A  
                         _num5 0049                           btemp 007E                           start 0010  
            ___bmul@multiplier 0054                          ??_ISR 0070                   ?_intToString 0064  
                        ?_main 0070                __end_of___awdiv 1000                __end_of___awmod 0F97  
              ___awdiv@divisor 005B                          i1l231 0506                          i1l240 0515  
                        i1l232 0507                          i1l241 0516                          i1l250 0525  
                        i1l234 050B                          i1l226 04FD                          i1l243 051A  
                        i1l235 050C                          i1l252 0529                          i1l244 051B  
                        i1l228 0501                          i1l261 0538                          i1l253 052A  
                        i1l237 0510                          i1l229 0502                          i1l270 0547  
                        i1l262 0539                          i1l246 051F                          i1l238 0511  
                        i1l255 052E                          i1l247 0520                          i1l280 05D3  
                        i1l264 053D                          i1l256 052F                          i1l265 053E  
                        i1l249 0524                          i1l258 0533                          i1l267 0542  
                        i1l259 0534                          i1l268 0543                ___awdiv@counter 0060  
                        _RCREG 001A                          _SPBRG 0099                          _PORTB 0006  
                        _PORTD 0008                          _TRISA 0085                          _TRISB 0086  
                        _TRISC 0087                          _TRISD 0088                          _TRISE 0089  
                        _TXREG 0019                __end_of_colMask 068E                __end_of_lcdSend 0EC6  
                  ?_UART_Write 0070                __end_of_initLCD 07D3                          _count 003C  
                        _index 003E                          _keyok 0047                          _stato 0076  
               __pbitbssCOMMON 03C8                          pclath 000A                __end_of_rowMask 068B  
              __end_of_potenza 07FF                          status 0003                          wtemp0 007E  
 __end_of_GenerateRandomNumber 0EDD                __initialization 0013                   __end_of_main 0319  
                 __end_of_keys 0687                         ??_main 006E               ___awdiv@dividend 005D  
                       i1l2201 05AD                         i1l2203 05AE                         i1l2211 05CB  
                       i1l2205 05B4                         i1l2207 05BF                         i1l2215 05D0  
                       i1l2209 05C1                         i1l2171 0557                         i1l2163 04FD  
                       i1l2181 056E                         i1l2165 0548                         i1l2191 0587  
                       i1l2175 055E                         i1l2167 0550                         i1l2193 058B  
                       i1l2185 0575                         i1l2177 0562                         i1l2169 0556  
                       i1l2195 0598                         i1l2187 0582                         i1l2179 056D  
                       i1l2197 059C                         i1l2189 0586                         i1l2199 05A9  
                       u240_20 051F                         u240_21 051E                         u241_20 0524  
                       u241_21 0523                         u250_20 055D                         u242_20 0529  
                       u234_20 0501                         u250_21 055C                         u242_21 0528  
                       u234_21 0500                         u251_20 0574                         u243_20 052E  
                       u235_20 0506                         u251_21 0573                         u243_21 052D  
                       u235_21 0505                         u260_20 05CB                         u252_20 0582  
                       u244_20 0533                         u236_20 050B                         u260_21 05CA  
                       u252_21 0581                         u244_21 0532                         u236_21 050A  
                       u253_20 0586                         u245_20 0538                         u237_20 0510  
                       u253_21 0585                         u245_21 0537                         u237_21 050F  
                       u254_20 0598                         u246_20 053D                         u238_20 0515  
                       u254_21 0597                         u246_21 053C                         u238_21 0514  
                       u255_20 059C                         u247_20 0542                         u239_20 051A  
                       u255_21 059B                         u247_21 0541                         u239_21 0519  
                       u256_20 05A9                         u248_20 0547                         u256_21 05A8  
                       u248_21 0546                         u257_20 05AD                         u249_20 0550  
                       u257_21 05AC                         u249_21 054F                         u258_20 05B4  
                       u258_21 05B3                         u259_25 05B7                         _TMR0IE 005D  
                       _TMR0IF 005A                         _TRISC6 043E                         _TRISC7 043F  
                ??_Timer0_Init 0051               __end_of_lcdPrint 0F3C              __end_of_UART_Init 0EB1  
            __end_of_UART_Read 04FD                         ___bmul 0EDD                      ??___awdiv 005F  
                    ??___awmod 0055                         _codice 0036               ___awdiv@quotient 0062  
              ___awmod@divisor 0051           __end_of_KeyPadReader 066B                ___awmod@counter 0056  
                    ??_lcdSend 0052                      ??_initLCD 0053                         saved_w 007E  
                    ??_potenza 0056        __end_of__initialization 0027               intToString@cifre 006B  
          ___bmul@multiplicand 0051                 __pcstackCOMMON 0070                   __pidataBANK0 07FF  
          __end_of_Timer0_Init 0E9F           _GenerateRandomNumber 0EC6                     __pbssBANK0 0020  
                   __pmaintext 002B                        ?___bmul 0051                     __pintentry 0004  
               UART_Read@count 006D          ?_GenerateRandomNumber 0070                   ??_UART_Write 0051  
                    ?_lcdPrint 0053                     __stringtab 066B                   intToString@i 006C  
                 intToString@n 0064                   intToString@t 006A                    _Timer0_Init 0E90  
               _RS485_RxEnable 0E74                        ___awdiv 0F97                        ___awmod 0F3C  
           __end_of_UART_Write 0E90                 _RS485_TxEnable 0E79                        _colMask 068B  
                      _colScan 0078                        _lcdSend 0EB1                        __ptext1 0765  
                      __ptext2 0319                        __ptext3 0EF4                        __ptext4 0EB1  
                      __ptext5 06E9                        __ptext6 07D3                        __ptext7 0EDD  
                      __ptext8 0F3C                        __ptext9 0F97                        _initLCD 0765  
                      _old_btn 03C8               ___awmod@dividend 0053                     _keypressed 0048  
                      _restart 0046                        _rowMask 0687                        _rowScan 0077  
                      _potenza 07D3                     ??_lcdPrint 0055                        clrloop0 0E7F  
                      _stringa 0020           end_of_initialization 0027                   _KeyPadReader 05DE  
       __end_of_RS485_RxEnable 0E79         __end_of_RS485_TxEnable 0E7E                      _UART_Init 0E9F  
                    _UART_Read 0319                      _PORTEbits 0009                 UART_Write@data 0051  
       ??_GenerateRandomNumber 0051                      _TRISEbits 0089                ?_RS485_RxEnable 0070  
              ?_RS485_TxEnable 0070                 __end_of___bmul 0EF4                     ?_UART_Init 0070  
                   ?_UART_Read 0070            start_initialization 0013  GenerateRandomNumber@randomNum 0051  
                  __end_of_ISR 05DE                 _stringPosition 0042                 intToString@str 0066  
                     ??___bmul 0052                    __pdataBANK0 006E                  ??_intToString 0067  
                  __pbssCOMMON 0075                      ___latbits 0002                  __pcstackBANK0 0051  
                __pcstackBANK1 00A0                   ?_Timer0_Init 0070                       ?___awdiv 005B  
                     ?___awmod 0051                    ??_UART_Init 0051                    ??_UART_Read 00A0  
                    __pstrings 066B                       ?_lcdSend 0051                       ?_initLCD 0070  
          __end_of_intToString 0765                      _countdown 006E                       ?_potenza 0055  
                    _randomNum 0044                      _old_stato 0075              interrupt_function 0004  
                    clear_ram0 0E7E                _print_countdown 004E                      lcdPrint@n 0058  
                  __stringbase 067A               ??_RS485_RxEnable 0051               ??_RS485_TxEnable 0051  
                  _intToString 06E9             __end_of__stringtab 067B                       __ptext10 0E86  
                     __ptext11 0E79                       __ptext12 0E74                       __ptext13 0E9F  
                     __ptext14 0E90                       __ptext15 05DE                       __ptext16 0EC6  
                     __ptext17 04FD                       _lcdPrint 0EF4                       _received 0045  
                     intlevel1 0000                      stringcode 0675                       potenza@b 0057  
                     potenza@e 0055                       potenza@i 0058                       potenza@n 005A  
                  lcdSend@dato 0052                    lcdSend@tipo 0051                       stringdir 0675  
                     stringtab 066B                     _UART_Write 0E86      GenerateRandomNumber@count 0052  
                  lcdPrint@str 0053                  ?_KeyPadReader 0070  
