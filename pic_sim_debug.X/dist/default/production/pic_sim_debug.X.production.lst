

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Jun 26 11:54:50 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37     0000                     
    38                           ; Generated 22/03/2023 GMT
    39                           ; 
    40                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F877A Definitions
    70                           ; 
    71                           ; SFR Addresses
    72     0000                     	;# 
    73     0001                     	;# 
    74     0002                     	;# 
    75     0003                     	;# 
    76     0004                     	;# 
    77     0005                     	;# 
    78     0006                     	;# 
    79     0007                     	;# 
    80     0008                     	;# 
    81     0009                     	;# 
    82     000A                     	;# 
    83     000B                     	;# 
    84     000C                     	;# 
    85     000D                     	;# 
    86     000E                     	;# 
    87     000E                     	;# 
    88     000F                     	;# 
    89     0010                     	;# 
    90     0011                     	;# 
    91     0012                     	;# 
    92     0013                     	;# 
    93     0014                     	;# 
    94     0015                     	;# 
    95     0015                     	;# 
    96     0016                     	;# 
    97     0017                     	;# 
    98     0018                     	;# 
    99     0019                     	;# 
   100     001A                     	;# 
   101     001B                     	;# 
   102     001B                     	;# 
   103     001C                     	;# 
   104     001D                     	;# 
   105     001E                     	;# 
   106     001F                     	;# 
   107     0081                     	;# 
   108     0085                     	;# 
   109     0086                     	;# 
   110     0087                     	;# 
   111     0088                     	;# 
   112     0089                     	;# 
   113     008C                     	;# 
   114     008D                     	;# 
   115     008E                     	;# 
   116     0091                     	;# 
   117     0092                     	;# 
   118     0093                     	;# 
   119     0094                     	;# 
   120     0098                     	;# 
   121     0099                     	;# 
   122     009C                     	;# 
   123     009D                     	;# 
   124     009E                     	;# 
   125     009F                     	;# 
   126     010C                     	;# 
   127     010D                     	;# 
   128     010E                     	;# 
   129     010F                     	;# 
   130     018C                     	;# 
   131     018D                     	;# 
   132     0000                     	;# 
   133     0001                     	;# 
   134     0002                     	;# 
   135     0003                     	;# 
   136     0004                     	;# 
   137     0005                     	;# 
   138     0006                     	;# 
   139     0007                     	;# 
   140     0008                     	;# 
   141     0009                     	;# 
   142     000A                     	;# 
   143     000B                     	;# 
   144     000C                     	;# 
   145     000D                     	;# 
   146     000E                     	;# 
   147     000E                     	;# 
   148     000F                     	;# 
   149     0010                     	;# 
   150     0011                     	;# 
   151     0012                     	;# 
   152     0013                     	;# 
   153     0014                     	;# 
   154     0015                     	;# 
   155     0015                     	;# 
   156     0016                     	;# 
   157     0017                     	;# 
   158     0018                     	;# 
   159     0019                     	;# 
   160     001A                     	;# 
   161     001B                     	;# 
   162     001B                     	;# 
   163     001C                     	;# 
   164     001D                     	;# 
   165     001E                     	;# 
   166     001F                     	;# 
   167     0081                     	;# 
   168     0085                     	;# 
   169     0086                     	;# 
   170     0087                     	;# 
   171     0088                     	;# 
   172     0089                     	;# 
   173     008C                     	;# 
   174     008D                     	;# 
   175     008E                     	;# 
   176     0091                     	;# 
   177     0092                     	;# 
   178     0093                     	;# 
   179     0094                     	;# 
   180     0098                     	;# 
   181     0099                     	;# 
   182     009C                     	;# 
   183     009D                     	;# 
   184     009E                     	;# 
   185     009F                     	;# 
   186     010C                     	;# 
   187     010D                     	;# 
   188     010E                     	;# 
   189     010F                     	;# 
   190     018C                     	;# 
   191     018D                     	;# 
   192                           
   193                           	psect	idataBANK0
   194     0E24                     __pidataBANK0:
   195                           
   196                           ;initializer for _id2
   197     0E24  3431               	retlw	49
   198                           
   199                           ;initializer for _id1
   200     0E25  3430               	retlw	48
   201                           
   202                           ;initializer for _countdown
   203     0E26  343C               	retlw	60
   204                           
   205                           	psect	strings
   206     0607                     __pstrings:
   207     0607                     stringtab:
   208     0607                     __stringtab:
   209                           
   210                           ;	String table - string pointers are 1 byte each
   211     0607  1BFF               	btfsc	btemp+1,7
   212     0608  2E11               	ljmp	stringcode
   213     0609  1383               	bcf	3,7
   214     060A  187F               	btfsc	btemp+1,0
   215     060B  1783               	bsf	3,7
   216     060C  0800               	movf	0,w
   217     060D  0A84               	incf	4,f
   218     060E  1903               	skipnz
   219     060F  0AFF               	incf	btemp+1,f
   220     0610  0008               	return
   221     0611                     stringcode:
   222     0611                     stringdir:
   223     0611  3006               	movlw	high stringdir
   224     0612  008A               	movwf	10
   225     0613  0804               	movf	4,w
   226     0614  0A84               	incf	4,f
   227     0615  0782               	addwf	2,f
   228     0616                     __stringbase:
   229     0616  3400               	retlw	0
   230     0617                     __end_of__stringtab:
   231     0617                     _keys:
   232     0617  3423               	retlw	35
   233     0618  3437               	retlw	55
   234     0619  3434               	retlw	52
   235     061A  3431               	retlw	49
   236     061B  342A               	retlw	42
   237     061C  3438               	retlw	56
   238     061D  3435               	retlw	53
   239     061E  3432               	retlw	50
   240     061F  3430               	retlw	48
   241     0620  3439               	retlw	57
   242     0621  3436               	retlw	54
   243     0622  3433               	retlw	51
   244     0623                     __end_of_keys:
   245     0623                     _rowMask:
   246     0623  3401               	retlw	1
   247     0624  3402               	retlw	2
   248     0625  3404               	retlw	4
   249     0626  3408               	retlw	8
   250     0627                     __end_of_rowMask:
   251     0627                     _colMask:
   252     0627  34FE               	retlw	254
   253     0628  34FD               	retlw	253
   254     0629  34FB               	retlw	251
   255     062A                     __end_of_colMask:
   256     0001                     _TMR0	set	1
   257     0006                     _PORTB	set	6
   258     0008                     _PORTD	set	8
   259     0009                     _PORTEbits	set	9
   260     001A                     _RCREG	set	26
   261     0019                     _TXREG	set	25
   262     005F                     _GIE	set	95
   263     005D                     _TMR0IE	set	93
   264     005A                     _TMR0IF	set	90
   265     0065                     _RCIF	set	101
   266     0064                     _TXIF	set	100
   267     0039                     _RC1	set	57
   268     0038                     _RC0	set	56
   269     00C4                     _CREN	set	196
   270     00C7                     _SPEN	set	199
   271     0089                     _TRISEbits	set	137
   272     0099                     _SPBRG	set	153
   273     0089                     _TRISE	set	137
   274     0088                     _TRISD	set	136
   275     0087                     _TRISC	set	135
   276     0086                     _TRISB	set	134
   277     0085                     _TRISA	set	133
   278     0408                     _PS0	set	1032
   279     0409                     _PS1	set	1033
   280     040A                     _PS2	set	1034
   281     040B                     _PSA	set	1035
   282     040D                     _T0CS	set	1037
   283     04C5                     _TXEN	set	1221
   284     04C4                     _SYNC	set	1220
   285     04C2                     _BRGH	set	1218
   286     043F                     _TRISC7	set	1087
   287     043E                     _TRISC6	set	1086
   288     062A                     STR_12:
   289     062A  3443               	retlw	67	;'C'
   290     062B  346F               	retlw	111	;'o'
   291     062C  3464               	retlw	100	;'d'
   292     062D  3469               	retlw	105	;'i'
   293     062E  3463               	retlw	99	;'c'
   294     062F  3465               	retlw	101	;'e'
   295     0630  3420               	retlw	32	;' '
   296     0631  3453               	retlw	83	;'S'
   297     0632  3463               	retlw	99	;'c'
   298     0633  3461               	retlw	97	;'a'
   299     0634  3464               	retlw	100	;'d'
   300     0635  3475               	retlw	117	;'u'
   301     0636  3474               	retlw	116	;'t'
   302     0637  346F               	retlw	111	;'o'
   303     0638  3400               	retlw	0
   304     0639                     STR_6:
   305     0639  3441               	retlw	65	;'A'
   306     063A  3474               	retlw	116	;'t'
   307     063B  3474               	retlw	116	;'t'
   308     063C  3465               	retlw	101	;'e'
   309     063D  346E               	retlw	110	;'n'
   310     063E  3464               	retlw	100	;'d'
   311     063F  3465               	retlw	101	;'e'
   312     0640  3472               	retlw	114	;'r'
   313     0641  3465               	retlw	101	;'e'
   314     0642  342E               	retlw	46	;'.'
   315     0643  342E               	retlw	46	;'.'
   316     0644  342E               	retlw	46	;'.'
   317     0645  342E               	retlw	46	;'.'
   318     0646  3400               	retlw	0
   319     0647                     STR_10:
   320     0647  3454               	retlw	84	;'T'
   321     0648  3465               	retlw	101	;'e'
   322     0649  346D               	retlw	109	;'m'
   323     064A  3470               	retlw	112	;'p'
   324     064B  346F               	retlw	111	;'o'
   325     064C  3420               	retlw	32	;' '
   326     064D  3453               	retlw	83	;'S'
   327     064E  3463               	retlw	99	;'c'
   328     064F  3461               	retlw	97	;'a'
   329     0650  3464               	retlw	100	;'d'
   330     0651  3475               	retlw	117	;'u'
   331     0652  3474               	retlw	116	;'t'
   332     0653  346F               	retlw	111	;'o'
   333     0654  3400               	retlw	0
   334     0655                     STR_5:
   335     0655  3441               	retlw	65	;'A'
   336     0656  3474               	retlw	116	;'t'
   337     0657  3474               	retlw	116	;'t'
   338     0658  3465               	retlw	101	;'e'
   339     0659  346E               	retlw	110	;'n'
   340     065A  3464               	retlw	100	;'d'
   341     065B  3465               	retlw	101	;'e'
   342     065C  3472               	retlw	114	;'r'
   343     065D  3465               	retlw	101	;'e'
   344     065E  342E               	retlw	46	;'.'
   345     065F  342E               	retlw	46	;'.'
   346     0660  342E               	retlw	46	;'.'
   347     0661  3400               	retlw	0
   348     0662                     STR_9:
   349     0662  3450               	retlw	80	;'P'
   350     0663  346F               	retlw	111	;'o'
   351     0664  3472               	retlw	114	;'r'
   352     0665  3474               	retlw	116	;'t'
   353     0666  3461               	retlw	97	;'a'
   354     0667  3420               	retlw	32	;' '
   355     0668  3441               	retlw	65	;'A'
   356     0669  3470               	retlw	112	;'p'
   357     066A  3465               	retlw	101	;'e'
   358     066B  3472               	retlw	114	;'r'
   359     066C  3474               	retlw	116	;'t'
   360     066D  3461               	retlw	97	;'a'
   361     066E  3400               	retlw	0
   362     066F                     STR_4:
   363     066F  3441               	retlw	65	;'A'
   364     0670  3474               	retlw	116	;'t'
   365     0671  3474               	retlw	116	;'t'
   366     0672  3465               	retlw	101	;'e'
   367     0673  346E               	retlw	110	;'n'
   368     0674  3464               	retlw	100	;'d'
   369     0675  3465               	retlw	101	;'e'
   370     0676  3472               	retlw	114	;'r'
   371     0677  3465               	retlw	101	;'e'
   372     0678  342E               	retlw	46	;'.'
   373     0679  342E               	retlw	46	;'.'
   374     067A  3400               	retlw	0
   375     067B                     STR_3:
   376     067B  3441               	retlw	65	;'A'
   377     067C  3474               	retlw	116	;'t'
   378     067D  3474               	retlw	116	;'t'
   379     067E  3465               	retlw	101	;'e'
   380     067F  346E               	retlw	110	;'n'
   381     0680  3464               	retlw	100	;'d'
   382     0681  3465               	retlw	101	;'e'
   383     0682  3472               	retlw	114	;'r'
   384     0683  3465               	retlw	101	;'e'
   385     0684  342E               	retlw	46	;'.'
   386     0685  3400               	retlw	0
   387     0686                     STR_2:
   388     0686  3441               	retlw	65	;'A'
   389     0687  3474               	retlw	116	;'t'
   390     0688  3474               	retlw	116	;'t'
   391     0689  3465               	retlw	101	;'e'
   392     068A  346E               	retlw	110	;'n'
   393     068B  3464               	retlw	100	;'d'
   394     068C  3465               	retlw	101	;'e'
   395     068D  3472               	retlw	114	;'r'
   396     068E  3465               	retlw	101	;'e'
   397     068F  3400               	retlw	0
   398     0690                     STR_8:
   399     0690  3452               	retlw	82	;'R'
   400     0691  3469               	retlw	105	;'i'
   401     0692  3463               	retlw	99	;'c'
   402     0693  3465               	retlw	101	;'e'
   403     0694  3476               	retlw	118	;'v'
   404     0695  3475               	retlw	117	;'u'
   405     0696  3474               	retlw	116	;'t'
   406     0697  346F               	retlw	111	;'o'
   407     0698  3400               	retlw	0
   408     0699                     STR_1:
   409     0699  3450               	retlw	80	;'P'
   410     069A  3472               	retlw	114	;'r'
   411     069B  3465               	retlw	101	;'e'
   412     069C  346D               	retlw	109	;'m'
   413     069D  3469               	retlw	105	;'i'
   414     069E  3420               	retlw	32	;' '
   415     069F  342A               	retlw	42	;'*'
   416     06A0  3400               	retlw	0
   417     06A1                     STR_11:
   418     06A1  344D               	retlw	77	;'M'
   419     06A2  3461               	retlw	97	;'a'
   420     06A3  346E               	retlw	110	;'n'
   421     06A4  3464               	retlw	100	;'d'
   422     06A5  3461               	retlw	97	;'a'
   423     06A6  3474               	retlw	116	;'t'
   424     06A7  346F               	retlw	111	;'o'
   425     06A8  3400               	retlw	0
   426     0686                     
   427                           	psect	cinit
   428     0013                     start_initialization:	
   429                           ; #config settings
   430                           
   431     0013                     __initialization:
   432                           
   433                           ; Initialize objects allocated to BANK0
   434     0013  120A  158A  2624  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   435     0018  00E2               	movwf	__pdataBANK0& (0+127)
   436     0019  120A  158A  2625  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   437     001E  00E3               	movwf	(__pdataBANK0+1)& (0+127)
   438     001F  120A  158A  2626  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   439     0024  00E4               	movwf	(__pdataBANK0+2)& (0+127)
   440                           
   441                           ; Clear objects allocated to BANK1
   442     0025  1383               	bcf	3,7	;select IRP bank0
   443     0026  30A0               	movlw	low __pbssBANK1
   444     0027  0084               	movwf	4
   445     0028  30B0               	movlw	low (__pbssBANK1+16)
   446     0029  120A  158A  262C  120A  118A  	fcall	clear_ram0
   447                           
   448                           ; Clear objects allocated to BANK0
   449     002E  3020               	movlw	low __pbssBANK0
   450     002F  0084               	movwf	4
   451     0030  3042               	movlw	low (__pbssBANK0+34)
   452     0031  120A  158A  262C  120A  118A  	fcall	clear_ram0
   453                           
   454                           ; Clear objects allocated to COMMON
   455     0036  01F5               	clrf	__pbssCOMMON& (0+127)
   456     0037  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   457     0038  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   458     0039  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   459                           
   460                           ; Clear objects allocated to BITCOMMON
   461     003A  01F9               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   462     003B                     end_of_initialization:	
   463                           ;End of C runtime variable initialization code
   464                           
   465     003B                     __end_of__initialization:
   466     003B  0183               	clrf	3
   467     003C  120A  118A  283F   	ljmp	_main	;jump to C main() function
   468                           
   469                           	psect	bitbssCOMMON
   470     03C8                     __pbitbssCOMMON:
   471     03C8                     _old_btn:
   472     03C8                     	ds	1
   473                           
   474                           	psect	bssCOMMON
   475     0075                     __pbssCOMMON:
   476     0075                     _old_stato:
   477     0075                     	ds	1
   478     0076                     _stato:
   479     0076                     	ds	1
   480     0077                     _rowScan:
   481     0077                     	ds	1
   482     0078                     _colScan:
   483     0078                     	ds	1
   484                           
   485                           	psect	bssBANK0
   486     0020                     __pbssBANK0:
   487     0020                     _data:
   488     0020                     	ds	6
   489     0026                     _codice:
   490     0026                     	ds	6
   491     002C                     _count:
   492     002C                     	ds	2
   493     002E                     _index:
   494     002E                     	ds	2
   495     0030                     _flag:
   496     0030                     	ds	2
   497     0032                     _stringPosition:
   498     0032                     	ds	2
   499     0034                     _type:
   500     0034                     	ds	1
   501     0035                     _randomNum:
   502     0035                     	ds	1
   503     0036                     _received:
   504     0036                     	ds	1
   505     0037                     _restart:
   506     0037                     	ds	1
   507     0038                     _keyok:
   508     0038                     	ds	1
   509     0039                     _keypressed:
   510     0039                     	ds	1
   511     003A                     _num5:
   512     003A                     	ds	1
   513     003B                     _num4:
   514     003B                     	ds	1
   515     003C                     _num3:
   516     003C                     	ds	1
   517     003D                     _num2:
   518     003D                     	ds	1
   519     003E                     _num1:
   520     003E                     	ds	1
   521     003F                     _print_countdown:
   522     003F                     	ds	3
   523                           
   524                           	psect	dataBANK0
   525     0062                     __pdataBANK0:
   526     0062                     _id2:
   527     0062                     	ds	1
   528     0063                     _id1:
   529     0063                     	ds	1
   530     0064                     _countdown:
   531     0064                     	ds	1
   532                           
   533                           	psect	bssBANK1
   534     00A0                     __pbssBANK1:
   535     00A0                     _stringa:
   536     00A0                     	ds	16
   537                           
   538                           	psect	clrtext
   539     0E2C                     clear_ram0:	
   540                           ;	Called with FSR containing the base address, and
   541                           ;	W with the last address+1
   542                           
   543     0E2C  0064               	clrwdt	;clear the watchdog before getting into this loop
   544     0E2D                     clrloop0:
   545     0E2D  0180               	clrf	0	;clear RAM location pointed to by FSR
   546     0E2E  0A84               	incf	4,f	;increment pointer
   547     0E2F  0604               	xorwf	4,w	;XOR with final address
   548     0E30  1903               	btfsc	3,2	;have we reached the end yet?
   549     0E31  3400               	retlw	0	;all done for this memory range, return
   550     0E32  0604               	xorwf	4,w	;XOR again to restore value
   551     0E33  2E2D               	goto	clrloop0	;do the next byte
   552                           
   553                           	psect	cstackCOMMON
   554     0070                     __pcstackCOMMON:
   555     0070                     ?_UART_Init:
   556     0070                     ?_initLCD:	
   557                           ; 1 bytes @ 0x0
   558                           
   559     0070                     ?_Timer0_Init:	
   560                           ; 1 bytes @ 0x0
   561                           
   562     0070                     ?_RS485_TxEnable:	
   563                           ; 1 bytes @ 0x0
   564                           
   565     0070                     ?_UART_Write:	
   566                           ; 1 bytes @ 0x0
   567                           
   568     0070                     ?_GenerateRandomNumber:	
   569                           ; 1 bytes @ 0x0
   570                           
   571     0070                     ?_KeyPadReader:	
   572                           ; 1 bytes @ 0x0
   573                           
   574     0070                     ?_RS485_RxEnable:	
   575                           ; 1 bytes @ 0x0
   576                           
   577     0070                     ?_UART_Read1:	
   578                           ; 1 bytes @ 0x0
   579                           
   580     0070                     ?_main:	
   581                           ; 1 bytes @ 0x0
   582                           
   583     0070                     ?_ISR:	
   584                           ; 1 bytes @ 0x0
   585                           
   586     0070                     ??_ISR:	
   587                           ; 1 bytes @ 0x0
   588                           
   589                           
   590                           ; 1 bytes @ 0x0
   591     0070                     	ds	5
   592                           
   593                           	psect	cstackBANK0
   594     0042                     __pcstackBANK0:
   595     0042                     ??_UART_Init:
   596     0042                     ??_Timer0_Init:	
   597                           ; 1 bytes @ 0x0
   598                           
   599     0042                     ?_lcdSend:	
   600                           ; 1 bytes @ 0x0
   601                           
   602     0042                     ??_RS485_TxEnable:	
   603                           ; 1 bytes @ 0x0
   604                           
   605     0042                     ??_UART_Write:	
   606                           ; 1 bytes @ 0x0
   607                           
   608     0042                     ??_GenerateRandomNumber:	
   609                           ; 1 bytes @ 0x0
   610                           
   611     0042                     ??_KeyPadReader:	
   612                           ; 1 bytes @ 0x0
   613                           
   614     0042                     ??_RS485_RxEnable:	
   615                           ; 1 bytes @ 0x0
   616                           
   617     0042                     ?___bmul:	
   618                           ; 1 bytes @ 0x0
   619                           
   620     0042                     ?___awmod:	
   621                           ; 1 bytes @ 0x0
   622                           
   623     0042                     UART_Write@data:	
   624                           ; 2 bytes @ 0x0
   625                           
   626     0042                     lcdSend@tipo:	
   627                           ; 1 bytes @ 0x0
   628                           
   629     0042                     GenerateRandomNumber@randomNum:	
   630                           ; 1 bytes @ 0x0
   631                           
   632     0042                     ___bmul@multiplicand:	
   633                           ; 1 bytes @ 0x0
   634                           
   635     0042                     ___awmod@divisor:	
   636                           ; 1 bytes @ 0x0
   637                           
   638                           
   639                           ; 2 bytes @ 0x0
   640     0042                     	ds	1
   641     0043                     ??_lcdSend:
   642     0043                     ??___bmul:	
   643                           ; 1 bytes @ 0x1
   644                           
   645     0043                     lcdSend@dato:	
   646                           ; 1 bytes @ 0x1
   647                           
   648     0043                     GenerateRandomNumber@count:	
   649                           ; 1 bytes @ 0x1
   650                           
   651                           
   652                           ; 2 bytes @ 0x1
   653     0043                     	ds	1
   654     0044                     ??_initLCD:
   655     0044                     ?_lcdPrint:	
   656                           ; 1 bytes @ 0x2
   657                           
   658     0044                     ___bmul@product:	
   659                           ; 1 bytes @ 0x2
   660                           
   661     0044                     lcdPrint@str:	
   662                           ; 1 bytes @ 0x2
   663                           
   664     0044                     ___awmod@dividend:	
   665                           ; 2 bytes @ 0x2
   666                           
   667                           
   668                           ; 2 bytes @ 0x2
   669     0044                     	ds	1
   670     0045                     ___bmul@multiplier:
   671                           
   672                           ; 1 bytes @ 0x3
   673     0045                     	ds	1
   674     0046                     ??_lcdPrint:
   675     0046                     ?_potenza:	
   676                           ; 1 bytes @ 0x4
   677                           
   678     0046                     ??___awmod:	
   679                           ; 1 bytes @ 0x4
   680                           
   681     0046                     potenza@e:	
   682                           ; 1 bytes @ 0x4
   683                           
   684                           
   685                           ; 1 bytes @ 0x4
   686     0046                     	ds	1
   687     0047                     ??_potenza:
   688     0047                     ___awmod@counter:	
   689                           ; 1 bytes @ 0x5
   690                           
   691                           
   692                           ; 1 bytes @ 0x5
   693     0047                     	ds	1
   694     0048                     potenza@b:
   695     0048                     ___awmod@sign:	
   696                           ; 1 bytes @ 0x6
   697                           
   698                           
   699                           ; 1 bytes @ 0x6
   700     0048                     	ds	1
   701     0049                     lcdPrint@n:
   702     0049                     potenza@i:	
   703                           ; 2 bytes @ 0x7
   704                           
   705                           
   706                           ; 2 bytes @ 0x7
   707     0049                     	ds	2
   708     004B                     potenza@n:
   709                           
   710                           ; 1 bytes @ 0x9
   711     004B                     	ds	1
   712     004C                     ?___awdiv:
   713     004C                     ___awdiv@divisor:	
   714                           ; 2 bytes @ 0xA
   715                           
   716                           
   717                           ; 2 bytes @ 0xA
   718     004C                     	ds	2
   719     004E                     ___awdiv@dividend:
   720                           
   721                           ; 2 bytes @ 0xC
   722     004E                     	ds	2
   723     0050                     ??___awdiv:
   724                           
   725                           ; 1 bytes @ 0xE
   726     0050                     	ds	1
   727     0051                     ___awdiv@counter:
   728                           
   729                           ; 1 bytes @ 0xF
   730     0051                     	ds	1
   731     0052                     ___awdiv@sign:
   732                           
   733                           ; 1 bytes @ 0x10
   734     0052                     	ds	1
   735     0053                     ___awdiv@quotient:
   736                           
   737                           ; 2 bytes @ 0x11
   738     0053                     	ds	2
   739     0055                     ?_intToString:
   740     0055                     intToString@n:	
   741                           ; 1 bytes @ 0x13
   742                           
   743                           
   744                           ; 2 bytes @ 0x13
   745     0055                     	ds	2
   746     0057                     intToString@str:
   747                           
   748                           ; 1 bytes @ 0x15
   749     0057                     	ds	1
   750     0058                     ??_intToString:
   751                           
   752                           ; 1 bytes @ 0x16
   753     0058                     	ds	3
   754     005B                     intToString@t:
   755                           
   756                           ; 1 bytes @ 0x19
   757     005B                     	ds	1
   758     005C                     intToString@cifre:
   759                           
   760                           ; 1 bytes @ 0x1A
   761     005C                     	ds	1
   762     005D                     intToString@i:
   763                           
   764                           ; 1 bytes @ 0x1B
   765     005D                     	ds	1
   766     005E                     ??_UART_Read1:
   767                           
   768                           ; 1 bytes @ 0x1C
   769     005E                     	ds	3
   770     0061                     UART_Read1@count:
   771                           
   772                           ; 1 bytes @ 0x1F
   773     0061                     	ds	1
   774     0062                     ??_main:
   775                           
   776                           	psect	maintext
   777     003F                     __pmaintext:	
   778                           ; 1 bytes @ 0x20
   779 ;;
   780 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   781 ;;
   782 ;; *************** function _main *****************
   783 ;; Defined at:
   784 ;;		line 107 in file "main.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;		None
   787 ;; Auto vars:     Size  Location     Type
   788 ;;		None
   789 ;; Return value:  Size  Location     Type
   790 ;;                  1    wreg      void 
   791 ;; Registers used:
   792 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   793 ;; Tracked objects:
   794 ;;		On entry : B00/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   798 ;;      Params:         0       0       0       0       0
   799 ;;      Locals:         0       0       0       0       0
   800 ;;      Temps:          0       0       0       0       0
   801 ;;      Totals:         0       0       0       0       0
   802 ;;Total ram usage:        0 bytes
   803 ;; Hardware stack levels required when called: 6
   804 ;; This function calls:
   805 ;;		_GenerateRandomNumber
   806 ;;		_KeyPadReader
   807 ;;		_RS485_RxEnable
   808 ;;		_RS485_TxEnable
   809 ;;		_Timer0_Init
   810 ;;		_UART_Init
   811 ;;		_UART_Read1
   812 ;;		_UART_Write
   813 ;;		_initLCD
   814 ;;		_lcdPrint
   815 ;;		_lcdSend
   816 ;; This function is called by:
   817 ;;		Startup code after reset
   818 ;; This function uses a non-reentrant model
   819 ;;
   820                           
   821     003F                     _main:	
   822                           ;psect for function _main
   823                           
   824     003F                     l2817:	
   825                           ;incstack = 0
   826                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   827                           
   828                           
   829                           ;main.c: 109:     TRISA=0x00;
   830     003F  1683               	bsf	3,5	;RP0=1, select bank1
   831     0040  1303               	bcf	3,6	;RP1=0, select bank1
   832     0041  0185               	clrf	5	;volatile
   833                           
   834                           ;main.c: 110:  TRISB=0x00;
   835     0042  0186               	clrf	6	;volatile
   836                           
   837                           ;main.c: 111:  TRISC=0x00;
   838     0043  0187               	clrf	7	;volatile
   839                           
   840                           ;main.c: 112:  TRISD=0x00;
   841     0044  0188               	clrf	8	;volatile
   842                           
   843                           ;main.c: 113:     TRISE=0X00;
   844     0045  0189               	clrf	9	;volatile
   845     0046                     l2819:
   846                           
   847                           ;main.c: 114:     UART_Init();
   848     0046  120A  158A  264D  120A  118A  	fcall	_UART_Init
   849     004B                     l2821:
   850                           
   851                           ;main.c: 115:     initLCD();
   852     004B  120A  158A  2792  120A  118A  	fcall	_initLCD
   853     0050                     l2823:
   854                           
   855                           ;main.c: 116:     Timer0_Init();
   856     0050  120A  158A  263E  120A  118A  	fcall	_Timer0_Init
   857     0055                     l2825:
   858                           
   859                           ;main.c: 118:     {;main.c: 119:         lcdSend(0x01, 0);
   860     0055  1283               	bcf	3,5	;RP0=0, select bank0
   861     0056  1303               	bcf	3,6	;RP1=0, select bank0
   862     0057  01C2               	clrf	lcdSend@tipo
   863     0058  3001               	movlw	1
   864     0059  120A  158A  265F  120A  118A  	fcall	_lcdSend
   865     005E                     l2827:
   866                           
   867                           ;main.c: 120:         lcdPrint("Premi *");
   868     005E  3083               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   869     005F  1283               	bcf	3,5	;RP0=0, select bank0
   870     0060  1303               	bcf	3,6	;RP1=0, select bank0
   871     0061  00C4               	movwf	lcdPrint@str
   872     0062  3080               	movlw	128
   873     0063  00C5               	movwf	lcdPrint@str+1
   874     0064  120A  118A  27B2  120A  118A  	fcall	_lcdPrint
   875     0069                     l2829:
   876                           
   877                           ;main.c: 121:         RS485_TxEnable();
   878     0069  120A  118A  27FA  120A  118A  	fcall	_RS485_TxEnable
   879     006E                     l2831:
   880                           
   881                           ;main.c: 122:         UART_Write('P');
   882     006E  3050               	movlw	80
   883     006F  120A  158A  2634  120A  118A  	fcall	_UART_Write
   884     0074                     l2833:
   885                           
   886                           ;main.c: 123:         UART_Write('r');
   887     0074  3072               	movlw	114
   888     0075  120A  158A  2634  120A  118A  	fcall	_UART_Write
   889     007A                     l2835:
   890                           
   891                           ;main.c: 124:         UART_Write('e');
   892     007A  3065               	movlw	101
   893     007B  120A  158A  2634  120A  118A  	fcall	_UART_Write
   894     0080                     l2837:
   895                           
   896                           ;main.c: 125:         UART_Write('m');
   897     0080  306D               	movlw	109
   898     0081  120A  158A  2634  120A  118A  	fcall	_UART_Write
   899     0086                     l2839:
   900                           
   901                           ;main.c: 126:         UART_Write('i');
   902     0086  3069               	movlw	105
   903     0087  120A  158A  2634  120A  118A  	fcall	_UART_Write
   904     008C                     l2841:
   905                           
   906                           ;main.c: 127:         UART_Write(' ');
   907     008C  3020               	movlw	32
   908     008D  120A  158A  2634  120A  118A  	fcall	_UART_Write
   909     0092                     l2843:
   910                           
   911                           ;main.c: 128:         UART_Write('*');
   912     0092  302A               	movlw	42
   913     0093  120A  158A  2634  120A  118A  	fcall	_UART_Write
   914     0098                     l2845:
   915                           
   916                           ;main.c: 129:         UART_Write('\r');
   917     0098  300D               	movlw	13
   918     0099  120A  158A  2634  120A  118A  	fcall	_UART_Write
   919     009E                     l2847:
   920                           
   921                           ;main.c: 130:         UART_Write('\n');
   922     009E  300A               	movlw	10
   923     009F  120A  158A  2634  120A  118A  	fcall	_UART_Write
   924     00A4                     l2849:
   925                           
   926                           ;main.c: 131:         num1 = GenerateRandomNumber();
   927     00A4  120A  158A  2674  120A  118A  	fcall	_GenerateRandomNumber
   928     00A9  1283               	bcf	3,5	;RP0=0, select bank0
   929     00AA  1303               	bcf	3,6	;RP1=0, select bank0
   930     00AB  00BE               	movwf	_num1
   931     00AC                     l2851:
   932                           
   933                           ;main.c: 132:         num2 = GenerateRandomNumber();
   934     00AC  120A  158A  2674  120A  118A  	fcall	_GenerateRandomNumber
   935     00B1  1283               	bcf	3,5	;RP0=0, select bank0
   936     00B2  1303               	bcf	3,6	;RP1=0, select bank0
   937     00B3  00BD               	movwf	_num2
   938     00B4                     l2853:
   939                           
   940                           ;main.c: 133:         num3 = GenerateRandomNumber();
   941     00B4  120A  158A  2674  120A  118A  	fcall	_GenerateRandomNumber
   942     00B9  1283               	bcf	3,5	;RP0=0, select bank0
   943     00BA  1303               	bcf	3,6	;RP1=0, select bank0
   944     00BB  00BC               	movwf	_num3
   945     00BC                     l2855:
   946                           
   947                           ;main.c: 134:         num4 = GenerateRandomNumber();
   948     00BC  120A  158A  2674  120A  118A  	fcall	_GenerateRandomNumber
   949     00C1  1283               	bcf	3,5	;RP0=0, select bank0
   950     00C2  1303               	bcf	3,6	;RP1=0, select bank0
   951     00C3  00BB               	movwf	_num4
   952     00C4                     l2857:
   953                           
   954                           ;main.c: 135:         num5 = GenerateRandomNumber();
   955     00C4  120A  158A  2674  120A  118A  	fcall	_GenerateRandomNumber
   956     00C9  1283               	bcf	3,5	;RP0=0, select bank0
   957     00CA  1303               	bcf	3,6	;RP1=0, select bank0
   958     00CB  00BA               	movwf	_num5
   959                           
   960                           ;main.c: 136:         while (codice[0] == '\0')
   961     00CC  28E2               	goto	l2865
   962     00CD                     l2859:
   963                           
   964                           ;main.c: 137:         {;main.c: 138:             KeyPadReader();
   965     00CD  120A  118A  26A9  120A  118A  	fcall	_KeyPadReader
   966     00D2                     l2861:
   967                           
   968                           ;main.c: 139:             if (keys[keypressed] == '*'){
   969     00D2  1283               	bcf	3,5	;RP0=0, select bank0
   970     00D3  1303               	bcf	3,6	;RP1=0, select bank0
   971     00D4  0839               	movf	_keypressed,w
   972     00D5  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
   973     00D6  0084               	movwf	4
   974     00D7  120A  118A  2611  120A  118A  	fcall	stringdir
   975     00DC  3A2A               	xorlw	42
   976     00DD  1D03               	skipz
   977     00DE  28E0               	goto	u3141
   978     00DF  28E1               	goto	u3140
   979     00E0                     u3141:
   980     00E0  28E2               	goto	l2865
   981     00E1                     u3140:
   982     00E1  28E7               	goto	l2867
   983     00E2                     l2865:
   984                           
   985                           ;main.c: 136:         while (codice[0] == '\0')
   986     00E2  0826               	movf	_codice,w
   987     00E3  1903               	btfsc	3,2
   988     00E4  28E6               	goto	u3151
   989     00E5  28E7               	goto	u3150
   990     00E6                     u3151:
   991     00E6  28CD               	goto	l2859
   992     00E7                     u3150:
   993     00E7                     l2867:
   994                           
   995                           ;main.c: 143:         lcdSend(0x01, 0);
   996     00E7  01C2               	clrf	lcdSend@tipo
   997     00E8  3001               	movlw	1
   998     00E9  120A  158A  265F  120A  118A  	fcall	_lcdSend
   999     00EE                     l2869:
  1000                           
  1001                           ;main.c: 144:         lcdPrint("Attendere");
  1002     00EE  3070               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1003     00EF  1283               	bcf	3,5	;RP0=0, select bank0
  1004     00F0  1303               	bcf	3,6	;RP1=0, select bank0
  1005     00F1  00C4               	movwf	lcdPrint@str
  1006     00F2  3080               	movlw	128
  1007     00F3  00C5               	movwf	lcdPrint@str+1
  1008     00F4  120A  118A  27B2  120A  118A  	fcall	_lcdPrint
  1009                           
  1010                           ;main.c: 145:         while(num1 != 0x30 && num1 != 0x31 && num1 != 0x32 && num1 != 0x33
      +                           &&
  1011     00F9  2902               	goto	l2873
  1012     00FA                     l2871:
  1013                           
  1014                           ;main.c: 147:               num1 != 0x38 && num1 != 0x39){;main.c: 148:         num1 = G
      +                          enerateRandomNumber();
  1015     00FA  120A  158A  2674  120A  118A  	fcall	_GenerateRandomNumber
  1016     00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1017     0100  1303               	bcf	3,6	;RP1=0, select bank0
  1018     0101  00BE               	movwf	_num1
  1019     0102                     l2873:
  1020                           
  1021                           ;main.c: 145:         while(num1 != 0x30 && num1 != 0x31 && num1 != 0x32 && num1 != 0x33
      +                           &&
  1022     0102  3030               	movlw	48
  1023     0103  1283               	bcf	3,5	;RP0=0, select bank0
  1024     0104  1303               	bcf	3,6	;RP1=0, select bank0
  1025     0105  063E               	xorwf	_num1,w
  1026     0106  1903               	btfsc	3,2
  1027     0107  2909               	goto	u3161
  1028     0108  290A               	goto	u3160
  1029     0109                     u3161:
  1030     0109  2940               	goto	l2893
  1031     010A                     u3160:
  1032     010A                     l2875:
  1033     010A  3031               	movlw	49
  1034     010B  063E               	xorwf	_num1,w
  1035     010C  1903               	btfsc	3,2
  1036     010D  290F               	goto	u3171
  1037     010E  2910               	goto	u3170
  1038     010F                     u3171:
  1039     010F  2940               	goto	l2893
  1040     0110                     u3170:
  1041     0110                     l2877:
  1042     0110  3032               	movlw	50
  1043     0111  063E               	xorwf	_num1,w
  1044     0112  1903               	btfsc	3,2
  1045     0113  2915               	goto	u3181
  1046     0114  2916               	goto	u3180
  1047     0115                     u3181:
  1048     0115  2940               	goto	l2893
  1049     0116                     u3180:
  1050     0116                     l2879:
  1051     0116  3033               	movlw	51
  1052     0117  063E               	xorwf	_num1,w
  1053     0118  1903               	btfsc	3,2
  1054     0119  291B               	goto	u3191
  1055     011A  291C               	goto	u3190
  1056     011B                     u3191:
  1057     011B  2940               	goto	l2893
  1058     011C                     u3190:
  1059     011C                     l2881:
  1060     011C  3034               	movlw	52
  1061     011D  063E               	xorwf	_num1,w
  1062     011E  1903               	btfsc	3,2
  1063     011F  2921               	goto	u3201
  1064     0120  2922               	goto	u3200
  1065     0121                     u3201:
  1066     0121  2940               	goto	l2893
  1067     0122                     u3200:
  1068     0122                     l2883:
  1069     0122  3035               	movlw	53
  1070     0123  063E               	xorwf	_num1,w
  1071     0124  1903               	btfsc	3,2
  1072     0125  2927               	goto	u3211
  1073     0126  2928               	goto	u3210
  1074     0127                     u3211:
  1075     0127  2940               	goto	l2893
  1076     0128                     u3210:
  1077     0128                     l2885:
  1078     0128  3036               	movlw	54
  1079     0129  063E               	xorwf	_num1,w
  1080     012A  1903               	btfsc	3,2
  1081     012B  292D               	goto	u3221
  1082     012C  292E               	goto	u3220
  1083     012D                     u3221:
  1084     012D  2940               	goto	l2893
  1085     012E                     u3220:
  1086     012E                     l2887:
  1087     012E  3037               	movlw	55
  1088     012F  063E               	xorwf	_num1,w
  1089     0130  1903               	btfsc	3,2
  1090     0131  2933               	goto	u3231
  1091     0132  2934               	goto	u3230
  1092     0133                     u3231:
  1093     0133  2940               	goto	l2893
  1094     0134                     u3230:
  1095     0134                     l2889:
  1096     0134  3038               	movlw	56
  1097     0135  063E               	xorwf	_num1,w
  1098     0136  1903               	btfsc	3,2
  1099     0137  2939               	goto	u3241
  1100     0138  293A               	goto	u3240
  1101     0139                     u3241:
  1102     0139  2940               	goto	l2893
  1103     013A                     u3240:
  1104     013A                     l2891:
  1105     013A  3039               	movlw	57
  1106     013B  063E               	xorwf	_num1,w
  1107     013C  1D03               	btfss	3,2
  1108     013D  293F               	goto	u3251
  1109     013E  2940               	goto	u3250
  1110     013F                     u3251:
  1111     013F  28FA               	goto	l2871
  1112     0140                     u3250:
  1113     0140                     l2893:
  1114                           
  1115                           ;main.c: 150:         lcdSend(0x01, 0);
  1116     0140  01C2               	clrf	lcdSend@tipo
  1117     0141  3001               	movlw	1
  1118     0142  120A  158A  265F  120A  118A  	fcall	_lcdSend
  1119     0147                     l2895:
  1120                           
  1121                           ;main.c: 151:         lcdPrint("Attendere.");
  1122     0147  3065               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1123     0148  1283               	bcf	3,5	;RP0=0, select bank0
  1124     0149  1303               	bcf	3,6	;RP1=0, select bank0
  1125     014A  00C4               	movwf	lcdPrint@str
  1126     014B  3080               	movlw	128
  1127     014C  00C5               	movwf	lcdPrint@str+1
  1128     014D  120A  118A  27B2  120A  118A  	fcall	_lcdPrint
  1129                           
  1130                           ;main.c: 152:         while(num2 != 0x30 && num2 != 0x31 && num2 != 0x32 && num2 != 0x33
      +                           &&
  1131     0152  295B               	goto	l2899
  1132     0153                     l2897:
  1133                           
  1134                           ;main.c: 154:               num2 != 0x38 && num2 != 0x39){;main.c: 155:         num2 = G
      +                          enerateRandomNumber();
  1135     0153  120A  158A  2674  120A  118A  	fcall	_GenerateRandomNumber
  1136     0158  1283               	bcf	3,5	;RP0=0, select bank0
  1137     0159  1303               	bcf	3,6	;RP1=0, select bank0
  1138     015A  00BD               	movwf	_num2
  1139     015B                     l2899:
  1140                           
  1141                           ;main.c: 152:         while(num2 != 0x30 && num2 != 0x31 && num2 != 0x32 && num2 != 0x33
      +                           &&
  1142     015B  3030               	movlw	48
  1143     015C  1283               	bcf	3,5	;RP0=0, select bank0
  1144     015D  1303               	bcf	3,6	;RP1=0, select bank0
  1145     015E  063D               	xorwf	_num2,w
  1146     015F  1903               	btfsc	3,2
  1147     0160  2962               	goto	u3261
  1148     0161  2963               	goto	u3260
  1149     0162                     u3261:
  1150     0162  2999               	goto	l2919
  1151     0163                     u3260:
  1152     0163                     l2901:
  1153     0163  3031               	movlw	49
  1154     0164  063D               	xorwf	_num2,w
  1155     0165  1903               	btfsc	3,2
  1156     0166  2968               	goto	u3271
  1157     0167  2969               	goto	u3270
  1158     0168                     u3271:
  1159     0168  2999               	goto	l2919
  1160     0169                     u3270:
  1161     0169                     l2903:
  1162     0169  3032               	movlw	50
  1163     016A  063D               	xorwf	_num2,w
  1164     016B  1903               	btfsc	3,2
  1165     016C  296E               	goto	u3281
  1166     016D  296F               	goto	u3280
  1167     016E                     u3281:
  1168     016E  2999               	goto	l2919
  1169     016F                     u3280:
  1170     016F                     l2905:
  1171     016F  3033               	movlw	51
  1172     0170  063D               	xorwf	_num2,w
  1173     0171  1903               	btfsc	3,2
  1174     0172  2974               	goto	u3291
  1175     0173  2975               	goto	u3290
  1176     0174                     u3291:
  1177     0174  2999               	goto	l2919
  1178     0175                     u3290:
  1179     0175                     l2907:
  1180     0175  3034               	movlw	52
  1181     0176  063D               	xorwf	_num2,w
  1182     0177  1903               	btfsc	3,2
  1183     0178  297A               	goto	u3301
  1184     0179  297B               	goto	u3300
  1185     017A                     u3301:
  1186     017A  2999               	goto	l2919
  1187     017B                     u3300:
  1188     017B                     l2909:
  1189     017B  3035               	movlw	53
  1190     017C  063D               	xorwf	_num2,w
  1191     017D  1903               	btfsc	3,2
  1192     017E  2980               	goto	u3311
  1193     017F  2981               	goto	u3310
  1194     0180                     u3311:
  1195     0180  2999               	goto	l2919
  1196     0181                     u3310:
  1197     0181                     l2911:
  1198     0181  3036               	movlw	54
  1199     0182  063D               	xorwf	_num2,w
  1200     0183  1903               	btfsc	3,2
  1201     0184  2986               	goto	u3321
  1202     0185  2987               	goto	u3320
  1203     0186                     u3321:
  1204     0186  2999               	goto	l2919
  1205     0187                     u3320:
  1206     0187                     l2913:
  1207     0187  3037               	movlw	55
  1208     0188  063D               	xorwf	_num2,w
  1209     0189  1903               	btfsc	3,2
  1210     018A  298C               	goto	u3331
  1211     018B  298D               	goto	u3330
  1212     018C                     u3331:
  1213     018C  2999               	goto	l2919
  1214     018D                     u3330:
  1215     018D                     l2915:
  1216     018D  3038               	movlw	56
  1217     018E  063D               	xorwf	_num2,w
  1218     018F  1903               	btfsc	3,2
  1219     0190  2992               	goto	u3341
  1220     0191  2993               	goto	u3340
  1221     0192                     u3341:
  1222     0192  2999               	goto	l2919
  1223     0193                     u3340:
  1224     0193                     l2917:
  1225     0193  3039               	movlw	57
  1226     0194  063D               	xorwf	_num2,w
  1227     0195  1D03               	btfss	3,2
  1228     0196  2998               	goto	u3351
  1229     0197  2999               	goto	u3350
  1230     0198                     u3351:
  1231     0198  2953               	goto	l2897
  1232     0199                     u3350:
  1233     0199                     l2919:
  1234                           
  1235                           ;main.c: 157:         lcdSend(0x01, 0);
  1236     0199  01C2               	clrf	lcdSend@tipo
  1237     019A  3001               	movlw	1
  1238     019B  120A  158A  265F  120A  118A  	fcall	_lcdSend
  1239     01A0                     l2921:
  1240                           
  1241                           ;main.c: 158:         lcdPrint("Attendere..");
  1242     01A0  3059               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1243     01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1244     01A2  1303               	bcf	3,6	;RP1=0, select bank0
  1245     01A3  00C4               	movwf	lcdPrint@str
  1246     01A4  3080               	movlw	128
  1247     01A5  00C5               	movwf	lcdPrint@str+1
  1248     01A6  120A  118A  27B2  120A  118A  	fcall	_lcdPrint
  1249                           
  1250                           ;main.c: 159:         while(num3 != 0x30 && num3 != 0x31 && num3 != 0x32 && num3 != 0x33
      +                           &&
  1251     01AB  29B4               	goto	l2925
  1252     01AC                     l2923:
  1253                           
  1254                           ;main.c: 161:               num3 != 0x38 && num3 != 0x39){;main.c: 162:         num3 = G
      +                          enerateRandomNumber();
  1255     01AC  120A  158A  2674  120A  118A  	fcall	_GenerateRandomNumber
  1256     01B1  1283               	bcf	3,5	;RP0=0, select bank0
  1257     01B2  1303               	bcf	3,6	;RP1=0, select bank0
  1258     01B3  00BC               	movwf	_num3
  1259     01B4                     l2925:
  1260                           
  1261                           ;main.c: 159:         while(num3 != 0x30 && num3 != 0x31 && num3 != 0x32 && num3 != 0x33
      +                           &&
  1262     01B4  3030               	movlw	48
  1263     01B5  1283               	bcf	3,5	;RP0=0, select bank0
  1264     01B6  1303               	bcf	3,6	;RP1=0, select bank0
  1265     01B7  063C               	xorwf	_num3,w
  1266     01B8  1903               	btfsc	3,2
  1267     01B9  29BB               	goto	u3361
  1268     01BA  29BC               	goto	u3360
  1269     01BB                     u3361:
  1270     01BB  29F2               	goto	l2945
  1271     01BC                     u3360:
  1272     01BC                     l2927:
  1273     01BC  3031               	movlw	49
  1274     01BD  063C               	xorwf	_num3,w
  1275     01BE  1903               	btfsc	3,2
  1276     01BF  29C1               	goto	u3371
  1277     01C0  29C2               	goto	u3370
  1278     01C1                     u3371:
  1279     01C1  29F2               	goto	l2945
  1280     01C2                     u3370:
  1281     01C2                     l2929:
  1282     01C2  3032               	movlw	50
  1283     01C3  063C               	xorwf	_num3,w
  1284     01C4  1903               	btfsc	3,2
  1285     01C5  29C7               	goto	u3381
  1286     01C6  29C8               	goto	u3380
  1287     01C7                     u3381:
  1288     01C7  29F2               	goto	l2945
  1289     01C8                     u3380:
  1290     01C8                     l2931:
  1291     01C8  3033               	movlw	51
  1292     01C9  063C               	xorwf	_num3,w
  1293     01CA  1903               	btfsc	3,2
  1294     01CB  29CD               	goto	u3391
  1295     01CC  29CE               	goto	u3390
  1296     01CD                     u3391:
  1297     01CD  29F2               	goto	l2945
  1298     01CE                     u3390:
  1299     01CE                     l2933:
  1300     01CE  3034               	movlw	52
  1301     01CF  063C               	xorwf	_num3,w
  1302     01D0  1903               	btfsc	3,2
  1303     01D1  29D3               	goto	u3401
  1304     01D2  29D4               	goto	u3400
  1305     01D3                     u3401:
  1306     01D3  29F2               	goto	l2945
  1307     01D4                     u3400:
  1308     01D4                     l2935:
  1309     01D4  3035               	movlw	53
  1310     01D5  063C               	xorwf	_num3,w
  1311     01D6  1903               	btfsc	3,2
  1312     01D7  29D9               	goto	u3411
  1313     01D8  29DA               	goto	u3410
  1314     01D9                     u3411:
  1315     01D9  29F2               	goto	l2945
  1316     01DA                     u3410:
  1317     01DA                     l2937:
  1318     01DA  3036               	movlw	54
  1319     01DB  063C               	xorwf	_num3,w
  1320     01DC  1903               	btfsc	3,2
  1321     01DD  29DF               	goto	u3421
  1322     01DE  29E0               	goto	u3420
  1323     01DF                     u3421:
  1324     01DF  29F2               	goto	l2945
  1325     01E0                     u3420:
  1326     01E0                     l2939:
  1327     01E0  3037               	movlw	55
  1328     01E1  063C               	xorwf	_num3,w
  1329     01E2  1903               	btfsc	3,2
  1330     01E3  29E5               	goto	u3431
  1331     01E4  29E6               	goto	u3430
  1332     01E5                     u3431:
  1333     01E5  29F2               	goto	l2945
  1334     01E6                     u3430:
  1335     01E6                     l2941:
  1336     01E6  3038               	movlw	56
  1337     01E7  063C               	xorwf	_num3,w
  1338     01E8  1903               	btfsc	3,2
  1339     01E9  29EB               	goto	u3441
  1340     01EA  29EC               	goto	u3440
  1341     01EB                     u3441:
  1342     01EB  29F2               	goto	l2945
  1343     01EC                     u3440:
  1344     01EC                     l2943:
  1345     01EC  3039               	movlw	57
  1346     01ED  063C               	xorwf	_num3,w
  1347     01EE  1D03               	btfss	3,2
  1348     01EF  29F1               	goto	u3451
  1349     01F0  29F2               	goto	u3450
  1350     01F1                     u3451:
  1351     01F1  29AC               	goto	l2923
  1352     01F2                     u3450:
  1353     01F2                     l2945:
  1354                           
  1355                           ;main.c: 164:         lcdSend(0x01, 0);
  1356     01F2  01C2               	clrf	lcdSend@tipo
  1357     01F3  3001               	movlw	1
  1358     01F4  120A  158A  265F  120A  118A  	fcall	_lcdSend
  1359     01F9                     l2947:
  1360                           
  1361                           ;main.c: 165:         lcdPrint("Attendere...");
  1362     01F9  303F               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1363     01FA  1283               	bcf	3,5	;RP0=0, select bank0
  1364     01FB  1303               	bcf	3,6	;RP1=0, select bank0
  1365     01FC  00C4               	movwf	lcdPrint@str
  1366     01FD  3080               	movlw	128
  1367     01FE  00C5               	movwf	lcdPrint@str+1
  1368     01FF  120A  118A  27B2  120A  118A  	fcall	_lcdPrint
  1369                           
  1370                           ;main.c: 166:         while(num4 != 0x30 && num4 != 0x31 && num4 != 0x32 && num4 != 0x33
      +                           &&
  1371     0204  2A0D               	goto	l2951
  1372     0205                     l2949:
  1373                           
  1374                           ;main.c: 168:               num4 != 0x38 && num4 != 0x39){;main.c: 169:         num4 = G
      +                          enerateRandomNumber();
  1375     0205  120A  158A  2674  120A  118A  	fcall	_GenerateRandomNumber
  1376     020A  1283               	bcf	3,5	;RP0=0, select bank0
  1377     020B  1303               	bcf	3,6	;RP1=0, select bank0
  1378     020C  00BB               	movwf	_num4
  1379     020D                     l2951:
  1380                           
  1381                           ;main.c: 166:         while(num4 != 0x30 && num4 != 0x31 && num4 != 0x32 && num4 != 0x33
      +                           &&
  1382     020D  3030               	movlw	48
  1383     020E  1283               	bcf	3,5	;RP0=0, select bank0
  1384     020F  1303               	bcf	3,6	;RP1=0, select bank0
  1385     0210  063B               	xorwf	_num4,w
  1386     0211  1903               	btfsc	3,2
  1387     0212  2A14               	goto	u3461
  1388     0213  2A15               	goto	u3460
  1389     0214                     u3461:
  1390     0214  2A4B               	goto	l2971
  1391     0215                     u3460:
  1392     0215                     l2953:
  1393     0215  3031               	movlw	49
  1394     0216  063B               	xorwf	_num4,w
  1395     0217  1903               	btfsc	3,2
  1396     0218  2A1A               	goto	u3471
  1397     0219  2A1B               	goto	u3470
  1398     021A                     u3471:
  1399     021A  2A4B               	goto	l2971
  1400     021B                     u3470:
  1401     021B                     l2955:
  1402     021B  3032               	movlw	50
  1403     021C  063B               	xorwf	_num4,w
  1404     021D  1903               	btfsc	3,2
  1405     021E  2A20               	goto	u3481
  1406     021F  2A21               	goto	u3480
  1407     0220                     u3481:
  1408     0220  2A4B               	goto	l2971
  1409     0221                     u3480:
  1410     0221                     l2957:
  1411     0221  3033               	movlw	51
  1412     0222  063B               	xorwf	_num4,w
  1413     0223  1903               	btfsc	3,2
  1414     0224  2A26               	goto	u3491
  1415     0225  2A27               	goto	u3490
  1416     0226                     u3491:
  1417     0226  2A4B               	goto	l2971
  1418     0227                     u3490:
  1419     0227                     l2959:
  1420     0227  3034               	movlw	52
  1421     0228  063B               	xorwf	_num4,w
  1422     0229  1903               	btfsc	3,2
  1423     022A  2A2C               	goto	u3501
  1424     022B  2A2D               	goto	u3500
  1425     022C                     u3501:
  1426     022C  2A4B               	goto	l2971
  1427     022D                     u3500:
  1428     022D                     l2961:
  1429     022D  3035               	movlw	53
  1430     022E  063B               	xorwf	_num4,w
  1431     022F  1903               	btfsc	3,2
  1432     0230  2A32               	goto	u3511
  1433     0231  2A33               	goto	u3510
  1434     0232                     u3511:
  1435     0232  2A4B               	goto	l2971
  1436     0233                     u3510:
  1437     0233                     l2963:
  1438     0233  3036               	movlw	54
  1439     0234  063B               	xorwf	_num4,w
  1440     0235  1903               	btfsc	3,2
  1441     0236  2A38               	goto	u3521
  1442     0237  2A39               	goto	u3520
  1443     0238                     u3521:
  1444     0238  2A4B               	goto	l2971
  1445     0239                     u3520:
  1446     0239                     l2965:
  1447     0239  3037               	movlw	55
  1448     023A  063B               	xorwf	_num4,w
  1449     023B  1903               	btfsc	3,2
  1450     023C  2A3E               	goto	u3531
  1451     023D  2A3F               	goto	u3530
  1452     023E                     u3531:
  1453     023E  2A4B               	goto	l2971
  1454     023F                     u3530:
  1455     023F                     l2967:
  1456     023F  3038               	movlw	56
  1457     0240  063B               	xorwf	_num4,w
  1458     0241  1903               	btfsc	3,2
  1459     0242  2A44               	goto	u3541
  1460     0243  2A45               	goto	u3540
  1461     0244                     u3541:
  1462     0244  2A4B               	goto	l2971
  1463     0245                     u3540:
  1464     0245                     l2969:
  1465     0245  3039               	movlw	57
  1466     0246  063B               	xorwf	_num4,w
  1467     0247  1D03               	btfss	3,2
  1468     0248  2A4A               	goto	u3551
  1469     0249  2A4B               	goto	u3550
  1470     024A                     u3551:
  1471     024A  2A05               	goto	l2949
  1472     024B                     u3550:
  1473     024B                     l2971:
  1474                           
  1475                           ;main.c: 171:         lcdSend(0x01, 0);
  1476     024B  01C2               	clrf	lcdSend@tipo
  1477     024C  3001               	movlw	1
  1478     024D  120A  158A  265F  120A  118A  	fcall	_lcdSend
  1479     0252                     l2973:
  1480                           
  1481                           ;main.c: 172:         lcdPrint("Attendere....");
  1482     0252  3023               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1483     0253  1283               	bcf	3,5	;RP0=0, select bank0
  1484     0254  1303               	bcf	3,6	;RP1=0, select bank0
  1485     0255  00C4               	movwf	lcdPrint@str
  1486     0256  3080               	movlw	128
  1487     0257  00C5               	movwf	lcdPrint@str+1
  1488     0258  120A  118A  27B2  120A  118A  	fcall	_lcdPrint
  1489                           
  1490                           ;main.c: 173:         while(num5 != 0x30 && num5 != 0x31 && num5 != 0x32 && num5 != 0x33
      +                           &&
  1491     025D  2A66               	goto	l2977
  1492     025E                     l2975:
  1493                           
  1494                           ;main.c: 175:               num5 != 0x38 && num5 != 0x39){;main.c: 176:         num5 = G
      +                          enerateRandomNumber();
  1495     025E  120A  158A  2674  120A  118A  	fcall	_GenerateRandomNumber
  1496     0263  1283               	bcf	3,5	;RP0=0, select bank0
  1497     0264  1303               	bcf	3,6	;RP1=0, select bank0
  1498     0265  00BA               	movwf	_num5
  1499     0266                     l2977:
  1500                           
  1501                           ;main.c: 173:         while(num5 != 0x30 && num5 != 0x31 && num5 != 0x32 && num5 != 0x33
      +                           &&
  1502     0266  3030               	movlw	48
  1503     0267  1283               	bcf	3,5	;RP0=0, select bank0
  1504     0268  1303               	bcf	3,6	;RP1=0, select bank0
  1505     0269  063A               	xorwf	_num5,w
  1506     026A  1903               	btfsc	3,2
  1507     026B  2A6D               	goto	u3561
  1508     026C  2A6E               	goto	u3560
  1509     026D                     u3561:
  1510     026D  2AA4               	goto	l2997
  1511     026E                     u3560:
  1512     026E                     l2979:
  1513     026E  3031               	movlw	49
  1514     026F  063A               	xorwf	_num5,w
  1515     0270  1903               	btfsc	3,2
  1516     0271  2A73               	goto	u3571
  1517     0272  2A74               	goto	u3570
  1518     0273                     u3571:
  1519     0273  2AA4               	goto	l2997
  1520     0274                     u3570:
  1521     0274                     l2981:
  1522     0274  3032               	movlw	50
  1523     0275  063A               	xorwf	_num5,w
  1524     0276  1903               	btfsc	3,2
  1525     0277  2A79               	goto	u3581
  1526     0278  2A7A               	goto	u3580
  1527     0279                     u3581:
  1528     0279  2AA4               	goto	l2997
  1529     027A                     u3580:
  1530     027A                     l2983:
  1531     027A  3033               	movlw	51
  1532     027B  063A               	xorwf	_num5,w
  1533     027C  1903               	btfsc	3,2
  1534     027D  2A7F               	goto	u3591
  1535     027E  2A80               	goto	u3590
  1536     027F                     u3591:
  1537     027F  2AA4               	goto	l2997
  1538     0280                     u3590:
  1539     0280                     l2985:
  1540     0280  3034               	movlw	52
  1541     0281  063A               	xorwf	_num5,w
  1542     0282  1903               	btfsc	3,2
  1543     0283  2A85               	goto	u3601
  1544     0284  2A86               	goto	u3600
  1545     0285                     u3601:
  1546     0285  2AA4               	goto	l2997
  1547     0286                     u3600:
  1548     0286                     l2987:
  1549     0286  3035               	movlw	53
  1550     0287  063A               	xorwf	_num5,w
  1551     0288  1903               	btfsc	3,2
  1552     0289  2A8B               	goto	u3611
  1553     028A  2A8C               	goto	u3610
  1554     028B                     u3611:
  1555     028B  2AA4               	goto	l2997
  1556     028C                     u3610:
  1557     028C                     l2989:
  1558     028C  3036               	movlw	54
  1559     028D  063A               	xorwf	_num5,w
  1560     028E  1903               	btfsc	3,2
  1561     028F  2A91               	goto	u3621
  1562     0290  2A92               	goto	u3620
  1563     0291                     u3621:
  1564     0291  2AA4               	goto	l2997
  1565     0292                     u3620:
  1566     0292                     l2991:
  1567     0292  3037               	movlw	55
  1568     0293  063A               	xorwf	_num5,w
  1569     0294  1903               	btfsc	3,2
  1570     0295  2A97               	goto	u3631
  1571     0296  2A98               	goto	u3630
  1572     0297                     u3631:
  1573     0297  2AA4               	goto	l2997
  1574     0298                     u3630:
  1575     0298                     l2993:
  1576     0298  3038               	movlw	56
  1577     0299  063A               	xorwf	_num5,w
  1578     029A  1903               	btfsc	3,2
  1579     029B  2A9D               	goto	u3641
  1580     029C  2A9E               	goto	u3640
  1581     029D                     u3641:
  1582     029D  2AA4               	goto	l2997
  1583     029E                     u3640:
  1584     029E                     l2995:
  1585     029E  3039               	movlw	57
  1586     029F  063A               	xorwf	_num5,w
  1587     02A0  1D03               	btfss	3,2
  1588     02A1  2AA3               	goto	u3651
  1589     02A2  2AA4               	goto	u3650
  1590     02A3                     u3651:
  1591     02A3  2A5E               	goto	l2975
  1592     02A4                     u3650:
  1593     02A4                     l2997:
  1594                           
  1595                           ;main.c: 178:         UART_Write(id1);
  1596     02A4  3030               	movlw	48
  1597     02A5  120A  158A  2634  120A  118A  	fcall	_UART_Write
  1598                           
  1599                           ;main.c: 179:         UART_Write(id2);
  1600     02AA  3031               	movlw	49
  1601     02AB  120A  158A  2634  120A  118A  	fcall	_UART_Write
  1602     02B0                     l2999:
  1603                           
  1604                           ;main.c: 180:         type = 0x31;
  1605     02B0  3031               	movlw	49
  1606     02B1  1283               	bcf	3,5	;RP0=0, select bank0
  1607     02B2  1303               	bcf	3,6	;RP1=0, select bank0
  1608     02B3  00B4               	movwf	_type
  1609     02B4                     l3001:
  1610                           
  1611                           ;main.c: 181:         UART_Write(type);
  1612     02B4  3031               	movlw	49
  1613     02B5  120A  158A  2634  120A  118A  	fcall	_UART_Write
  1614     02BA                     l3003:
  1615                           
  1616                           ;main.c: 182:         UART_Write(num1);
  1617     02BA  1283               	bcf	3,5	;RP0=0, select bank0
  1618     02BB  1303               	bcf	3,6	;RP1=0, select bank0
  1619     02BC  083E               	movf	_num1,w
  1620     02BD  120A  158A  2634  120A  118A  	fcall	_UART_Write
  1621     02C2                     l3005:
  1622                           
  1623                           ;main.c: 183:         UART_Write(num2);
  1624     02C2  1283               	bcf	3,5	;RP0=0, select bank0
  1625     02C3  1303               	bcf	3,6	;RP1=0, select bank0
  1626     02C4  083D               	movf	_num2,w
  1627     02C5  120A  158A  2634  120A  118A  	fcall	_UART_Write
  1628     02CA                     l3007:
  1629                           
  1630                           ;main.c: 184:         UART_Write(num3);
  1631     02CA  1283               	bcf	3,5	;RP0=0, select bank0
  1632     02CB  1303               	bcf	3,6	;RP1=0, select bank0
  1633     02CC  083C               	movf	_num3,w
  1634     02CD  120A  158A  2634  120A  118A  	fcall	_UART_Write
  1635     02D2                     l3009:
  1636                           
  1637                           ;main.c: 185:         UART_Write(num4);
  1638     02D2  1283               	bcf	3,5	;RP0=0, select bank0
  1639     02D3  1303               	bcf	3,6	;RP1=0, select bank0
  1640     02D4  083B               	movf	_num4,w
  1641     02D5  120A  158A  2634  120A  118A  	fcall	_UART_Write
  1642     02DA                     l3011:
  1643                           
  1644                           ;main.c: 186:         UART_Write(num5);
  1645     02DA  1283               	bcf	3,5	;RP0=0, select bank0
  1646     02DB  1303               	bcf	3,6	;RP1=0, select bank0
  1647     02DC  083A               	movf	_num5,w
  1648     02DD  120A  158A  2634  120A  118A  	fcall	_UART_Write
  1649     02E2                     l3013:
  1650                           
  1651                           ;main.c: 187:         UART_Write('\r');
  1652     02E2  300D               	movlw	13
  1653     02E3  120A  158A  2634  120A  118A  	fcall	_UART_Write
  1654     02E8                     l3015:
  1655                           
  1656                           ;main.c: 188:         UART_Write('\n');
  1657     02E8  300A               	movlw	10
  1658     02E9  120A  158A  2634  120A  118A  	fcall	_UART_Write
  1659     02EE                     l3017:
  1660                           
  1661                           ;main.c: 189:         lcdSend(0x01, 0);
  1662     02EE  1283               	bcf	3,5	;RP0=0, select bank0
  1663     02EF  1303               	bcf	3,6	;RP1=0, select bank0
  1664     02F0  01C2               	clrf	lcdSend@tipo
  1665     02F1  3001               	movlw	1
  1666     02F2  120A  158A  265F  120A  118A  	fcall	_lcdSend
  1667     02F7                     l3019:
  1668                           
  1669                           ;main.c: 190:         lcdSend(num1, 1);
  1670     02F7  1283               	bcf	3,5	;RP0=0, select bank0
  1671     02F8  1303               	bcf	3,6	;RP1=0, select bank0
  1672     02F9  01C2               	clrf	lcdSend@tipo
  1673     02FA  0AC2               	incf	lcdSend@tipo,f
  1674     02FB  083E               	movf	_num1,w
  1675     02FC  120A  158A  265F  120A  118A  	fcall	_lcdSend
  1676     0301                     l3021:
  1677                           
  1678                           ;main.c: 191:         lcdSend(num2, 1);
  1679     0301  1283               	bcf	3,5	;RP0=0, select bank0
  1680     0302  1303               	bcf	3,6	;RP1=0, select bank0
  1681     0303  01C2               	clrf	lcdSend@tipo
  1682     0304  0AC2               	incf	lcdSend@tipo,f
  1683     0305  083D               	movf	_num2,w
  1684     0306  120A  158A  265F  120A  118A  	fcall	_lcdSend
  1685     030B                     l3023:
  1686                           
  1687                           ;main.c: 192:         lcdSend(num3, 1);
  1688     030B  1283               	bcf	3,5	;RP0=0, select bank0
  1689     030C  1303               	bcf	3,6	;RP1=0, select bank0
  1690     030D  01C2               	clrf	lcdSend@tipo
  1691     030E  0AC2               	incf	lcdSend@tipo,f
  1692     030F  083C               	movf	_num3,w
  1693     0310  120A  158A  265F  120A  118A  	fcall	_lcdSend
  1694     0315                     l3025:
  1695                           
  1696                           ;main.c: 193:         lcdSend(num4, 1);
  1697     0315  1283               	bcf	3,5	;RP0=0, select bank0
  1698     0316  1303               	bcf	3,6	;RP1=0, select bank0
  1699     0317  01C2               	clrf	lcdSend@tipo
  1700     0318  0AC2               	incf	lcdSend@tipo,f
  1701     0319  083B               	movf	_num4,w
  1702     031A  120A  158A  265F  120A  118A  	fcall	_lcdSend
  1703     031F                     l3027:
  1704                           
  1705                           ;main.c: 194:         lcdSend(num5, 1);
  1706     031F  1283               	bcf	3,5	;RP0=0, select bank0
  1707     0320  1303               	bcf	3,6	;RP1=0, select bank0
  1708     0321  01C2               	clrf	lcdSend@tipo
  1709     0322  0AC2               	incf	lcdSend@tipo,f
  1710     0323  083A               	movf	_num5,w
  1711     0324  120A  158A  265F  120A  118A  	fcall	_lcdSend
  1712     0329                     l3029:
  1713                           
  1714                           ;main.c: 195:         keypressed = 0;
  1715     0329  1283               	bcf	3,5	;RP0=0, select bank0
  1716     032A  1303               	bcf	3,6	;RP1=0, select bank0
  1717     032B  01B9               	clrf	_keypressed
  1718     032C                     l3031:
  1719                           
  1720                           ;main.c: 196:         RS485_RxEnable();
  1721     032C  120A  158A  2627  120A  118A  	fcall	_RS485_RxEnable
  1722     0331                     l3033:
  1723                           
  1724                           ;main.c: 197:         flag = 1;
  1725     0331  3001               	movlw	1
  1726     0332  1283               	bcf	3,5	;RP0=0, select bank0
  1727     0333  1303               	bcf	3,6	;RP1=0, select bank0
  1728     0334  00B0               	movwf	_flag
  1729     0335  3000               	movlw	0
  1730     0336  00B1               	movwf	_flag+1
  1731     0337                     l3035:
  1732                           
  1733                           ;main.c: 198:         UART_Read1();
  1734     0337  120A  118A  2340  120A  118A  	fcall	_UART_Read1
  1735     033C  2855               	goto	l2825
  1736     033D  120A  118A  2810   	ljmp	start
  1737     0340                     __end_of_main:
  1738                           
  1739                           	psect	text1
  1740     0F92                     __ptext1:	
  1741 ;; *************** function _initLCD *****************
  1742 ;; Defined at:
  1743 ;;		line 362 in file "main.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;		None
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;		None
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  1    wreg      void 
  1750 ;; Registers used:
  1751 ;;		wreg, status,2, status,0, pclath, cstack
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1757 ;;      Params:         0       0       0       0       0
  1758 ;;      Locals:         0       0       0       0       0
  1759 ;;      Temps:          0       2       0       0       0
  1760 ;;      Totals:         0       2       0       0       0
  1761 ;;Total ram usage:        2 bytes
  1762 ;; Hardware stack levels used: 1
  1763 ;; Hardware stack levels required when called: 3
  1764 ;; This function calls:
  1765 ;;		_lcdSend
  1766 ;; This function is called by:
  1767 ;;		_main
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771     0F92                     _initLCD:	
  1772                           ;psect for function _initLCD
  1773                           
  1774     0F92                     l2581:	
  1775                           ;incstack = 0
  1776                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  1777                           
  1778                           
  1779                           ;main.c: 363:     PORTEbits.RE2 = 0;
  1780     0F92  1283               	bcf	3,5	;RP0=0, select bank0
  1781     0F93  1303               	bcf	3,6	;RP1=0, select bank0
  1782     0F94  1109               	bcf	9,2	;volatile
  1783                           
  1784                           ;main.c: 364:     PORTEbits.RE1 = 0;
  1785     0F95  1089               	bcf	9,1	;volatile
  1786     0F96                     l2583:
  1787                           
  1788                           ;main.c: 365:     _delay((unsigned long)((20)*(20000000/4000.0)));
  1789     0F96  3082               	movlw	130
  1790     0F97  1283               	bcf	3,5	;RP0=0, select bank0
  1791     0F98  1303               	bcf	3,6	;RP1=0, select bank0
  1792     0F99  00C5               	movwf	??_initLCD+1
  1793     0F9A  30DD               	movlw	221
  1794     0F9B  00C4               	movwf	??_initLCD
  1795     0F9C                     u3727:
  1796     0F9C  0BC4               	decfsz	??_initLCD,f
  1797     0F9D  2F9C               	goto	u3727
  1798     0F9E  0BC5               	decfsz	??_initLCD+1,f
  1799     0F9F  2F9C               	goto	u3727
  1800     0FA0                     l2585:
  1801                           
  1802                           ;main.c: 366:     PORTEbits.RE1 = 1;
  1803     0FA0  1283               	bcf	3,5	;RP0=0, select bank0
  1804     0FA1  1303               	bcf	3,6	;RP1=0, select bank0
  1805     0FA2  1489               	bsf	9,1	;volatile
  1806     0FA3                     l2587:
  1807                           
  1808                           ;main.c: 367:     lcdSend(0x38, 0);
  1809     0FA3  01C2               	clrf	lcdSend@tipo
  1810     0FA4  3038               	movlw	56
  1811     0FA5  120A  158A  265F  120A  158A  	fcall	_lcdSend
  1812     0FAA                     l2589:
  1813                           
  1814                           ;main.c: 368:     _delay((unsigned long)((5)*(20000000/4000.0)));
  1815     0FAA  3021               	movlw	33
  1816     0FAB  1283               	bcf	3,5	;RP0=0, select bank0
  1817     0FAC  1303               	bcf	3,6	;RP1=0, select bank0
  1818     0FAD  00C5               	movwf	??_initLCD+1
  1819     0FAE  3075               	movlw	117
  1820     0FAF  00C4               	movwf	??_initLCD
  1821     0FB0                     u3737:
  1822     0FB0  0BC4               	decfsz	??_initLCD,f
  1823     0FB1  2FB0               	goto	u3737
  1824     0FB2  0BC5               	decfsz	??_initLCD+1,f
  1825     0FB3  2FB0               	goto	u3737
  1826     0FB4  2FB5               	nop2
  1827                           
  1828                           ;main.c: 369:     lcdSend(0x38, 0);
  1829     0FB5  1283               	bcf	3,5	;RP0=0, select bank0
  1830     0FB6  1303               	bcf	3,6	;RP1=0, select bank0
  1831     0FB7  01C2               	clrf	lcdSend@tipo
  1832     0FB8  3038               	movlw	56
  1833     0FB9  120A  158A  265F  120A  158A  	fcall	_lcdSend
  1834     0FBE                     l2591:
  1835                           
  1836                           ;main.c: 370:     _delay((unsigned long)((1)*(20000000/4000.0)));
  1837     0FBE  3007               	movlw	7
  1838     0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  1839     0FC0  1303               	bcf	3,6	;RP1=0, select bank0
  1840     0FC1  00C5               	movwf	??_initLCD+1
  1841     0FC2  307C               	movlw	124
  1842     0FC3  00C4               	movwf	??_initLCD
  1843     0FC4                     u3747:
  1844     0FC4  0BC4               	decfsz	??_initLCD,f
  1845     0FC5  2FC4               	goto	u3747
  1846     0FC6  0BC5               	decfsz	??_initLCD+1,f
  1847     0FC7  2FC4               	goto	u3747
  1848     0FC8  0000               	nop
  1849     0FC9                     l2593:
  1850                           
  1851                           ;main.c: 371:     lcdSend(0x38, 0);
  1852     0FC9  1283               	bcf	3,5	;RP0=0, select bank0
  1853     0FCA  1303               	bcf	3,6	;RP1=0, select bank0
  1854     0FCB  01C2               	clrf	lcdSend@tipo
  1855     0FCC  3038               	movlw	56
  1856     0FCD  120A  158A  265F  120A  158A  	fcall	_lcdSend
  1857     0FD2                     l2595:
  1858                           
  1859                           ;main.c: 372:     lcdSend(0x08, 0);
  1860     0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  1861     0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  1862     0FD4  01C2               	clrf	lcdSend@tipo
  1863     0FD5  3008               	movlw	8
  1864     0FD6  120A  158A  265F  120A  158A  	fcall	_lcdSend
  1865     0FDB                     l2597:
  1866                           
  1867                           ;main.c: 373:     lcdSend(0x0F, 0);
  1868     0FDB  1283               	bcf	3,5	;RP0=0, select bank0
  1869     0FDC  1303               	bcf	3,6	;RP1=0, select bank0
  1870     0FDD  01C2               	clrf	lcdSend@tipo
  1871     0FDE  300F               	movlw	15
  1872     0FDF  120A  158A  265F  120A  158A  	fcall	_lcdSend
  1873     0FE4                     l2599:
  1874                           
  1875                           ;main.c: 374:     lcdSend(0x01, 0);
  1876     0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  1877     0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  1878     0FE6  01C2               	clrf	lcdSend@tipo
  1879     0FE7  3001               	movlw	1
  1880     0FE8  120A  158A  265F  120A  158A  	fcall	_lcdSend
  1881     0FED                     l2601:
  1882                           
  1883                           ;main.c: 375:     lcdSend(0x0C, 0);
  1884     0FED  1283               	bcf	3,5	;RP0=0, select bank0
  1885     0FEE  1303               	bcf	3,6	;RP1=0, select bank0
  1886     0FEF  01C2               	clrf	lcdSend@tipo
  1887     0FF0  300C               	movlw	12
  1888     0FF1  120A  158A  265F  120A  158A  	fcall	_lcdSend
  1889     0FF6                     l2603:
  1890                           
  1891                           ;main.c: 376:     lcdSend(0x80, 0);
  1892     0FF6  1283               	bcf	3,5	;RP0=0, select bank0
  1893     0FF7  1303               	bcf	3,6	;RP1=0, select bank0
  1894     0FF8  01C2               	clrf	lcdSend@tipo
  1895     0FF9  3080               	movlw	128
  1896     0FFA  120A  158A  265F  120A  158A  	fcall	_lcdSend
  1897     0FFF                     l232:
  1898     0FFF  0008               	return
  1899     1000                     __end_of_initLCD:
  1900                           
  1901                           	psect	text2
  1902     0340                     __ptext2:	
  1903 ;; *************** function _UART_Read1 *****************
  1904 ;; Defined at:
  1905 ;;		line 286 in file "main.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;		None
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;  count           1   31[BANK0 ] unsigned char 
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  1    wreg      unsigned char 
  1912 ;; Registers used:
  1913 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1919 ;;      Params:         0       0       0       0       0
  1920 ;;      Locals:         0       1       0       0       0
  1921 ;;      Temps:          0       3       0       0       0
  1922 ;;      Totals:         0       4       0       0       0
  1923 ;;Total ram usage:        4 bytes
  1924 ;; Hardware stack levels used: 1
  1925 ;; Hardware stack levels required when called: 5
  1926 ;; This function calls:
  1927 ;;		_RS485_RxEnable
  1928 ;;		_RS485_TxEnable
  1929 ;;		_UART_Write
  1930 ;;		_intToString
  1931 ;;		_lcdPrint
  1932 ;;		_lcdSend
  1933 ;; This function is called by:
  1934 ;;		_main
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938     0340                     _UART_Read1:	
  1939                           ;psect for function _UART_Read1
  1940                           
  1941     0340                     l2681:	
  1942                           ;incstack = 0
  1943                           ; Regs used in _UART_Read1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1944                           
  1945                           
  1946                           ;main.c: 287:     char count = 0;
  1947     0340  1283               	bcf	3,5	;RP0=0, select bank0
  1948     0341  1303               	bcf	3,6	;RP1=0, select bank0
  1949     0342  01E1               	clrf	UART_Read1@count
  1950     0343                     l2683:
  1951                           
  1952                           ;main.c: 288:     countdown = 60;
  1953     0343  303C               	movlw	60
  1954     0344  00E4               	movwf	_countdown
  1955                           
  1956                           ;main.c: 289:     while (countdown != 0){
  1957     0345  2CF8               	goto	l2801
  1958     0346                     l2685:
  1959                           
  1960                           ;main.c: 290:         if (count != 5){
  1961     0346  3005               	movlw	5
  1962     0347  0661               	xorwf	UART_Read1@count,w
  1963     0348  1903               	btfsc	3,2
  1964     0349  2B4B               	goto	u3021
  1965     034A  2B4C               	goto	u3020
  1966     034B                     u3021:
  1967     034B  2C83               	goto	l2767
  1968     034C                     u3020:
  1969     034C                     l2687:
  1970                           
  1971                           ;main.c: 291:             if(keypressed != 0 && count == 0){
  1972     034C  0839               	movf	_keypressed,w
  1973     034D  1903               	btfsc	3,2
  1974     034E  2B50               	goto	u3031
  1975     034F  2B51               	goto	u3030
  1976     0350                     u3031:
  1977     0350  2B7E               	goto	l2701
  1978     0351                     u3030:
  1979     0351                     l2689:
  1980     0351  0861               	movf	UART_Read1@count,w
  1981     0352  1D03               	btfss	3,2
  1982     0353  2B55               	goto	u3041
  1983     0354  2B56               	goto	u3040
  1984     0355                     u3041:
  1985     0355  2B7E               	goto	l2701
  1986     0356                     u3040:
  1987     0356                     l2691:
  1988                           
  1989                           ;main.c: 292:                 lcdSend(0x01, 0);
  1990     0356  01C2               	clrf	lcdSend@tipo
  1991     0357  3001               	movlw	1
  1992     0358  120A  158A  265F  120A  118A  	fcall	_lcdSend
  1993     035D                     l2693:
  1994                           
  1995                           ;main.c: 293:                 lcdSend(keys[keypressed], 1);
  1996     035D  1283               	bcf	3,5	;RP0=0, select bank0
  1997     035E  1303               	bcf	3,6	;RP1=0, select bank0
  1998     035F  01C2               	clrf	lcdSend@tipo
  1999     0360  0AC2               	incf	lcdSend@tipo,f
  2000     0361  0839               	movf	_keypressed,w
  2001     0362  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2002     0363  0084               	movwf	4
  2003     0364  120A  118A  2611  120A  118A  	fcall	stringdir
  2004     0369  120A  158A  265F  120A  118A  	fcall	_lcdSend
  2005     036E                     l2695:
  2006                           
  2007                           ;main.c: 294:                 num1 = keys[keypressed];
  2008     036E  1283               	bcf	3,5	;RP0=0, select bank0
  2009     036F  1303               	bcf	3,6	;RP1=0, select bank0
  2010     0370  0839               	movf	_keypressed,w
  2011     0371  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2012     0372  0084               	movwf	4
  2013     0373  120A  118A  2611  120A  118A  	fcall	stringdir
  2014     0378  00BE               	movwf	_num1
  2015     0379                     l2697:
  2016                           
  2017                           ;main.c: 295:                 keypressed = 0;
  2018     0379  01B9               	clrf	_keypressed
  2019     037A                     l2699:
  2020                           
  2021                           ;main.c: 296:                 count ++;
  2022     037A  3001               	movlw	1
  2023     037B  00DE               	movwf	??_UART_Read1
  2024     037C  085E               	movf	??_UART_Read1,w
  2025     037D  07E1               	addwf	UART_Read1@count,f
  2026     037E                     l2701:
  2027                           
  2028                           ;main.c: 298:             if(keypressed != 0 && count == 1){
  2029     037E  0839               	movf	_keypressed,w
  2030     037F  1903               	btfsc	3,2
  2031     0380  2B82               	goto	u3051
  2032     0381  2B83               	goto	u3050
  2033     0382                     u3051:
  2034     0382  2BB1               	goto	l2715
  2035     0383                     u3050:
  2036     0383                     l2703:
  2037     0383  0361               	decf	UART_Read1@count,w
  2038     0384  1D03               	btfss	3,2
  2039     0385  2B87               	goto	u3061
  2040     0386  2B88               	goto	u3060
  2041     0387                     u3061:
  2042     0387  2BB1               	goto	l2715
  2043     0388                     u3060:
  2044     0388                     l2705:
  2045                           
  2046                           ;main.c: 299:                 lcdSend(0x80 + count, 0);
  2047     0388  01C2               	clrf	lcdSend@tipo
  2048     0389  0861               	movf	UART_Read1@count,w
  2049     038A  3E80               	addlw	128
  2050     038B  120A  158A  265F  120A  118A  	fcall	_lcdSend
  2051     0390                     l2707:
  2052                           
  2053                           ;main.c: 300:                 lcdSend(keys[keypressed], 1);
  2054     0390  1283               	bcf	3,5	;RP0=0, select bank0
  2055     0391  1303               	bcf	3,6	;RP1=0, select bank0
  2056     0392  01C2               	clrf	lcdSend@tipo
  2057     0393  0AC2               	incf	lcdSend@tipo,f
  2058     0394  0839               	movf	_keypressed,w
  2059     0395  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2060     0396  0084               	movwf	4
  2061     0397  120A  118A  2611  120A  118A  	fcall	stringdir
  2062     039C  120A  158A  265F  120A  118A  	fcall	_lcdSend
  2063     03A1                     l2709:
  2064                           
  2065                           ;main.c: 301:                 num2 = keys[keypressed];
  2066     03A1  1283               	bcf	3,5	;RP0=0, select bank0
  2067     03A2  1303               	bcf	3,6	;RP1=0, select bank0
  2068     03A3  0839               	movf	_keypressed,w
  2069     03A4  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2070     03A5  0084               	movwf	4
  2071     03A6  120A  118A  2611  120A  118A  	fcall	stringdir
  2072     03AB  00BD               	movwf	_num2
  2073     03AC                     l2711:
  2074                           
  2075                           ;main.c: 302:                 keypressed = 0;
  2076     03AC  01B9               	clrf	_keypressed
  2077     03AD                     l2713:
  2078                           
  2079                           ;main.c: 303:                 count ++;
  2080     03AD  3001               	movlw	1
  2081     03AE  00DE               	movwf	??_UART_Read1
  2082     03AF  085E               	movf	??_UART_Read1,w
  2083     03B0  07E1               	addwf	UART_Read1@count,f
  2084     03B1                     l2715:
  2085                           
  2086                           ;main.c: 305:             if(keypressed != 0 && count == 2){
  2087     03B1  0839               	movf	_keypressed,w
  2088     03B2  1903               	btfsc	3,2
  2089     03B3  2BB5               	goto	u3071
  2090     03B4  2BB6               	goto	u3070
  2091     03B5                     u3071:
  2092     03B5  2BE5               	goto	l2729
  2093     03B6                     u3070:
  2094     03B6                     l2717:
  2095     03B6  3002               	movlw	2
  2096     03B7  0661               	xorwf	UART_Read1@count,w
  2097     03B8  1D03               	btfss	3,2
  2098     03B9  2BBB               	goto	u3081
  2099     03BA  2BBC               	goto	u3080
  2100     03BB                     u3081:
  2101     03BB  2BE5               	goto	l2729
  2102     03BC                     u3080:
  2103     03BC                     l2719:
  2104                           
  2105                           ;main.c: 306:                 lcdSend(0x80 + count, 0);
  2106     03BC  01C2               	clrf	lcdSend@tipo
  2107     03BD  0861               	movf	UART_Read1@count,w
  2108     03BE  3E80               	addlw	128
  2109     03BF  120A  158A  265F  120A  118A  	fcall	_lcdSend
  2110     03C4                     l2721:
  2111                           
  2112                           ;main.c: 307:                 lcdSend(keys[keypressed], 1);
  2113     03C4  1283               	bcf	3,5	;RP0=0, select bank0
  2114     03C5  1303               	bcf	3,6	;RP1=0, select bank0
  2115     03C6  01C2               	clrf	lcdSend@tipo
  2116     03C7  0AC2               	incf	lcdSend@tipo,f
  2117     03C8  0839               	movf	_keypressed,w
  2118     03C9  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2119     03CA  0084               	movwf	4
  2120     03CB  120A  118A  2611  120A  118A  	fcall	stringdir
  2121     03D0  120A  158A  265F  120A  118A  	fcall	_lcdSend
  2122     03D5                     l2723:
  2123                           
  2124                           ;main.c: 308:                 num3 = keys[keypressed];
  2125     03D5  1283               	bcf	3,5	;RP0=0, select bank0
  2126     03D6  1303               	bcf	3,6	;RP1=0, select bank0
  2127     03D7  0839               	movf	_keypressed,w
  2128     03D8  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2129     03D9  0084               	movwf	4
  2130     03DA  120A  118A  2611  120A  118A  	fcall	stringdir
  2131     03DF  00BC               	movwf	_num3
  2132     03E0                     l2725:
  2133                           
  2134                           ;main.c: 309:                 keypressed = 0;
  2135     03E0  01B9               	clrf	_keypressed
  2136     03E1                     l2727:
  2137                           
  2138                           ;main.c: 310:                 count ++;
  2139     03E1  3001               	movlw	1
  2140     03E2  00DE               	movwf	??_UART_Read1
  2141     03E3  085E               	movf	??_UART_Read1,w
  2142     03E4  07E1               	addwf	UART_Read1@count,f
  2143     03E5                     l2729:
  2144                           
  2145                           ;main.c: 312:             if(keypressed != 0 && count == 3){
  2146     03E5  0839               	movf	_keypressed,w
  2147     03E6  1903               	btfsc	3,2
  2148     03E7  2BE9               	goto	u3091
  2149     03E8  2BEA               	goto	u3090
  2150     03E9                     u3091:
  2151     03E9  2C19               	goto	l2743
  2152     03EA                     u3090:
  2153     03EA                     l2731:
  2154     03EA  3003               	movlw	3
  2155     03EB  0661               	xorwf	UART_Read1@count,w
  2156     03EC  1D03               	btfss	3,2
  2157     03ED  2BEF               	goto	u3101
  2158     03EE  2BF0               	goto	u3100
  2159     03EF                     u3101:
  2160     03EF  2C19               	goto	l2743
  2161     03F0                     u3100:
  2162     03F0                     l2733:
  2163                           
  2164                           ;main.c: 313:                 lcdSend(0x80 + count, 0);
  2165     03F0  01C2               	clrf	lcdSend@tipo
  2166     03F1  0861               	movf	UART_Read1@count,w
  2167     03F2  3E80               	addlw	128
  2168     03F3  120A  158A  265F  120A  118A  	fcall	_lcdSend
  2169     03F8                     l2735:
  2170                           
  2171                           ;main.c: 314:                 lcdSend(keys[keypressed], 1);
  2172     03F8  1283               	bcf	3,5	;RP0=0, select bank0
  2173     03F9  1303               	bcf	3,6	;RP1=0, select bank0
  2174     03FA  01C2               	clrf	lcdSend@tipo
  2175     03FB  0AC2               	incf	lcdSend@tipo,f
  2176     03FC  0839               	movf	_keypressed,w
  2177     03FD  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2178     03FE  0084               	movwf	4
  2179     03FF  120A  118A  2611  120A  118A  	fcall	stringdir
  2180     0404  120A  158A  265F  120A  118A  	fcall	_lcdSend
  2181     0409                     l2737:
  2182                           
  2183                           ;main.c: 315:                 num4 = keys[keypressed];
  2184     0409  1283               	bcf	3,5	;RP0=0, select bank0
  2185     040A  1303               	bcf	3,6	;RP1=0, select bank0
  2186     040B  0839               	movf	_keypressed,w
  2187     040C  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2188     040D  0084               	movwf	4
  2189     040E  120A  118A  2611  120A  118A  	fcall	stringdir
  2190     0413  00BB               	movwf	_num4
  2191     0414                     l2739:
  2192                           
  2193                           ;main.c: 316:                 keypressed = 0;
  2194     0414  01B9               	clrf	_keypressed
  2195     0415                     l2741:
  2196                           
  2197                           ;main.c: 317:                 count ++;
  2198     0415  3001               	movlw	1
  2199     0416  00DE               	movwf	??_UART_Read1
  2200     0417  085E               	movf	??_UART_Read1,w
  2201     0418  07E1               	addwf	UART_Read1@count,f
  2202     0419                     l2743:
  2203                           
  2204                           ;main.c: 319:             if(keypressed != 0 && count == 4){
  2205     0419  0839               	movf	_keypressed,w
  2206     041A  1903               	btfsc	3,2
  2207     041B  2C1D               	goto	u3111
  2208     041C  2C1E               	goto	u3110
  2209     041D                     u3111:
  2210     041D  2C4D               	goto	l2757
  2211     041E                     u3110:
  2212     041E                     l2745:
  2213     041E  3004               	movlw	4
  2214     041F  0661               	xorwf	UART_Read1@count,w
  2215     0420  1D03               	btfss	3,2
  2216     0421  2C23               	goto	u3121
  2217     0422  2C24               	goto	u3120
  2218     0423                     u3121:
  2219     0423  2C4D               	goto	l2757
  2220     0424                     u3120:
  2221     0424                     l2747:
  2222                           
  2223                           ;main.c: 320:                 lcdSend(0x80 + count, 0);
  2224     0424  01C2               	clrf	lcdSend@tipo
  2225     0425  0861               	movf	UART_Read1@count,w
  2226     0426  3E80               	addlw	128
  2227     0427  120A  158A  265F  120A  118A  	fcall	_lcdSend
  2228     042C                     l2749:
  2229                           
  2230                           ;main.c: 321:                 lcdSend(keys[keypressed], 1);
  2231     042C  1283               	bcf	3,5	;RP0=0, select bank0
  2232     042D  1303               	bcf	3,6	;RP1=0, select bank0
  2233     042E  01C2               	clrf	lcdSend@tipo
  2234     042F  0AC2               	incf	lcdSend@tipo,f
  2235     0430  0839               	movf	_keypressed,w
  2236     0431  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2237     0432  0084               	movwf	4
  2238     0433  120A  118A  2611  120A  118A  	fcall	stringdir
  2239     0438  120A  158A  265F  120A  118A  	fcall	_lcdSend
  2240     043D                     l2751:
  2241                           
  2242                           ;main.c: 322:                 num5 = keys[keypressed];
  2243     043D  1283               	bcf	3,5	;RP0=0, select bank0
  2244     043E  1303               	bcf	3,6	;RP1=0, select bank0
  2245     043F  0839               	movf	_keypressed,w
  2246     0440  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2247     0441  0084               	movwf	4
  2248     0442  120A  118A  2611  120A  118A  	fcall	stringdir
  2249     0447  00BA               	movwf	_num5
  2250     0448                     l2753:
  2251                           
  2252                           ;main.c: 323:                 keypressed = 0;
  2253     0448  01B9               	clrf	_keypressed
  2254     0449                     l2755:
  2255                           
  2256                           ;main.c: 324:                 count ++;
  2257     0449  3001               	movlw	1
  2258     044A  00DE               	movwf	??_UART_Read1
  2259     044B  085E               	movf	??_UART_Read1,w
  2260     044C  07E1               	addwf	UART_Read1@count,f
  2261     044D                     l2757:
  2262                           
  2263                           ;main.c: 326:             intToString(countdown, print_countdown);
  2264     044D  0864               	movf	_countdown,w
  2265     044E  00DE               	movwf	??_UART_Read1
  2266     044F  01DF               	clrf	??_UART_Read1+1
  2267     0450  085E               	movf	??_UART_Read1,w
  2268     0451  00D5               	movwf	intToString@n
  2269     0452  085F               	movf	??_UART_Read1+1,w
  2270     0453  00D6               	movwf	intToString@n+1
  2271     0454  303F               	movlw	(low (_print_countdown| 0))& (0+255)
  2272     0455  00D7               	movwf	intToString@str
  2273     0456  120A  118A  2736  120A  118A  	fcall	_intToString
  2274     045B                     l2759:
  2275                           
  2276                           ;main.c: 327:             lcdSend(0xC0, 0);
  2277     045B  1283               	bcf	3,5	;RP0=0, select bank0
  2278     045C  1303               	bcf	3,6	;RP1=0, select bank0
  2279     045D  01C2               	clrf	lcdSend@tipo
  2280     045E  30C0               	movlw	192
  2281     045F  120A  158A  265F  120A  118A  	fcall	_lcdSend
  2282     0464                     l2761:
  2283                           
  2284                           ;main.c: 328:             lcdPrint(print_countdown);
  2285     0464  303F               	movlw	(low (_print_countdown| 0))& (0+255)
  2286     0465  1283               	bcf	3,5	;RP0=0, select bank0
  2287     0466  1303               	bcf	3,6	;RP1=0, select bank0
  2288     0467  00C4               	movwf	lcdPrint@str
  2289     0468  3000               	movlw	0
  2290     0469  00C5               	movwf	lcdPrint@str+1
  2291     046A  120A  118A  27B2  120A  118A  	fcall	_lcdPrint
  2292     046F                     l2763:
  2293                           
  2294                           ;main.c: 329:             countdown --;
  2295     046F  3001               	movlw	1
  2296     0470  1283               	bcf	3,5	;RP0=0, select bank0
  2297     0471  1303               	bcf	3,6	;RP1=0, select bank0
  2298     0472  02E4               	subwf	_countdown,f
  2299     0473                     l2765:
  2300                           
  2301                           ;main.c: 330:             _delay((unsigned long)((80)*(20000000/4000.0)));
  2302     0473  3003               	movlw	3
  2303     0474  1283               	bcf	3,5	;RP0=0, select bank0
  2304     0475  1303               	bcf	3,6	;RP1=0, select bank0
  2305     0476  00E0               	movwf	??_UART_Read1+2
  2306     0477  3008               	movlw	8
  2307     0478  00DF               	movwf	??_UART_Read1+1
  2308     0479  3076               	movlw	118
  2309     047A  00DE               	movwf	??_UART_Read1
  2310     047B                     u3757:
  2311     047B  0BDE               	decfsz	??_UART_Read1,f
  2312     047C  2C7B               	goto	u3757
  2313     047D  0BDF               	decfsz	??_UART_Read1+1,f
  2314     047E  2C7B               	goto	u3757
  2315     047F  0BE0               	decfsz	??_UART_Read1+2,f
  2316     0480  2C7B               	goto	u3757
  2317     0481  0000               	nop
  2318                           
  2319                           ;main.c: 331:         }
  2320     0482  2CF8               	goto	l2801
  2321     0483                     l2767:
  2322                           
  2323                           ;main.c: 333:             RS485_TxEnable();
  2324     0483  120A  118A  27FA  120A  118A  	fcall	_RS485_TxEnable
  2325     0488                     l2769:
  2326                           
  2327                           ;main.c: 334:             UART_Write(id1);
  2328     0488  3030               	movlw	48
  2329     0489  120A  158A  2634  120A  118A  	fcall	_UART_Write
  2330     048E                     l2771:
  2331                           
  2332                           ;main.c: 335:             UART_Write(id2);
  2333     048E  3031               	movlw	49
  2334     048F  120A  158A  2634  120A  118A  	fcall	_UART_Write
  2335     0494                     l2773:
  2336                           
  2337                           ;main.c: 336:             UART_Write(num1);
  2338     0494  1283               	bcf	3,5	;RP0=0, select bank0
  2339     0495  1303               	bcf	3,6	;RP1=0, select bank0
  2340     0496  083E               	movf	_num1,w
  2341     0497  120A  158A  2634  120A  118A  	fcall	_UART_Write
  2342     049C                     l2775:
  2343                           
  2344                           ;main.c: 337:             UART_Write(num2);
  2345     049C  1283               	bcf	3,5	;RP0=0, select bank0
  2346     049D  1303               	bcf	3,6	;RP1=0, select bank0
  2347     049E  083D               	movf	_num2,w
  2348     049F  120A  158A  2634  120A  118A  	fcall	_UART_Write
  2349     04A4                     l2777:
  2350                           
  2351                           ;main.c: 338:             UART_Write(num3);
  2352     04A4  1283               	bcf	3,5	;RP0=0, select bank0
  2353     04A5  1303               	bcf	3,6	;RP1=0, select bank0
  2354     04A6  083C               	movf	_num3,w
  2355     04A7  120A  158A  2634  120A  118A  	fcall	_UART_Write
  2356     04AC                     l2779:
  2357                           
  2358                           ;main.c: 339:             UART_Write(num4);
  2359     04AC  1283               	bcf	3,5	;RP0=0, select bank0
  2360     04AD  1303               	bcf	3,6	;RP1=0, select bank0
  2361     04AE  083B               	movf	_num4,w
  2362     04AF  120A  158A  2634  120A  118A  	fcall	_UART_Write
  2363     04B4                     l2781:
  2364                           
  2365                           ;main.c: 340:             UART_Write(num5);
  2366     04B4  1283               	bcf	3,5	;RP0=0, select bank0
  2367     04B5  1303               	bcf	3,6	;RP1=0, select bank0
  2368     04B6  083A               	movf	_num5,w
  2369     04B7  120A  158A  2634  120A  118A  	fcall	_UART_Write
  2370     04BC                     l2783:
  2371                           
  2372                           ;main.c: 341:             UART_Write('\r');
  2373     04BC  300D               	movlw	13
  2374     04BD  120A  158A  2634  120A  118A  	fcall	_UART_Write
  2375     04C2                     l2785:
  2376                           
  2377                           ;main.c: 342:             UART_Write('\n');
  2378     04C2  300A               	movlw	10
  2379     04C3  120A  158A  2634  120A  118A  	fcall	_UART_Write
  2380     04C8                     l2787:
  2381                           
  2382                           ;main.c: 343:             RS485_RxEnable();
  2383     04C8  120A  158A  2627  120A  118A  	fcall	_RS485_RxEnable
  2384                           
  2385                           ;main.c: 344:             lcdSend(0x01, 0);
  2386     04CD  1283               	bcf	3,5	;RP0=0, select bank0
  2387     04CE  1303               	bcf	3,6	;RP1=0, select bank0
  2388     04CF  01C2               	clrf	lcdSend@tipo
  2389     04D0  3001               	movlw	1
  2390     04D1  120A  158A  265F  120A  118A  	fcall	_lcdSend
  2391     04D6                     l2789:
  2392                           
  2393                           ;main.c: 345:             lcdPrint("Mandato");
  2394     04D6  308B               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2395     04D7  1283               	bcf	3,5	;RP0=0, select bank0
  2396     04D8  1303               	bcf	3,6	;RP1=0, select bank0
  2397     04D9  00C4               	movwf	lcdPrint@str
  2398     04DA  3080               	movlw	128
  2399     04DB  00C5               	movwf	lcdPrint@str+1
  2400     04DC  120A  118A  27B2  120A  118A  	fcall	_lcdPrint
  2401     04E1                     l2791:
  2402                           
  2403                           ;main.c: 346:             RCIF = 0;
  2404     04E1  1283               	bcf	3,5	;RP0=0, select bank0
  2405     04E2  1303               	bcf	3,6	;RP1=0, select bank0
  2406     04E3  128C               	bcf	12,5	;volatile
  2407     04E4                     l2793:
  2408                           
  2409                           ;main.c: 347:             countdown = 60;
  2410     04E4  303C               	movlw	60
  2411     04E5  00E4               	movwf	_countdown
  2412     04E6                     l2795:
  2413                           
  2414                           ;main.c: 348:             _delay((unsigned long)((100)*(20000000/4000.0)));
  2415     04E6  3003               	movlw	3
  2416     04E7  1283               	bcf	3,5	;RP0=0, select bank0
  2417     04E8  1303               	bcf	3,6	;RP1=0, select bank0
  2418     04E9  00E0               	movwf	??_UART_Read1+2
  2419     04EA  308A               	movlw	138
  2420     04EB  00DF               	movwf	??_UART_Read1+1
  2421     04EC  3055               	movlw	85
  2422     04ED  00DE               	movwf	??_UART_Read1
  2423     04EE                     u3767:
  2424     04EE  0BDE               	decfsz	??_UART_Read1,f
  2425     04EF  2CEE               	goto	u3767
  2426     04F0  0BDF               	decfsz	??_UART_Read1+1,f
  2427     04F1  2CEE               	goto	u3767
  2428     04F2  0BE0               	decfsz	??_UART_Read1+2,f
  2429     04F3  2CEE               	goto	u3767
  2430     04F4                     l2797:
  2431                           
  2432                           ;main.c: 349:             return RCREG;;	Return value of _UART_Read1 is never used
  2433     04F4  1283               	bcf	3,5	;RP0=0, select bank0
  2434     04F5  1303               	bcf	3,6	;RP1=0, select bank0
  2435     04F6  081A               	movf	26,w	;volatile
  2436     04F7  2D25               	goto	l228
  2437     04F8                     l2801:
  2438                           
  2439                           ;main.c: 289:     while (countdown != 0){
  2440     04F8  1283               	bcf	3,5	;RP0=0, select bank0
  2441     04F9  1303               	bcf	3,6	;RP1=0, select bank0
  2442     04FA  0864               	movf	_countdown,w
  2443     04FB  1D03               	btfss	3,2
  2444     04FC  2CFE               	goto	u3131
  2445     04FD  2CFF               	goto	u3130
  2446     04FE                     u3131:
  2447     04FE  2B46               	goto	l2685
  2448     04FF                     u3130:
  2449     04FF                     l2803:
  2450                           
  2451                           ;main.c: 352:     lcdSend(0x01, 0);
  2452     04FF  01C2               	clrf	lcdSend@tipo
  2453     0500  3001               	movlw	1
  2454     0501  120A  158A  265F  120A  118A  	fcall	_lcdSend
  2455     0506                     l2805:
  2456                           
  2457                           ;main.c: 353:     lcdPrint("Codice Scaduto");
  2458     0506  3014               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2459     0507  1283               	bcf	3,5	;RP0=0, select bank0
  2460     0508  1303               	bcf	3,6	;RP1=0, select bank0
  2461     0509  00C4               	movwf	lcdPrint@str
  2462     050A  3080               	movlw	128
  2463     050B  00C5               	movwf	lcdPrint@str+1
  2464     050C  120A  118A  27B2  120A  118A  	fcall	_lcdPrint
  2465     0511                     l2807:
  2466                           
  2467                           ;main.c: 354:     RCIF = 0;
  2468     0511  1283               	bcf	3,5	;RP0=0, select bank0
  2469     0512  1303               	bcf	3,6	;RP1=0, select bank0
  2470     0513  128C               	bcf	12,5	;volatile
  2471     0514                     l2809:
  2472                           
  2473                           ;main.c: 355:     countdown = 60;
  2474     0514  303C               	movlw	60
  2475     0515  00E4               	movwf	_countdown
  2476     0516                     l2811:
  2477                           
  2478                           ;main.c: 356:     _delay((unsigned long)((200)*(20000000/4000.0)));
  2479     0516  3006               	movlw	6
  2480     0517  1283               	bcf	3,5	;RP0=0, select bank0
  2481     0518  1303               	bcf	3,6	;RP1=0, select bank0
  2482     0519  00E0               	movwf	??_UART_Read1+2
  2483     051A  3013               	movlw	19
  2484     051B  00DF               	movwf	??_UART_Read1+1
  2485     051C  30AD               	movlw	173
  2486     051D  00DE               	movwf	??_UART_Read1
  2487     051E                     u3777:
  2488     051E  0BDE               	decfsz	??_UART_Read1,f
  2489     051F  2D1E               	goto	u3777
  2490     0520  0BDF               	decfsz	??_UART_Read1+1,f
  2491     0521  2D1E               	goto	u3777
  2492     0522  0BE0               	decfsz	??_UART_Read1+2,f
  2493     0523  2D1E               	goto	u3777
  2494     0524  2CF4               	goto	l2797
  2495     0525                     l228:
  2496     0525  0008               	return
  2497     0526                     __end_of_UART_Read1:
  2498                           
  2499                           	psect	text3
  2500     07B2                     __ptext3:	
  2501 ;; *************** function _lcdPrint *****************
  2502 ;; Defined at:
  2503 ;;		line 400 in file "main.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;  str             2    2[BANK0 ] PTR unsigned char 
  2506 ;;		 -> STR_12(15), STR_11(8), STR_10(14), STR_9(13), 
  2507 ;;		 -> STR_8(9), print_countdown(3), STR_7(10), STR_6(14), 
  2508 ;;		 -> STR_5(13), STR_4(12), STR_3(11), STR_2(10), 
  2509 ;;		 -> STR_1(8), 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;  n               2    7[BANK0 ] int 
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  1    wreg      void 
  2514 ;; Registers used:
  2515 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2521 ;;      Params:         0       2       0       0       0
  2522 ;;      Locals:         0       2       0       0       0
  2523 ;;      Temps:          0       3       0       0       0
  2524 ;;      Totals:         0       7       0       0       0
  2525 ;;Total ram usage:        7 bytes
  2526 ;; Hardware stack levels used: 1
  2527 ;; Hardware stack levels required when called: 3
  2528 ;; This function calls:
  2529 ;;		_lcdSend
  2530 ;; This function is called by:
  2531 ;;		_main
  2532 ;;		_UART_Read1
  2533 ;;		_UART_Read2
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537     07B2                     _lcdPrint:	
  2538                           ;psect for function _lcdPrint
  2539                           
  2540     07B2                     l2531:	
  2541                           ;incstack = 0
  2542                           ; Regs used in _lcdPrint: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2543                           
  2544                           
  2545                           ;main.c: 401:     int n = 0;
  2546     07B2  1283               	bcf	3,5	;RP0=0, select bank0
  2547     07B3  1303               	bcf	3,6	;RP1=0, select bank0
  2548     07B4  01C9               	clrf	lcdPrint@n
  2549     07B5  01CA               	clrf	lcdPrint@n+1
  2550                           
  2551                           ;main.c: 402:     while (str[n] != '\0') {
  2552     07B6  2FDD               	goto	l2537
  2553     07B7                     l2533:
  2554                           
  2555                           ;main.c: 403:         lcdSend(str[n++], 1);
  2556     07B7  01C2               	clrf	lcdSend@tipo
  2557     07B8  0AC2               	incf	lcdSend@tipo,f
  2558     07B9  0849               	movf	lcdPrint@n,w
  2559     07BA  0744               	addwf	lcdPrint@str,w
  2560     07BB  00C7               	movwf	??_lcdPrint+1
  2561     07BC  0845               	movf	lcdPrint@str+1,w
  2562     07BD  00C6               	movwf	??_lcdPrint
  2563     07BE  1803               	skipnc
  2564     07BF  0AC6               	incf	??_lcdPrint,f
  2565     07C0  1FC9               	btfss	lcdPrint@n,7
  2566     07C1  2FC3               	goto	u2850
  2567     07C2  03C6               	decf	??_lcdPrint,f
  2568     07C3                     u2850:
  2569     07C3  1283               	bcf	3,5	;RP0=0, select bank0
  2570     07C4  1303               	bcf	3,6	;RP1=0, select bank0
  2571     07C5  0846               	movf	??_lcdPrint,w
  2572     07C6  00C8               	movwf	??_lcdPrint+2
  2573     07C7  0848               	movf	??_lcdPrint+2,w
  2574     07C8  00FF               	movwf	btemp+1
  2575     07C9  0847               	movf	??_lcdPrint+1,w
  2576     07CA  0084               	movwf	4
  2577     07CB  120A  118A  2607  120A  118A  	fcall	stringtab
  2578     07D0  120A  158A  265F  120A  118A  	fcall	_lcdSend
  2579     07D5                     l2535:
  2580     07D5  3001               	movlw	1
  2581     07D6  1283               	bcf	3,5	;RP0=0, select bank0
  2582     07D7  1303               	bcf	3,6	;RP1=0, select bank0
  2583     07D8  07C9               	addwf	lcdPrint@n,f
  2584     07D9  1803               	skipnc
  2585     07DA  0ACA               	incf	lcdPrint@n+1,f
  2586     07DB  3000               	movlw	0
  2587     07DC  07CA               	addwf	lcdPrint@n+1,f
  2588     07DD                     l2537:
  2589                           
  2590                           ;main.c: 402:     while (str[n] != '\0') {
  2591     07DD  0849               	movf	lcdPrint@n,w
  2592     07DE  0744               	addwf	lcdPrint@str,w
  2593     07DF  00C7               	movwf	??_lcdPrint+1
  2594     07E0  0845               	movf	lcdPrint@str+1,w
  2595     07E1  00C6               	movwf	??_lcdPrint
  2596     07E2  1803               	skipnc
  2597     07E3  0AC6               	incf	??_lcdPrint,f
  2598     07E4  1FC9               	btfss	lcdPrint@n,7
  2599     07E5  2FE7               	goto	u2860
  2600     07E6  03C6               	decf	??_lcdPrint,f
  2601     07E7                     u2860:
  2602     07E7  1283               	bcf	3,5	;RP0=0, select bank0
  2603     07E8  1303               	bcf	3,6	;RP1=0, select bank0
  2604     07E9  0846               	movf	??_lcdPrint,w
  2605     07EA  00C8               	movwf	??_lcdPrint+2
  2606     07EB  0848               	movf	??_lcdPrint+2,w
  2607     07EC  00FF               	movwf	btemp+1
  2608     07ED  0847               	movf	??_lcdPrint+1,w
  2609     07EE  0084               	movwf	4
  2610     07EF  120A  118A  2607  120A  118A  	fcall	stringtab
  2611     07F4  3A00               	xorlw	0
  2612     07F5  1D03               	skipz
  2613     07F6  2FF8               	goto	u2871
  2614     07F7  2FF9               	goto	u2870
  2615     07F8                     u2871:
  2616     07F8  2FB7               	goto	l2533
  2617     07F9                     u2870:
  2618     07F9                     l241:
  2619     07F9  0008               	return
  2620     07FA                     __end_of_lcdPrint:
  2621                           
  2622                           	psect	text4
  2623     0E5F                     __ptext4:	
  2624 ;; *************** function _lcdSend *****************
  2625 ;; Defined at:
  2626 ;;		line 379 in file "main.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;  dato            1    wreg     unsigned char 
  2629 ;;  tipo            1    0[BANK0 ] unsigned char 
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;  dato            1    1[BANK0 ] unsigned char 
  2632 ;; Return value:  Size  Location     Type
  2633 ;;                  1    wreg      void 
  2634 ;; Registers used:
  2635 ;;		wreg, status,2, status,0
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/0
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2641 ;;      Params:         0       1       0       0       0
  2642 ;;      Locals:         0       1       0       0       0
  2643 ;;      Temps:          0       0       0       0       0
  2644 ;;      Totals:         0       2       0       0       0
  2645 ;;Total ram usage:        2 bytes
  2646 ;; Hardware stack levels used: 1
  2647 ;; Hardware stack levels required when called: 2
  2648 ;; This function calls:
  2649 ;;		Nothing
  2650 ;; This function is called by:
  2651 ;;		_main
  2652 ;;		_UART_Read1
  2653 ;;		_initLCD
  2654 ;;		_lcdPrint
  2655 ;;		_UART_Read2
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659     0E5F                     _lcdSend:	
  2660                           ;psect for function _lcdSend
  2661                           
  2662                           
  2663                           ;incstack = 0
  2664                           ; Regs used in _lcdSend: [wreg+status,2+status,0]
  2665                           ;lcdSend@dato stored from wreg
  2666     0E5F  1283               	bcf	3,5	;RP0=0, select bank0
  2667     0E60  1303               	bcf	3,6	;RP1=0, select bank0
  2668     0E61  00C3               	movwf	lcdSend@dato
  2669     0E62                     l2463:
  2670                           
  2671                           ;main.c: 383:     TRISD = 0x00;
  2672     0E62  1683               	bsf	3,5	;RP0=1, select bank1
  2673     0E63  1303               	bcf	3,6	;RP1=0, select bank1
  2674     0E64  0188               	clrf	8	;volatile
  2675     0E65                     l2465:
  2676                           
  2677                           ;main.c: 384:     TRISEbits.TRISE1 = 0;
  2678     0E65  1089               	bcf	9,1	;volatile
  2679     0E66                     l2467:
  2680                           
  2681                           ;main.c: 385:     TRISEbits.TRISE2 = 0;
  2682     0E66  1109               	bcf	9,2	;volatile
  2683     0E67                     l2469:
  2684                           
  2685                           ;main.c: 390:     PORTEbits.RE1 = 1;
  2686     0E67  1283               	bcf	3,5	;RP0=0, select bank0
  2687     0E68  1303               	bcf	3,6	;RP1=0, select bank0
  2688     0E69  1489               	bsf	9,1	;volatile
  2689     0E6A                     l2471:
  2690                           
  2691                           ;main.c: 392:     PORTD = dato;
  2692     0E6A  0843               	movf	lcdSend@dato,w
  2693     0E6B  0088               	movwf	8	;volatile
  2694     0E6C                     l2473:
  2695                           
  2696                           ;main.c: 393:     PORTEbits.RE2 = tipo;
  2697     0E6C  0C42               	rrf	lcdSend@tipo,w
  2698     0E6D  1C03               	skipc
  2699     0E6E  1109               	bcf	9,2	;volatile
  2700     0E6F  1803               	skipnc
  2701     0E70  1509               	bsf	9,2	;volatile
  2702     0E71                     l2475:
  2703                           
  2704                           ;main.c: 395:     PORTEbits.RE1 = 0;
  2705     0E71  1089               	bcf	9,1	;volatile
  2706     0E72                     l2477:
  2707                           
  2708                           ;main.c: 397:     PORTEbits.RE1 = 1;
  2709     0E72  1489               	bsf	9,1	;volatile
  2710     0E73                     l235:
  2711     0E73  0008               	return
  2712     0E74                     __end_of_lcdSend:
  2713                           
  2714                           	psect	text5
  2715     0736                     __ptext5:	
  2716 ;; *************** function _intToString *****************
  2717 ;; Defined at:
  2718 ;;		line 614 in file "main.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;  n               2   19[BANK0 ] int 
  2721 ;;  str             1   21[BANK0 ] PTR unsigned char 
  2722 ;;		 -> print_countdown(3), 
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;  t               1   25[BANK0 ] unsigned char 
  2725 ;;  i               1   27[BANK0 ] unsigned char 
  2726 ;;  cifre           1   26[BANK0 ] unsigned char 
  2727 ;; Return value:  Size  Location     Type
  2728 ;;                  1    wreg      void 
  2729 ;; Registers used:
  2730 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2731 ;; Tracked objects:
  2732 ;;		On entry : 0/0
  2733 ;;		On exit  : 0/0
  2734 ;;		Unchanged: 0/0
  2735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2736 ;;      Params:         0       3       0       0       0
  2737 ;;      Locals:         0       3       0       0       0
  2738 ;;      Temps:          0       3       0       0       0
  2739 ;;      Totals:         0       9       0       0       0
  2740 ;;Total ram usage:        9 bytes
  2741 ;; Hardware stack levels used: 1
  2742 ;; Hardware stack levels required when called: 4
  2743 ;; This function calls:
  2744 ;;		___awdiv
  2745 ;;		___awmod
  2746 ;;		_potenza
  2747 ;; This function is called by:
  2748 ;;		_UART_Read1
  2749 ;;		_UART_Read2
  2750 ;; This function uses a non-reentrant model
  2751 ;;
  2752                           
  2753     0736                     _intToString:	
  2754                           ;psect for function _intToString
  2755                           
  2756     0736                     l2547:	
  2757                           ;incstack = 0
  2758                           ; Regs used in _intToString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2759                           
  2760                           
  2761                           ;main.c: 617:     char cifre = 1;
  2762     0736  1283               	bcf	3,5	;RP0=0, select bank0
  2763     0737  1303               	bcf	3,6	;RP1=0, select bank0
  2764     0738  01DC               	clrf	intToString@cifre
  2765     0739  0ADC               	incf	intToString@cifre,f
  2766     073A                     l2549:
  2767                           
  2768                           ;main.c: 620:     while (n / potenza(10, cifre)) cifre++;
  2769     073A  2F3F               	goto	l2553
  2770     073B                     l2551:
  2771     073B  3001               	movlw	1
  2772     073C  00D8               	movwf	??_intToString
  2773     073D  0858               	movf	??_intToString,w
  2774     073E  07DC               	addwf	intToString@cifre,f
  2775     073F                     l2553:
  2776     073F  085C               	movf	intToString@cifre,w
  2777     0740  00C6               	movwf	potenza@e
  2778     0741  300A               	movlw	10
  2779     0742  120A  158A  26A2  120A  118A  	fcall	_potenza
  2780     0747  1283               	bcf	3,5	;RP0=0, select bank0
  2781     0748  1303               	bcf	3,6	;RP1=0, select bank0
  2782     0749  00D8               	movwf	??_intToString
  2783     074A  01D9               	clrf	??_intToString+1
  2784     074B  0858               	movf	??_intToString,w
  2785     074C  00CC               	movwf	___awdiv@divisor
  2786     074D  0859               	movf	??_intToString+1,w
  2787     074E  00CD               	movwf	___awdiv@divisor+1
  2788     074F  0856               	movf	intToString@n+1,w
  2789     0750  00CF               	movwf	___awdiv@dividend+1
  2790     0751  0855               	movf	intToString@n,w
  2791     0752  00CE               	movwf	___awdiv@dividend
  2792     0753  120A  158A  2729  120A  118A  	fcall	___awdiv
  2793     0758  1283               	bcf	3,5	;RP0=0, select bank0
  2794     0759  1303               	bcf	3,6	;RP1=0, select bank0
  2795     075A  084C               	movf	?___awdiv,w
  2796     075B  044D               	iorwf	?___awdiv+1,w
  2797     075C  1D03               	btfss	3,2
  2798     075D  2F5F               	goto	u2891
  2799     075E  2F60               	goto	u2890
  2800     075F                     u2891:
  2801     075F  2F3B               	goto	l2551
  2802     0760                     u2890:
  2803     0760                     l2555:
  2804                           
  2805                           ;main.c: 622:     for (i = 0; i < cifre; i++) {
  2806     0760  01DD               	clrf	intToString@i
  2807     0761  2FA4               	goto	l2565
  2808     0762                     l2557:
  2809                           
  2810                           ;main.c: 623:         char t = potenza(10, cifre - 1 - i);
  2811     0762  085D               	movf	intToString@i,w
  2812     0763  025C               	subwf	intToString@cifre,w
  2813     0764  3EFF               	addlw	255
  2814     0765  00C6               	movwf	potenza@e
  2815     0766  300A               	movlw	10
  2816     0767  120A  158A  26A2  120A  118A  	fcall	_potenza
  2817     076C  1283               	bcf	3,5	;RP0=0, select bank0
  2818     076D  1303               	bcf	3,6	;RP1=0, select bank0
  2819     076E  00DB               	movwf	intToString@t
  2820     076F                     l2559:
  2821                           
  2822                           ;main.c: 624:         str[i] = '0' + (char) (n / t);
  2823     076F  085D               	movf	intToString@i,w
  2824     0770  0757               	addwf	intToString@str,w
  2825     0771  00D8               	movwf	??_intToString
  2826     0772  0858               	movf	??_intToString,w
  2827     0773  0084               	movwf	4
  2828     0774  085B               	movf	intToString@t,w
  2829     0775  00D9               	movwf	??_intToString+1
  2830     0776  01DA               	clrf	??_intToString+2
  2831     0777  0859               	movf	??_intToString+1,w
  2832     0778  00CC               	movwf	___awdiv@divisor
  2833     0779  085A               	movf	??_intToString+2,w
  2834     077A  00CD               	movwf	___awdiv@divisor+1
  2835     077B  0856               	movf	intToString@n+1,w
  2836     077C  00CF               	movwf	___awdiv@dividend+1
  2837     077D  0855               	movf	intToString@n,w
  2838     077E  00CE               	movwf	___awdiv@dividend
  2839     077F  120A  158A  2729  120A  118A  	fcall	___awdiv
  2840     0784  1283               	bcf	3,5	;RP0=0, select bank0
  2841     0785  1303               	bcf	3,6	;RP1=0, select bank0
  2842     0786  084C               	movf	?___awdiv,w
  2843     0787  3E30               	addlw	48
  2844     0788  1383               	bcf	3,7	;select IRP bank0
  2845     0789  0080               	movwf	0
  2846     078A                     l2561:
  2847                           
  2848                           ;main.c: 625:         n = n % t;
  2849     078A  085B               	movf	intToString@t,w
  2850     078B  00D8               	movwf	??_intToString
  2851     078C  01D9               	clrf	??_intToString+1
  2852     078D  0858               	movf	??_intToString,w
  2853     078E  00C2               	movwf	___awmod@divisor
  2854     078F  0859               	movf	??_intToString+1,w
  2855     0790  00C3               	movwf	___awmod@divisor+1
  2856     0791  0856               	movf	intToString@n+1,w
  2857     0792  00C5               	movwf	___awmod@dividend+1
  2858     0793  0855               	movf	intToString@n,w
  2859     0794  00C4               	movwf	___awmod@dividend
  2860     0795  120A  158A  26CE  120A  118A  	fcall	___awmod
  2861     079A  1283               	bcf	3,5	;RP0=0, select bank0
  2862     079B  1303               	bcf	3,6	;RP1=0, select bank0
  2863     079C  0843               	movf	?___awmod+1,w
  2864     079D  00D6               	movwf	intToString@n+1
  2865     079E  0842               	movf	?___awmod,w
  2866     079F  00D5               	movwf	intToString@n
  2867     07A0                     l2563:
  2868                           
  2869                           ;main.c: 626:     }
  2870     07A0  3001               	movlw	1
  2871     07A1  00D8               	movwf	??_intToString
  2872     07A2  0858               	movf	??_intToString,w
  2873     07A3  07DD               	addwf	intToString@i,f
  2874     07A4                     l2565:
  2875     07A4  085C               	movf	intToString@cifre,w
  2876     07A5  025D               	subwf	intToString@i,w
  2877     07A6  1C03               	skipc
  2878     07A7  2FA9               	goto	u2901
  2879     07A8  2FAA               	goto	u2900
  2880     07A9                     u2901:
  2881     07A9  2F62               	goto	l2557
  2882     07AA                     u2900:
  2883     07AA                     l2567:
  2884                           
  2885                           ;main.c: 628:     str[i] = '\0';
  2886     07AA  085D               	movf	intToString@i,w
  2887     07AB  0757               	addwf	intToString@str,w
  2888     07AC  00D8               	movwf	??_intToString
  2889     07AD  0858               	movf	??_intToString,w
  2890     07AE  0084               	movwf	4
  2891     07AF  1383               	bcf	3,7	;select IRP bank0
  2892     07B0  0180               	clrf	0
  2893     07B1                     l337:
  2894     07B1  0008               	return
  2895     07B2                     __end_of_intToString:
  2896                           
  2897                           	psect	text6
  2898     0EA2                     __ptext6:	
  2899 ;; *************** function _potenza *****************
  2900 ;; Defined at:
  2901 ;;		line 606 in file "main.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;  b               1    wreg     unsigned char 
  2904 ;;  e               1    4[BANK0 ] unsigned char 
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;  b               1    6[BANK0 ] unsigned char 
  2907 ;;  i               2    7[BANK0 ] int 
  2908 ;;  n               1    9[BANK0 ] unsigned char 
  2909 ;; Return value:  Size  Location     Type
  2910 ;;                  1    wreg      unsigned char 
  2911 ;; Registers used:
  2912 ;;		wreg, status,2, status,0, pclath, cstack
  2913 ;; Tracked objects:
  2914 ;;		On entry : 0/0
  2915 ;;		On exit  : 0/0
  2916 ;;		Unchanged: 0/0
  2917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2918 ;;      Params:         0       1       0       0       0
  2919 ;;      Locals:         0       4       0       0       0
  2920 ;;      Temps:          0       1       0       0       0
  2921 ;;      Totals:         0       6       0       0       0
  2922 ;;Total ram usage:        6 bytes
  2923 ;; Hardware stack levels used: 1
  2924 ;; Hardware stack levels required when called: 3
  2925 ;; This function calls:
  2926 ;;		___bmul
  2927 ;; This function is called by:
  2928 ;;		_intToString
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932     0EA2                     _potenza:	
  2933                           ;psect for function _potenza
  2934                           
  2935                           
  2936                           ;incstack = 0
  2937                           ; Regs used in _potenza: [wreg+status,2+status,0+pclath+cstack]
  2938                           ;potenza@b stored from wreg
  2939     0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  2940     0EA3  1303               	bcf	3,6	;RP1=0, select bank0
  2941     0EA4  00C8               	movwf	potenza@b
  2942     0EA5                     l2479:
  2943                           
  2944                           ;main.c: 607:     char n = 1;
  2945     0EA5  01CB               	clrf	potenza@n
  2946     0EA6  0ACB               	incf	potenza@n,f
  2947     0EA7                     l2481:
  2948                           
  2949                           ;main.c: 608:     for (int i = 0; i < e; i++) {
  2950     0EA7  01C9               	clrf	potenza@i
  2951     0EA8  01CA               	clrf	potenza@i+1
  2952     0EA9  2EBD               	goto	l2487
  2953     0EAA                     l2483:
  2954                           
  2955                           ;main.c: 609:         n = n * b;
  2956     0EAA  1283               	bcf	3,5	;RP0=0, select bank0
  2957     0EAB  1303               	bcf	3,6	;RP1=0, select bank0
  2958     0EAC  0848               	movf	potenza@b,w
  2959     0EAD  00C2               	movwf	___bmul@multiplicand
  2960     0EAE  084B               	movf	potenza@n,w
  2961     0EAF  120A  158A  268B  120A  158A  	fcall	___bmul
  2962     0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  2963     0EB5  1303               	bcf	3,6	;RP1=0, select bank0
  2964     0EB6  00CB               	movwf	potenza@n
  2965     0EB7                     l2485:
  2966                           
  2967                           ;main.c: 610:     }
  2968     0EB7  3001               	movlw	1
  2969     0EB8  07C9               	addwf	potenza@i,f
  2970     0EB9  1803               	skipnc
  2971     0EBA  0ACA               	incf	potenza@i+1,f
  2972     0EBB  3000               	movlw	0
  2973     0EBC  07CA               	addwf	potenza@i+1,f
  2974     0EBD                     l2487:
  2975     0EBD  084A               	movf	potenza@i+1,w
  2976     0EBE  3A80               	xorlw	128
  2977     0EBF  00C7               	movwf	??_potenza
  2978     0EC0  3080               	movlw	128
  2979     0EC1  0247               	subwf	??_potenza,w
  2980     0EC2  1D03               	skipz
  2981     0EC3  2EC6               	goto	u2755
  2982     0EC4  0846               	movf	potenza@e,w
  2983     0EC5  0249               	subwf	potenza@i,w
  2984     0EC6                     u2755:
  2985     0EC6  1C03               	skipc
  2986     0EC7  2EC9               	goto	u2751
  2987     0EC8  2ECA               	goto	u2750
  2988     0EC9                     u2751:
  2989     0EC9  2EAA               	goto	l2483
  2990     0ECA                     u2750:
  2991     0ECA                     l2489:
  2992                           
  2993                           ;main.c: 611:     return n;
  2994     0ECA  1283               	bcf	3,5	;RP0=0, select bank0
  2995     0ECB  1303               	bcf	3,6	;RP1=0, select bank0
  2996     0ECC  084B               	movf	potenza@n,w
  2997     0ECD                     l328:
  2998     0ECD  0008               	return
  2999     0ECE                     __end_of_potenza:
  3000                           
  3001                           	psect	text7
  3002     0E8B                     __ptext7:	
  3003 ;; *************** function ___bmul *****************
  3004 ;; Defined at:
  3005 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  3006 ;; Parameters:    Size  Location     Type
  3007 ;;  multiplier      1    wreg     unsigned char 
  3008 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3009 ;; Auto vars:     Size  Location     Type
  3010 ;;  multiplier      1    3[BANK0 ] unsigned char 
  3011 ;;  product         1    2[BANK0 ] unsigned char 
  3012 ;; Return value:  Size  Location     Type
  3013 ;;                  1    wreg      unsigned char 
  3014 ;; Registers used:
  3015 ;;		wreg, status,2, status,0
  3016 ;; Tracked objects:
  3017 ;;		On entry : 0/0
  3018 ;;		On exit  : 0/0
  3019 ;;		Unchanged: 0/0
  3020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3021 ;;      Params:         0       1       0       0       0
  3022 ;;      Locals:         0       2       0       0       0
  3023 ;;      Temps:          0       1       0       0       0
  3024 ;;      Totals:         0       4       0       0       0
  3025 ;;Total ram usage:        4 bytes
  3026 ;; Hardware stack levels used: 1
  3027 ;; Hardware stack levels required when called: 2
  3028 ;; This function calls:
  3029 ;;		Nothing
  3030 ;; This function is called by:
  3031 ;;		_potenza
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035     0E8B                     ___bmul:	
  3036                           ;psect for function ___bmul
  3037                           
  3038                           
  3039                           ;incstack = 0
  3040                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3041                           ;___bmul@multiplier stored from wreg
  3042     0E8B  1283               	bcf	3,5	;RP0=0, select bank0
  3043     0E8C  1303               	bcf	3,6	;RP1=0, select bank0
  3044     0E8D  00C5               	movwf	___bmul@multiplier
  3045     0E8E                     l2449:
  3046     0E8E  01C4               	clrf	___bmul@product
  3047     0E8F                     l2451:
  3048     0E8F  1C45               	btfss	___bmul@multiplier,0
  3049     0E90  2E92               	goto	u2731
  3050     0E91  2E93               	goto	u2730
  3051     0E92                     u2731:
  3052     0E92  2E97               	goto	l2455
  3053     0E93                     u2730:
  3054     0E93                     l2453:
  3055     0E93  0842               	movf	___bmul@multiplicand,w
  3056     0E94  00C3               	movwf	??___bmul
  3057     0E95  0843               	movf	??___bmul,w
  3058     0E96  07C4               	addwf	___bmul@product,f
  3059     0E97                     l2455:
  3060     0E97  1003               	clrc
  3061     0E98  0DC2               	rlf	___bmul@multiplicand,f
  3062     0E99                     l2457:
  3063     0E99  1003               	clrc
  3064     0E9A  0CC5               	rrf	___bmul@multiplier,f
  3065     0E9B  0845               	movf	___bmul@multiplier,w
  3066     0E9C  1D03               	btfss	3,2
  3067     0E9D  2E9F               	goto	u2741
  3068     0E9E  2EA0               	goto	u2740
  3069     0E9F                     u2741:
  3070     0E9F  2E8F               	goto	l2451
  3071     0EA0                     u2740:
  3072     0EA0                     l2459:
  3073     0EA0  0844               	movf	___bmul@product,w
  3074     0EA1                     l449:
  3075     0EA1  0008               	return
  3076     0EA2                     __end_of___bmul:
  3077                           
  3078                           	psect	text8
  3079     0ECE                     __ptext8:	
  3080 ;; *************** function ___awmod *****************
  3081 ;; Defined at:
  3082 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;  divisor         2    0[BANK0 ] int 
  3085 ;;  dividend        2    2[BANK0 ] int 
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;  sign            1    6[BANK0 ] unsigned char 
  3088 ;;  counter         1    5[BANK0 ] unsigned char 
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  2    0[BANK0 ] int 
  3091 ;; Registers used:
  3092 ;;		wreg, status,2, status,0
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3098 ;;      Params:         0       4       0       0       0
  3099 ;;      Locals:         0       2       0       0       0
  3100 ;;      Temps:          0       1       0       0       0
  3101 ;;      Totals:         0       7       0       0       0
  3102 ;;Total ram usage:        7 bytes
  3103 ;; Hardware stack levels used: 1
  3104 ;; Hardware stack levels required when called: 2
  3105 ;; This function calls:
  3106 ;;		Nothing
  3107 ;; This function is called by:
  3108 ;;		_intToString
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112     0ECE                     ___awmod:	
  3113                           ;psect for function ___awmod
  3114                           
  3115     0ECE                     l2493:	
  3116                           ;incstack = 0
  3117                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3118                           
  3119     0ECE  1283               	bcf	3,5	;RP0=0, select bank0
  3120     0ECF  1303               	bcf	3,6	;RP1=0, select bank0
  3121     0ED0  01C8               	clrf	___awmod@sign
  3122     0ED1                     l2495:
  3123     0ED1  1FC5               	btfss	___awmod@dividend+1,7
  3124     0ED2  2ED4               	goto	u2761
  3125     0ED3  2ED5               	goto	u2760
  3126     0ED4                     u2761:
  3127     0ED4  2EDC               	goto	l2501
  3128     0ED5                     u2760:
  3129     0ED5                     l2497:
  3130     0ED5  09C4               	comf	___awmod@dividend,f
  3131     0ED6  09C5               	comf	___awmod@dividend+1,f
  3132     0ED7  0AC4               	incf	___awmod@dividend,f
  3133     0ED8  1903               	skipnz
  3134     0ED9  0AC5               	incf	___awmod@dividend+1,f
  3135     0EDA                     l2499:
  3136     0EDA  01C8               	clrf	___awmod@sign
  3137     0EDB  0AC8               	incf	___awmod@sign,f
  3138     0EDC                     l2501:
  3139     0EDC  1FC3               	btfss	___awmod@divisor+1,7
  3140     0EDD  2EDF               	goto	u2771
  3141     0EDE  2EE0               	goto	u2770
  3142     0EDF                     u2771:
  3143     0EDF  2EE5               	goto	l2505
  3144     0EE0                     u2770:
  3145     0EE0                     l2503:
  3146     0EE0  09C2               	comf	___awmod@divisor,f
  3147     0EE1  09C3               	comf	___awmod@divisor+1,f
  3148     0EE2  0AC2               	incf	___awmod@divisor,f
  3149     0EE3  1903               	skipnz
  3150     0EE4  0AC3               	incf	___awmod@divisor+1,f
  3151     0EE5                     l2505:
  3152     0EE5  0842               	movf	___awmod@divisor,w
  3153     0EE6  0443               	iorwf	___awmod@divisor+1,w
  3154     0EE7  1903               	btfsc	3,2
  3155     0EE8  2EEA               	goto	u2781
  3156     0EE9  2EEB               	goto	u2780
  3157     0EEA                     u2781:
  3158     0EEA  2F1A               	goto	l2523
  3159     0EEB                     u2780:
  3160     0EEB                     l2507:
  3161     0EEB  01C7               	clrf	___awmod@counter
  3162     0EEC  0AC7               	incf	___awmod@counter,f
  3163     0EED  2EF9               	goto	l2513
  3164     0EEE                     l2509:
  3165     0EEE  3001               	movlw	1
  3166     0EEF                     u2795:
  3167     0EEF  1003               	clrc
  3168     0EF0  0DC2               	rlf	___awmod@divisor,f
  3169     0EF1  0DC3               	rlf	___awmod@divisor+1,f
  3170     0EF2  3EFF               	addlw	-1
  3171     0EF3  1D03               	skipz
  3172     0EF4  2EEF               	goto	u2795
  3173     0EF5                     l2511:
  3174     0EF5  3001               	movlw	1
  3175     0EF6  00C6               	movwf	??___awmod
  3176     0EF7  0846               	movf	??___awmod,w
  3177     0EF8  07C7               	addwf	___awmod@counter,f
  3178     0EF9                     l2513:
  3179     0EF9  1FC3               	btfss	___awmod@divisor+1,7
  3180     0EFA  2EFC               	goto	u2801
  3181     0EFB  2EFD               	goto	u2800
  3182     0EFC                     u2801:
  3183     0EFC  2EEE               	goto	l2509
  3184     0EFD                     u2800:
  3185     0EFD                     l2515:
  3186     0EFD  0843               	movf	___awmod@divisor+1,w
  3187     0EFE  0245               	subwf	___awmod@dividend+1,w
  3188     0EFF  1D03               	skipz
  3189     0F00  2F03               	goto	u2815
  3190     0F01  0842               	movf	___awmod@divisor,w
  3191     0F02  0244               	subwf	___awmod@dividend,w
  3192     0F03                     u2815:
  3193     0F03  1C03               	skipc
  3194     0F04  2F06               	goto	u2811
  3195     0F05  2F07               	goto	u2810
  3196     0F06                     u2811:
  3197     0F06  2F0D               	goto	l2519
  3198     0F07                     u2810:
  3199     0F07                     l2517:
  3200     0F07  0842               	movf	___awmod@divisor,w
  3201     0F08  02C4               	subwf	___awmod@dividend,f
  3202     0F09  0843               	movf	___awmod@divisor+1,w
  3203     0F0A  1C03               	skipc
  3204     0F0B  03C5               	decf	___awmod@dividend+1,f
  3205     0F0C  02C5               	subwf	___awmod@dividend+1,f
  3206     0F0D                     l2519:
  3207     0F0D  3001               	movlw	1
  3208     0F0E                     u2825:
  3209     0F0E  1003               	clrc
  3210     0F0F  0CC3               	rrf	___awmod@divisor+1,f
  3211     0F10  0CC2               	rrf	___awmod@divisor,f
  3212     0F11  3EFF               	addlw	-1
  3213     0F12  1D03               	skipz
  3214     0F13  2F0E               	goto	u2825
  3215     0F14                     l2521:
  3216     0F14  3001               	movlw	1
  3217     0F15  02C7               	subwf	___awmod@counter,f
  3218     0F16  1D03               	btfss	3,2
  3219     0F17  2F19               	goto	u2831
  3220     0F18  2F1A               	goto	u2830
  3221     0F19                     u2831:
  3222     0F19  2EFD               	goto	l2515
  3223     0F1A                     u2830:
  3224     0F1A                     l2523:
  3225     0F1A  0848               	movf	___awmod@sign,w
  3226     0F1B  1903               	btfsc	3,2
  3227     0F1C  2F1E               	goto	u2841
  3228     0F1D  2F1F               	goto	u2840
  3229     0F1E                     u2841:
  3230     0F1E  2F24               	goto	l2527
  3231     0F1F                     u2840:
  3232     0F1F                     l2525:
  3233     0F1F  09C4               	comf	___awmod@dividend,f
  3234     0F20  09C5               	comf	___awmod@dividend+1,f
  3235     0F21  0AC4               	incf	___awmod@dividend,f
  3236     0F22  1903               	skipnz
  3237     0F23  0AC5               	incf	___awmod@dividend+1,f
  3238     0F24                     l2527:
  3239     0F24  0845               	movf	___awmod@dividend+1,w
  3240     0F25  00C3               	movwf	?___awmod+1
  3241     0F26  0844               	movf	___awmod@dividend,w
  3242     0F27  00C2               	movwf	?___awmod
  3243     0F28                     l589:
  3244     0F28  0008               	return
  3245     0F29                     __end_of___awmod:
  3246                           
  3247                           	psect	text9
  3248     0F29                     __ptext9:	
  3249 ;; *************** function ___awdiv *****************
  3250 ;; Defined at:
  3251 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  3252 ;; Parameters:    Size  Location     Type
  3253 ;;  divisor         2   10[BANK0 ] int 
  3254 ;;  dividend        2   12[BANK0 ] int 
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;  quotient        2   17[BANK0 ] int 
  3257 ;;  sign            1   16[BANK0 ] unsigned char 
  3258 ;;  counter         1   15[BANK0 ] unsigned char 
  3259 ;; Return value:  Size  Location     Type
  3260 ;;                  2   10[BANK0 ] int 
  3261 ;; Registers used:
  3262 ;;		wreg, status,2, status,0
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3268 ;;      Params:         0       4       0       0       0
  3269 ;;      Locals:         0       4       0       0       0
  3270 ;;      Temps:          0       1       0       0       0
  3271 ;;      Totals:         0       9       0       0       0
  3272 ;;Total ram usage:        9 bytes
  3273 ;; Hardware stack levels used: 1
  3274 ;; Hardware stack levels required when called: 2
  3275 ;; This function calls:
  3276 ;;		Nothing
  3277 ;; This function is called by:
  3278 ;;		_intToString
  3279 ;; This function uses a non-reentrant model
  3280 ;;
  3281                           
  3282     0F29                     ___awdiv:	
  3283                           ;psect for function ___awdiv
  3284                           
  3285     0F29                     l1733:	
  3286                           ;incstack = 0
  3287                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3288                           
  3289     0F29  1283               	bcf	3,5	;RP0=0, select bank0
  3290     0F2A  1303               	bcf	3,6	;RP1=0, select bank0
  3291     0F2B  01D2               	clrf	___awdiv@sign
  3292     0F2C                     l1735:
  3293     0F2C  1FCD               	btfss	___awdiv@divisor+1,7
  3294     0F2D  2F2F               	goto	u1401
  3295     0F2E  2F30               	goto	u1400
  3296     0F2F                     u1401:
  3297     0F2F  2F37               	goto	l1741
  3298     0F30                     u1400:
  3299     0F30                     l1737:
  3300     0F30  09CC               	comf	___awdiv@divisor,f
  3301     0F31  09CD               	comf	___awdiv@divisor+1,f
  3302     0F32  0ACC               	incf	___awdiv@divisor,f
  3303     0F33  1903               	skipnz
  3304     0F34  0ACD               	incf	___awdiv@divisor+1,f
  3305     0F35                     l1739:
  3306     0F35  01D2               	clrf	___awdiv@sign
  3307     0F36  0AD2               	incf	___awdiv@sign,f
  3308     0F37                     l1741:
  3309     0F37  1FCF               	btfss	___awdiv@dividend+1,7
  3310     0F38  2F3A               	goto	u1411
  3311     0F39  2F3B               	goto	u1410
  3312     0F3A                     u1411:
  3313     0F3A  2F44               	goto	l1747
  3314     0F3B                     u1410:
  3315     0F3B                     l1743:
  3316     0F3B  09CE               	comf	___awdiv@dividend,f
  3317     0F3C  09CF               	comf	___awdiv@dividend+1,f
  3318     0F3D  0ACE               	incf	___awdiv@dividend,f
  3319     0F3E  1903               	skipnz
  3320     0F3F  0ACF               	incf	___awdiv@dividend+1,f
  3321     0F40                     l1745:
  3322     0F40  3001               	movlw	1
  3323     0F41  00D0               	movwf	??___awdiv
  3324     0F42  0850               	movf	??___awdiv,w
  3325     0F43  06D2               	xorwf	___awdiv@sign,f
  3326     0F44                     l1747:
  3327     0F44  01D3               	clrf	___awdiv@quotient
  3328     0F45  01D4               	clrf	___awdiv@quotient+1
  3329     0F46                     l1749:
  3330     0F46  084C               	movf	___awdiv@divisor,w
  3331     0F47  044D               	iorwf	___awdiv@divisor+1,w
  3332     0F48  1903               	btfsc	3,2
  3333     0F49  2F4B               	goto	u1421
  3334     0F4A  2F4C               	goto	u1420
  3335     0F4B                     u1421:
  3336     0F4B  2F83               	goto	l1769
  3337     0F4C                     u1420:
  3338     0F4C                     l1751:
  3339     0F4C  01D1               	clrf	___awdiv@counter
  3340     0F4D  0AD1               	incf	___awdiv@counter,f
  3341     0F4E  2F5A               	goto	l1757
  3342     0F4F                     l1753:
  3343     0F4F  3001               	movlw	1
  3344     0F50                     u1435:
  3345     0F50  1003               	clrc
  3346     0F51  0DCC               	rlf	___awdiv@divisor,f
  3347     0F52  0DCD               	rlf	___awdiv@divisor+1,f
  3348     0F53  3EFF               	addlw	-1
  3349     0F54  1D03               	skipz
  3350     0F55  2F50               	goto	u1435
  3351     0F56                     l1755:
  3352     0F56  3001               	movlw	1
  3353     0F57  00D0               	movwf	??___awdiv
  3354     0F58  0850               	movf	??___awdiv,w
  3355     0F59  07D1               	addwf	___awdiv@counter,f
  3356     0F5A                     l1757:
  3357     0F5A  1FCD               	btfss	___awdiv@divisor+1,7
  3358     0F5B  2F5D               	goto	u1441
  3359     0F5C  2F5E               	goto	u1440
  3360     0F5D                     u1441:
  3361     0F5D  2F4F               	goto	l1753
  3362     0F5E                     u1440:
  3363     0F5E                     l1759:
  3364     0F5E  3001               	movlw	1
  3365     0F5F                     u1455:
  3366     0F5F  1003               	clrc
  3367     0F60  0DD3               	rlf	___awdiv@quotient,f
  3368     0F61  0DD4               	rlf	___awdiv@quotient+1,f
  3369     0F62  3EFF               	addlw	-1
  3370     0F63  1D03               	skipz
  3371     0F64  2F5F               	goto	u1455
  3372     0F65  084D               	movf	___awdiv@divisor+1,w
  3373     0F66  024F               	subwf	___awdiv@dividend+1,w
  3374     0F67  1D03               	skipz
  3375     0F68  2F6B               	goto	u1465
  3376     0F69  084C               	movf	___awdiv@divisor,w
  3377     0F6A  024E               	subwf	___awdiv@dividend,w
  3378     0F6B                     u1465:
  3379     0F6B  1C03               	skipc
  3380     0F6C  2F6E               	goto	u1461
  3381     0F6D  2F6F               	goto	u1460
  3382     0F6E                     u1461:
  3383     0F6E  2F76               	goto	l1765
  3384     0F6F                     u1460:
  3385     0F6F                     l1761:
  3386     0F6F  084C               	movf	___awdiv@divisor,w
  3387     0F70  02CE               	subwf	___awdiv@dividend,f
  3388     0F71  084D               	movf	___awdiv@divisor+1,w
  3389     0F72  1C03               	skipc
  3390     0F73  03CF               	decf	___awdiv@dividend+1,f
  3391     0F74  02CF               	subwf	___awdiv@dividend+1,f
  3392     0F75                     l1763:
  3393     0F75  1453               	bsf	___awdiv@quotient,0
  3394     0F76                     l1765:
  3395     0F76  3001               	movlw	1
  3396     0F77                     u1475:
  3397     0F77  1003               	clrc
  3398     0F78  0CCD               	rrf	___awdiv@divisor+1,f
  3399     0F79  0CCC               	rrf	___awdiv@divisor,f
  3400     0F7A  3EFF               	addlw	-1
  3401     0F7B  1D03               	skipz
  3402     0F7C  2F77               	goto	u1475
  3403     0F7D                     l1767:
  3404     0F7D  3001               	movlw	1
  3405     0F7E  02D1               	subwf	___awdiv@counter,f
  3406     0F7F  1D03               	btfss	3,2
  3407     0F80  2F82               	goto	u1481
  3408     0F81  2F83               	goto	u1480
  3409     0F82                     u1481:
  3410     0F82  2F5E               	goto	l1759
  3411     0F83                     u1480:
  3412     0F83                     l1769:
  3413     0F83  0852               	movf	___awdiv@sign,w
  3414     0F84  1903               	btfsc	3,2
  3415     0F85  2F87               	goto	u1491
  3416     0F86  2F88               	goto	u1490
  3417     0F87                     u1491:
  3418     0F87  2F8D               	goto	l1773
  3419     0F88                     u1490:
  3420     0F88                     l1771:
  3421     0F88  09D3               	comf	___awdiv@quotient,f
  3422     0F89  09D4               	comf	___awdiv@quotient+1,f
  3423     0F8A  0AD3               	incf	___awdiv@quotient,f
  3424     0F8B  1903               	skipnz
  3425     0F8C  0AD4               	incf	___awdiv@quotient+1,f
  3426     0F8D                     l1773:
  3427     0F8D  0854               	movf	___awdiv@quotient+1,w
  3428     0F8E  00CD               	movwf	?___awdiv+1
  3429     0F8F  0853               	movf	___awdiv@quotient,w
  3430     0F90  00CC               	movwf	?___awdiv
  3431     0F91                     l576:
  3432     0F91  0008               	return
  3433     0F92                     __end_of___awdiv:
  3434                           
  3435                           	psect	text10
  3436     0E34                     __ptext10:	
  3437 ;; *************** function _UART_Write *****************
  3438 ;; Defined at:
  3439 ;;		line 231 in file "main.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;  data            1    wreg     unsigned char 
  3442 ;; Auto vars:     Size  Location     Type
  3443 ;;  data            1    0[BANK0 ] unsigned char 
  3444 ;; Return value:  Size  Location     Type
  3445 ;;                  1    wreg      void 
  3446 ;; Registers used:
  3447 ;;		wreg
  3448 ;; Tracked objects:
  3449 ;;		On entry : 0/0
  3450 ;;		On exit  : 0/0
  3451 ;;		Unchanged: 0/0
  3452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3453 ;;      Params:         0       0       0       0       0
  3454 ;;      Locals:         0       1       0       0       0
  3455 ;;      Temps:          0       0       0       0       0
  3456 ;;      Totals:         0       1       0       0       0
  3457 ;;Total ram usage:        1 bytes
  3458 ;; Hardware stack levels used: 1
  3459 ;; Hardware stack levels required when called: 2
  3460 ;; This function calls:
  3461 ;;		Nothing
  3462 ;; This function is called by:
  3463 ;;		_main
  3464 ;;		_UART_Read1
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468     0E34                     _UART_Write:	
  3469                           ;psect for function _UART_Write
  3470                           
  3471                           
  3472                           ;incstack = 0
  3473                           ; Regs used in _UART_Write: [wreg]
  3474                           ;UART_Write@data stored from wreg
  3475     0E34  1283               	bcf	3,5	;RP0=0, select bank0
  3476     0E35  1303               	bcf	3,6	;RP1=0, select bank0
  3477     0E36  00C2               	movwf	UART_Write@data
  3478     0E37                     l2541:
  3479     0E37                     l199:	
  3480                           ;main.c: 232:     while (!TXIF)
  3481                           
  3482                           
  3483                           ;main.c: 232:     while (!TXIF)
  3484     0E37  1E0C               	btfss	12,4	;volatile
  3485     0E38  2E3A               	goto	u2881
  3486     0E39  2E3B               	goto	u2880
  3487     0E3A                     u2881:
  3488     0E3A  2E37               	goto	l199
  3489     0E3B                     u2880:
  3490     0E3B                     l2543:
  3491                           
  3492                           ;main.c: 234:     TXREG = data;
  3493     0E3B  0842               	movf	UART_Write@data,w
  3494     0E3C  0099               	movwf	25	;volatile
  3495     0E3D                     l202:
  3496     0E3D  0008               	return
  3497     0E3E                     __end_of_UART_Write:
  3498                           
  3499                           	psect	text11
  3500     07FA                     __ptext11:	
  3501 ;; *************** function _RS485_TxEnable *****************
  3502 ;; Defined at:
  3503 ;;		line 221 in file "main.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;		None
  3506 ;; Auto vars:     Size  Location     Type
  3507 ;;		None
  3508 ;; Return value:  Size  Location     Type
  3509 ;;                  1    wreg      void 
  3510 ;; Registers used:
  3511 ;;		None
  3512 ;; Tracked objects:
  3513 ;;		On entry : 0/0
  3514 ;;		On exit  : 0/0
  3515 ;;		Unchanged: 0/0
  3516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3517 ;;      Params:         0       0       0       0       0
  3518 ;;      Locals:         0       0       0       0       0
  3519 ;;      Temps:          0       0       0       0       0
  3520 ;;      Totals:         0       0       0       0       0
  3521 ;;Total ram usage:        0 bytes
  3522 ;; Hardware stack levels used: 1
  3523 ;; Hardware stack levels required when called: 2
  3524 ;; This function calls:
  3525 ;;		Nothing
  3526 ;; This function is called by:
  3527 ;;		_main
  3528 ;;		_UART_Read1
  3529 ;; This function uses a non-reentrant model
  3530 ;;
  3531                           
  3532     07FA                     _RS485_TxEnable:	
  3533                           ;psect for function _RS485_TxEnable
  3534                           
  3535     07FA                     l2539:	
  3536                           ;incstack = 0
  3537                           ; Regs used in _RS485_TxEnable: []
  3538                           
  3539                           
  3540                           ;main.c: 222:     RC0 = 1;
  3541     07FA  1283               	bcf	3,5	;RP0=0, select bank0
  3542     07FB  1303               	bcf	3,6	;RP1=0, select bank0
  3543     07FC  1407               	bsf	7,0	;volatile
  3544                           
  3545                           ;main.c: 223:     RC1 = 0;
  3546     07FD  1087               	bcf	7,1	;volatile
  3547     07FE                     l193:
  3548     07FE  0008               	return
  3549     07FF                     __end_of_RS485_TxEnable:
  3550                           
  3551                           	psect	text12
  3552     0E27                     __ptext12:	
  3553 ;; *************** function _RS485_RxEnable *****************
  3554 ;; Defined at:
  3555 ;;		line 226 in file "main.c"
  3556 ;; Parameters:    Size  Location     Type
  3557 ;;		None
  3558 ;; Auto vars:     Size  Location     Type
  3559 ;;		None
  3560 ;; Return value:  Size  Location     Type
  3561 ;;                  1    wreg      void 
  3562 ;; Registers used:
  3563 ;;		None
  3564 ;; Tracked objects:
  3565 ;;		On entry : 0/0
  3566 ;;		On exit  : 0/0
  3567 ;;		Unchanged: 0/0
  3568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3569 ;;      Params:         0       0       0       0       0
  3570 ;;      Locals:         0       0       0       0       0
  3571 ;;      Temps:          0       0       0       0       0
  3572 ;;      Totals:         0       0       0       0       0
  3573 ;;Total ram usage:        0 bytes
  3574 ;; Hardware stack levels used: 1
  3575 ;; Hardware stack levels required when called: 2
  3576 ;; This function calls:
  3577 ;;		Nothing
  3578 ;; This function is called by:
  3579 ;;		_main
  3580 ;;		_UART_Read1
  3581 ;; This function uses a non-reentrant model
  3582 ;;
  3583                           
  3584     0E27                     _RS485_RxEnable:	
  3585                           ;psect for function _RS485_RxEnable
  3586                           
  3587     0E27                     l2545:	
  3588                           ;incstack = 0
  3589                           ; Regs used in _RS485_RxEnable: []
  3590                           
  3591                           
  3592                           ;main.c: 227:     RC0 = 0;
  3593     0E27  1283               	bcf	3,5	;RP0=0, select bank0
  3594     0E28  1303               	bcf	3,6	;RP1=0, select bank0
  3595     0E29  1007               	bcf	7,0	;volatile
  3596                           
  3597                           ;main.c: 228:     RC1 = 1;
  3598     0E2A  1487               	bsf	7,1	;volatile
  3599     0E2B                     l196:
  3600     0E2B  0008               	return
  3601     0E2C                     __end_of_RS485_RxEnable:
  3602                           
  3603                           	psect	text13
  3604     0E4D                     __ptext13:	
  3605 ;; *************** function _UART_Init *****************
  3606 ;; Defined at:
  3607 ;;		line 203 in file "main.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;		None
  3610 ;; Auto vars:     Size  Location     Type
  3611 ;;		None
  3612 ;; Return value:  Size  Location     Type
  3613 ;;                  1    wreg      void 
  3614 ;; Registers used:
  3615 ;;		wreg
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3621 ;;      Params:         0       0       0       0       0
  3622 ;;      Locals:         0       0       0       0       0
  3623 ;;      Temps:          0       0       0       0       0
  3624 ;;      Totals:         0       0       0       0       0
  3625 ;;Total ram usage:        0 bytes
  3626 ;; Hardware stack levels used: 1
  3627 ;; Hardware stack levels required when called: 2
  3628 ;; This function calls:
  3629 ;;		Nothing
  3630 ;; This function is called by:
  3631 ;;		_main
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635     0E4D                     _UART_Init:	
  3636                           ;psect for function _UART_Init
  3637                           
  3638     0E4D                     l2569:	
  3639                           ;incstack = 0
  3640                           ; Regs used in _UART_Init: [wreg]
  3641                           
  3642                           
  3643                           ;main.c: 205:     TRISC6 = 0;
  3644     0E4D  1683               	bsf	3,5	;RP0=1, select bank1
  3645     0E4E  1303               	bcf	3,6	;RP1=0, select bank1
  3646     0E4F  1307               	bcf	7,6	;volatile
  3647                           
  3648                           ;main.c: 206:     TRISC7 = 1;
  3649     0E50  1787               	bsf	7,7	;volatile
  3650                           
  3651                           ;main.c: 209:     BRGH = 1;
  3652     0E51  1518               	bsf	24,2	;volatile
  3653     0E52                     l2571:
  3654                           
  3655                           ;main.c: 210:     SPBRG = 51;
  3656     0E52  3033               	movlw	51
  3657     0E53  0099               	movwf	25	;volatile
  3658     0E54                     l2573:
  3659                           
  3660                           ;main.c: 213:     SYNC = 0;
  3661     0E54  1218               	bcf	24,4	;volatile
  3662     0E55                     l2575:
  3663                           
  3664                           ;main.c: 214:     SPEN = 1;
  3665     0E55  1283               	bcf	3,5	;RP0=0, select bank0
  3666     0E56  1303               	bcf	3,6	;RP1=0, select bank0
  3667     0E57  1798               	bsf	24,7	;volatile
  3668     0E58                     l2577:
  3669                           
  3670                           ;main.c: 217:     TXEN = 1;
  3671     0E58  1683               	bsf	3,5	;RP0=1, select bank1
  3672     0E59  1303               	bcf	3,6	;RP1=0, select bank1
  3673     0E5A  1698               	bsf	24,5	;volatile
  3674     0E5B                     l2579:
  3675                           
  3676                           ;main.c: 218:     CREN = 1;
  3677     0E5B  1283               	bcf	3,5	;RP0=0, select bank0
  3678     0E5C  1303               	bcf	3,6	;RP1=0, select bank0
  3679     0E5D  1618               	bsf	24,4	;volatile
  3680     0E5E                     l190:
  3681     0E5E  0008               	return
  3682     0E5F                     __end_of_UART_Init:
  3683                           
  3684                           	psect	text14
  3685     0E3E                     __ptext14:	
  3686 ;; *************** function _Timer0_Init *****************
  3687 ;; Defined at:
  3688 ;;		line 499 in file "main.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;		None
  3691 ;; Auto vars:     Size  Location     Type
  3692 ;;		None
  3693 ;; Return value:  Size  Location     Type
  3694 ;;                  1    wreg      void 
  3695 ;; Registers used:
  3696 ;;		wreg
  3697 ;; Tracked objects:
  3698 ;;		On entry : 0/0
  3699 ;;		On exit  : 0/0
  3700 ;;		Unchanged: 0/0
  3701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3702 ;;      Params:         0       0       0       0       0
  3703 ;;      Locals:         0       0       0       0       0
  3704 ;;      Temps:          0       0       0       0       0
  3705 ;;      Totals:         0       0       0       0       0
  3706 ;;Total ram usage:        0 bytes
  3707 ;; Hardware stack levels used: 1
  3708 ;; Hardware stack levels required when called: 2
  3709 ;; This function calls:
  3710 ;;		Nothing
  3711 ;; This function is called by:
  3712 ;;		_main
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715                           
  3716     0E3E                     _Timer0_Init:	
  3717                           ;psect for function _Timer0_Init
  3718                           
  3719     0E3E                     l2605:	
  3720                           ;incstack = 0
  3721                           ; Regs used in _Timer0_Init: [wreg]
  3722                           
  3723                           
  3724                           ;main.c: 501:     T0CS = 0;
  3725     0E3E  1683               	bsf	3,5	;RP0=1, select bank1
  3726     0E3F  1303               	bcf	3,6	;RP1=0, select bank1
  3727     0E40  1281               	bcf	1,5	;volatile
  3728                           
  3729                           ;main.c: 502:     PSA = 0;
  3730     0E41  1181               	bcf	1,3	;volatile
  3731                           
  3732                           ;main.c: 503:     PS2 = 1;
  3733     0E42  1501               	bsf	1,2	;volatile
  3734                           
  3735                           ;main.c: 504:     PS1 = 1;
  3736     0E43  1481               	bsf	1,1	;volatile
  3737                           
  3738                           ;main.c: 505:     PS0 = 1;
  3739     0E44  1401               	bsf	1,0	;volatile
  3740     0E45                     l2607:
  3741                           
  3742                           ;main.c: 508:     TMR0 = 6;
  3743     0E45  3006               	movlw	6
  3744     0E46  1283               	bcf	3,5	;RP0=0, select bank0
  3745     0E47  1303               	bcf	3,6	;RP1=0, select bank0
  3746     0E48  0081               	movwf	1	;volatile
  3747     0E49                     l2609:
  3748                           
  3749                           ;main.c: 509:     TMR0IF = 0;
  3750     0E49  110B               	bcf	11,2	;volatile
  3751     0E4A                     l2611:
  3752                           
  3753                           ;main.c: 510:     TMR0IE = 1;
  3754     0E4A  168B               	bsf	11,5	;volatile
  3755     0E4B                     l2613:
  3756                           
  3757                           ;main.c: 511:     GIE = 1;
  3758     0E4B  178B               	bsf	11,7	;volatile
  3759     0E4C                     l303:
  3760     0E4C  0008               	return
  3761     0E4D                     __end_of_Timer0_Init:
  3762                           
  3763                           	psect	text15
  3764     06A9                     __ptext15:	
  3765 ;; *************** function _KeyPadReader *****************
  3766 ;; Defined at:
  3767 ;;		line 524 in file "main.c"
  3768 ;; Parameters:    Size  Location     Type
  3769 ;;		None
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;		None
  3772 ;; Return value:  Size  Location     Type
  3773 ;;                  1    wreg      unsigned char 
  3774 ;; Registers used:
  3775 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3781 ;;      Params:         0       0       0       0       0
  3782 ;;      Locals:         0       0       0       0       0
  3783 ;;      Temps:          0       2       0       0       0
  3784 ;;      Totals:         0       2       0       0       0
  3785 ;;Total ram usage:        2 bytes
  3786 ;; Hardware stack levels used: 2
  3787 ;; Hardware stack levels required when called: 2
  3788 ;; This function calls:
  3789 ;;		Nothing
  3790 ;; This function is called by:
  3791 ;;		_main
  3792 ;; This function uses a non-reentrant model
  3793 ;;
  3794                           
  3795     06A9                     _KeyPadReader:	
  3796                           ;psect for function _KeyPadReader
  3797                           
  3798     06A9                     l2627:	
  3799                           ;incstack = 0
  3800                           ; Regs used in _KeyPadReader: [wreg-fsr0h+status,2+status,0+pclath]
  3801                           
  3802                           
  3803                           ;main.c: 525:     TRISD |= 0x0F;
  3804     06A9  300F               	movlw	15
  3805     06AA  1283               	bcf	3,5	;RP0=0, select bank0
  3806     06AB  1303               	bcf	3,6	;RP1=0, select bank0
  3807     06AC  00C2               	movwf	??_KeyPadReader
  3808     06AD  0842               	movf	??_KeyPadReader,w
  3809     06AE  1683               	bsf	3,5	;RP0=1, select bank1
  3810     06AF  1303               	bcf	3,6	;RP1=0, select bank1
  3811     06B0  0488               	iorwf	8,f	;volatile
  3812     06B1                     l2629:
  3813                           
  3814                           ;main.c: 528:     for (colScan = 0; colScan < 3; colScan++) {
  3815     06B1  01F8               	clrf	_colScan
  3816     06B2                     l2631:
  3817     06B2  3003               	movlw	3
  3818     06B3  0278               	subwf	_colScan,w
  3819     06B4  1C03               	skipc
  3820     06B5  2EB7               	goto	u2921
  3821     06B6  2EB8               	goto	u2920
  3822     06B7                     u2921:
  3823     06B7  2EB9               	goto	l2635
  3824     06B8                     u2920:
  3825     06B8  2EB1               	goto	l2629
  3826     06B9                     l2635:
  3827                           
  3828                           ;main.c: 529:         PORTB = PORTB | 0x07;
  3829     06B9  1283               	bcf	3,5	;RP0=0, select bank0
  3830     06BA  1303               	bcf	3,6	;RP1=0, select bank0
  3831     06BB  0806               	movf	6,w	;volatile
  3832     06BC  3807               	iorlw	7
  3833     06BD  0086               	movwf	6	;volatile
  3834     06BE                     l2637:
  3835                           
  3836                           ;main.c: 530:         PORTB &= colMask[colScan];
  3837     06BE  0878               	movf	_colScan,w
  3838     06BF  3E11               	addlw	low ((_colMask-__stringbase)| (0+32768))
  3839     06C0  0084               	movwf	4
  3840     06C1  120A  118A  2611  120A  118A  	fcall	stringdir
  3841     06C6  00C2               	movwf	??_KeyPadReader
  3842     06C7  0842               	movf	??_KeyPadReader,w
  3843     06C8  0586               	andwf	6,f	;volatile
  3844     06C9                     l2639:
  3845                           
  3846                           ;main.c: 533:         for (rowScan = 0; rowScan < 4; rowScan++) {
  3847     06C9  01F7               	clrf	_rowScan
  3848     06CA                     l2641:
  3849     06CA  3004               	movlw	4
  3850     06CB  0277               	subwf	_rowScan,w
  3851     06CC  1C03               	skipc
  3852     06CD  2ECF               	goto	u2931
  3853     06CE  2ED0               	goto	u2930
  3854     06CF                     u2931:
  3855     06CF  2ED1               	goto	l2645
  3856     06D0                     u2930:
  3857     06D0  2F30               	goto	l2677
  3858     06D1                     l2645:
  3859                           
  3860                           ;main.c: 534:             if (!(PORTD & rowMask[rowScan]) && (old_btn)) {
  3861     06D1  0877               	movf	_rowScan,w
  3862     06D2  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  3863     06D3  0084               	movwf	4
  3864     06D4  120A  118A  2611  120A  118A  	fcall	stringdir
  3865     06D9  0508               	andwf	8,w	;volatile
  3866     06DA  1D03               	btfss	3,2
  3867     06DB  2EDD               	goto	u2941
  3868     06DC  2EDE               	goto	u2940
  3869     06DD                     u2941:
  3870     06DD  2EE7               	goto	l2653
  3871     06DE                     u2940:
  3872     06DE                     l2647:
  3873     06DE  1C79               	btfss	_old_btn/(0+8),_old_btn& (0+7)
  3874     06DF  2EE1               	goto	u2951
  3875     06E0  2EE2               	goto	u2950
  3876     06E1                     u2951:
  3877     06E1  2EE7               	goto	l2653
  3878     06E2                     u2950:
  3879     06E2                     l2649:
  3880                           
  3881                           ;main.c: 535:                 old_btn = 0;
  3882     06E2  1079               	bcf	_old_btn/(0+8),_old_btn& (0+7)
  3883     06E3                     l2651:
  3884                           
  3885                           ;main.c: 536:                 stato++;
  3886     06E3  3001               	movlw	1
  3887     06E4  00C2               	movwf	??_KeyPadReader
  3888     06E5  0842               	movf	??_KeyPadReader,w
  3889     06E6  07F6               	addwf	_stato,f
  3890     06E7                     l2653:
  3891                           
  3892                           ;main.c: 538:             if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  3893     06E7  0877               	movf	_rowScan,w
  3894     06E8  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  3895     06E9  0084               	movwf	4
  3896     06EA  120A  118A  2611  120A  118A  	fcall	stringdir
  3897     06EF  0508               	andwf	8,w	;volatile
  3898     06F0  1903               	btfsc	3,2
  3899     06F1  2EF3               	goto	u2961
  3900     06F2  2EF4               	goto	u2960
  3901     06F3                     u2961:
  3902     06F3  2F17               	goto	l2665
  3903     06F4                     u2960:
  3904     06F4                     l2655:
  3905     06F4  1879               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  3906     06F5  2EF7               	goto	u2971
  3907     06F6  2EF8               	goto	u2970
  3908     06F7                     u2971:
  3909     06F7  2F17               	goto	l2665
  3910     06F8                     u2970:
  3911     06F8                     l2657:
  3912                           
  3913                           ;main.c: 539:                 _delay((unsigned long)((10)*(20000000/4000.0)));
  3914     06F8  3041               	movlw	65
  3915     06F9  1283               	bcf	3,5	;RP0=0, select bank0
  3916     06FA  1303               	bcf	3,6	;RP1=0, select bank0
  3917     06FB  00C3               	movwf	??_KeyPadReader+1
  3918     06FC  30ED               	movlw	237
  3919     06FD  00C2               	movwf	??_KeyPadReader
  3920     06FE                     u3787:
  3921     06FE  0BC2               	decfsz	??_KeyPadReader,f
  3922     06FF  2EFE               	goto	u3787
  3923     0700  0BC3               	decfsz	??_KeyPadReader+1,f
  3924     0701  2EFE               	goto	u3787
  3925     0702  2F03               	nop2
  3926     0703                     l2659:
  3927                           
  3928                           ;main.c: 540:                 if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  3929     0703  0877               	movf	_rowScan,w
  3930     0704  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  3931     0705  0084               	movwf	4
  3932     0706  120A  118A  2611  120A  118A  	fcall	stringdir
  3933     070B  1283               	bcf	3,5	;RP0=0, select bank0
  3934     070C  1303               	bcf	3,6	;RP1=0, select bank0
  3935     070D  0508               	andwf	8,w	;volatile
  3936     070E  1903               	btfsc	3,2
  3937     070F  2F11               	goto	u2981
  3938     0710  2F12               	goto	u2980
  3939     0711                     u2981:
  3940     0711  2F17               	goto	l2665
  3941     0712                     u2980:
  3942     0712                     l2661:
  3943     0712  1879               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  3944     0713  2F15               	goto	u2991
  3945     0714  2F16               	goto	u2990
  3946     0715                     u2991:
  3947     0715  2F17               	goto	l2665
  3948     0716                     u2990:
  3949     0716                     l2663:
  3950                           
  3951                           ;main.c: 541:                     old_btn = 1;
  3952     0716  1479               	bsf	_old_btn/(0+8),_old_btn& (0+7)
  3953     0717                     l2665:
  3954                           
  3955                           ;main.c: 544:             if (stato != old_stato) {
  3956     0717  0876               	movf	_stato,w
  3957     0718  0675               	xorwf	_old_stato,w
  3958     0719  1903               	skipnz
  3959     071A  2F1C               	goto	u3001
  3960     071B  2F1D               	goto	u3000
  3961     071C                     u3001:
  3962     071C  2F2B               	goto	l2673
  3963     071D                     u3000:
  3964     071D                     l2667:
  3965                           
  3966                           ;main.c: 545:                 keypressed = rowScan + (4 * colScan);
  3967     071D  0878               	movf	_colScan,w
  3968     071E  00C2               	movwf	??_KeyPadReader
  3969     071F  3002               	movlw	2
  3970     0720                     u3015:
  3971     0720  1003               	clrc
  3972     0721  0DC2               	rlf	??_KeyPadReader,f
  3973     0722  3EFF               	addlw	-1
  3974     0723  1D03               	skipz
  3975     0724  2F20               	goto	u3015
  3976     0725  0877               	movf	_rowScan,w
  3977     0726  0742               	addwf	??_KeyPadReader,w
  3978     0727  00B9               	movwf	_keypressed
  3979     0728                     l2669:
  3980                           
  3981                           ;main.c: 548:                 old_stato = stato;
  3982     0728  0876               	movf	_stato,w
  3983     0729  00F5               	movwf	_old_stato
  3984     072A  2F35               	goto	l321
  3985     072B                     l2673:
  3986                           
  3987                           ;main.c: 551:         }
  3988     072B  3001               	movlw	1
  3989     072C  00C2               	movwf	??_KeyPadReader
  3990     072D  0842               	movf	??_KeyPadReader,w
  3991     072E  07F7               	addwf	_rowScan,f
  3992     072F  2ECA               	goto	l2641
  3993     0730                     l2677:
  3994                           
  3995                           ;main.c: 552:     }
  3996     0730  3001               	movlw	1
  3997     0731  00C2               	movwf	??_KeyPadReader
  3998     0732  0842               	movf	??_KeyPadReader,w
  3999     0733  07F8               	addwf	_colScan,f
  4000     0734  2EB2               	goto	l2631
  4001     0735                     l321:
  4002     0735  0008               	return
  4003     0736                     __end_of_KeyPadReader:
  4004                           
  4005                           	psect	text16
  4006     0E74                     __ptext16:	
  4007 ;; *************** function _GenerateRandomNumber *****************
  4008 ;; Defined at:
  4009 ;;		line 514 in file "main.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;		None
  4012 ;; Auto vars:     Size  Location     Type
  4013 ;;  count           2    1[BANK0 ] unsigned int 
  4014 ;;  randomNum       1    0[BANK0 ] unsigned char 
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  1    wreg      unsigned char 
  4017 ;; Registers used:
  4018 ;;		wreg, status,2, status,0
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4024 ;;      Params:         0       0       0       0       0
  4025 ;;      Locals:         0       3       0       0       0
  4026 ;;      Temps:          0       0       0       0       0
  4027 ;;      Totals:         0       3       0       0       0
  4028 ;;Total ram usage:        3 bytes
  4029 ;; Hardware stack levels used: 1
  4030 ;; Hardware stack levels required when called: 2
  4031 ;; This function calls:
  4032 ;;		Nothing
  4033 ;; This function is called by:
  4034 ;;		_main
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038     0E74                     _GenerateRandomNumber:	
  4039                           ;psect for function _GenerateRandomNumber
  4040                           
  4041     0E74                     l2615:	
  4042                           ;incstack = 0
  4043                           ; Regs used in _GenerateRandomNumber: [wreg+status,2+status,0]
  4044                           
  4045                           
  4046                           ;main.c: 515:     unsigned int count = 0;
  4047     0E74  1283               	bcf	3,5	;RP0=0, select bank0
  4048     0E75  1303               	bcf	3,6	;RP1=0, select bank0
  4049     0E76  01C3               	clrf	GenerateRandomNumber@count
  4050     0E77  01C4               	clrf	GenerateRandomNumber@count+1
  4051                           
  4052                           ;main.c: 516:     while (count != 186){
  4053     0E78  2E7F               	goto	l2619
  4054     0E79                     l2617:
  4055                           
  4056                           ;main.c: 517:         count++;
  4057     0E79  3001               	movlw	1
  4058     0E7A  07C3               	addwf	GenerateRandomNumber@count,f
  4059     0E7B  1803               	skipnc
  4060     0E7C  0AC4               	incf	GenerateRandomNumber@count+1,f
  4061     0E7D  3000               	movlw	0
  4062     0E7E  07C4               	addwf	GenerateRandomNumber@count+1,f
  4063     0E7F                     l2619:
  4064                           
  4065                           ;main.c: 516:     while (count != 186){
  4066     0E7F  30BA               	movlw	186
  4067     0E80  0643               	xorwf	GenerateRandomNumber@count,w
  4068     0E81  0444               	iorwf	GenerateRandomNumber@count+1,w
  4069     0E82  1D03               	btfss	3,2
  4070     0E83  2E85               	goto	u2911
  4071     0E84  2E86               	goto	u2910
  4072     0E85                     u2911:
  4073     0E85  2E79               	goto	l2617
  4074     0E86                     u2910:
  4075     0E86                     l2621:
  4076                           
  4077                           ;main.c: 519:     unsigned char randomNum = TMR0;
  4078     0E86  0801               	movf	1,w	;volatile
  4079     0E87  00C2               	movwf	GenerateRandomNumber@randomNum
  4080     0E88                     l2623:
  4081                           
  4082                           ;main.c: 520:     TMR0IF = 0;
  4083     0E88  110B               	bcf	11,2	;volatile
  4084                           
  4085                           ;main.c: 521:     return randomNum;
  4086     0E89  0842               	movf	GenerateRandomNumber@randomNum,w
  4087     0E8A                     l309:
  4088     0E8A  0008               	return
  4089     0E8B                     __end_of_GenerateRandomNumber:
  4090                           
  4091                           	psect	text17
  4092     0526                     __ptext17:	
  4093 ;; *************** function _ISR *****************
  4094 ;; Defined at:
  4095 ;;		line 407 in file "main.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;		None
  4098 ;; Auto vars:     Size  Location     Type
  4099 ;;		None
  4100 ;; Return value:  Size  Location     Type
  4101 ;;                  1    wreg      void 
  4102 ;; Registers used:
  4103 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4104 ;; Tracked objects:
  4105 ;;		On entry : 0/0
  4106 ;;		On exit  : 0/0
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4109 ;;      Params:         0       0       0       0       0
  4110 ;;      Locals:         0       0       0       0       0
  4111 ;;      Temps:          5       0       0       0       0
  4112 ;;      Totals:         5       0       0       0       0
  4113 ;;Total ram usage:        5 bytes
  4114 ;; Hardware stack levels used: 2
  4115 ;; This function calls:
  4116 ;;		Nothing
  4117 ;; This function is called by:
  4118 ;;		Interrupt level 1
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122     0526                     _ISR:	
  4123                           ;psect for function _ISR
  4124                           
  4125     0526                     i1l2395:
  4126     0526                     i1l246:	
  4127                           ;main.c: 410:     }
  4128                           
  4129                           
  4130                           ;main.c: 408:     while (!TMR0IF){
  4131     0526  1D0B               	btfss	11,2	;volatile
  4132     0527  2D29               	goto	u246_21
  4133     0528  2D2A               	goto	u246_20
  4134     0529                     u246_21:
  4135     0529  2D26               	goto	i1l246
  4136     052A                     u246_20:
  4137     052A                     i1l248:
  4138                           
  4139                           ;main.c: 411:     TMR0IF = 0;
  4140     052A  110B               	bcf	11,2	;volatile
  4141     052B                     i1l249:	
  4142                           ;main.c: 414:     }
  4143                           
  4144                           
  4145                           ;main.c: 412:     while (!TMR0IF){
  4146     052B  1D0B               	btfss	11,2	;volatile
  4147     052C  2D2E               	goto	u247_21
  4148     052D  2D2F               	goto	u247_20
  4149     052E                     u247_21:
  4150     052E  2D2B               	goto	i1l249
  4151     052F                     u247_20:
  4152     052F                     i1l251:
  4153                           
  4154                           ;main.c: 415:     TMR0IF = 0;
  4155     052F  110B               	bcf	11,2	;volatile
  4156     0530                     i1l252:	
  4157                           ;main.c: 418:     }
  4158                           
  4159                           
  4160                           ;main.c: 416:     while (!TMR0IF){
  4161     0530  1D0B               	btfss	11,2	;volatile
  4162     0531  2D33               	goto	u248_21
  4163     0532  2D34               	goto	u248_20
  4164     0533                     u248_21:
  4165     0533  2D30               	goto	i1l252
  4166     0534                     u248_20:
  4167     0534                     i1l254:
  4168                           
  4169                           ;main.c: 419:     TMR0IF = 0;
  4170     0534  110B               	bcf	11,2	;volatile
  4171     0535                     i1l255:	
  4172                           ;main.c: 422:     }
  4173                           
  4174                           
  4175                           ;main.c: 420:     while (!TMR0IF){
  4176     0535  1D0B               	btfss	11,2	;volatile
  4177     0536  2D38               	goto	u249_21
  4178     0537  2D39               	goto	u249_20
  4179     0538                     u249_21:
  4180     0538  2D35               	goto	i1l255
  4181     0539                     u249_20:
  4182     0539                     i1l257:
  4183                           
  4184                           ;main.c: 423:     TMR0IF = 0;
  4185     0539  110B               	bcf	11,2	;volatile
  4186     053A                     i1l258:	
  4187                           ;main.c: 426:     }
  4188                           
  4189                           
  4190                           ;main.c: 424:     while (!TMR0IF){
  4191     053A  1D0B               	btfss	11,2	;volatile
  4192     053B  2D3D               	goto	u250_21
  4193     053C  2D3E               	goto	u250_20
  4194     053D                     u250_21:
  4195     053D  2D3A               	goto	i1l258
  4196     053E                     u250_20:
  4197     053E                     i1l260:
  4198                           
  4199                           ;main.c: 427:     TMR0IF = 0;
  4200     053E  110B               	bcf	11,2	;volatile
  4201     053F                     i1l261:	
  4202                           ;main.c: 430:     }
  4203                           
  4204                           
  4205                           ;main.c: 428:     while (!TMR0IF){
  4206     053F  1D0B               	btfss	11,2	;volatile
  4207     0540  2D42               	goto	u251_21
  4208     0541  2D43               	goto	u251_20
  4209     0542                     u251_21:
  4210     0542  2D3F               	goto	i1l261
  4211     0543                     u251_20:
  4212     0543                     i1l263:
  4213                           
  4214                           ;main.c: 431:     TMR0IF = 0;
  4215     0543  110B               	bcf	11,2	;volatile
  4216     0544                     i1l264:	
  4217                           ;main.c: 434:     }
  4218                           
  4219                           
  4220                           ;main.c: 432:     while (!TMR0IF){
  4221     0544  1D0B               	btfss	11,2	;volatile
  4222     0545  2D47               	goto	u252_21
  4223     0546  2D48               	goto	u252_20
  4224     0547                     u252_21:
  4225     0547  2D44               	goto	i1l264
  4226     0548                     u252_20:
  4227     0548                     i1l266:
  4228                           
  4229                           ;main.c: 435:     TMR0IF = 0;
  4230     0548  110B               	bcf	11,2	;volatile
  4231     0549                     i1l267:	
  4232                           ;main.c: 438:     }
  4233                           
  4234                           
  4235                           ;main.c: 436:     while (!TMR0IF){
  4236     0549  1D0B               	btfss	11,2	;volatile
  4237     054A  2D4C               	goto	u253_21
  4238     054B  2D4D               	goto	u253_20
  4239     054C                     u253_21:
  4240     054C  2D49               	goto	i1l267
  4241     054D                     u253_20:
  4242     054D                     i1l269:
  4243                           
  4244                           ;main.c: 439:     TMR0IF = 0;
  4245     054D  110B               	bcf	11,2	;volatile
  4246     054E                     i1l270:	
  4247                           ;main.c: 442:     }
  4248                           
  4249                           
  4250                           ;main.c: 440:     while (!TMR0IF){
  4251     054E  1D0B               	btfss	11,2	;volatile
  4252     054F  2D51               	goto	u254_21
  4253     0550  2D52               	goto	u254_20
  4254     0551                     u254_21:
  4255     0551  2D4E               	goto	i1l270
  4256     0552                     u254_20:
  4257     0552                     i1l272:
  4258                           
  4259                           ;main.c: 443:     TMR0IF = 0;
  4260     0552  110B               	bcf	11,2	;volatile
  4261     0553                     i1l273:	
  4262                           ;main.c: 446:     }
  4263                           
  4264                           
  4265                           ;main.c: 444:     while (!TMR0IF){
  4266     0553  1D0B               	btfss	11,2	;volatile
  4267     0554  2D56               	goto	u255_21
  4268     0555  2D57               	goto	u255_20
  4269     0556                     u255_21:
  4270     0556  2D53               	goto	i1l273
  4271     0557                     u255_20:
  4272     0557                     i1l275:
  4273                           
  4274                           ;main.c: 447:     TMR0IF = 0;
  4275     0557  110B               	bcf	11,2	;volatile
  4276     0558                     i1l276:	
  4277                           ;main.c: 450:     }
  4278                           
  4279                           
  4280                           ;main.c: 448:     while (!TMR0IF){
  4281     0558  1D0B               	btfss	11,2	;volatile
  4282     0559  2D5B               	goto	u256_21
  4283     055A  2D5C               	goto	u256_20
  4284     055B                     u256_21:
  4285     055B  2D58               	goto	i1l276
  4286     055C                     u256_20:
  4287     055C                     i1l278:
  4288                           
  4289                           ;main.c: 451:     TMR0IF = 0;
  4290     055C  110B               	bcf	11,2	;volatile
  4291     055D                     i1l279:	
  4292                           ;main.c: 454:     }
  4293                           
  4294                           
  4295                           ;main.c: 452:     while (!TMR0IF){
  4296     055D  1D0B               	btfss	11,2	;volatile
  4297     055E  2D60               	goto	u257_21
  4298     055F  2D61               	goto	u257_20
  4299     0560                     u257_21:
  4300     0560  2D5D               	goto	i1l279
  4301     0561                     u257_20:
  4302     0561                     i1l281:
  4303                           
  4304                           ;main.c: 455:     TMR0IF = 0;
  4305     0561  110B               	bcf	11,2	;volatile
  4306     0562                     i1l282:	
  4307                           ;main.c: 458:     }
  4308                           
  4309                           
  4310                           ;main.c: 456:     while (!TMR0IF){
  4311     0562  1D0B               	btfss	11,2	;volatile
  4312     0563  2D65               	goto	u258_21
  4313     0564  2D66               	goto	u258_20
  4314     0565                     u258_21:
  4315     0565  2D62               	goto	i1l282
  4316     0566                     u258_20:
  4317     0566                     i1l284:
  4318                           
  4319                           ;main.c: 459:     TMR0IF = 0;
  4320     0566  110B               	bcf	11,2	;volatile
  4321     0567                     i1l285:	
  4322                           ;main.c: 462:     }
  4323                           
  4324                           
  4325                           ;main.c: 460:     while (!TMR0IF){
  4326     0567  1D0B               	btfss	11,2	;volatile
  4327     0568  2D6A               	goto	u259_21
  4328     0569  2D6B               	goto	u259_20
  4329     056A                     u259_21:
  4330     056A  2D67               	goto	i1l285
  4331     056B                     u259_20:
  4332     056B                     i1l287:
  4333                           
  4334                           ;main.c: 463:     TMR0IF = 0;
  4335     056B  110B               	bcf	11,2	;volatile
  4336     056C                     i1l288:	
  4337                           ;main.c: 466:     }
  4338                           
  4339                           
  4340                           ;main.c: 464:     while (!TMR0IF){
  4341     056C  1D0B               	btfss	11,2	;volatile
  4342     056D  2D6F               	goto	u260_21
  4343     056E  2D70               	goto	u260_20
  4344     056F                     u260_21:
  4345     056F  2D6C               	goto	i1l288
  4346     0570                     u260_20:
  4347     0570                     i1l290:
  4348                           
  4349                           ;main.c: 467:     TMR0IF = 0;
  4350     0570  110B               	bcf	11,2	;volatile
  4351     0571                     i1l2397:
  4352                           
  4353                           ;main.c: 468:     if(flag == 1){
  4354     0571  1283               	bcf	3,5	;RP0=0, select bank0
  4355     0572  1303               	bcf	3,6	;RP1=0, select bank0
  4356     0573  0330               	decf	_flag,w
  4357     0574  0431               	iorwf	_flag+1,w
  4358     0575  1D03               	btfss	3,2
  4359     0576  2D78               	goto	u261_21
  4360     0577  2D79               	goto	u261_20
  4361     0578                     u261_21:
  4362     0578  2DFC               	goto	i1l300
  4363     0579                     u261_20:
  4364     0579                     i1l2399:
  4365                           
  4366                           ;main.c: 469:         TRISD |= 0x0F;
  4367     0579  300F               	movlw	15
  4368     057A  00F0               	movwf	??_ISR
  4369     057B  0870               	movf	??_ISR,w
  4370     057C  1683               	bsf	3,5	;RP0=1, select bank1
  4371     057D  1303               	bcf	3,6	;RP1=0, select bank1
  4372     057E  0488               	iorwf	8,f	;volatile
  4373     057F                     i1l2401:
  4374                           
  4375                           ;main.c: 471:         for (colScan = 0; colScan < 3; colScan++) {
  4376     057F  01F8               	clrf	_colScan
  4377     0580                     i1l2403:
  4378     0580  3003               	movlw	3
  4379     0581  0278               	subwf	_colScan,w
  4380     0582  1C03               	skipc
  4381     0583  2D85               	goto	u262_21
  4382     0584  2D86               	goto	u262_20
  4383     0585                     u262_21:
  4384     0585  2D87               	goto	i1l2407
  4385     0586                     u262_20:
  4386     0586  2DF9               	goto	i1l2447
  4387     0587                     i1l2407:
  4388                           
  4389                           ;main.c: 472:             PORTB = PORTB | 0x07;
  4390     0587  1283               	bcf	3,5	;RP0=0, select bank0
  4391     0588  0806               	movf	6,w	;volatile
  4392     0589  3807               	iorlw	7
  4393     058A  0086               	movwf	6	;volatile
  4394     058B                     i1l2409:
  4395                           
  4396                           ;main.c: 473:             PORTB &= colMask[colScan];
  4397     058B  0878               	movf	_colScan,w
  4398     058C  3E11               	addlw	low ((_colMask-__stringbase)| (0+32768))
  4399     058D  0084               	movwf	4
  4400     058E  120A  118A  2611  120A  118A  	fcall	stringdir
  4401     0593  00F0               	movwf	??_ISR
  4402     0594  0870               	movf	??_ISR,w
  4403     0595  0586               	andwf	6,f	;volatile
  4404     0596                     i1l2411:
  4405                           
  4406                           ;main.c: 476:             for (rowScan = 0; rowScan < 4; rowScan++) {
  4407     0596  01F7               	clrf	_rowScan
  4408     0597                     i1l2413:
  4409     0597  3004               	movlw	4
  4410     0598  0277               	subwf	_rowScan,w
  4411     0599  1C03               	skipc
  4412     059A  2D9C               	goto	u263_21
  4413     059B  2D9D               	goto	u263_20
  4414     059C                     u263_21:
  4415     059C  2D9E               	goto	i1l2417
  4416     059D                     u263_20:
  4417     059D  2DF4               	goto	i1l2443
  4418     059E                     i1l2417:
  4419                           
  4420                           ;main.c: 477:                 if (!(PORTD & rowMask[rowScan]) && (old_btn)) {
  4421     059E  0877               	movf	_rowScan,w
  4422     059F  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  4423     05A0  0084               	movwf	4
  4424     05A1  120A  118A  2611  120A  118A  	fcall	stringdir
  4425     05A6  0508               	andwf	8,w	;volatile
  4426     05A7  1D03               	btfss	3,2
  4427     05A8  2DAA               	goto	u264_21
  4428     05A9  2DAB               	goto	u264_20
  4429     05AA                     u264_21:
  4430     05AA  2DB4               	goto	i1l2425
  4431     05AB                     u264_20:
  4432     05AB                     i1l2419:
  4433     05AB  1C79               	btfss	_old_btn/(0+8),_old_btn& (0+7)
  4434     05AC  2DAE               	goto	u265_21
  4435     05AD  2DAF               	goto	u265_20
  4436     05AE                     u265_21:
  4437     05AE  2DB4               	goto	i1l2425
  4438     05AF                     u265_20:
  4439     05AF                     i1l2421:
  4440                           
  4441                           ;main.c: 478:                     old_btn = 0;
  4442     05AF  1079               	bcf	_old_btn/(0+8),_old_btn& (0+7)
  4443     05B0                     i1l2423:
  4444                           
  4445                           ;main.c: 479:                     stato++;
  4446     05B0  3001               	movlw	1
  4447     05B1  00F0               	movwf	??_ISR
  4448     05B2  0870               	movf	??_ISR,w
  4449     05B3  07F6               	addwf	_stato,f
  4450     05B4                     i1l2425:
  4451                           
  4452                           ;main.c: 481:                 if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  4453     05B4  0877               	movf	_rowScan,w
  4454     05B5  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  4455     05B6  0084               	movwf	4
  4456     05B7  120A  118A  2611  120A  118A  	fcall	stringdir
  4457     05BC  0508               	andwf	8,w	;volatile
  4458     05BD  1903               	btfsc	3,2
  4459     05BE  2DC0               	goto	u266_21
  4460     05BF  2DC1               	goto	u266_20
  4461     05C0                     u266_21:
  4462     05C0  2DD7               	goto	i1l2435
  4463     05C1                     u266_20:
  4464     05C1                     i1l2427:
  4465     05C1  1879               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  4466     05C2  2DC4               	goto	u267_21
  4467     05C3  2DC5               	goto	u267_20
  4468     05C4                     u267_21:
  4469     05C4  2DD7               	goto	i1l2435
  4470     05C5                     u267_20:
  4471     05C5                     i1l2429:
  4472                           
  4473                           ;main.c: 483:                     if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  4474     05C5  0877               	movf	_rowScan,w
  4475     05C6  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  4476     05C7  0084               	movwf	4
  4477     05C8  120A  118A  2611  120A  118A  	fcall	stringdir
  4478     05CD  0508               	andwf	8,w	;volatile
  4479     05CE  1903               	btfsc	3,2
  4480     05CF  2DD1               	goto	u268_21
  4481     05D0  2DD2               	goto	u268_20
  4482     05D1                     u268_21:
  4483     05D1  2DD7               	goto	i1l2435
  4484     05D2                     u268_20:
  4485     05D2                     i1l2431:
  4486     05D2  1879               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  4487     05D3  2DD5               	goto	u269_21
  4488     05D4  2DD6               	goto	u269_20
  4489     05D5                     u269_21:
  4490     05D5  2DD7               	goto	i1l2435
  4491     05D6                     u269_20:
  4492     05D6                     i1l2433:
  4493                           
  4494                           ;main.c: 484:                         old_btn = 1;
  4495     05D6  1479               	bsf	_old_btn/(0+8),_old_btn& (0+7)
  4496     05D7                     i1l2435:
  4497                           
  4498                           ;main.c: 487:                 if (stato != old_stato) {
  4499     05D7  0876               	movf	_stato,w
  4500     05D8  0675               	xorwf	_old_stato,w
  4501     05D9  1903               	skipnz
  4502     05DA  2DDC               	goto	u270_21
  4503     05DB  2DDD               	goto	u270_20
  4504     05DC                     u270_21:
  4505     05DC  2DEA               	goto	i1l2441
  4506     05DD                     u270_20:
  4507     05DD                     i1l2437:
  4508                           
  4509                           ;main.c: 488:                     keypressed = rowScan + (4 * colScan);
  4510     05DD  0878               	movf	_colScan,w
  4511     05DE  00F0               	movwf	??_ISR
  4512     05DF  3002               	movlw	2
  4513     05E0                     u271_25:
  4514     05E0  1003               	clrc
  4515     05E1  0DF0               	rlf	??_ISR,f
  4516     05E2  3EFF               	addlw	-1
  4517     05E3  1D03               	skipz
  4518     05E4  2DE0               	goto	u271_25
  4519     05E5  0877               	movf	_rowScan,w
  4520     05E6  0770               	addwf	??_ISR,w
  4521     05E7  00B9               	movwf	_keypressed
  4522     05E8                     i1l2439:
  4523                           
  4524                           ;main.c: 491:                     old_stato = stato;
  4525     05E8  0876               	movf	_stato,w
  4526     05E9  00F5               	movwf	_old_stato
  4527     05EA                     i1l2441:
  4528                           
  4529                           ;main.c: 493:             }
  4530     05EA  3001               	movlw	1
  4531     05EB  00F0               	movwf	??_ISR
  4532     05EC  0870               	movf	??_ISR,w
  4533     05ED  07F7               	addwf	_rowScan,f
  4534     05EE  3004               	movlw	4
  4535     05EF  0277               	subwf	_rowScan,w
  4536     05F0  1C03               	skipc
  4537     05F1  2DF3               	goto	u272_21
  4538     05F2  2DF4               	goto	u272_20
  4539     05F3                     u272_21:
  4540     05F3  2D9E               	goto	i1l2417
  4541     05F4                     u272_20:
  4542     05F4                     i1l2443:
  4543                           
  4544                           ;main.c: 494:         }
  4545     05F4  3001               	movlw	1
  4546     05F5  00F0               	movwf	??_ISR
  4547     05F6  0870               	movf	??_ISR,w
  4548     05F7  07F8               	addwf	_colScan,f
  4549     05F8  2D80               	goto	i1l2403
  4550     05F9                     i1l2447:
  4551                           
  4552                           ;main.c: 495:         TRISD |= 0x00;
  4553     05F9  1683               	bsf	3,5	;RP0=1, select bank1
  4554     05FA  1303               	bcf	3,6	;RP1=0, select bank1
  4555     05FB  0808               	movf	8,w	;volatile
  4556     05FC                     i1l300:
  4557     05FC  0874               	movf	??_ISR+4,w
  4558     05FD  00FF               	movwf	btemp+1
  4559     05FE  0873               	movf	??_ISR+3,w
  4560     05FF  008A               	movwf	10
  4561     0600  0872               	movf	??_ISR+2,w
  4562     0601  0084               	movwf	4
  4563     0602  0E71               	swapf	??_ISR+1,w
  4564     0603  0083               	movwf	3
  4565     0604  0EFE               	swapf	btemp,f
  4566     0605  0E7E               	swapf	btemp,w
  4567     0606  0009               	retfie
  4568     0607                     __end_of_ISR:
  4569     007E                     btemp	set	126	;btemp
  4570     007E                     wtemp0	set	126
  4571                           
  4572                           	psect	intentry
  4573     0004                     __pintentry:	
  4574                           ;incstack = 0
  4575                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath]
  4576                           
  4577     0004                     interrupt_function:
  4578     007E                     saved_w	set	btemp
  4579     0004  00FE               	movwf	btemp
  4580     0005  0E03               	swapf	3,w
  4581     0006  00F1               	movwf	??_ISR+1
  4582     0007  0804               	movf	4,w
  4583     0008  00F2               	movwf	??_ISR+2
  4584     0009  080A               	movf	10,w
  4585     000A  00F3               	movwf	??_ISR+3
  4586     000B  087F               	movf	btemp+1,w
  4587     000C  00F4               	movwf	??_ISR+4
  4588     000D  120A  118A  2D26   	ljmp	_ISR
  4589                           
  4590                           	psect	idloc
  4591                           
  4592                           ;Config register IDLOC0 @ 0x2000
  4593                           ;	unspecified, using default values
  4594     2000                     	org	8192
  4595     2000  3FFF               	dw	16383
  4596                           
  4597                           ;Config register IDLOC1 @ 0x2001
  4598                           ;	unspecified, using default values
  4599     2001                     	org	8193
  4600     2001  3FFF               	dw	16383
  4601                           
  4602                           ;Config register IDLOC2 @ 0x2002
  4603                           ;	unspecified, using default values
  4604     2002                     	org	8194
  4605     2002  3FFF               	dw	16383
  4606                           
  4607                           ;Config register IDLOC3 @ 0x2003
  4608                           ;	unspecified, using default values
  4609     2003                     	org	8195
  4610     2003  3FFF               	dw	16383
  4611                           
  4612                           	psect	config
  4613                           
  4614                           ;Config register CONFIG @ 0x2007
  4615                           ;	Oscillator Selection bits
  4616                           ;	FOSC = HS, HS oscillator
  4617                           ;	Watchdog Timer Enable bit
  4618                           ;	WDTE = OFF, WDT disabled
  4619                           ;	Power-up Timer Enable bit
  4620                           ;	PWRTE = OFF, PWRT disabled
  4621                           ;	Brown-out Reset Enable bit
  4622                           ;	BOREN = OFF, BOR disabled
  4623                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4624                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  4625                           ;	Data EEPROM Memory Code Protection bit
  4626                           ;	CPD = OFF, Data EEPROM code protection off
  4627                           ;	Flash Program Memory Write Enable bits
  4628                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4629                           ;	In-Circuit Debugger Mode bit
  4630                           ;	DEBUG = 0x1, unprogrammed default
  4631                           ;	Flash Program Memory Code Protection bit
  4632                           ;	CP = OFF, Code protection off
  4633     2007                     	org	8199
  4634     2007  3F3A               	dw	16186

Data Sizes:
    Strings     127
    Constant    19
    Data        3
    BSS         54
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     32      69
    BANK1            80      0      16
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    intToString@str	PTR unsigned char  size(1) Largest target is 3
		 -> print_countdown(BANK0[3]), 

    lcdPrint@str	PTR unsigned char  size(2) Largest target is 15
		 -> STR_12(CODE[15]), STR_11(CODE[8]), STR_10(CODE[14]), STR_9(CODE[13]), 
		 -> STR_8(CODE[9]), print_countdown(BANK0[3]), STR_7(CODE[10]), STR_6(CODE[14]), 
		 -> STR_5(CODE[13]), STR_4(CODE[12]), STR_3(CODE[11]), STR_2(CODE[10]), 
		 -> STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_UART_Read1
    _initLCD->_lcdSend
    _UART_Read1->_intToString
    _lcdPrint->_lcdSend
    _intToString->___awdiv
    _potenza->___bmul
    ___awdiv->_potenza

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   24606
               _GenerateRandomNumber
                       _KeyPadReader
                     _RS485_RxEnable
                     _RS485_TxEnable
                        _Timer0_Init
                          _UART_Init
                         _UART_Read1
                         _UART_Write
                            _initLCD
                           _lcdPrint
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0    3752
                                              2 BANK0      2     2      0
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _UART_Read1                                           4     4      0   11858
                                             28 BANK0      4     4      0
                     _RS485_RxEnable
                     _RS485_TxEnable
                         _UART_Write
                        _intToString
                           _lcdPrint
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _lcdPrint                                             7     5      2    5142
                                              2 BANK0      7     5      2
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _lcdSend                                              2     1      1    3752
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _intToString                                          9     6      3    2605
                                             19 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                            _potenza
 ---------------------------------------------------------------------------------
 (3) _potenza                                              6     5      1     573
                                              4 BANK0      6     5      1
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     226
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     613
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     604
                                             10 BANK0      9     5      4
                            _potenza (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RS485_TxEnable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RS485_RxEnable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _KeyPadReader                                         2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _GenerateRandomNumber                                 3     3      0      71
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GenerateRandomNumber
   _KeyPadReader
   _RS485_RxEnable
   _RS485_TxEnable
   _Timer0_Init
   _UART_Init
   _UART_Read1
     _RS485_RxEnable
     _RS485_TxEnable
     _UART_Write
     _intToString
       ___awdiv
         _potenza (ARG)
           ___bmul
       ___awmod
       _potenza
     _lcdPrint
       _lcdSend
     _lcdSend
   _UART_Write
   _initLCD
     _lcdSend
   _lcdPrint
   _lcdSend

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      10       7       20.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     20      45       5       86.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       1       0        7.1%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5F      12        0.0%
ABS                  0      0      5F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Jun 26 11:54:50 2023

                            pc 0002                 ___bmul@product 0044                   ___awdiv@sign 0052  
                           fsr 0004                            l202 0E3D                            l303 0E4C  
                          l232 0FFF                            l321 0735                            l241 07F9  
                          l235 0E73                            l228 0525                            l309 0E8A  
                          l190 0E5E                            l328 0ECD                            l193 07FE  
                          l337 07B1                            l196 0E2B                            l199 0E37  
                          l449 0EA1                            l576 0F91                            l589 0F28  
                          _GIE 005F                            _RC0 0038                            _RC1 0039  
                          _PS0 0408                            _PS1 0409                            _PS2 040A  
                          _ISR 0526                            _PSA 040B                            _id1 0063  
                          _id2 0062                            fsr0 0004                            indf 0000  
                 ___awmod@sign 0048                           ?_ISR 0070                           l3001 02B4  
                         l3011 02DA                           l3003 02BA                           l3021 0301  
                         l3013 02E2                           l3005 02C2                           l3031 032C  
                         l3023 030B                           l3015 02E8                           l3007 02CA  
                         l3033 0331                           l3025 0315                           l3017 02EE  
                         l3009 02D2                           l3035 0337                           l3027 031F  
                         l3019 02F7                           l2501 0EDC                           l3029 0329  
                         l2511 0EF5                           l2503 0EE0                           l2521 0F14  
                         l2513 0EF9                           l2505 0EE5                           l2601 0FED  
                         l2611 0E4A                           l2515 0EFD                           l2507 0EEB  
                         l2523 0F1A                           l2451 0E8F                           l2531 07B2  
                         l2603 0FF6                           l2621 0E86                           l2613 0E4B  
                         l2605 0E3E                           l2541 0E37                           l1741 0F37  
                         l1733 0F29                           l2525 0F1F                           l2517 0F07  
                         l2509 0EEE                           l2453 0E93                           l2533 07B7  
                         l2701 037E                           l2623 0E88                           l2615 0E74  
                         l2631 06B2                           l2607 0E45                           l2543 0E3B  
                         l1751 0F4C                           l1743 0F3B                           l1735 0F2C  
                         l2527 0F24                           l2519 0F0D                           l2455 0E97  
                         l2551 073B                           l2471 0E6A                           l2463 0E62  
                         l2535 07D5                           l2711 03AC                           l2703 0383  
                         l2617 0E79                           l2641 06CA                           l2609 0E49  
                         l2545 0E27                           l1761 0F6F                           l1753 0F4F  
                         l1745 0F40                           l1737 0F30                           l2457 0E99  
                         l2449 0E8E                           l2481 0EA7                           l2561 078A  
                         l2553 073F                           l2473 0E6C                           l2465 0E65  
                         l2537 07DD                           l2721 03C4                           l2713 03AD  
                         l2705 0388                           l2801 04F8                           l2619 0E7F  
                         l2651 06E3                           l2635 06B9                           l2627 06A9  
                         l2571 0E52                           l2539 07FA                           l1771 0F88  
                         l1763 0F75                           l1755 0F56                           l1747 0F44  
                         l1739 0F35                           l2459 0EA0                           l2483 0EAA  
                         l2563 07A0                           l2555 0760                           l2547 0736  
                         l2475 0E71                           l2467 0E66                           l2811 0516  
                         l2803 04FF                           l2731 03EA                           l2723 03D5  
                         l2707 0390                           l2715 03B1                           l2661 0712  
                         l2653 06E7                           l2645 06D1                           l2637 06BE  
                         l2629 06B1                           l2573 0E54                           l1773 0F8D  
                         l1765 0F76                           l1757 0F5A                           l1749 0F46  
                         l2493 0ECE                           l2485 0EB7                           l2557 0762  
                         l2565 07A4                           l2549 073A                           l2477 0E72  
                         l2469 0E67                           l2805 0506                           l2741 0415  
                         l2733 03F0                           l2725 03E0                           l2717 03B6  
                         l2709 03A1                           l2581 0F92                           l2901 0163  
                         l2821 004B                           l2663 0716                           l2655 06F4  
                         l2647 06DE                           l2639 06C9                           l2575 0E55  
                         l1767 0F7D                           l1759 0F5E                           l2495 0ED1  
                         l2487 0EBD                           l2479 0EA5                           l2567 07AA  
                         l2559 076F                           l2807 0511                           l2751 043D  
                         l2735 03F8                           l2743 0419                           l2727 03E1  
                         l2719 03BC                           l2591 0FBE                           l2583 0F96  
                         l2911 0181                           l2903 0169                           l2831 006E  
                         l2823 0050                           l2673 072B                           l2657 06F8  
                         l2665 0717                           l2649 06E2                           l2577 0E58  
                         l2569 0E4D                           l1769 0F83                           l2497 0ED5  
                         l2489 0ECA                           l2809 0514                           l2761 0464  
                         l2753 0448                           l2745 041E                           l2737 0409  
                         l2729 03E5                           l2681 0340                           l2593 0FC9  
                         l2585 0FA0                           l2921 01A0                           l2913 0187  
                         l2905 016F                           l2841 008C                           l2833 0074  
                         l2825 0055                           l2817 003F                           l2667 071D  
                         l2659 0703                           l2579 0E5B                           l2499 0EDA  
                         l2771 048E                           l2763 046F                           l2755 0449  
                         l2747 0424                           l2739 0414                           l2691 0356  
                         l2683 0343                           l2595 0FD2                           l2587 0FA3  
                         l2931 01C8                           l2923 01AC                           l2915 018D  
                         l2907 0175                           l2851 00AC                           l2843 0092  
                         l2835 007A                           l2827 005E                           l2819 0046  
                         l2669 0728                           l2677 0730                           l2781 04B4  
                         l2773 0494                           l2765 0473                           l2749 042C  
                         l2757 044D                           l2693 035D                           l2685 0346  
                         l2597 0FDB                           l2589 0FAA                           l2941 01E6  
                         l2933 01CE                           l2925 01B4                           l2917 0193  
                         l2909 017B                           l2861 00D2                           l2853 00B4  
                         l2845 0098                           l2837 0080                           l2829 0069  
                         l2791 04E1                           l2783 04BC                           l2775 049C  
                         l2759 045B                           l2695 036E                           l2687 034C  
                         l2767 0483                           l2599 0FE4                           l2951 020D  
                         l2943 01EC                           l2935 01D4                           l2927 01BC  
                         l2919 0199                           l2871 00FA                           l2855 00BC  
                         l2847 009E                           l2839 0086                           l2793 04E4  
                         l2785 04C2                           l2777 04A4                           l2769 0488  
                         l2697 0379                           l2689 0351                           l2961 022D  
                         l2953 0215                           l2937 01DA                           l2929 01C2  
                         l2945 01F2                           l2881 011C                           l2873 0102  
                         l2865 00E2                           l2857 00C4                           l2849 00A4  
                         l2795 04E6                           l2787 04C8                           l2779 04AC  
                         l2699 037A                           l2963 0233                           l2955 021B  
                         l2971 024B                           l2947 01F9                           l2939 01E0  
                         l2891 013A                           l2883 0122                           l2875 010A  
                         l2867 00E7                           l2859 00CD                           l2797 04F4  
                         l2789 04D6                           l2981 0274                           l2973 0252  
                         l2965 0239                           l2957 0221                           l2949 0205  
                         l2885 0128                           l2877 0110                           l2893 0140  
                         l2869 00EE                           l2991 0292                           l2983 027A  
                         l2975 025E                           l2967 023F                           l2959 0227  
                         l2895 0147                           l2887 012E                           l2879 0116  
                         l2993 0298                           l2985 0280                           l2977 0266  
                         l2969 0245                           l2897 0153                           l2889 0134  
                         l2995 029E                           l2987 0286                           l2979 026E  
                         l2899 015B                           l2989 028C                           l2997 02A4  
                         l2999 02B0                           STR_1 0699                           STR_2 0686  
                         STR_3 067B                           STR_4 066F                           STR_5 0655  
                         STR_6 0639                           STR_8 0690                           STR_9 0662  
                         _BRGH 04C2                           _CREN 00C4                           _T0CS 040D  
                         u3000 071D                           u1400 0F30                           u3001 071C  
                         u1401 0F2F                           u1410 0F3B                           u1411 0F3A  
                         u1420 0F4C                           u3100 03F0                           u3020 034C  
                         u1421 0F4B                           u3101 03EF                           u3021 034B  
                         u3110 041E                           u3030 0351                           u3015 0720  
                         u3111 041D                           u3031 0350                           u1440 0F5E  
                         u3120 0424                           u3040 0356                           u3200 0122  
                         u1441 0F5D                           u3121 0423                           u3041 0355  
                         u3201 0121                           u3130 04FF                           u3050 0383  
                         u3210 0128                           u1435 0F50                           u3131 04FE  
                         u3051 0382                           u3211 0127                           u1460 0F6F  
                         u3060 0388                           u3300 017B                           u3220 012E  
                         u3140 00E1                           u1461 0F6E                           u3061 0387  
                         u3301 017A                           u3221 012D                           u3141 00E0  
                         u3070 03B6                           u3310 0181                           u3230 0134  
                         u3150 00E7                           u1455 0F5F                           u3071 03B5  
                         u3311 0180                           u3231 0133                           u3151 00E6  
                         u1480 0F83                           u3080 03BC                           u3400 01D4  
                         u3320 0187                           u3240 013A                           u3160 010A  
                         u1481 0F82                           u1465 0F6B                           u3081 03BB  
                         u3401 01D3                           u3321 0186                           u3241 0139  
                         u3161 0109                           u1490 0F88                           u3090 03EA  
                         u3410 01DA                           u3330 018D                           u3250 0140  
                         u3170 0110                           u1491 0F87                           u1475 0F77  
                         u3091 03E9                           u3411 01D9                           u3331 018C  
                         u3251 013F                           u3171 010F                           u3500 022D  
                         u3420 01E0                           u3340 0193                           u3260 0163  
                         u3180 0116                           u3501 022C                           u3421 01DF  
                         u3341 0192                           u3261 0162                           u3181 0115  
                         u3510 0233                           u3430 01E6                           u3350 0199  
                         u3270 0169                           u3190 011C                           u3511 0232  
                         u3431 01E5                           u3351 0198                           u3271 0168  
                         u3191 011B                           u2800 0EFD                           u3600 0286  
                         u3520 0239                           u3440 01EC                           u3360 01BC  
                         u3280 016F                           u2801 0EFC                           u3601 0285  
                         u3521 0238                           u3441 01EB                           u3361 01BB  
                         u3281 016E                           u2810 0F07                           u2730 0E93  
                         u3610 028C                           u3530 023F                           u3450 01F2  
                         u3370 01C2                           u3290 0175                           u2811 0F06  
                         u2731 0E92                           u3611 028B                           u3531 023E  
                         u3451 01F1                           u3371 01C1                           u3291 0174  
                         u2740 0EA0                           u2900 07AA                           u3620 0292  
                         u3540 0245                           u3460 0215                           u3380 01C8  
                         u2741 0E9F                           u2901 07A9                           u3621 0291  
                         u3541 0244                           u3461 0214                           u3381 01C7  
                         u2910 0E86                           u2830 0F1A                           u2750 0ECA  
                         u3630 0298                           u3550 024B                           u3470 021B  
                         u3390 01CE                           u2911 0E85                           u2831 0F19  
                         u2815 0F03                           u2751 0EC9                           u3631 0297  
                         u3551 024A                           u3471 021A                           u3391 01CD  
                         u2920 06B8                           u2840 0F1F                           u2760 0ED5  
                         u3640 029E                           u3560 026E                           u3480 0221  
                         u2921 06B7                           u2841 0F1E                           u2825 0F0E  
                         u2761 0ED4                           u3641 029D                           u3561 026D  
                         u3481 0220                           u2930 06D0                           u2770 0EE0  
                         u2850 07C3                           u3650 02A4                           u3570 0274  
                         u3490 0227                           u2931 06CF                           u2771 0EDF  
                         u2755 0EC6                           u3651 02A3                           u3571 0273  
                         u3491 0226                           u2940 06DE                           u2780 0EEB  
                         u2860 07E7                           u3580 027A                           u2941 06DD  
                         u2781 0EEA                           u3581 0279                           u2950 06E2  
                         u2870 07F9                           u3590 0280                           u2951 06E1  
                         u2871 07F8                           u3727 0F9C                           u3591 027F  
                         u2960 06F4                           u2880 0E3B                           u2961 06F3  
                         u2881 0E3A                           u3737 0FB0                           u2970 06F8  
                         u2890 0760                           u2971 06F7                           u2795 0EEF  
                         u2891 075F                           u3747 0FC4                           u2980 0712  
                         _RCIF 0065                           u2981 0711                           u3757 047B  
                         u2990 0716                           u2991 0715                           u3767 04EE  
                         u3777 051E                           u3787 06FE                 ??_KeyPadReader 0042  
                         _TMR0 0001                           _SPEN 00C7                           _TXEN 04C5  
                         _TXIF 0064                           _SYNC 04C4                           _data 0020  
                         _flag 0030                           _main 003F                           _num1 003E  
                         _num2 003D                           _num3 003C                           _keys 0617  
                         _num4 003B                           _num5 003A                           btemp 007E  
                         _type 0034                           start 0010              ___bmul@multiplier 0045  
                        ??_ISR 0070                   ?_intToString 0055                          ?_main 0070  
              __end_of___awdiv 0F92                          STR_10 0647                          STR_11 06A1  
                        STR_12 062A                __end_of___awmod 0F29                ___awdiv@divisor 004C  
                        i1l300 05FC                          i1l251 052F                          i1l260 053E  
                        i1l252 0530                          i1l261 053F                          i1l270 054E  
                        i1l254 0534                          i1l246 0526                          i1l263 0543  
                        i1l255 0535                          i1l272 0552                          i1l264 0544  
                        i1l248 052A                          i1l281 0561                          i1l273 0553  
                        i1l257 0539                          i1l249 052B                          i1l290 0570  
                        i1l282 0562                          i1l266 0548                          i1l258 053A  
                        i1l275 0557                          i1l267 0549                          i1l284 0566  
                        i1l276 0558                          i1l285 0567                          i1l269 054D  
                        i1l278 055C                          i1l287 056B                          i1l279 055D  
                        i1l288 056C                ___awdiv@counter 0051                          _RCREG 001A  
                        _SPBRG 0099                          _PORTB 0006                          _PORTD 0008  
                        _TRISA 0085                          _TRISB 0086                          _TRISC 0087  
                        _TRISD 0088                          _TRISE 0089                          _TXREG 0019  
                  ?_UART_Read1 0070                __end_of_colMask 062A                __end_of_lcdSend 0E74  
                  ?_UART_Write 0070                __end_of_initLCD 1000                          _count 002C  
                        _index 002E                          _keyok 0038                          _stato 0076  
               __pbitbssCOMMON 03C8                          pclath 000A                __end_of_rowMask 0627  
              __end_of_potenza 0ECE                          status 0003                          wtemp0 007E  
 __end_of_GenerateRandomNumber 0E8B                __initialization 0013                   __end_of_main 0340  
                 __end_of_keys 0623                         ??_main 0062               ___awdiv@dividend 004E  
                       i1l2401 057F                         i1l2411 0596                         i1l2403 0580  
                       i1l2421 05AF                         i1l2413 0597                         i1l2431 05D2  
                       i1l2423 05B0                         i1l2407 0587                         i1l2441 05EA  
                       i1l2433 05D6                         i1l2425 05B4                         i1l2417 059E  
                       i1l2409 058B                         i1l2427 05C1                         i1l2435 05D7  
                       i1l2419 05AB                         i1l2443 05F4                         i1l2437 05DD  
                       i1l2429 05C5                         i1l2439 05E8                         i1l2447 05F9  
                       i1l2395 0526                         i1l2397 0571                         i1l2399 0579  
                       u250_20 053E                         u250_21 053D                         u251_20 0543  
                       u251_21 0542                         u260_20 0570                         u252_20 0548  
                       u260_21 056F                         u252_21 0547                         u261_20 0579  
                       u253_20 054D                         u261_21 0578                         u253_21 054C  
                       u270_20 05DD                         u262_20 0586                         u254_20 0552  
                       u246_20 052A                         u270_21 05DC                         u262_21 0585  
                       u254_21 0551                         u246_21 0529                         u263_20 059D  
                       u255_20 0557                         u247_20 052F                         u263_21 059C  
                       u255_21 0556                         u247_21 052E                         u271_25 05E0  
                       u272_20 05F4                         u264_20 05AB                         u256_20 055C  
                       u248_20 0534                         u272_21 05F3                         u264_21 05AA  
                       u256_21 055B                         u248_21 0533                         u265_20 05AF  
                       u257_20 0561                         u249_20 0539                         u265_21 05AE  
                       u257_21 0560                         u249_21 0538                         u266_20 05C1  
                       u258_20 0566                         u266_21 05C0                         u258_21 0565  
                       u267_20 05C5                         u259_20 056B                         u267_21 05C4  
                       u259_21 056A                         u268_20 05D2                         u268_21 05D1  
                       u269_20 05D6                         u269_21 05D5                         _TMR0IE 005D  
                       _TMR0IF 005A                         _TRISC6 043E                         _TRISC7 043F  
                ??_Timer0_Init 0042               __end_of_lcdPrint 07FA              __end_of_UART_Init 0E5F  
                       ___bmul 0E8B                      ??___awdiv 0050                      ??___awmod 0046  
                       _codice 0026               ___awdiv@quotient 0053                ___awmod@divisor 0042  
         __end_of_KeyPadReader 0736                ___awmod@counter 0047                      ??_lcdSend 0043  
                    ??_initLCD 0044                         saved_w 007E                      ??_potenza 0047  
      __end_of__initialization 003B               intToString@cifre 005C            ___bmul@multiplicand 0042  
               __pcstackCOMMON 0070                   __pidataBANK0 0E24            __end_of_Timer0_Init 0E4D  
         _GenerateRandomNumber 0E74                     __pbssBANK0 0020                     __pbssBANK1 00A0  
                   __pmaintext 003F                        ?___bmul 0042                     __pintentry 0004  
                 ??_UART_Read1 005E          ?_GenerateRandomNumber 0070                   ??_UART_Write 0042  
                    ?_lcdPrint 0044                     __stringtab 0607                   intToString@i 005D  
                 intToString@n 0055                   intToString@t 005B                    _Timer0_Init 0E3E  
           __end_of_UART_Read1 0526                 _RS485_RxEnable 0E27                        ___awdiv 0F29  
                      ___awmod 0ECE             __end_of_UART_Write 0E3E                 _RS485_TxEnable 07FA  
                      _colMask 0627                        _colScan 0078                        _lcdSend 0E5F  
                      __ptext1 0F92                        __ptext2 0340                        __ptext3 07B2  
                      __ptext4 0E5F                        __ptext5 0736                        __ptext6 0EA2  
                      __ptext7 0E8B                        __ptext8 0ECE                        __ptext9 0F29  
                      _initLCD 0F92                        _old_btn 03C8               ___awmod@dividend 0044  
                   _keypressed 0039                        _restart 0037                        _rowMask 0623  
                      _rowScan 0077                        _potenza 0EA2                     ??_lcdPrint 0046  
                      clrloop0 0E2D                        _stringa 00A0           end_of_initialization 003B  
                 _KeyPadReader 06A9         __end_of_RS485_RxEnable 0E2C         __end_of_RS485_TxEnable 07FF  
                    _UART_Init 0E4D                      _PORTEbits 0009                 UART_Write@data 0042  
       ??_GenerateRandomNumber 0042                      _TRISEbits 0089                ?_RS485_RxEnable 0070  
              ?_RS485_TxEnable 0070                 __end_of___bmul 0EA2                     ?_UART_Init 0070  
          start_initialization 0013  GenerateRandomNumber@randomNum 0042                    __end_of_ISR 0607  
               _stringPosition 0032                 intToString@str 0057                       ??___bmul 0043  
                  __pdataBANK0 0062                  ??_intToString 0058                    __pbssCOMMON 0075  
                    ___latbits 0002                  __pcstackBANK0 0042                UART_Read1@count 0061  
                 ?_Timer0_Init 0070                       ?___awdiv 004C                       ?___awmod 0042  
                  ??_UART_Init 0042                      __pstrings 0607                       ?_lcdSend 0042  
                     ?_initLCD 0070            __end_of_intToString 07B2                      _countdown 0064  
                     ?_potenza 0046                      _randomNum 0035                      _old_stato 0075  
            interrupt_function 0004                      clear_ram0 0E2C                _print_countdown 003F  
                    lcdPrint@n 0049                    __stringbase 0616               ??_RS485_RxEnable 0042  
             ??_RS485_TxEnable 0042                    _intToString 0736             __end_of__stringtab 0617  
                     __ptext10 0E34                       __ptext11 07FA                       __ptext12 0E27  
                     __ptext13 0E4D                       __ptext14 0E3E                       __ptext15 06A9  
                     __ptext16 0E74                       __ptext17 0526                       _lcdPrint 07B2  
                     _received 0036                       intlevel1 0000                      stringcode 0611  
                     potenza@b 0048                       potenza@e 0046                       potenza@i 0049  
                     potenza@n 004B                    lcdSend@dato 0043                    lcdSend@tipo 0042  
                   _UART_Read1 0340                       stringdir 0611                       stringtab 0607  
                   _UART_Write 0E34      GenerateRandomNumber@count 0043                    lcdPrint@str 0044  
                ?_KeyPadReader 0070  
