

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Jun 13 17:25:29 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36     0000                     
    37                           ; Generated 22/03/2023 GMT
    38                           ; 
    39                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F877A Definitions
    69                           ; 
    70                           ; SFR Addresses
    71     0000                     	;# 
    72     0001                     	;# 
    73     0002                     	;# 
    74     0003                     	;# 
    75     0004                     	;# 
    76     0005                     	;# 
    77     0006                     	;# 
    78     0007                     	;# 
    79     0008                     	;# 
    80     0009                     	;# 
    81     000A                     	;# 
    82     000B                     	;# 
    83     000C                     	;# 
    84     000D                     	;# 
    85     000E                     	;# 
    86     000E                     	;# 
    87     000F                     	;# 
    88     0010                     	;# 
    89     0011                     	;# 
    90     0012                     	;# 
    91     0013                     	;# 
    92     0014                     	;# 
    93     0015                     	;# 
    94     0015                     	;# 
    95     0016                     	;# 
    96     0017                     	;# 
    97     0018                     	;# 
    98     0019                     	;# 
    99     001A                     	;# 
   100     001B                     	;# 
   101     001B                     	;# 
   102     001C                     	;# 
   103     001D                     	;# 
   104     001E                     	;# 
   105     001F                     	;# 
   106     0081                     	;# 
   107     0085                     	;# 
   108     0086                     	;# 
   109     0087                     	;# 
   110     0088                     	;# 
   111     0089                     	;# 
   112     008C                     	;# 
   113     008D                     	;# 
   114     008E                     	;# 
   115     0091                     	;# 
   116     0092                     	;# 
   117     0093                     	;# 
   118     0094                     	;# 
   119     0098                     	;# 
   120     0099                     	;# 
   121     009C                     	;# 
   122     009D                     	;# 
   123     009E                     	;# 
   124     009F                     	;# 
   125     010C                     	;# 
   126     010D                     	;# 
   127     010E                     	;# 
   128     010F                     	;# 
   129     018C                     	;# 
   130     018D                     	;# 
   131     0000                     	;# 
   132     0001                     	;# 
   133     0002                     	;# 
   134     0003                     	;# 
   135     0004                     	;# 
   136     0005                     	;# 
   137     0006                     	;# 
   138     0007                     	;# 
   139     0008                     	;# 
   140     0009                     	;# 
   141     000A                     	;# 
   142     000B                     	;# 
   143     000C                     	;# 
   144     000D                     	;# 
   145     000E                     	;# 
   146     000E                     	;# 
   147     000F                     	;# 
   148     0010                     	;# 
   149     0011                     	;# 
   150     0012                     	;# 
   151     0013                     	;# 
   152     0014                     	;# 
   153     0015                     	;# 
   154     0015                     	;# 
   155     0016                     	;# 
   156     0017                     	;# 
   157     0018                     	;# 
   158     0019                     	;# 
   159     001A                     	;# 
   160     001B                     	;# 
   161     001B                     	;# 
   162     001C                     	;# 
   163     001D                     	;# 
   164     001E                     	;# 
   165     001F                     	;# 
   166     0081                     	;# 
   167     0085                     	;# 
   168     0086                     	;# 
   169     0087                     	;# 
   170     0088                     	;# 
   171     0089                     	;# 
   172     008C                     	;# 
   173     008D                     	;# 
   174     008E                     	;# 
   175     0091                     	;# 
   176     0092                     	;# 
   177     0093                     	;# 
   178     0094                     	;# 
   179     0098                     	;# 
   180     0099                     	;# 
   181     009C                     	;# 
   182     009D                     	;# 
   183     009E                     	;# 
   184     009F                     	;# 
   185     010C                     	;# 
   186     010D                     	;# 
   187     010E                     	;# 
   188     010F                     	;# 
   189     018C                     	;# 
   190     018D                     	;# 
   191                           
   192                           	psect	idataBANK0
   193     0724                     __pidataBANK0:
   194                           
   195                           ;initializer for _countdown
   196     0724  343C               	retlw	60
   197                           
   198                           	psect	strings
   199     0370                     __pstrings:
   200     0370                     stringtab:
   201     0370                     __stringtab:
   202                           
   203                           ;	String table - string pointers are 1 byte each
   204     0370  1BFF               	btfsc	btemp+1,7
   205     0371  2B7A               	ljmp	stringcode
   206     0372  1383               	bcf	3,7
   207     0373  187F               	btfsc	btemp+1,0
   208     0374  1783               	bsf	3,7
   209     0375  0800               	movf	0,w
   210     0376  0A84               	incf	4,f
   211     0377  1903               	skipnz
   212     0378  0AFF               	incf	btemp+1,f
   213     0379  0008               	return
   214     037A                     stringcode:
   215     037A                     stringdir:
   216     037A  3003               	movlw	high stringdir
   217     037B  008A               	movwf	10
   218     037C  0804               	movf	4,w
   219     037D  0A84               	incf	4,f
   220     037E  0782               	addwf	2,f
   221     037F                     __stringbase:
   222     037F  3400               	retlw	0
   223     0380                     __end_of__stringtab:
   224     0380                     _keys:
   225     0380  3423               	retlw	35
   226     0381  3437               	retlw	55
   227     0382  3434               	retlw	52
   228     0383  3431               	retlw	49
   229     0384  342A               	retlw	42
   230     0385  3438               	retlw	56
   231     0386  3435               	retlw	53
   232     0387  3432               	retlw	50
   233     0388  3430               	retlw	48
   234     0389  3439               	retlw	57
   235     038A  3436               	retlw	54
   236     038B  3433               	retlw	51
   237     038C                     __end_of_keys:
   238     038C                     _rowMask:
   239     038C  3401               	retlw	1
   240     038D  3402               	retlw	2
   241     038E  3404               	retlw	4
   242     038F  3408               	retlw	8
   243     0390                     __end_of_rowMask:
   244     0390                     _colMask:
   245     0390  34FE               	retlw	254
   246     0391  34FD               	retlw	253
   247     0392  34FB               	retlw	251
   248     0393                     __end_of_colMask:
   249     0006                     _PORTB	set	6
   250     0001                     _TMR0	set	1
   251     0008                     _PORTD	set	8
   252     0009                     _PORTEbits	set	9
   253     001A                     _RCREG	set	26
   254     0019                     _TXREG	set	25
   255     005F                     _GIE	set	95
   256     005D                     _TMR0IE	set	93
   257     005A                     _TMR0IF	set	90
   258     0065                     _RCIF	set	101
   259     0064                     _TXIF	set	100
   260     0039                     _RC1	set	57
   261     0038                     _RC0	set	56
   262     00C4                     _CREN	set	196
   263     00C7                     _SPEN	set	199
   264     0089                     _TRISEbits	set	137
   265     0099                     _SPBRG	set	153
   266     0089                     _TRISE	set	137
   267     0088                     _TRISD	set	136
   268     0087                     _TRISC	set	135
   269     0086                     _TRISB	set	134
   270     0085                     _TRISA	set	133
   271     0408                     _PS0	set	1032
   272     0409                     _PS1	set	1033
   273     040A                     _PS2	set	1034
   274     040B                     _PSA	set	1035
   275     040D                     _T0CS	set	1037
   276     04C5                     _TXEN	set	1221
   277     04C4                     _SYNC	set	1220
   278     04C2                     _BRGH	set	1218
   279     043F                     _TRISC7	set	1087
   280     043E                     _TRISC6	set	1086
   281     0393                     STR_8:
   282     0393  3443               	retlw	67	;'C'
   283     0394  346F               	retlw	111	;'o'
   284     0395  3464               	retlw	100	;'d'
   285     0396  3469               	retlw	105	;'i'
   286     0397  3463               	retlw	99	;'c'
   287     0398  3465               	retlw	101	;'e'
   288     0399  3420               	retlw	32	;' '
   289     039A  3453               	retlw	83	;'S'
   290     039B  3463               	retlw	99	;'c'
   291     039C  3461               	retlw	97	;'a'
   292     039D  3464               	retlw	100	;'d'
   293     039E  3475               	retlw	117	;'u'
   294     039F  3474               	retlw	116	;'t'
   295     03A0  346F               	retlw	111	;'o'
   296     03A1  3400               	retlw	0
   297     03A2                     STR_6:
   298     03A2  3441               	retlw	65	;'A'
   299     03A3  3474               	retlw	116	;'t'
   300     03A4  3474               	retlw	116	;'t'
   301     03A5  3465               	retlw	101	;'e'
   302     03A6  346E               	retlw	110	;'n'
   303     03A7  3464               	retlw	100	;'d'
   304     03A8  3465               	retlw	101	;'e'
   305     03A9  3472               	retlw	114	;'r'
   306     03AA  3465               	retlw	101	;'e'
   307     03AB  342E               	retlw	46	;'.'
   308     03AC  342E               	retlw	46	;'.'
   309     03AD  342E               	retlw	46	;'.'
   310     03AE  342E               	retlw	46	;'.'
   311     03AF  3400               	retlw	0
   312     03B0                     STR_5:
   313     03B0  3441               	retlw	65	;'A'
   314     03B1  3474               	retlw	116	;'t'
   315     03B2  3474               	retlw	116	;'t'
   316     03B3  3465               	retlw	101	;'e'
   317     03B4  346E               	retlw	110	;'n'
   318     03B5  3464               	retlw	100	;'d'
   319     03B6  3465               	retlw	101	;'e'
   320     03B7  3472               	retlw	114	;'r'
   321     03B8  3465               	retlw	101	;'e'
   322     03B9  342E               	retlw	46	;'.'
   323     03BA  342E               	retlw	46	;'.'
   324     03BB  342E               	retlw	46	;'.'
   325     03BC  3400               	retlw	0
   326     03BD                     STR_4:
   327     03BD  3441               	retlw	65	;'A'
   328     03BE  3474               	retlw	116	;'t'
   329     03BF  3474               	retlw	116	;'t'
   330     03C0  3465               	retlw	101	;'e'
   331     03C1  346E               	retlw	110	;'n'
   332     03C2  3464               	retlw	100	;'d'
   333     03C3  3465               	retlw	101	;'e'
   334     03C4  3472               	retlw	114	;'r'
   335     03C5  3465               	retlw	101	;'e'
   336     03C6  342E               	retlw	46	;'.'
   337     03C7  342E               	retlw	46	;'.'
   338     03C8  3400               	retlw	0
   339     03C9                     STR_3:
   340     03C9  3441               	retlw	65	;'A'
   341     03CA  3474               	retlw	116	;'t'
   342     03CB  3474               	retlw	116	;'t'
   343     03CC  3465               	retlw	101	;'e'
   344     03CD  346E               	retlw	110	;'n'
   345     03CE  3464               	retlw	100	;'d'
   346     03CF  3465               	retlw	101	;'e'
   347     03D0  3472               	retlw	114	;'r'
   348     03D1  3465               	retlw	101	;'e'
   349     03D2  342E               	retlw	46	;'.'
   350     03D3  3400               	retlw	0
   351     03D4                     STR_2:
   352     03D4  3441               	retlw	65	;'A'
   353     03D5  3474               	retlw	116	;'t'
   354     03D6  3474               	retlw	116	;'t'
   355     03D7  3465               	retlw	101	;'e'
   356     03D8  346E               	retlw	110	;'n'
   357     03D9  3464               	retlw	100	;'d'
   358     03DA  3465               	retlw	101	;'e'
   359     03DB  3472               	retlw	114	;'r'
   360     03DC  3465               	retlw	101	;'e'
   361     03DD  3400               	retlw	0
   362     03DE                     STR_7:
   363     03DE  3452               	retlw	82	;'R'
   364     03DF  3469               	retlw	105	;'i'
   365     03E0  3463               	retlw	99	;'c'
   366     03E1  3465               	retlw	101	;'e'
   367     03E2  3476               	retlw	118	;'v'
   368     03E3  3475               	retlw	117	;'u'
   369     03E4  3474               	retlw	116	;'t'
   370     03E5  346F               	retlw	111	;'o'
   371     03E6  3400               	retlw	0
   372     03E7                     STR_1:
   373     03E7  3450               	retlw	80	;'P'
   374     03E8  3472               	retlw	114	;'r'
   375     03E9  3465               	retlw	101	;'e'
   376     03EA  346D               	retlw	109	;'m'
   377     03EB  3469               	retlw	105	;'i'
   378     03EC  3420               	retlw	32	;' '
   379     03ED  342A               	retlw	42	;'*'
   380     03EE  3400               	retlw	0
   381                           
   382                           	psect	cinit
   383     000F                     start_initialization:	
   384                           ; #config settings
   385                           
   386     000F                     __initialization:
   387                           
   388                           ; Initialize objects allocated to BANK0
   389     000F  120A  118A  2724  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   390     0014  00EC               	movwf	__pdataBANK0& (0+127)
   391                           
   392                           ; Clear objects allocated to BANK0
   393     0015  1383               	bcf	3,7	;select IRP bank0
   394     0016  3020               	movlw	low __pbssBANK0
   395     0017  0084               	movwf	4
   396     0018  3053               	movlw	low (__pbssBANK0+51)
   397     0019  120A  118A  2712  120A  118A  	fcall	clear_ram0
   398                           
   399                           ; Clear objects allocated to BITBANK0
   400     001E  01EB               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   401                           
   402                           ; Clear objects allocated to COMMON
   403     001F  01FA               	clrf	__pbssCOMMON& (0+127)
   404     0020  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   405     0021                     end_of_initialization:	
   406                           ;End of C runtime variable initialization code
   407                           
   408     0021                     __end_of__initialization:
   409     0021  0183               	clrf	3
   410     0022  120A  118A  2825   	ljmp	_main	;jump to C main() function
   411                           
   412                           	psect	bssCOMMON
   413     007A                     __pbssCOMMON:
   414     007A                     _num2:
   415     007A                     	ds	1
   416     007B                     _num1:
   417     007B                     	ds	1
   418                           
   419                           	psect	bitbssBANK0
   420     0358                     __pbitbssBANK0:
   421     0358                     _old_btn:
   422     0358                     	ds	1
   423                           
   424                           	psect	bssBANK0
   425     0020                     __pbssBANK0:
   426     0020                     _stringa:
   427     0020                     	ds	16
   428     0030                     _data:
   429     0030                     	ds	6
   430     0036                     _codice:
   431     0036                     	ds	6
   432     003C                     _count:
   433     003C                     	ds	2
   434     003E                     _index:
   435     003E                     	ds	2
   436     0040                     _flag:
   437     0040                     	ds	2
   438     0042                     _stringPosition:
   439     0042                     	ds	2
   440     0044                     _randomNum:
   441     0044                     	ds	1
   442     0045                     _received:
   443     0045                     	ds	1
   444     0046                     _restart:
   445     0046                     	ds	1
   446     0047                     _old_stato:
   447     0047                     	ds	1
   448     0048                     _stato:
   449     0048                     	ds	1
   450     0049                     _rowScan:
   451     0049                     	ds	1
   452     004A                     _colScan:
   453     004A                     	ds	1
   454     004B                     _keyok:
   455     004B                     	ds	1
   456     004C                     _keypressed:
   457     004C                     	ds	1
   458     004D                     _num5:
   459     004D                     	ds	1
   460     004E                     _num4:
   461     004E                     	ds	1
   462     004F                     _num3:
   463     004F                     	ds	1
   464     0050                     _print_countdown:
   465     0050                     	ds	3
   466                           
   467                           	psect	dataBANK0
   468     006C                     __pdataBANK0:
   469     006C                     _countdown:
   470     006C                     	ds	1
   471                           
   472                           	psect	clrtext
   473     0712                     clear_ram0:	
   474                           ;	Called with FSR containing the base address, and
   475                           ;	W with the last address+1
   476                           
   477     0712  0064               	clrwdt	;clear the watchdog before getting into this loop
   478     0713                     clrloop0:
   479     0713  0180               	clrf	0	;clear RAM location pointed to by FSR
   480     0714  0A84               	incf	4,f	;increment pointer
   481     0715  0604               	xorwf	4,w	;XOR with final address
   482     0716  1903               	btfsc	3,2	;have we reached the end yet?
   483     0717  3400               	retlw	0	;all done for this memory range, return
   484     0718  0604               	xorwf	4,w	;XOR again to restore value
   485     0719  2F13               	goto	clrloop0	;do the next byte
   486                           
   487                           	psect	cstackCOMMON
   488     0070                     __pcstackCOMMON:
   489     0070                     ?_UART_Init:
   490     0070                     ?_initLCD:	
   491                           ; 1 bytes @ 0x0
   492                           
   493     0070                     ?_Timer0_Init:	
   494                           ; 1 bytes @ 0x0
   495                           
   496     0070                     ?_RS485_TxEnable:	
   497                           ; 1 bytes @ 0x0
   498                           
   499     0070                     ?_UART_Write:	
   500                           ; 1 bytes @ 0x0
   501                           
   502     0070                     ?_GenerateRandomNumber:	
   503                           ; 1 bytes @ 0x0
   504                           
   505     0070                     ?_KeyPadReader:	
   506                           ; 1 bytes @ 0x0
   507                           
   508     0070                     ?_RS485_RxEnable:	
   509                           ; 1 bytes @ 0x0
   510                           
   511     0070                     ?_UART_Read:	
   512                           ; 1 bytes @ 0x0
   513                           
   514     0070                     ?_main:	
   515                           ; 1 bytes @ 0x0
   516                           
   517     0070                     ?_ISR:	
   518                           ; 1 bytes @ 0x0
   519                           
   520     0070                     ??_ISR:	
   521                           ; 1 bytes @ 0x0
   522                           
   523                           
   524                           ; 1 bytes @ 0x0
   525     0070                     	ds	2
   526     0072                     ??_UART_Init:
   527     0072                     ??_Timer0_Init:	
   528                           ; 1 bytes @ 0x2
   529                           
   530     0072                     ?_lcdSend:	
   531                           ; 1 bytes @ 0x2
   532                           
   533     0072                     ??_RS485_TxEnable:	
   534                           ; 1 bytes @ 0x2
   535                           
   536     0072                     ??_UART_Write:	
   537                           ; 1 bytes @ 0x2
   538                           
   539     0072                     ??_GenerateRandomNumber:	
   540                           ; 1 bytes @ 0x2
   541                           
   542     0072                     ??_KeyPadReader:	
   543                           ; 1 bytes @ 0x2
   544                           
   545     0072                     ??_RS485_RxEnable:	
   546                           ; 1 bytes @ 0x2
   547                           
   548     0072                     ?___bmul:	
   549                           ; 1 bytes @ 0x2
   550                           
   551     0072                     ?___awmod:	
   552                           ; 1 bytes @ 0x2
   553                           
   554     0072                     UART_Write@data:	
   555                           ; 2 bytes @ 0x2
   556                           
   557     0072                     lcdSend@tipo:	
   558                           ; 1 bytes @ 0x2
   559                           
   560     0072                     ___bmul@multiplicand:	
   561                           ; 1 bytes @ 0x2
   562                           
   563     0072                     GenerateRandomNumber@count:	
   564                           ; 1 bytes @ 0x2
   565                           
   566     0072                     ___awmod@divisor:	
   567                           ; 2 bytes @ 0x2
   568                           
   569                           
   570                           ; 2 bytes @ 0x2
   571     0072                     	ds	1
   572     0073                     ??_lcdSend:
   573     0073                     ??___bmul:	
   574                           ; 1 bytes @ 0x3
   575                           
   576                           
   577                           ; 1 bytes @ 0x3
   578     0073                     	ds	1
   579     0074                     GenerateRandomNumber@randomNum:
   580     0074                     ___bmul@product:	
   581                           ; 1 bytes @ 0x4
   582                           
   583     0074                     ___awmod@dividend:	
   584                           ; 1 bytes @ 0x4
   585                           
   586                           
   587                           ; 2 bytes @ 0x4
   588     0074                     	ds	1
   589     0075                     lcdSend@dato:
   590     0075                     ___bmul@multiplier:	
   591                           ; 1 bytes @ 0x5
   592                           
   593                           
   594                           ; 1 bytes @ 0x5
   595     0075                     	ds	1
   596     0076                     ??_initLCD:
   597     0076                     ?_lcdPrint:	
   598                           ; 1 bytes @ 0x6
   599                           
   600     0076                     ?_potenza:	
   601                           ; 1 bytes @ 0x6
   602                           
   603     0076                     ??___awmod:	
   604                           ; 1 bytes @ 0x6
   605                           
   606     0076                     potenza@e:	
   607                           ; 1 bytes @ 0x6
   608                           
   609     0076                     lcdPrint@str:	
   610                           ; 1 bytes @ 0x6
   611                           
   612                           
   613                           ; 2 bytes @ 0x6
   614     0076                     	ds	1
   615     0077                     ??_potenza:
   616     0077                     ___awmod@counter:	
   617                           ; 1 bytes @ 0x7
   618                           
   619                           
   620                           ; 1 bytes @ 0x7
   621     0077                     	ds	1
   622     0078                     ??___awdiv:
   623     0078                     ___awmod@sign:	
   624                           ; 1 bytes @ 0x8
   625                           
   626     0078                     lcdPrint@n:	
   627                           ; 1 bytes @ 0x8
   628                           
   629                           
   630                           ; 2 bytes @ 0x8
   631     0078                     	ds	2
   632     007A                     ??_main:
   633                           
   634                           	psect	cstackBANK0
   635     0053                     __pcstackBANK0:	
   636                           ; 1 bytes @ 0xA
   637                           
   638     0053                     ??_lcdPrint:
   639     0053                     potenza@b:	
   640                           ; 1 bytes @ 0x0
   641                           
   642                           
   643                           ; 1 bytes @ 0x0
   644     0053                     	ds	1
   645     0054                     potenza@i:
   646                           
   647                           ; 2 bytes @ 0x1
   648     0054                     	ds	2
   649     0056                     potenza@n:
   650                           
   651                           ; 1 bytes @ 0x3
   652     0056                     	ds	1
   653     0057                     ?___awdiv:
   654     0057                     ___awdiv@divisor:	
   655                           ; 2 bytes @ 0x4
   656                           
   657                           
   658                           ; 2 bytes @ 0x4
   659     0057                     	ds	2
   660     0059                     ___awdiv@dividend:
   661                           
   662                           ; 2 bytes @ 0x6
   663     0059                     	ds	2
   664     005B                     ___awdiv@counter:
   665                           
   666                           ; 1 bytes @ 0x8
   667     005B                     	ds	1
   668     005C                     ___awdiv@sign:
   669                           
   670                           ; 1 bytes @ 0x9
   671     005C                     	ds	1
   672     005D                     ___awdiv@quotient:
   673                           
   674                           ; 2 bytes @ 0xA
   675     005D                     	ds	2
   676     005F                     ?_intToString:
   677     005F                     intToString@n:	
   678                           ; 1 bytes @ 0xC
   679                           
   680                           
   681                           ; 2 bytes @ 0xC
   682     005F                     	ds	2
   683     0061                     intToString@str:
   684                           
   685                           ; 1 bytes @ 0xE
   686     0061                     	ds	1
   687     0062                     ??_intToString:
   688                           
   689                           ; 1 bytes @ 0xF
   690     0062                     	ds	3
   691     0065                     intToString@t:
   692                           
   693                           ; 1 bytes @ 0x12
   694     0065                     	ds	1
   695     0066                     intToString@cifre:
   696                           
   697                           ; 1 bytes @ 0x13
   698     0066                     	ds	1
   699     0067                     intToString@i:
   700                           
   701                           ; 1 bytes @ 0x14
   702     0067                     	ds	1
   703     0068                     ??_UART_Read:
   704                           
   705                           ; 1 bytes @ 0x15
   706     0068                     	ds	3
   707                           
   708                           	psect	maintext
   709     0025                     __pmaintext:	
   710 ;;
   711 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   712 ;;
   713 ;; *************** function _main *****************
   714 ;; Defined at:
   715 ;;		line 103 in file "main.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;		None
   718 ;; Auto vars:     Size  Location     Type
   719 ;;		None
   720 ;; Return value:  Size  Location     Type
   721 ;;                  1    wreg      void 
   722 ;; Registers used:
   723 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   724 ;; Tracked objects:
   725 ;;		On entry : B00/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   729 ;;      Params:         0       0       0       0       0
   730 ;;      Locals:         0       0       0       0       0
   731 ;;      Temps:          0       0       0       0       0
   732 ;;      Totals:         0       0       0       0       0
   733 ;;Total ram usage:        0 bytes
   734 ;; Hardware stack levels required when called: 5
   735 ;; This function calls:
   736 ;;		_GenerateRandomNumber
   737 ;;		_KeyPadReader
   738 ;;		_RS485_RxEnable
   739 ;;		_RS485_TxEnable
   740 ;;		_Timer0_Init
   741 ;;		_UART_Init
   742 ;;		_UART_Read
   743 ;;		_UART_Write
   744 ;;		_initLCD
   745 ;;		_lcdPrint
   746 ;;		_lcdSend
   747 ;; This function is called by:
   748 ;;		Startup code after reset
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752     0025                     _main:	
   753                           ;psect for function _main
   754                           
   755     0025                     l2079:	
   756                           ;incstack = 0
   757                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   758                           
   759                           
   760                           ;main.c: 105:     TRISA=0x00;
   761     0025  1683               	bsf	3,5	;RP0=1, select bank1
   762     0026  1303               	bcf	3,6	;RP1=0, select bank1
   763     0027  0185               	clrf	5	;volatile
   764                           
   765                           ;main.c: 106:  TRISB=0x00;
   766     0028  0186               	clrf	6	;volatile
   767                           
   768                           ;main.c: 107:  TRISC=0x00;
   769     0029  0187               	clrf	7	;volatile
   770                           
   771                           ;main.c: 108:  TRISD=0x00;
   772     002A  0188               	clrf	8	;volatile
   773                           
   774                           ;main.c: 109:     TRISE=0X00;
   775     002B  0189               	clrf	9	;volatile
   776     002C                     l2081:
   777                           
   778                           ;main.c: 110:     UART_Init();
   779     002C  120A  118A  26E7  120A  118A  	fcall	_UART_Init
   780     0031                     l2083:
   781                           
   782                           ;main.c: 111:     initLCD();
   783     0031  120A  118A  254B  120A  118A  	fcall	_initLCD
   784     0036                     l2085:
   785                           
   786                           ;main.c: 112:     Timer0_Init();
   787     0036  120A  118A  26F9  120A  118A  	fcall	_Timer0_Init
   788     003B                     l2087:
   789                           
   790                           ;main.c: 114:     {;main.c: 115:         lcdSend(0x01, 0);
   791     003B  01F2               	clrf	lcdSend@tipo
   792     003C  3001               	movlw	1
   793     003D  120A  118A  2670  120A  118A  	fcall	_lcdSend
   794     0042                     l2089:
   795                           
   796                           ;main.c: 116:         lcdPrint("Premi *");
   797     0042  3068               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   798     0043  00F6               	movwf	lcdPrint@str
   799     0044  3080               	movlw	128
   800     0045  00F7               	movwf	lcdPrint@str+1
   801     0046  120A  118A  25FE  120A  118A  	fcall	_lcdPrint
   802     004B                     l2091:
   803                           
   804                           ;main.c: 117:         RS485_TxEnable();
   805     004B  120A  118A  271A  120A  118A  	fcall	_RS485_TxEnable
   806     0050                     l2093:
   807                           
   808                           ;main.c: 118:         UART_Write('P');
   809     0050  3050               	movlw	80
   810     0051  120A  118A  2708  120A  118A  	fcall	_UART_Write
   811     0056                     l2095:
   812                           
   813                           ;main.c: 119:         UART_Write('r');
   814     0056  3072               	movlw	114
   815     0057  120A  118A  2708  120A  118A  	fcall	_UART_Write
   816     005C                     l2097:
   817                           
   818                           ;main.c: 120:         UART_Write('e');
   819     005C  3065               	movlw	101
   820     005D  120A  118A  2708  120A  118A  	fcall	_UART_Write
   821     0062                     l2099:
   822                           
   823                           ;main.c: 121:         UART_Write('m');
   824     0062  306D               	movlw	109
   825     0063  120A  118A  2708  120A  118A  	fcall	_UART_Write
   826     0068                     l2101:
   827                           
   828                           ;main.c: 122:         UART_Write('i');
   829     0068  3069               	movlw	105
   830     0069  120A  118A  2708  120A  118A  	fcall	_UART_Write
   831     006E                     l2103:
   832                           
   833                           ;main.c: 123:         UART_Write(' ');
   834     006E  3020               	movlw	32
   835     006F  120A  118A  2708  120A  118A  	fcall	_UART_Write
   836     0074                     l2105:
   837                           
   838                           ;main.c: 124:         UART_Write('*');
   839     0074  302A               	movlw	42
   840     0075  120A  118A  2708  120A  118A  	fcall	_UART_Write
   841     007A                     l2107:
   842                           
   843                           ;main.c: 125:         UART_Write('\r');
   844     007A  300D               	movlw	13
   845     007B  120A  118A  2708  120A  118A  	fcall	_UART_Write
   846     0080                     l2109:
   847                           
   848                           ;main.c: 126:         UART_Write('\n');
   849     0080  300A               	movlw	10
   850     0081  120A  118A  2708  120A  118A  	fcall	_UART_Write
   851     0086                     l2111:
   852                           
   853                           ;main.c: 128:         num1 = GenerateRandomNumber();
   854     0086  120A  118A  26B9  120A  118A  	fcall	_GenerateRandomNumber
   855     008B  00FB               	movwf	_num1
   856     008C                     l2113:
   857                           
   858                           ;main.c: 130:         num2 = GenerateRandomNumber();
   859     008C  120A  118A  26B9  120A  118A  	fcall	_GenerateRandomNumber
   860     0091  00FA               	movwf	_num2
   861     0092                     l2115:
   862                           
   863                           ;main.c: 132:         num3 = GenerateRandomNumber();
   864     0092  120A  118A  26B9  120A  118A  	fcall	_GenerateRandomNumber
   865     0097  1283               	bcf	3,5	;RP0=0, select bank0
   866     0098  1303               	bcf	3,6	;RP1=0, select bank0
   867     0099  00CF               	movwf	_num3
   868     009A                     l2117:
   869                           
   870                           ;main.c: 134:         num4 = GenerateRandomNumber();
   871     009A  120A  118A  26B9  120A  118A  	fcall	_GenerateRandomNumber
   872     009F  1283               	bcf	3,5	;RP0=0, select bank0
   873     00A0  1303               	bcf	3,6	;RP1=0, select bank0
   874     00A1  00CE               	movwf	_num4
   875     00A2                     l2119:
   876                           
   877                           ;main.c: 136:         num5 = GenerateRandomNumber();
   878     00A2  120A  118A  26B9  120A  118A  	fcall	_GenerateRandomNumber
   879     00A7  1283               	bcf	3,5	;RP0=0, select bank0
   880     00A8  1303               	bcf	3,6	;RP1=0, select bank0
   881     00A9  00CD               	movwf	_num5
   882                           
   883                           ;main.c: 138:         while (codice[0] == '\0')
   884     00AA  28C0               	goto	l2127
   885     00AB                     l2121:
   886                           
   887                           ;main.c: 139:         {;main.c: 140:             KeyPadReader();
   888     00AB  120A  118A  22EB  120A  118A  	fcall	_KeyPadReader
   889     00B0                     l2123:
   890                           
   891                           ;main.c: 141:             if (keys[keypressed] == '*'){
   892     00B0  1283               	bcf	3,5	;RP0=0, select bank0
   893     00B1  1303               	bcf	3,6	;RP1=0, select bank0
   894     00B2  084C               	movf	_keypressed,w
   895     00B3  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
   896     00B4  0084               	movwf	4
   897     00B5  120A  118A  237A  120A  118A  	fcall	stringdir
   898     00BA  3A2A               	xorlw	42
   899     00BB  1D03               	skipz
   900     00BC  28BE               	goto	u2121
   901     00BD  28BF               	goto	u2120
   902     00BE                     u2121:
   903     00BE  28C0               	goto	l2127
   904     00BF                     u2120:
   905     00BF  28C5               	goto	l2129
   906     00C0                     l2127:
   907                           
   908                           ;main.c: 138:         while (codice[0] == '\0')
   909     00C0  0836               	movf	_codice,w
   910     00C1  1903               	btfsc	3,2
   911     00C2  28C4               	goto	u2131
   912     00C3  28C5               	goto	u2130
   913     00C4                     u2131:
   914     00C4  28AB               	goto	l2121
   915     00C5                     u2130:
   916     00C5                     l2129:
   917                           
   918                           ;main.c: 147:             lcdSend(0x01, 0);
   919     00C5  01F2               	clrf	lcdSend@tipo
   920     00C6  3001               	movlw	1
   921     00C7  120A  118A  2670  120A  118A  	fcall	_lcdSend
   922     00CC                     l2131:
   923                           
   924                           ;main.c: 148:             lcdPrint("Attendere");
   925     00CC  3055               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   926     00CD  00F6               	movwf	lcdPrint@str
   927     00CE  3080               	movlw	128
   928     00CF  00F7               	movwf	lcdPrint@str+1
   929     00D0  120A  118A  25FE  120A  118A  	fcall	_lcdPrint
   930     00D5                     l2133:
   931                           
   932                           ;main.c: 149:             RS485_TxEnable();
   933     00D5  120A  118A  271A  120A  118A  	fcall	_RS485_TxEnable
   934                           
   935                           ;main.c: 150:             while(num1 != 0x30 && num1 != 0x31 && num1 != 0x32 && num1 != 
      +                          0x33 &&
   936     00DA  28E1               	goto	l2137
   937     00DB                     l2135:
   938                           
   939                           ;main.c: 152:                   num1 != 0x38 && num1 != 0x39){;main.c: 153:             
      +                          num1 = GenerateRandomNumber();
   940     00DB  120A  118A  26B9  120A  118A  	fcall	_GenerateRandomNumber
   941     00E0  00FB               	movwf	_num1
   942     00E1                     l2137:
   943                           
   944                           ;main.c: 150:             while(num1 != 0x30 && num1 != 0x31 && num1 != 0x32 && num1 != 
      +                          0x33 &&
   945     00E1  3030               	movlw	48
   946     00E2  067B               	xorwf	_num1,w
   947     00E3  1903               	btfsc	3,2
   948     00E4  28E6               	goto	u2141
   949     00E5  28E7               	goto	u2140
   950     00E6                     u2141:
   951     00E6  291D               	goto	l2157
   952     00E7                     u2140:
   953     00E7                     l2139:
   954     00E7  3031               	movlw	49
   955     00E8  067B               	xorwf	_num1,w
   956     00E9  1903               	btfsc	3,2
   957     00EA  28EC               	goto	u2151
   958     00EB  28ED               	goto	u2150
   959     00EC                     u2151:
   960     00EC  291D               	goto	l2157
   961     00ED                     u2150:
   962     00ED                     l2141:
   963     00ED  3032               	movlw	50
   964     00EE  067B               	xorwf	_num1,w
   965     00EF  1903               	btfsc	3,2
   966     00F0  28F2               	goto	u2161
   967     00F1  28F3               	goto	u2160
   968     00F2                     u2161:
   969     00F2  291D               	goto	l2157
   970     00F3                     u2160:
   971     00F3                     l2143:
   972     00F3  3033               	movlw	51
   973     00F4  067B               	xorwf	_num1,w
   974     00F5  1903               	btfsc	3,2
   975     00F6  28F8               	goto	u2171
   976     00F7  28F9               	goto	u2170
   977     00F8                     u2171:
   978     00F8  291D               	goto	l2157
   979     00F9                     u2170:
   980     00F9                     l2145:
   981     00F9  3034               	movlw	52
   982     00FA  067B               	xorwf	_num1,w
   983     00FB  1903               	btfsc	3,2
   984     00FC  28FE               	goto	u2181
   985     00FD  28FF               	goto	u2180
   986     00FE                     u2181:
   987     00FE  291D               	goto	l2157
   988     00FF                     u2180:
   989     00FF                     l2147:
   990     00FF  3035               	movlw	53
   991     0100  067B               	xorwf	_num1,w
   992     0101  1903               	btfsc	3,2
   993     0102  2904               	goto	u2191
   994     0103  2905               	goto	u2190
   995     0104                     u2191:
   996     0104  291D               	goto	l2157
   997     0105                     u2190:
   998     0105                     l2149:
   999     0105  3036               	movlw	54
  1000     0106  067B               	xorwf	_num1,w
  1001     0107  1903               	btfsc	3,2
  1002     0108  290A               	goto	u2201
  1003     0109  290B               	goto	u2200
  1004     010A                     u2201:
  1005     010A  291D               	goto	l2157
  1006     010B                     u2200:
  1007     010B                     l2151:
  1008     010B  3037               	movlw	55
  1009     010C  067B               	xorwf	_num1,w
  1010     010D  1903               	btfsc	3,2
  1011     010E  2910               	goto	u2211
  1012     010F  2911               	goto	u2210
  1013     0110                     u2211:
  1014     0110  291D               	goto	l2157
  1015     0111                     u2210:
  1016     0111                     l2153:
  1017     0111  3038               	movlw	56
  1018     0112  067B               	xorwf	_num1,w
  1019     0113  1903               	btfsc	3,2
  1020     0114  2916               	goto	u2221
  1021     0115  2917               	goto	u2220
  1022     0116                     u2221:
  1023     0116  291D               	goto	l2157
  1024     0117                     u2220:
  1025     0117                     l2155:
  1026     0117  3039               	movlw	57
  1027     0118  067B               	xorwf	_num1,w
  1028     0119  1D03               	btfss	3,2
  1029     011A  291C               	goto	u2231
  1030     011B  291D               	goto	u2230
  1031     011C                     u2231:
  1032     011C  28DB               	goto	l2135
  1033     011D                     u2230:
  1034     011D                     l2157:
  1035                           
  1036                           ;main.c: 157:             lcdSend(0x01, 0);
  1037     011D  01F2               	clrf	lcdSend@tipo
  1038     011E  3001               	movlw	1
  1039     011F  120A  118A  2670  120A  118A  	fcall	_lcdSend
  1040     0124                     l2159:
  1041                           
  1042                           ;main.c: 158:             lcdPrint("Attendere.");
  1043     0124  304A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1044     0125  00F6               	movwf	lcdPrint@str
  1045     0126  3080               	movlw	128
  1046     0127  00F7               	movwf	lcdPrint@str+1
  1047     0128  120A  118A  25FE  120A  118A  	fcall	_lcdPrint
  1048                           
  1049                           ;main.c: 159:             while(num2 != 0x30 && num2 != 0x31 && num2 != 0x32 && num2 != 
      +                          0x33 &&
  1050     012D  2934               	goto	l2163
  1051     012E                     l2161:
  1052                           
  1053                           ;main.c: 161:                   num2 != 0x38 && num2 != 0x39){;main.c: 162:             
      +                          num2 = GenerateRandomNumber();
  1054     012E  120A  118A  26B9  120A  118A  	fcall	_GenerateRandomNumber
  1055     0133  00FA               	movwf	_num2
  1056     0134                     l2163:
  1057                           
  1058                           ;main.c: 159:             while(num2 != 0x30 && num2 != 0x31 && num2 != 0x32 && num2 != 
      +                          0x33 &&
  1059     0134  3030               	movlw	48
  1060     0135  067A               	xorwf	_num2,w
  1061     0136  1903               	btfsc	3,2
  1062     0137  2939               	goto	u2241
  1063     0138  293A               	goto	u2240
  1064     0139                     u2241:
  1065     0139  2970               	goto	l2183
  1066     013A                     u2240:
  1067     013A                     l2165:
  1068     013A  3031               	movlw	49
  1069     013B  067A               	xorwf	_num2,w
  1070     013C  1903               	btfsc	3,2
  1071     013D  293F               	goto	u2251
  1072     013E  2940               	goto	u2250
  1073     013F                     u2251:
  1074     013F  2970               	goto	l2183
  1075     0140                     u2250:
  1076     0140                     l2167:
  1077     0140  3032               	movlw	50
  1078     0141  067A               	xorwf	_num2,w
  1079     0142  1903               	btfsc	3,2
  1080     0143  2945               	goto	u2261
  1081     0144  2946               	goto	u2260
  1082     0145                     u2261:
  1083     0145  2970               	goto	l2183
  1084     0146                     u2260:
  1085     0146                     l2169:
  1086     0146  3033               	movlw	51
  1087     0147  067A               	xorwf	_num2,w
  1088     0148  1903               	btfsc	3,2
  1089     0149  294B               	goto	u2271
  1090     014A  294C               	goto	u2270
  1091     014B                     u2271:
  1092     014B  2970               	goto	l2183
  1093     014C                     u2270:
  1094     014C                     l2171:
  1095     014C  3034               	movlw	52
  1096     014D  067A               	xorwf	_num2,w
  1097     014E  1903               	btfsc	3,2
  1098     014F  2951               	goto	u2281
  1099     0150  2952               	goto	u2280
  1100     0151                     u2281:
  1101     0151  2970               	goto	l2183
  1102     0152                     u2280:
  1103     0152                     l2173:
  1104     0152  3035               	movlw	53
  1105     0153  067A               	xorwf	_num2,w
  1106     0154  1903               	btfsc	3,2
  1107     0155  2957               	goto	u2291
  1108     0156  2958               	goto	u2290
  1109     0157                     u2291:
  1110     0157  2970               	goto	l2183
  1111     0158                     u2290:
  1112     0158                     l2175:
  1113     0158  3036               	movlw	54
  1114     0159  067A               	xorwf	_num2,w
  1115     015A  1903               	btfsc	3,2
  1116     015B  295D               	goto	u2301
  1117     015C  295E               	goto	u2300
  1118     015D                     u2301:
  1119     015D  2970               	goto	l2183
  1120     015E                     u2300:
  1121     015E                     l2177:
  1122     015E  3037               	movlw	55
  1123     015F  067A               	xorwf	_num2,w
  1124     0160  1903               	btfsc	3,2
  1125     0161  2963               	goto	u2311
  1126     0162  2964               	goto	u2310
  1127     0163                     u2311:
  1128     0163  2970               	goto	l2183
  1129     0164                     u2310:
  1130     0164                     l2179:
  1131     0164  3038               	movlw	56
  1132     0165  067A               	xorwf	_num2,w
  1133     0166  1903               	btfsc	3,2
  1134     0167  2969               	goto	u2321
  1135     0168  296A               	goto	u2320
  1136     0169                     u2321:
  1137     0169  2970               	goto	l2183
  1138     016A                     u2320:
  1139     016A                     l2181:
  1140     016A  3039               	movlw	57
  1141     016B  067A               	xorwf	_num2,w
  1142     016C  1D03               	btfss	3,2
  1143     016D  296F               	goto	u2331
  1144     016E  2970               	goto	u2330
  1145     016F                     u2331:
  1146     016F  292E               	goto	l2161
  1147     0170                     u2330:
  1148     0170                     l2183:
  1149                           
  1150                           ;main.c: 166:             lcdSend(0x01, 0);
  1151     0170  01F2               	clrf	lcdSend@tipo
  1152     0171  3001               	movlw	1
  1153     0172  120A  118A  2670  120A  118A  	fcall	_lcdSend
  1154     0177                     l2185:
  1155                           
  1156                           ;main.c: 167:             lcdPrint("Attendere..");
  1157     0177  303E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1158     0178  00F6               	movwf	lcdPrint@str
  1159     0179  3080               	movlw	128
  1160     017A  00F7               	movwf	lcdPrint@str+1
  1161     017B  120A  118A  25FE  120A  118A  	fcall	_lcdPrint
  1162                           
  1163                           ;main.c: 168:             while(num3 != 0x30 && num3 != 0x33 && num3 != 0x32 && num3 != 
      +                          0x33 &&
  1164     0180  2989               	goto	l2189
  1165     0181                     l2187:
  1166                           
  1167                           ;main.c: 170:                   num3 != 0x38 && num3 != 0x39){;main.c: 171:             
      +                          num3 = GenerateRandomNumber();
  1168     0181  120A  118A  26B9  120A  118A  	fcall	_GenerateRandomNumber
  1169     0186  1283               	bcf	3,5	;RP0=0, select bank0
  1170     0187  1303               	bcf	3,6	;RP1=0, select bank0
  1171     0188  00CF               	movwf	_num3
  1172     0189                     l2189:
  1173                           
  1174                           ;main.c: 168:             while(num3 != 0x30 && num3 != 0x33 && num3 != 0x32 && num3 != 
      +                          0x33 &&
  1175     0189  3030               	movlw	48
  1176     018A  1283               	bcf	3,5	;RP0=0, select bank0
  1177     018B  1303               	bcf	3,6	;RP1=0, select bank0
  1178     018C  064F               	xorwf	_num3,w
  1179     018D  1903               	btfsc	3,2
  1180     018E  2990               	goto	u2341
  1181     018F  2991               	goto	u2340
  1182     0190                     u2341:
  1183     0190  29C7               	goto	l2209
  1184     0191                     u2340:
  1185     0191                     l2191:
  1186     0191  3033               	movlw	51
  1187     0192  064F               	xorwf	_num3,w
  1188     0193  1903               	btfsc	3,2
  1189     0194  2996               	goto	u2351
  1190     0195  2997               	goto	u2350
  1191     0196                     u2351:
  1192     0196  29C7               	goto	l2209
  1193     0197                     u2350:
  1194     0197                     l2193:
  1195     0197  3032               	movlw	50
  1196     0198  064F               	xorwf	_num3,w
  1197     0199  1903               	btfsc	3,2
  1198     019A  299C               	goto	u2361
  1199     019B  299D               	goto	u2360
  1200     019C                     u2361:
  1201     019C  29C7               	goto	l2209
  1202     019D                     u2360:
  1203     019D                     l2195:
  1204     019D  3033               	movlw	51
  1205     019E  064F               	xorwf	_num3,w
  1206     019F  1903               	btfsc	3,2
  1207     01A0  29A2               	goto	u2371
  1208     01A1  29A3               	goto	u2370
  1209     01A2                     u2371:
  1210     01A2  29C7               	goto	l2209
  1211     01A3                     u2370:
  1212     01A3                     l2197:
  1213     01A3  3034               	movlw	52
  1214     01A4  064F               	xorwf	_num3,w
  1215     01A5  1903               	btfsc	3,2
  1216     01A6  29A8               	goto	u2381
  1217     01A7  29A9               	goto	u2380
  1218     01A8                     u2381:
  1219     01A8  29C7               	goto	l2209
  1220     01A9                     u2380:
  1221     01A9                     l2199:
  1222     01A9  3035               	movlw	53
  1223     01AA  064F               	xorwf	_num3,w
  1224     01AB  1903               	btfsc	3,2
  1225     01AC  29AE               	goto	u2391
  1226     01AD  29AF               	goto	u2390
  1227     01AE                     u2391:
  1228     01AE  29C7               	goto	l2209
  1229     01AF                     u2390:
  1230     01AF                     l2201:
  1231     01AF  3036               	movlw	54
  1232     01B0  064F               	xorwf	_num3,w
  1233     01B1  1903               	btfsc	3,2
  1234     01B2  29B4               	goto	u2401
  1235     01B3  29B5               	goto	u2400
  1236     01B4                     u2401:
  1237     01B4  29C7               	goto	l2209
  1238     01B5                     u2400:
  1239     01B5                     l2203:
  1240     01B5  3037               	movlw	55
  1241     01B6  064F               	xorwf	_num3,w
  1242     01B7  1903               	btfsc	3,2
  1243     01B8  29BA               	goto	u2411
  1244     01B9  29BB               	goto	u2410
  1245     01BA                     u2411:
  1246     01BA  29C7               	goto	l2209
  1247     01BB                     u2410:
  1248     01BB                     l2205:
  1249     01BB  3038               	movlw	56
  1250     01BC  064F               	xorwf	_num3,w
  1251     01BD  1903               	btfsc	3,2
  1252     01BE  29C0               	goto	u2421
  1253     01BF  29C1               	goto	u2420
  1254     01C0                     u2421:
  1255     01C0  29C7               	goto	l2209
  1256     01C1                     u2420:
  1257     01C1                     l2207:
  1258     01C1  3039               	movlw	57
  1259     01C2  064F               	xorwf	_num3,w
  1260     01C3  1D03               	btfss	3,2
  1261     01C4  29C6               	goto	u2431
  1262     01C5  29C7               	goto	u2430
  1263     01C6                     u2431:
  1264     01C6  2981               	goto	l2187
  1265     01C7                     u2430:
  1266     01C7                     l2209:
  1267                           
  1268                           ;main.c: 175:             lcdSend(0x01, 0);
  1269     01C7  01F2               	clrf	lcdSend@tipo
  1270     01C8  3001               	movlw	1
  1271     01C9  120A  118A  2670  120A  118A  	fcall	_lcdSend
  1272     01CE                     l2211:
  1273                           
  1274                           ;main.c: 176:             lcdPrint("Attendere...");
  1275     01CE  3031               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1276     01CF  00F6               	movwf	lcdPrint@str
  1277     01D0  3080               	movlw	128
  1278     01D1  00F7               	movwf	lcdPrint@str+1
  1279     01D2  120A  118A  25FE  120A  118A  	fcall	_lcdPrint
  1280                           
  1281                           ;main.c: 177:             while(num4 != 0x30 && num4 != 0x34 && num4 != 0x32 && num4 != 
      +                          0x33 &&
  1282     01D7  29E0               	goto	l2215
  1283     01D8                     l2213:
  1284                           
  1285                           ;main.c: 179:                   num4 != 0x38 && num4 != 0x39){;main.c: 180:             
      +                          num4 = GenerateRandomNumber();
  1286     01D8  120A  118A  26B9  120A  118A  	fcall	_GenerateRandomNumber
  1287     01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1288     01DE  1303               	bcf	3,6	;RP1=0, select bank0
  1289     01DF  00CE               	movwf	_num4
  1290     01E0                     l2215:
  1291                           
  1292                           ;main.c: 177:             while(num4 != 0x30 && num4 != 0x34 && num4 != 0x32 && num4 != 
      +                          0x33 &&
  1293     01E0  3030               	movlw	48
  1294     01E1  1283               	bcf	3,5	;RP0=0, select bank0
  1295     01E2  1303               	bcf	3,6	;RP1=0, select bank0
  1296     01E3  064E               	xorwf	_num4,w
  1297     01E4  1903               	btfsc	3,2
  1298     01E5  29E7               	goto	u2441
  1299     01E6  29E8               	goto	u2440
  1300     01E7                     u2441:
  1301     01E7  2A1E               	goto	l2235
  1302     01E8                     u2440:
  1303     01E8                     l2217:
  1304     01E8  3034               	movlw	52
  1305     01E9  064E               	xorwf	_num4,w
  1306     01EA  1903               	btfsc	3,2
  1307     01EB  29ED               	goto	u2451
  1308     01EC  29EE               	goto	u2450
  1309     01ED                     u2451:
  1310     01ED  2A1E               	goto	l2235
  1311     01EE                     u2450:
  1312     01EE                     l2219:
  1313     01EE  3032               	movlw	50
  1314     01EF  064E               	xorwf	_num4,w
  1315     01F0  1903               	btfsc	3,2
  1316     01F1  29F3               	goto	u2461
  1317     01F2  29F4               	goto	u2460
  1318     01F3                     u2461:
  1319     01F3  2A1E               	goto	l2235
  1320     01F4                     u2460:
  1321     01F4                     l2221:
  1322     01F4  3033               	movlw	51
  1323     01F5  064E               	xorwf	_num4,w
  1324     01F6  1903               	btfsc	3,2
  1325     01F7  29F9               	goto	u2471
  1326     01F8  29FA               	goto	u2470
  1327     01F9                     u2471:
  1328     01F9  2A1E               	goto	l2235
  1329     01FA                     u2470:
  1330     01FA                     l2223:
  1331     01FA  3034               	movlw	52
  1332     01FB  064E               	xorwf	_num4,w
  1333     01FC  1903               	btfsc	3,2
  1334     01FD  29FF               	goto	u2481
  1335     01FE  2A00               	goto	u2480
  1336     01FF                     u2481:
  1337     01FF  2A1E               	goto	l2235
  1338     0200                     u2480:
  1339     0200                     l2225:
  1340     0200  3035               	movlw	53
  1341     0201  064E               	xorwf	_num4,w
  1342     0202  1903               	btfsc	3,2
  1343     0203  2A05               	goto	u2491
  1344     0204  2A06               	goto	u2490
  1345     0205                     u2491:
  1346     0205  2A1E               	goto	l2235
  1347     0206                     u2490:
  1348     0206                     l2227:
  1349     0206  3036               	movlw	54
  1350     0207  064E               	xorwf	_num4,w
  1351     0208  1903               	btfsc	3,2
  1352     0209  2A0B               	goto	u2501
  1353     020A  2A0C               	goto	u2500
  1354     020B                     u2501:
  1355     020B  2A1E               	goto	l2235
  1356     020C                     u2500:
  1357     020C                     l2229:
  1358     020C  3037               	movlw	55
  1359     020D  064E               	xorwf	_num4,w
  1360     020E  1903               	btfsc	3,2
  1361     020F  2A11               	goto	u2511
  1362     0210  2A12               	goto	u2510
  1363     0211                     u2511:
  1364     0211  2A1E               	goto	l2235
  1365     0212                     u2510:
  1366     0212                     l2231:
  1367     0212  3038               	movlw	56
  1368     0213  064E               	xorwf	_num4,w
  1369     0214  1903               	btfsc	3,2
  1370     0215  2A17               	goto	u2521
  1371     0216  2A18               	goto	u2520
  1372     0217                     u2521:
  1373     0217  2A1E               	goto	l2235
  1374     0218                     u2520:
  1375     0218                     l2233:
  1376     0218  3039               	movlw	57
  1377     0219  064E               	xorwf	_num4,w
  1378     021A  1D03               	btfss	3,2
  1379     021B  2A1D               	goto	u2531
  1380     021C  2A1E               	goto	u2530
  1381     021D                     u2531:
  1382     021D  29D8               	goto	l2213
  1383     021E                     u2530:
  1384     021E                     l2235:
  1385                           
  1386                           ;main.c: 184:             lcdSend(0x01, 0);
  1387     021E  01F2               	clrf	lcdSend@tipo
  1388     021F  3001               	movlw	1
  1389     0220  120A  118A  2670  120A  118A  	fcall	_lcdSend
  1390     0225                     l2237:
  1391                           
  1392                           ;main.c: 185:             lcdPrint("Attendere....");
  1393     0225  3023               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1394     0226  00F6               	movwf	lcdPrint@str
  1395     0227  3080               	movlw	128
  1396     0228  00F7               	movwf	lcdPrint@str+1
  1397     0229  120A  118A  25FE  120A  118A  	fcall	_lcdPrint
  1398                           
  1399                           ;main.c: 186:             while(num5 != 0x30 && num5 != 0x35 && num5 != 0x32 && num5 != 
      +                          0x33 &&
  1400     022E  2A37               	goto	l2241
  1401     022F                     l2239:
  1402                           
  1403                           ;main.c: 188:                   num5 != 0x38 && num5 != 0x39){;main.c: 189:             
      +                          num5 = GenerateRandomNumber();
  1404     022F  120A  118A  26B9  120A  118A  	fcall	_GenerateRandomNumber
  1405     0234  1283               	bcf	3,5	;RP0=0, select bank0
  1406     0235  1303               	bcf	3,6	;RP1=0, select bank0
  1407     0236  00CD               	movwf	_num5
  1408     0237                     l2241:
  1409                           
  1410                           ;main.c: 186:             while(num5 != 0x30 && num5 != 0x35 && num5 != 0x32 && num5 != 
      +                          0x33 &&
  1411     0237  3030               	movlw	48
  1412     0238  1283               	bcf	3,5	;RP0=0, select bank0
  1413     0239  1303               	bcf	3,6	;RP1=0, select bank0
  1414     023A  064D               	xorwf	_num5,w
  1415     023B  1903               	btfsc	3,2
  1416     023C  2A3E               	goto	u2541
  1417     023D  2A3F               	goto	u2540
  1418     023E                     u2541:
  1419     023E  2A75               	goto	l2261
  1420     023F                     u2540:
  1421     023F                     l2243:
  1422     023F  3035               	movlw	53
  1423     0240  064D               	xorwf	_num5,w
  1424     0241  1903               	btfsc	3,2
  1425     0242  2A44               	goto	u2551
  1426     0243  2A45               	goto	u2550
  1427     0244                     u2551:
  1428     0244  2A75               	goto	l2261
  1429     0245                     u2550:
  1430     0245                     l2245:
  1431     0245  3032               	movlw	50
  1432     0246  064D               	xorwf	_num5,w
  1433     0247  1903               	btfsc	3,2
  1434     0248  2A4A               	goto	u2561
  1435     0249  2A4B               	goto	u2560
  1436     024A                     u2561:
  1437     024A  2A75               	goto	l2261
  1438     024B                     u2560:
  1439     024B                     l2247:
  1440     024B  3033               	movlw	51
  1441     024C  064D               	xorwf	_num5,w
  1442     024D  1903               	btfsc	3,2
  1443     024E  2A50               	goto	u2571
  1444     024F  2A51               	goto	u2570
  1445     0250                     u2571:
  1446     0250  2A75               	goto	l2261
  1447     0251                     u2570:
  1448     0251                     l2249:
  1449     0251  3034               	movlw	52
  1450     0252  064D               	xorwf	_num5,w
  1451     0253  1903               	btfsc	3,2
  1452     0254  2A56               	goto	u2581
  1453     0255  2A57               	goto	u2580
  1454     0256                     u2581:
  1455     0256  2A75               	goto	l2261
  1456     0257                     u2580:
  1457     0257                     l2251:
  1458     0257  3035               	movlw	53
  1459     0258  064D               	xorwf	_num5,w
  1460     0259  1903               	btfsc	3,2
  1461     025A  2A5C               	goto	u2591
  1462     025B  2A5D               	goto	u2590
  1463     025C                     u2591:
  1464     025C  2A75               	goto	l2261
  1465     025D                     u2590:
  1466     025D                     l2253:
  1467     025D  3036               	movlw	54
  1468     025E  064D               	xorwf	_num5,w
  1469     025F  1903               	btfsc	3,2
  1470     0260  2A62               	goto	u2601
  1471     0261  2A63               	goto	u2600
  1472     0262                     u2601:
  1473     0262  2A75               	goto	l2261
  1474     0263                     u2600:
  1475     0263                     l2255:
  1476     0263  3037               	movlw	55
  1477     0264  064D               	xorwf	_num5,w
  1478     0265  1903               	btfsc	3,2
  1479     0266  2A68               	goto	u2611
  1480     0267  2A69               	goto	u2610
  1481     0268                     u2611:
  1482     0268  2A75               	goto	l2261
  1483     0269                     u2610:
  1484     0269                     l2257:
  1485     0269  3038               	movlw	56
  1486     026A  064D               	xorwf	_num5,w
  1487     026B  1903               	btfsc	3,2
  1488     026C  2A6E               	goto	u2621
  1489     026D  2A6F               	goto	u2620
  1490     026E                     u2621:
  1491     026E  2A75               	goto	l2261
  1492     026F                     u2620:
  1493     026F                     l2259:
  1494     026F  3039               	movlw	57
  1495     0270  064D               	xorwf	_num5,w
  1496     0271  1D03               	btfss	3,2
  1497     0272  2A74               	goto	u2631
  1498     0273  2A75               	goto	u2630
  1499     0274                     u2631:
  1500     0274  2A2F               	goto	l2239
  1501     0275                     u2630:
  1502     0275                     l2261:
  1503                           
  1504                           ;main.c: 192:             UART_Write(num1);
  1505     0275  087B               	movf	_num1,w
  1506     0276  120A  118A  2708  120A  118A  	fcall	_UART_Write
  1507                           
  1508                           ;main.c: 193:             UART_Write(num2);
  1509     027B  087A               	movf	_num2,w
  1510     027C  120A  118A  2708  120A  118A  	fcall	_UART_Write
  1511                           
  1512                           ;main.c: 194:             UART_Write(num3);
  1513     0281  1283               	bcf	3,5	;RP0=0, select bank0
  1514     0282  1303               	bcf	3,6	;RP1=0, select bank0
  1515     0283  084F               	movf	_num3,w
  1516     0284  120A  118A  2708  120A  118A  	fcall	_UART_Write
  1517                           
  1518                           ;main.c: 195:             UART_Write(num4);
  1519     0289  1283               	bcf	3,5	;RP0=0, select bank0
  1520     028A  1303               	bcf	3,6	;RP1=0, select bank0
  1521     028B  084E               	movf	_num4,w
  1522     028C  120A  118A  2708  120A  118A  	fcall	_UART_Write
  1523                           
  1524                           ;main.c: 196:             UART_Write(num5);
  1525     0291  1283               	bcf	3,5	;RP0=0, select bank0
  1526     0292  1303               	bcf	3,6	;RP1=0, select bank0
  1527     0293  084D               	movf	_num5,w
  1528     0294  120A  118A  2708  120A  118A  	fcall	_UART_Write
  1529                           
  1530                           ;main.c: 197:             UART_Write('\r');
  1531     0299  300D               	movlw	13
  1532     029A  120A  118A  2708  120A  118A  	fcall	_UART_Write
  1533                           
  1534                           ;main.c: 198:             UART_Write('\n');
  1535     029F  300A               	movlw	10
  1536     02A0  120A  118A  2708  120A  118A  	fcall	_UART_Write
  1537                           
  1538                           ;main.c: 199:             lcdSend(0x01, 0);
  1539     02A5  01F2               	clrf	lcdSend@tipo
  1540     02A6  3001               	movlw	1
  1541     02A7  120A  118A  2670  120A  118A  	fcall	_lcdSend
  1542                           
  1543                           ;main.c: 200:             lcdSend(num1, 1);
  1544     02AC  01F2               	clrf	lcdSend@tipo
  1545     02AD  0AF2               	incf	lcdSend@tipo,f
  1546     02AE  087B               	movf	_num1,w
  1547     02AF  120A  118A  2670  120A  118A  	fcall	_lcdSend
  1548                           
  1549                           ;main.c: 201:             lcdSend(num2, 1);
  1550     02B4  01F2               	clrf	lcdSend@tipo
  1551     02B5  0AF2               	incf	lcdSend@tipo,f
  1552     02B6  087A               	movf	_num2,w
  1553     02B7  120A  118A  2670  120A  118A  	fcall	_lcdSend
  1554                           
  1555                           ;main.c: 202:             lcdSend(num3, 1);
  1556     02BC  01F2               	clrf	lcdSend@tipo
  1557     02BD  0AF2               	incf	lcdSend@tipo,f
  1558     02BE  1283               	bcf	3,5	;RP0=0, select bank0
  1559     02BF  1303               	bcf	3,6	;RP1=0, select bank0
  1560     02C0  084F               	movf	_num3,w
  1561     02C1  120A  118A  2670  120A  118A  	fcall	_lcdSend
  1562                           
  1563                           ;main.c: 203:             lcdSend(num4, 1);
  1564     02C6  01F2               	clrf	lcdSend@tipo
  1565     02C7  0AF2               	incf	lcdSend@tipo,f
  1566     02C8  1283               	bcf	3,5	;RP0=0, select bank0
  1567     02C9  1303               	bcf	3,6	;RP1=0, select bank0
  1568     02CA  084E               	movf	_num4,w
  1569     02CB  120A  118A  2670  120A  118A  	fcall	_lcdSend
  1570                           
  1571                           ;main.c: 204:             lcdSend(num5, 1);
  1572     02D0  01F2               	clrf	lcdSend@tipo
  1573     02D1  0AF2               	incf	lcdSend@tipo,f
  1574     02D2  1283               	bcf	3,5	;RP0=0, select bank0
  1575     02D3  1303               	bcf	3,6	;RP1=0, select bank0
  1576     02D4  084D               	movf	_num5,w
  1577     02D5  120A  118A  2670  120A  118A  	fcall	_lcdSend
  1578     02DA                     l2263:
  1579                           
  1580                           ;main.c: 205:             keypressed = 0;
  1581     02DA  1283               	bcf	3,5	;RP0=0, select bank0
  1582     02DB  1303               	bcf	3,6	;RP1=0, select bank0
  1583     02DC  01CC               	clrf	_keypressed
  1584     02DD                     l2265:
  1585                           
  1586                           ;main.c: 206:             RS485_RxEnable();
  1587     02DD  120A  118A  271F  120A  118A  	fcall	_RS485_RxEnable
  1588     02E2                     l2267:
  1589                           
  1590                           ;main.c: 207:             UART_Read();
  1591     02E2  120A  118A  246B  120A  118A  	fcall	_UART_Read
  1592     02E7  283B               	goto	l2087
  1593     02E8  120A  118A  280C   	ljmp	start
  1594     02EB                     __end_of_main:
  1595                           
  1596                           	psect	text1
  1597     054B                     __ptext1:	
  1598 ;; *************** function _initLCD *****************
  1599 ;; Defined at:
  1600 ;;		line 274 in file "main.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;		None
  1603 ;; Auto vars:     Size  Location     Type
  1604 ;;		None
  1605 ;; Return value:  Size  Location     Type
  1606 ;;                  1    wreg      void 
  1607 ;; Registers used:
  1608 ;;		wreg, status,2, status,0, pclath, cstack
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1614 ;;      Params:         0       0       0       0       0
  1615 ;;      Locals:         0       0       0       0       0
  1616 ;;      Temps:          2       0       0       0       0
  1617 ;;      Totals:         2       0       0       0       0
  1618 ;;Total ram usage:        2 bytes
  1619 ;; Hardware stack levels used: 1
  1620 ;; Hardware stack levels required when called: 2
  1621 ;; This function calls:
  1622 ;;		_lcdSend
  1623 ;; This function is called by:
  1624 ;;		_main
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628     054B                     _initLCD:	
  1629                           ;psect for function _initLCD
  1630                           
  1631     054B                     l2013:	
  1632                           ;incstack = 0
  1633                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  1634                           
  1635                           
  1636                           ;main.c: 275:     PORTEbits.RE2 = 0;
  1637     054B  1283               	bcf	3,5	;RP0=0, select bank0
  1638     054C  1303               	bcf	3,6	;RP1=0, select bank0
  1639     054D  1109               	bcf	9,2	;volatile
  1640                           
  1641                           ;main.c: 276:     PORTEbits.RE1 = 0;
  1642     054E  1089               	bcf	9,1	;volatile
  1643     054F                     l2015:
  1644                           
  1645                           ;main.c: 277:     _delay((unsigned long)((20)*(20000000/4000.0)));
  1646     054F  3082               	movlw	130
  1647     0550  00F7               	movwf	??_initLCD+1
  1648     0551  30DD               	movlw	221
  1649     0552  00F6               	movwf	??_initLCD
  1650     0553                     u2647:
  1651     0553  0BF6               	decfsz	??_initLCD,f
  1652     0554  2D53               	goto	u2647
  1653     0555  0BF7               	decfsz	??_initLCD+1,f
  1654     0556  2D53               	goto	u2647
  1655     0557  2D58               	nop2
  1656     0558                     l2017:
  1657                           
  1658                           ;main.c: 278:     PORTEbits.RE1 = 1;
  1659     0558  1283               	bcf	3,5	;RP0=0, select bank0
  1660     0559  1303               	bcf	3,6	;RP1=0, select bank0
  1661     055A  1489               	bsf	9,1	;volatile
  1662     055B                     l2019:
  1663                           
  1664                           ;main.c: 279:     lcdSend(0x38, 0);
  1665     055B  01F2               	clrf	lcdSend@tipo
  1666     055C  3038               	movlw	56
  1667     055D  120A  118A  2670  120A  118A  	fcall	_lcdSend
  1668     0562                     l2021:
  1669                           
  1670                           ;main.c: 280:     _delay((unsigned long)((5)*(20000000/4000.0)));
  1671     0562  3021               	movlw	33
  1672     0563  00F7               	movwf	??_initLCD+1
  1673     0564  3076               	movlw	118
  1674     0565  00F6               	movwf	??_initLCD
  1675     0566                     u2657:
  1676     0566  0BF6               	decfsz	??_initLCD,f
  1677     0567  2D66               	goto	u2657
  1678     0568  0BF7               	decfsz	??_initLCD+1,f
  1679     0569  2D66               	goto	u2657
  1680     056A  0000               	nop
  1681                           
  1682                           ;main.c: 281:     lcdSend(0x38, 0);
  1683     056B  01F2               	clrf	lcdSend@tipo
  1684     056C  3038               	movlw	56
  1685     056D  120A  118A  2670  120A  118A  	fcall	_lcdSend
  1686     0572                     l2023:
  1687                           
  1688                           ;main.c: 282:     _delay((unsigned long)((1)*(20000000/4000.0)));
  1689     0572  3007               	movlw	7
  1690     0573  00F7               	movwf	??_initLCD+1
  1691     0574  307D               	movlw	125
  1692     0575  00F6               	movwf	??_initLCD
  1693     0576                     u2667:
  1694     0576  0BF6               	decfsz	??_initLCD,f
  1695     0577  2D76               	goto	u2667
  1696     0578  0BF7               	decfsz	??_initLCD+1,f
  1697     0579  2D76               	goto	u2667
  1698     057A                     l2025:
  1699                           
  1700                           ;main.c: 283:     lcdSend(0x38, 0);
  1701     057A  01F2               	clrf	lcdSend@tipo
  1702     057B  3038               	movlw	56
  1703     057C  120A  118A  2670  120A  118A  	fcall	_lcdSend
  1704     0581                     l2027:
  1705                           
  1706                           ;main.c: 284:     lcdSend(0x08, 0);
  1707     0581  01F2               	clrf	lcdSend@tipo
  1708     0582  3008               	movlw	8
  1709     0583  120A  118A  2670  120A  118A  	fcall	_lcdSend
  1710     0588                     l2029:
  1711                           
  1712                           ;main.c: 285:     lcdSend(0x0F, 0);
  1713     0588  01F2               	clrf	lcdSend@tipo
  1714     0589  300F               	movlw	15
  1715     058A  120A  118A  2670  120A  118A  	fcall	_lcdSend
  1716     058F                     l2031:
  1717                           
  1718                           ;main.c: 286:     lcdSend(0x01, 0);
  1719     058F  01F2               	clrf	lcdSend@tipo
  1720     0590  3001               	movlw	1
  1721     0591  120A  118A  2670  120A  118A  	fcall	_lcdSend
  1722     0596                     l2033:
  1723                           
  1724                           ;main.c: 287:     lcdSend(0x0C, 0);
  1725     0596  01F2               	clrf	lcdSend@tipo
  1726     0597  300C               	movlw	12
  1727     0598  120A  118A  2670  120A  118A  	fcall	_lcdSend
  1728     059D                     l2035:
  1729                           
  1730                           ;main.c: 288:     lcdSend(0x80, 0);
  1731     059D  01F2               	clrf	lcdSend@tipo
  1732     059E  3080               	movlw	128
  1733     059F  120A  118A  2670  120A  118A  	fcall	_lcdSend
  1734     05A4                     l207:
  1735     05A4  0008               	return
  1736     05A5                     __end_of_initLCD:
  1737                           
  1738                           	psect	text2
  1739     0708                     __ptext2:	
  1740 ;; *************** function _UART_Write *****************
  1741 ;; Defined at:
  1742 ;;		line 240 in file "main.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;  data            1    wreg     unsigned char 
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;  data            1    2[COMMON] unsigned char 
  1747 ;; Return value:  Size  Location     Type
  1748 ;;                  1    wreg      void 
  1749 ;; Registers used:
  1750 ;;		wreg
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1756 ;;      Params:         0       0       0       0       0
  1757 ;;      Locals:         1       0       0       0       0
  1758 ;;      Temps:          0       0       0       0       0
  1759 ;;      Totals:         1       0       0       0       0
  1760 ;;Total ram usage:        1 bytes
  1761 ;; Hardware stack levels used: 1
  1762 ;; Hardware stack levels required when called: 1
  1763 ;; This function calls:
  1764 ;;		Nothing
  1765 ;; This function is called by:
  1766 ;;		_main
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770     0708                     _UART_Write:	
  1771                           ;psect for function _UART_Write
  1772                           
  1773                           
  1774                           ;incstack = 0
  1775                           ; Regs used in _UART_Write: [wreg]
  1776                           ;UART_Write@data stored from wreg
  1777     0708  00F2               	movwf	UART_Write@data
  1778     0709                     l1587:
  1779     0709                     l193:	
  1780                           ;main.c: 241:     while (!TXIF)
  1781                           
  1782                           
  1783                           ;main.c: 241:     while (!TXIF)
  1784     0709  1283               	bcf	3,5	;RP0=0, select bank0
  1785     070A  1303               	bcf	3,6	;RP1=0, select bank0
  1786     070B  1E0C               	btfss	12,4	;volatile
  1787     070C  2F0E               	goto	u1261
  1788     070D  2F0F               	goto	u1260
  1789     070E                     u1261:
  1790     070E  2F09               	goto	l193
  1791     070F                     u1260:
  1792     070F                     l1589:
  1793                           
  1794                           ;main.c: 243:     TXREG = data;
  1795     070F  0872               	movf	UART_Write@data,w
  1796     0710  0099               	movwf	25	;volatile
  1797     0711                     l196:
  1798     0711  0008               	return
  1799     0712                     __end_of_UART_Write:
  1800                           
  1801                           	psect	text3
  1802     046B                     __ptext3:	
  1803 ;; *************** function _UART_Read *****************
  1804 ;; Defined at:
  1805 ;;		line 246 in file "main.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;		None
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;		None
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  1    wreg      unsigned char 
  1812 ;; Registers used:
  1813 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1819 ;;      Params:         0       0       0       0       0
  1820 ;;      Locals:         0       0       0       0       0
  1821 ;;      Temps:          0       3       0       0       0
  1822 ;;      Totals:         0       3       0       0       0
  1823 ;;Total ram usage:        3 bytes
  1824 ;; Hardware stack levels used: 1
  1825 ;; Hardware stack levels required when called: 4
  1826 ;; This function calls:
  1827 ;;		_intToString
  1828 ;;		_lcdPrint
  1829 ;;		_lcdSend
  1830 ;; This function is called by:
  1831 ;;		_main
  1832 ;; This function uses a non-reentrant model
  1833 ;;
  1834                           
  1835     046B                     _UART_Read:	
  1836                           ;psect for function _UART_Read
  1837                           
  1838     046B                     l2037:	
  1839                           ;incstack = 0
  1840                           ; Regs used in _UART_Read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1841                           
  1842                           
  1843                           ;main.c: 247:     while (countdown != 0){
  1844     046B  2CC9               	goto	l2063
  1845     046C                     l200:
  1846                           
  1847                           ;main.c: 248:         if (!RCIF){
  1848     046C  1A8C               	btfsc	12,5	;volatile
  1849     046D  2C6F               	goto	u2101
  1850     046E  2C70               	goto	u2100
  1851     046F                     u2101:
  1852     046F  2CA1               	goto	l2049
  1853     0470                     u2100:
  1854     0470                     l2039:
  1855                           
  1856                           ;main.c: 249:             intToString(countdown, print_countdown);
  1857     0470  086C               	movf	_countdown,w
  1858     0471  00E8               	movwf	??_UART_Read
  1859     0472  01E9               	clrf	??_UART_Read+1
  1860     0473  0868               	movf	??_UART_Read,w
  1861     0474  00DF               	movwf	intToString@n
  1862     0475  0869               	movf	??_UART_Read+1,w
  1863     0476  00E0               	movwf	intToString@n+1
  1864     0477  3050               	movlw	(low (_print_countdown| 0))& (0+255)
  1865     0478  00E1               	movwf	intToString@str
  1866     0479  120A  118A  23EF  120A  118A  	fcall	_intToString
  1867     047E                     l2041:
  1868                           
  1869                           ;main.c: 250:             lcdSend(0xC0, 0);
  1870     047E  01F2               	clrf	lcdSend@tipo
  1871     047F  30C0               	movlw	192
  1872     0480  120A  118A  2670  120A  118A  	fcall	_lcdSend
  1873     0485                     l2043:
  1874                           
  1875                           ;main.c: 251:             lcdPrint(print_countdown);
  1876     0485  3050               	movlw	(low (_print_countdown| 0))& (0+255)
  1877     0486  00F6               	movwf	lcdPrint@str
  1878     0487  3000               	movlw	0
  1879     0488  00F7               	movwf	lcdPrint@str+1
  1880     0489  120A  118A  25FE  120A  118A  	fcall	_lcdPrint
  1881     048E                     l2045:
  1882                           
  1883                           ;main.c: 252:             countdown --;
  1884     048E  3001               	movlw	1
  1885     048F  1283               	bcf	3,5	;RP0=0, select bank0
  1886     0490  1303               	bcf	3,6	;RP1=0, select bank0
  1887     0491  02EC               	subwf	_countdown,f
  1888     0492                     l2047:
  1889                           
  1890                           ;main.c: 253:             _delay((unsigned long)((200)*(20000000/4000.0)));
  1891     0492  3006               	movlw	6
  1892     0493  1283               	bcf	3,5	;RP0=0, select bank0
  1893     0494  1303               	bcf	3,6	;RP1=0, select bank0
  1894     0495  00EA               	movwf	??_UART_Read+2
  1895     0496  3013               	movlw	19
  1896     0497  00E9               	movwf	??_UART_Read+1
  1897     0498  30AD               	movlw	173
  1898     0499  00E8               	movwf	??_UART_Read
  1899     049A                     u2677:
  1900     049A  0BE8               	decfsz	??_UART_Read,f
  1901     049B  2C9A               	goto	u2677
  1902     049C  0BE9               	decfsz	??_UART_Read+1,f
  1903     049D  2C9A               	goto	u2677
  1904     049E  0BEA               	decfsz	??_UART_Read+2,f
  1905     049F  2C9A               	goto	u2677
  1906                           
  1907                           ;main.c: 254:         }
  1908     04A0  2CC9               	goto	l2063
  1909     04A1                     l2049:
  1910                           
  1911                           ;main.c: 256:             lcdSend(0x01, 0);
  1912     04A1  01F2               	clrf	lcdSend@tipo
  1913     04A2  3001               	movlw	1
  1914     04A3  120A  118A  2670  120A  118A  	fcall	_lcdSend
  1915     04A8                     l2051:
  1916                           
  1917                           ;main.c: 257:             lcdPrint("Ricevuto");
  1918     04A8  305F               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1919     04A9  00F6               	movwf	lcdPrint@str
  1920     04AA  3080               	movlw	128
  1921     04AB  00F7               	movwf	lcdPrint@str+1
  1922     04AC  120A  118A  25FE  120A  118A  	fcall	_lcdPrint
  1923     04B1                     l2053:
  1924                           
  1925                           ;main.c: 258:             RCIF = 0;
  1926     04B1  1283               	bcf	3,5	;RP0=0, select bank0
  1927     04B2  1303               	bcf	3,6	;RP1=0, select bank0
  1928     04B3  128C               	bcf	12,5	;volatile
  1929     04B4                     l2055:
  1930                           
  1931                           ;main.c: 259:             countdown = 60;
  1932     04B4  303C               	movlw	60
  1933     04B5  00EC               	movwf	_countdown
  1934     04B6                     l2057:
  1935                           
  1936                           ;main.c: 260:             _delay((unsigned long)((1000)*(20000000/4000.0)));
  1937     04B6  301A               	movlw	26
  1938     04B7  1283               	bcf	3,5	;RP0=0, select bank0
  1939     04B8  1303               	bcf	3,6	;RP1=0, select bank0
  1940     04B9  00EA               	movwf	??_UART_Read+2
  1941     04BA  305E               	movlw	94
  1942     04BB  00E9               	movwf	??_UART_Read+1
  1943     04BC  306D               	movlw	109
  1944     04BD  00E8               	movwf	??_UART_Read
  1945     04BE                     u2687:
  1946     04BE  0BE8               	decfsz	??_UART_Read,f
  1947     04BF  2CBE               	goto	u2687
  1948     04C0  0BE9               	decfsz	??_UART_Read+1,f
  1949     04C1  2CBE               	goto	u2687
  1950     04C2  0BEA               	decfsz	??_UART_Read+2,f
  1951     04C3  2CBE               	goto	u2687
  1952     04C4  2CC5               	nop2
  1953     04C5                     l2059:
  1954                           
  1955                           ;main.c: 261:             return RCREG;;	Return value of _UART_Read is never used
  1956     04C5  1283               	bcf	3,5	;RP0=0, select bank0
  1957     04C6  1303               	bcf	3,6	;RP1=0, select bank0
  1958     04C7  081A               	movf	26,w	;volatile
  1959     04C8  2CE1               	goto	l203
  1960     04C9                     l2063:
  1961                           
  1962                           ;main.c: 247:     while (countdown != 0){
  1963     04C9  1283               	bcf	3,5	;RP0=0, select bank0
  1964     04CA  1303               	bcf	3,6	;RP1=0, select bank0
  1965     04CB  086C               	movf	_countdown,w
  1966     04CC  1D03               	btfss	3,2
  1967     04CD  2CCF               	goto	u2111
  1968     04CE  2CD0               	goto	u2110
  1969     04CF                     u2111:
  1970     04CF  2C6C               	goto	l200
  1971     04D0                     u2110:
  1972     04D0                     l2065:
  1973                           
  1974                           ;main.c: 264:     lcdSend(0x01, 0);
  1975     04D0  01F2               	clrf	lcdSend@tipo
  1976     04D1  3001               	movlw	1
  1977     04D2  120A  118A  2670  120A  118A  	fcall	_lcdSend
  1978     04D7                     l2067:
  1979                           
  1980                           ;main.c: 265:     lcdPrint("Codice Scaduto");
  1981     04D7  3014               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1982     04D8  00F6               	movwf	lcdPrint@str
  1983     04D9  3080               	movlw	128
  1984     04DA  00F7               	movwf	lcdPrint@str+1
  1985     04DB  120A  118A  25FE  120A  118A  	fcall	_lcdPrint
  1986     04E0  2CB1               	goto	l2053
  1987     04E1                     l203:
  1988     04E1  0008               	return
  1989     04E2                     __end_of_UART_Read:
  1990                           
  1991                           	psect	text4
  1992     05FE                     __ptext4:	
  1993 ;; *************** function _lcdPrint *****************
  1994 ;; Defined at:
  1995 ;;		line 312 in file "main.c"
  1996 ;; Parameters:    Size  Location     Type
  1997 ;;  str             2    6[COMMON] PTR unsigned char 
  1998 ;;		 -> STR_8(15), STR_7(9), print_countdown(3), STR_6(14), 
  1999 ;;		 -> STR_5(13), STR_4(12), STR_3(11), STR_2(10), 
  2000 ;;		 -> STR_1(8), 
  2001 ;; Auto vars:     Size  Location     Type
  2002 ;;  n               2    8[COMMON] int 
  2003 ;; Return value:  Size  Location     Type
  2004 ;;                  1    wreg      void 
  2005 ;; Registers used:
  2006 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2007 ;; Tracked objects:
  2008 ;;		On entry : 0/0
  2009 ;;		On exit  : 0/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2012 ;;      Params:         2       0       0       0       0
  2013 ;;      Locals:         2       0       0       0       0
  2014 ;;      Temps:          0       3       0       0       0
  2015 ;;      Totals:         4       3       0       0       0
  2016 ;;Total ram usage:        7 bytes
  2017 ;; Hardware stack levels used: 1
  2018 ;; Hardware stack levels required when called: 2
  2019 ;; This function calls:
  2020 ;;		_lcdSend
  2021 ;; This function is called by:
  2022 ;;		_main
  2023 ;;		_UART_Read
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027     05FE                     _lcdPrint:	
  2028                           ;psect for function _lcdPrint
  2029                           
  2030     05FE                     l1983:	
  2031                           ;incstack = 0
  2032                           ; Regs used in _lcdPrint: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2033                           
  2034                           
  2035                           ;main.c: 313:     int n = 0;
  2036     05FE  01F8               	clrf	lcdPrint@n
  2037     05FF  01F9               	clrf	lcdPrint@n+1
  2038                           
  2039                           ;main.c: 314:     while (str[n] != '\0') {
  2040     0600  2E25               	goto	l1989
  2041     0601                     l1985:
  2042                           
  2043                           ;main.c: 315:         lcdSend(str[n++], 1);
  2044     0601  01F2               	clrf	lcdSend@tipo
  2045     0602  0AF2               	incf	lcdSend@tipo,f
  2046     0603  0878               	movf	lcdPrint@n,w
  2047     0604  0776               	addwf	lcdPrint@str,w
  2048     0605  00D4               	movwf	??_lcdPrint+1
  2049     0606  0877               	movf	lcdPrint@str+1,w
  2050     0607  00D3               	movwf	??_lcdPrint
  2051     0608  1803               	skipnc
  2052     0609  0AD3               	incf	??_lcdPrint,f
  2053     060A  1FF8               	btfss	lcdPrint@n,7
  2054     060B  2E0D               	goto	u2050
  2055     060C  03D3               	decf	??_lcdPrint,f
  2056     060D                     u2050:
  2057     060D  1283               	bcf	3,5	;RP0=0, select bank0
  2058     060E  1303               	bcf	3,6	;RP1=0, select bank0
  2059     060F  0853               	movf	??_lcdPrint,w
  2060     0610  00D5               	movwf	??_lcdPrint+2
  2061     0611  0855               	movf	??_lcdPrint+2,w
  2062     0612  00FF               	movwf	btemp+1
  2063     0613  0854               	movf	??_lcdPrint+1,w
  2064     0614  0084               	movwf	4
  2065     0615  120A  118A  2370  120A  118A  	fcall	stringtab
  2066     061A  120A  118A  2670  120A  118A  	fcall	_lcdSend
  2067     061F                     l1987:
  2068     061F  3001               	movlw	1
  2069     0620  07F8               	addwf	lcdPrint@n,f
  2070     0621  1803               	skipnc
  2071     0622  0AF9               	incf	lcdPrint@n+1,f
  2072     0623  3000               	movlw	0
  2073     0624  07F9               	addwf	lcdPrint@n+1,f
  2074     0625                     l1989:
  2075                           
  2076                           ;main.c: 314:     while (str[n] != '\0') {
  2077     0625  0878               	movf	lcdPrint@n,w
  2078     0626  0776               	addwf	lcdPrint@str,w
  2079     0627  1283               	bcf	3,5	;RP0=0, select bank0
  2080     0628  1303               	bcf	3,6	;RP1=0, select bank0
  2081     0629  00D4               	movwf	??_lcdPrint+1
  2082     062A  0877               	movf	lcdPrint@str+1,w
  2083     062B  00D3               	movwf	??_lcdPrint
  2084     062C  1803               	skipnc
  2085     062D  0AD3               	incf	??_lcdPrint,f
  2086     062E  1FF8               	btfss	lcdPrint@n,7
  2087     062F  2E31               	goto	u2060
  2088     0630  03D3               	decf	??_lcdPrint,f
  2089     0631                     u2060:
  2090     0631  1283               	bcf	3,5	;RP0=0, select bank0
  2091     0632  1303               	bcf	3,6	;RP1=0, select bank0
  2092     0633  0853               	movf	??_lcdPrint,w
  2093     0634  00D5               	movwf	??_lcdPrint+2
  2094     0635  0855               	movf	??_lcdPrint+2,w
  2095     0636  00FF               	movwf	btemp+1
  2096     0637  0854               	movf	??_lcdPrint+1,w
  2097     0638  0084               	movwf	4
  2098     0639  120A  118A  2370  120A  118A  	fcall	stringtab
  2099     063E  3A00               	xorlw	0
  2100     063F  1D03               	skipz
  2101     0640  2E42               	goto	u2071
  2102     0641  2E43               	goto	u2070
  2103     0642                     u2071:
  2104     0642  2E01               	goto	l1985
  2105     0643                     u2070:
  2106     0643                     l216:
  2107     0643  0008               	return
  2108     0644                     __end_of_lcdPrint:
  2109                           
  2110                           	psect	text5
  2111     0670                     __ptext5:	
  2112 ;; *************** function _lcdSend *****************
  2113 ;; Defined at:
  2114 ;;		line 291 in file "main.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;  dato            1    wreg     unsigned char 
  2117 ;;  tipo            1    2[COMMON] unsigned char 
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;  dato            1    5[COMMON] unsigned char 
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  1    wreg      void 
  2122 ;; Registers used:
  2123 ;;		wreg, status,2, status,0
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2129 ;;      Params:         1       0       0       0       0
  2130 ;;      Locals:         1       0       0       0       0
  2131 ;;      Temps:          2       0       0       0       0
  2132 ;;      Totals:         4       0       0       0       0
  2133 ;;Total ram usage:        4 bytes
  2134 ;; Hardware stack levels used: 1
  2135 ;; Hardware stack levels required when called: 1
  2136 ;; This function calls:
  2137 ;;		Nothing
  2138 ;; This function is called by:
  2139 ;;		_main
  2140 ;;		_UART_Read
  2141 ;;		_initLCD
  2142 ;;		_lcdPrint
  2143 ;; This function uses a non-reentrant model
  2144 ;;
  2145                           
  2146     0670                     _lcdSend:	
  2147                           ;psect for function _lcdSend
  2148                           
  2149                           
  2150                           ;incstack = 0
  2151                           ; Regs used in _lcdSend: [wreg+status,2+status,0]
  2152                           ;lcdSend@dato stored from wreg
  2153     0670  00F5               	movwf	lcdSend@dato
  2154     0671                     l1905:
  2155                           
  2156                           ;main.c: 295:     TRISD = 0x00;
  2157     0671  1683               	bsf	3,5	;RP0=1, select bank1
  2158     0672  1303               	bcf	3,6	;RP1=0, select bank1
  2159     0673  0188               	clrf	8	;volatile
  2160     0674                     l1907:
  2161                           
  2162                           ;main.c: 296:     TRISEbits.TRISE1 = 0;
  2163     0674  1089               	bcf	9,1	;volatile
  2164     0675                     l1909:
  2165                           
  2166                           ;main.c: 297:     TRISEbits.TRISE2 = 0;
  2167     0675  1109               	bcf	9,2	;volatile
  2168     0676                     l1911:
  2169                           
  2170                           ;main.c: 302:     PORTEbits.RE1 = 1;
  2171     0676  1283               	bcf	3,5	;RP0=0, select bank0
  2172     0677  1303               	bcf	3,6	;RP1=0, select bank0
  2173     0678  1489               	bsf	9,1	;volatile
  2174     0679                     l1913:
  2175                           
  2176                           ;main.c: 304:     PORTD = dato;
  2177     0679  0875               	movf	lcdSend@dato,w
  2178     067A  0088               	movwf	8	;volatile
  2179     067B                     l1915:
  2180                           
  2181                           ;main.c: 305:     PORTEbits.RE2 = tipo;
  2182     067B  0C72               	rrf	lcdSend@tipo,w
  2183     067C  1C03               	skipc
  2184     067D  1109               	bcf	9,2	;volatile
  2185     067E  1803               	skipnc
  2186     067F  1509               	bsf	9,2	;volatile
  2187     0680                     l1917:
  2188                           
  2189                           ;main.c: 306:     _delay((unsigned long)((3)*(20000000/4000.0)));
  2190     0680  3014               	movlw	20
  2191     0681  00F4               	movwf	??_lcdSend+1
  2192     0682  3079               	movlw	121
  2193     0683  00F3               	movwf	??_lcdSend
  2194     0684                     u2697:
  2195     0684  0BF3               	decfsz	??_lcdSend,f
  2196     0685  2E84               	goto	u2697
  2197     0686  0BF4               	decfsz	??_lcdSend+1,f
  2198     0687  2E84               	goto	u2697
  2199     0688  2E89               	nop2
  2200     0689                     l1919:
  2201                           
  2202                           ;main.c: 307:     PORTEbits.RE1 = 0;
  2203     0689  1283               	bcf	3,5	;RP0=0, select bank0
  2204     068A  1303               	bcf	3,6	;RP1=0, select bank0
  2205     068B  1089               	bcf	9,1	;volatile
  2206     068C                     l1921:
  2207                           
  2208                           ;main.c: 308:     _delay((unsigned long)((3)*(20000000/4000.0)));
  2209     068C  3014               	movlw	20
  2210     068D  00F4               	movwf	??_lcdSend+1
  2211     068E  3079               	movlw	121
  2212     068F  00F3               	movwf	??_lcdSend
  2213     0690                     u2707:
  2214     0690  0BF3               	decfsz	??_lcdSend,f
  2215     0691  2E90               	goto	u2707
  2216     0692  0BF4               	decfsz	??_lcdSend+1,f
  2217     0693  2E90               	goto	u2707
  2218     0694  2E95               	nop2
  2219     0695                     l1923:
  2220                           
  2221                           ;main.c: 309:     PORTEbits.RE1 = 1;
  2222     0695  1283               	bcf	3,5	;RP0=0, select bank0
  2223     0696  1303               	bcf	3,6	;RP1=0, select bank0
  2224     0697  1489               	bsf	9,1	;volatile
  2225     0698                     l210:
  2226     0698  0008               	return
  2227     0699                     __end_of_lcdSend:
  2228                           
  2229                           	psect	text6
  2230     03EF                     __ptext6:	
  2231 ;; *************** function _intToString *****************
  2232 ;; Defined at:
  2233 ;;		line 457 in file "main.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;  n               2   12[BANK0 ] int 
  2236 ;;  str             1   14[BANK0 ] PTR unsigned char 
  2237 ;;		 -> print_countdown(3), 
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;  t               1   18[BANK0 ] unsigned char 
  2240 ;;  i               1   20[BANK0 ] unsigned char 
  2241 ;;  cifre           1   19[BANK0 ] unsigned char 
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  1    wreg      void 
  2244 ;; Registers used:
  2245 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2251 ;;      Params:         0       3       0       0       0
  2252 ;;      Locals:         0       3       0       0       0
  2253 ;;      Temps:          0       3       0       0       0
  2254 ;;      Totals:         0       9       0       0       0
  2255 ;;Total ram usage:        9 bytes
  2256 ;; Hardware stack levels used: 1
  2257 ;; Hardware stack levels required when called: 3
  2258 ;; This function calls:
  2259 ;;		___awdiv
  2260 ;;		___awmod
  2261 ;;		_potenza
  2262 ;; This function is called by:
  2263 ;;		_UART_Read
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267     03EF                     _intToString:	
  2268                           ;psect for function _intToString
  2269                           
  2270     03EF                     l1991:	
  2271                           ;incstack = 0
  2272                           ; Regs used in _intToString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2273                           
  2274                           
  2275                           ;main.c: 460:     char cifre = 1;
  2276     03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2277     03F0  1303               	bcf	3,6	;RP1=0, select bank0
  2278     03F1  01E6               	clrf	intToString@cifre
  2279     03F2  0AE6               	incf	intToString@cifre,f
  2280     03F3                     l1993:
  2281                           
  2282                           ;main.c: 463:     while (n / potenza(10, cifre)) cifre++;
  2283     03F3  2BF8               	goto	l1997
  2284     03F4                     l1995:
  2285     03F4  3001               	movlw	1
  2286     03F5  00E2               	movwf	??_intToString
  2287     03F6  0862               	movf	??_intToString,w
  2288     03F7  07E6               	addwf	intToString@cifre,f
  2289     03F8                     l1997:
  2290     03F8  0866               	movf	intToString@cifre,w
  2291     03F9  00F6               	movwf	potenza@e
  2292     03FA  300A               	movlw	10
  2293     03FB  120A  118A  2644  120A  118A  	fcall	_potenza
  2294     0400  1283               	bcf	3,5	;RP0=0, select bank0
  2295     0401  1303               	bcf	3,6	;RP1=0, select bank0
  2296     0402  00E2               	movwf	??_intToString
  2297     0403  01E3               	clrf	??_intToString+1
  2298     0404  0862               	movf	??_intToString,w
  2299     0405  00D7               	movwf	___awdiv@divisor
  2300     0406  0863               	movf	??_intToString+1,w
  2301     0407  00D8               	movwf	___awdiv@divisor+1
  2302     0408  0860               	movf	intToString@n+1,w
  2303     0409  00DA               	movwf	___awdiv@dividend+1
  2304     040A  085F               	movf	intToString@n,w
  2305     040B  00D9               	movwf	___awdiv@dividend
  2306     040C  120A  118A  24E2  120A  118A  	fcall	___awdiv
  2307     0411  1283               	bcf	3,5	;RP0=0, select bank0
  2308     0412  1303               	bcf	3,6	;RP1=0, select bank0
  2309     0413  0857               	movf	?___awdiv,w
  2310     0414  0458               	iorwf	?___awdiv+1,w
  2311     0415  1D03               	btfss	3,2
  2312     0416  2C18               	goto	u2081
  2313     0417  2C19               	goto	u2080
  2314     0418                     u2081:
  2315     0418  2BF4               	goto	l1995
  2316     0419                     u2080:
  2317     0419                     l1999:
  2318                           
  2319                           ;main.c: 465:     for (i = 0; i < cifre; i++) {
  2320     0419  01E7               	clrf	intToString@i
  2321     041A  2C5D               	goto	l2009
  2322     041B                     l2001:
  2323                           
  2324                           ;main.c: 466:         char t = potenza(10, cifre - 1 - i);
  2325     041B  0867               	movf	intToString@i,w
  2326     041C  0266               	subwf	intToString@cifre,w
  2327     041D  3EFF               	addlw	255
  2328     041E  00F6               	movwf	potenza@e
  2329     041F  300A               	movlw	10
  2330     0420  120A  118A  2644  120A  118A  	fcall	_potenza
  2331     0425  1283               	bcf	3,5	;RP0=0, select bank0
  2332     0426  1303               	bcf	3,6	;RP1=0, select bank0
  2333     0427  00E5               	movwf	intToString@t
  2334     0428                     l2003:
  2335                           
  2336                           ;main.c: 467:         str[i] = '0' + (char) (n / t);
  2337     0428  0867               	movf	intToString@i,w
  2338     0429  0761               	addwf	intToString@str,w
  2339     042A  00E2               	movwf	??_intToString
  2340     042B  0862               	movf	??_intToString,w
  2341     042C  0084               	movwf	4
  2342     042D  0865               	movf	intToString@t,w
  2343     042E  00E3               	movwf	??_intToString+1
  2344     042F  01E4               	clrf	??_intToString+2
  2345     0430  0863               	movf	??_intToString+1,w
  2346     0431  00D7               	movwf	___awdiv@divisor
  2347     0432  0864               	movf	??_intToString+2,w
  2348     0433  00D8               	movwf	___awdiv@divisor+1
  2349     0434  0860               	movf	intToString@n+1,w
  2350     0435  00DA               	movwf	___awdiv@dividend+1
  2351     0436  085F               	movf	intToString@n,w
  2352     0437  00D9               	movwf	___awdiv@dividend
  2353     0438  120A  118A  24E2  120A  118A  	fcall	___awdiv
  2354     043D  1283               	bcf	3,5	;RP0=0, select bank0
  2355     043E  1303               	bcf	3,6	;RP1=0, select bank0
  2356     043F  0857               	movf	?___awdiv,w
  2357     0440  3E30               	addlw	48
  2358     0441  1383               	bcf	3,7	;select IRP bank0
  2359     0442  0080               	movwf	0
  2360     0443                     l2005:
  2361                           
  2362                           ;main.c: 468:         n = n % t;
  2363     0443  0865               	movf	intToString@t,w
  2364     0444  00E2               	movwf	??_intToString
  2365     0445  01E3               	clrf	??_intToString+1
  2366     0446  0862               	movf	??_intToString,w
  2367     0447  00F2               	movwf	___awmod@divisor
  2368     0448  0863               	movf	??_intToString+1,w
  2369     0449  00F3               	movwf	___awmod@divisor+1
  2370     044A  0860               	movf	intToString@n+1,w
  2371     044B  00F5               	movwf	___awmod@dividend+1
  2372     044C  085F               	movf	intToString@n,w
  2373     044D  00F4               	movwf	___awmod@dividend
  2374     044E  120A  118A  25A5  120A  118A  	fcall	___awmod
  2375     0453  0873               	movf	?___awmod+1,w
  2376     0454  1283               	bcf	3,5	;RP0=0, select bank0
  2377     0455  1303               	bcf	3,6	;RP1=0, select bank0
  2378     0456  00E0               	movwf	intToString@n+1
  2379     0457  0872               	movf	?___awmod,w
  2380     0458  00DF               	movwf	intToString@n
  2381     0459                     l2007:
  2382                           
  2383                           ;main.c: 469:     }
  2384     0459  3001               	movlw	1
  2385     045A  00E2               	movwf	??_intToString
  2386     045B  0862               	movf	??_intToString,w
  2387     045C  07E7               	addwf	intToString@i,f
  2388     045D                     l2009:
  2389     045D  0866               	movf	intToString@cifre,w
  2390     045E  0267               	subwf	intToString@i,w
  2391     045F  1C03               	skipc
  2392     0460  2C62               	goto	u2091
  2393     0461  2C63               	goto	u2090
  2394     0462                     u2091:
  2395     0462  2C1B               	goto	l2001
  2396     0463                     u2090:
  2397     0463                     l2011:
  2398                           
  2399                           ;main.c: 471:     str[i] = '\0';
  2400     0463  0867               	movf	intToString@i,w
  2401     0464  0761               	addwf	intToString@str,w
  2402     0465  00E2               	movwf	??_intToString
  2403     0466  0862               	movf	??_intToString,w
  2404     0467  0084               	movwf	4
  2405     0468  1383               	bcf	3,7	;select IRP bank0
  2406     0469  0180               	clrf	0
  2407     046A                     l273:
  2408     046A  0008               	return
  2409     046B                     __end_of_intToString:
  2410                           
  2411                           	psect	text7
  2412     0644                     __ptext7:	
  2413 ;; *************** function _potenza *****************
  2414 ;; Defined at:
  2415 ;;		line 449 in file "main.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;  b               1    wreg     unsigned char 
  2418 ;;  e               1    6[COMMON] unsigned char 
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;  b               1    0[BANK0 ] unsigned char 
  2421 ;;  i               2    1[BANK0 ] int 
  2422 ;;  n               1    3[BANK0 ] unsigned char 
  2423 ;; Return value:  Size  Location     Type
  2424 ;;                  1    wreg      unsigned char 
  2425 ;; Registers used:
  2426 ;;		wreg, status,2, status,0, pclath, cstack
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2432 ;;      Params:         1       0       0       0       0
  2433 ;;      Locals:         0       4       0       0       0
  2434 ;;      Temps:          1       0       0       0       0
  2435 ;;      Totals:         2       4       0       0       0
  2436 ;;Total ram usage:        6 bytes
  2437 ;; Hardware stack levels used: 1
  2438 ;; Hardware stack levels required when called: 2
  2439 ;; This function calls:
  2440 ;;		___bmul
  2441 ;; This function is called by:
  2442 ;;		_intToString
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446     0644                     _potenza:	
  2447                           ;psect for function _potenza
  2448                           
  2449                           
  2450                           ;incstack = 0
  2451                           ; Regs used in _potenza: [wreg+status,2+status,0+pclath+cstack]
  2452                           ;potenza@b stored from wreg
  2453     0644  1283               	bcf	3,5	;RP0=0, select bank0
  2454     0645  1303               	bcf	3,6	;RP1=0, select bank0
  2455     0646  00D3               	movwf	potenza@b
  2456     0647                     l1925:
  2457                           
  2458                           ;main.c: 450:     char n = 1;
  2459     0647  01D6               	clrf	potenza@n
  2460     0648  0AD6               	incf	potenza@n,f
  2461     0649                     l1927:
  2462                           
  2463                           ;main.c: 451:     for (int i = 0; i < e; i++) {
  2464     0649  01D4               	clrf	potenza@i
  2465     064A  01D5               	clrf	potenza@i+1
  2466     064B  2E5F               	goto	l1933
  2467     064C                     l1929:
  2468                           
  2469                           ;main.c: 452:         n = n * b;
  2470     064C  1283               	bcf	3,5	;RP0=0, select bank0
  2471     064D  1303               	bcf	3,6	;RP1=0, select bank0
  2472     064E  0853               	movf	potenza@b,w
  2473     064F  00F2               	movwf	___bmul@multiplicand
  2474     0650  0856               	movf	potenza@n,w
  2475     0651  120A  118A  26D2  120A  118A  	fcall	___bmul
  2476     0656  1283               	bcf	3,5	;RP0=0, select bank0
  2477     0657  1303               	bcf	3,6	;RP1=0, select bank0
  2478     0658  00D6               	movwf	potenza@n
  2479     0659                     l1931:
  2480                           
  2481                           ;main.c: 453:     }
  2482     0659  3001               	movlw	1
  2483     065A  07D4               	addwf	potenza@i,f
  2484     065B  1803               	skipnc
  2485     065C  0AD5               	incf	potenza@i+1,f
  2486     065D  3000               	movlw	0
  2487     065E  07D5               	addwf	potenza@i+1,f
  2488     065F                     l1933:
  2489     065F  0855               	movf	potenza@i+1,w
  2490     0660  3A80               	xorlw	128
  2491     0661  00F7               	movwf	??_potenza
  2492     0662  3080               	movlw	128
  2493     0663  0277               	subwf	??_potenza,w
  2494     0664  1D03               	skipz
  2495     0665  2E68               	goto	u1945
  2496     0666  0876               	movf	potenza@e,w
  2497     0667  0254               	subwf	potenza@i,w
  2498     0668                     u1945:
  2499     0668  1C03               	skipc
  2500     0669  2E6B               	goto	u1941
  2501     066A  2E6C               	goto	u1940
  2502     066B                     u1941:
  2503     066B  2E4C               	goto	l1929
  2504     066C                     u1940:
  2505     066C                     l1935:
  2506                           
  2507                           ;main.c: 454:     return n;
  2508     066C  1283               	bcf	3,5	;RP0=0, select bank0
  2509     066D  1303               	bcf	3,6	;RP1=0, select bank0
  2510     066E  0856               	movf	potenza@n,w
  2511     066F                     l264:
  2512     066F  0008               	return
  2513     0670                     __end_of_potenza:
  2514                           
  2515                           	psect	text8
  2516     06D2                     __ptext8:	
  2517 ;; *************** function ___bmul *****************
  2518 ;; Defined at:
  2519 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;  multiplier      1    wreg     unsigned char 
  2522 ;;  multiplicand    1    2[COMMON] unsigned char 
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;  multiplier      1    5[COMMON] unsigned char 
  2525 ;;  product         1    4[COMMON] unsigned char 
  2526 ;; Return value:  Size  Location     Type
  2527 ;;                  1    wreg      unsigned char 
  2528 ;; Registers used:
  2529 ;;		wreg, status,2, status,0
  2530 ;; Tracked objects:
  2531 ;;		On entry : 0/0
  2532 ;;		On exit  : 0/0
  2533 ;;		Unchanged: 0/0
  2534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2535 ;;      Params:         1       0       0       0       0
  2536 ;;      Locals:         2       0       0       0       0
  2537 ;;      Temps:          1       0       0       0       0
  2538 ;;      Totals:         4       0       0       0       0
  2539 ;;Total ram usage:        4 bytes
  2540 ;; Hardware stack levels used: 1
  2541 ;; Hardware stack levels required when called: 1
  2542 ;; This function calls:
  2543 ;;		Nothing
  2544 ;; This function is called by:
  2545 ;;		_potenza
  2546 ;; This function uses a non-reentrant model
  2547 ;;
  2548                           
  2549     06D2                     ___bmul:	
  2550                           ;psect for function ___bmul
  2551                           
  2552                           
  2553                           ;incstack = 0
  2554                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2555                           ;___bmul@multiplier stored from wreg
  2556     06D2  00F5               	movwf	___bmul@multiplier
  2557     06D3                     l1891:
  2558     06D3  01F4               	clrf	___bmul@product
  2559     06D4                     l1893:
  2560     06D4  1C75               	btfss	___bmul@multiplier,0
  2561     06D5  2ED7               	goto	u1921
  2562     06D6  2ED8               	goto	u1920
  2563     06D7                     u1921:
  2564     06D7  2EDC               	goto	l1897
  2565     06D8                     u1920:
  2566     06D8                     l1895:
  2567     06D8  0872               	movf	___bmul@multiplicand,w
  2568     06D9  00F3               	movwf	??___bmul
  2569     06DA  0873               	movf	??___bmul,w
  2570     06DB  07F4               	addwf	___bmul@product,f
  2571     06DC                     l1897:
  2572     06DC  1003               	clrc
  2573     06DD  0DF2               	rlf	___bmul@multiplicand,f
  2574     06DE                     l1899:
  2575     06DE  1003               	clrc
  2576     06DF  0CF5               	rrf	___bmul@multiplier,f
  2577     06E0  0875               	movf	___bmul@multiplier,w
  2578     06E1  1D03               	btfss	3,2
  2579     06E2  2EE4               	goto	u1931
  2580     06E3  2EE5               	goto	u1930
  2581     06E4                     u1931:
  2582     06E4  2ED4               	goto	l1893
  2583     06E5                     u1930:
  2584     06E5                     l1901:
  2585     06E5  0874               	movf	___bmul@product,w
  2586     06E6                     l385:
  2587     06E6  0008               	return
  2588     06E7                     __end_of___bmul:
  2589                           
  2590                           	psect	text9
  2591     05A5                     __ptext9:	
  2592 ;; *************** function ___awmod *****************
  2593 ;; Defined at:
  2594 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  2595 ;; Parameters:    Size  Location     Type
  2596 ;;  divisor         2    2[COMMON] int 
  2597 ;;  dividend        2    4[COMMON] int 
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;  sign            1    8[COMMON] unsigned char 
  2600 ;;  counter         1    7[COMMON] unsigned char 
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  2    2[COMMON] int 
  2603 ;; Registers used:
  2604 ;;		wreg, status,2, status,0
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2610 ;;      Params:         4       0       0       0       0
  2611 ;;      Locals:         2       0       0       0       0
  2612 ;;      Temps:          1       0       0       0       0
  2613 ;;      Totals:         7       0       0       0       0
  2614 ;;Total ram usage:        7 bytes
  2615 ;; Hardware stack levels used: 1
  2616 ;; Hardware stack levels required when called: 1
  2617 ;; This function calls:
  2618 ;;		Nothing
  2619 ;; This function is called by:
  2620 ;;		_intToString
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624     05A5                     ___awmod:	
  2625                           ;psect for function ___awmod
  2626                           
  2627     05A5                     l1471:	
  2628                           ;incstack = 0
  2629                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2630                           
  2631     05A5  01F8               	clrf	___awmod@sign
  2632     05A6                     l1473:
  2633     05A6  1FF5               	btfss	___awmod@dividend+1,7
  2634     05A7  2DA9               	goto	u1121
  2635     05A8  2DAA               	goto	u1120
  2636     05A9                     u1121:
  2637     05A9  2DB1               	goto	l1479
  2638     05AA                     u1120:
  2639     05AA                     l1475:
  2640     05AA  09F4               	comf	___awmod@dividend,f
  2641     05AB  09F5               	comf	___awmod@dividend+1,f
  2642     05AC  0AF4               	incf	___awmod@dividend,f
  2643     05AD  1903               	skipnz
  2644     05AE  0AF5               	incf	___awmod@dividend+1,f
  2645     05AF                     l1477:
  2646     05AF  01F8               	clrf	___awmod@sign
  2647     05B0  0AF8               	incf	___awmod@sign,f
  2648     05B1                     l1479:
  2649     05B1  1FF3               	btfss	___awmod@divisor+1,7
  2650     05B2  2DB4               	goto	u1131
  2651     05B3  2DB5               	goto	u1130
  2652     05B4                     u1131:
  2653     05B4  2DBA               	goto	l1483
  2654     05B5                     u1130:
  2655     05B5                     l1481:
  2656     05B5  09F2               	comf	___awmod@divisor,f
  2657     05B6  09F3               	comf	___awmod@divisor+1,f
  2658     05B7  0AF2               	incf	___awmod@divisor,f
  2659     05B8  1903               	skipnz
  2660     05B9  0AF3               	incf	___awmod@divisor+1,f
  2661     05BA                     l1483:
  2662     05BA  0872               	movf	___awmod@divisor,w
  2663     05BB  0473               	iorwf	___awmod@divisor+1,w
  2664     05BC  1903               	btfsc	3,2
  2665     05BD  2DBF               	goto	u1141
  2666     05BE  2DC0               	goto	u1140
  2667     05BF                     u1141:
  2668     05BF  2DEF               	goto	l1501
  2669     05C0                     u1140:
  2670     05C0                     l1485:
  2671     05C0  01F7               	clrf	___awmod@counter
  2672     05C1  0AF7               	incf	___awmod@counter,f
  2673     05C2  2DCE               	goto	l1491
  2674     05C3                     l1487:
  2675     05C3  3001               	movlw	1
  2676     05C4                     u1155:
  2677     05C4  1003               	clrc
  2678     05C5  0DF2               	rlf	___awmod@divisor,f
  2679     05C6  0DF3               	rlf	___awmod@divisor+1,f
  2680     05C7  3EFF               	addlw	-1
  2681     05C8  1D03               	skipz
  2682     05C9  2DC4               	goto	u1155
  2683     05CA                     l1489:
  2684     05CA  3001               	movlw	1
  2685     05CB  00F6               	movwf	??___awmod
  2686     05CC  0876               	movf	??___awmod,w
  2687     05CD  07F7               	addwf	___awmod@counter,f
  2688     05CE                     l1491:
  2689     05CE  1FF3               	btfss	___awmod@divisor+1,7
  2690     05CF  2DD1               	goto	u1161
  2691     05D0  2DD2               	goto	u1160
  2692     05D1                     u1161:
  2693     05D1  2DC3               	goto	l1487
  2694     05D2                     u1160:
  2695     05D2                     l1493:
  2696     05D2  0873               	movf	___awmod@divisor+1,w
  2697     05D3  0275               	subwf	___awmod@dividend+1,w
  2698     05D4  1D03               	skipz
  2699     05D5  2DD8               	goto	u1175
  2700     05D6  0872               	movf	___awmod@divisor,w
  2701     05D7  0274               	subwf	___awmod@dividend,w
  2702     05D8                     u1175:
  2703     05D8  1C03               	skipc
  2704     05D9  2DDB               	goto	u1171
  2705     05DA  2DDC               	goto	u1170
  2706     05DB                     u1171:
  2707     05DB  2DE2               	goto	l1497
  2708     05DC                     u1170:
  2709     05DC                     l1495:
  2710     05DC  0872               	movf	___awmod@divisor,w
  2711     05DD  02F4               	subwf	___awmod@dividend,f
  2712     05DE  0873               	movf	___awmod@divisor+1,w
  2713     05DF  1C03               	skipc
  2714     05E0  03F5               	decf	___awmod@dividend+1,f
  2715     05E1  02F5               	subwf	___awmod@dividend+1,f
  2716     05E2                     l1497:
  2717     05E2  3001               	movlw	1
  2718     05E3                     u1185:
  2719     05E3  1003               	clrc
  2720     05E4  0CF3               	rrf	___awmod@divisor+1,f
  2721     05E5  0CF2               	rrf	___awmod@divisor,f
  2722     05E6  3EFF               	addlw	-1
  2723     05E7  1D03               	skipz
  2724     05E8  2DE3               	goto	u1185
  2725     05E9                     l1499:
  2726     05E9  3001               	movlw	1
  2727     05EA  02F7               	subwf	___awmod@counter,f
  2728     05EB  1D03               	btfss	3,2
  2729     05EC  2DEE               	goto	u1191
  2730     05ED  2DEF               	goto	u1190
  2731     05EE                     u1191:
  2732     05EE  2DD2               	goto	l1493
  2733     05EF                     u1190:
  2734     05EF                     l1501:
  2735     05EF  0878               	movf	___awmod@sign,w
  2736     05F0  1903               	btfsc	3,2
  2737     05F1  2DF3               	goto	u1201
  2738     05F2  2DF4               	goto	u1200
  2739     05F3                     u1201:
  2740     05F3  2DF9               	goto	l1505
  2741     05F4                     u1200:
  2742     05F4                     l1503:
  2743     05F4  09F4               	comf	___awmod@dividend,f
  2744     05F5  09F5               	comf	___awmod@dividend+1,f
  2745     05F6  0AF4               	incf	___awmod@dividend,f
  2746     05F7  1903               	skipnz
  2747     05F8  0AF5               	incf	___awmod@dividend+1,f
  2748     05F9                     l1505:
  2749     05F9  0875               	movf	___awmod@dividend+1,w
  2750     05FA  00F3               	movwf	?___awmod+1
  2751     05FB  0874               	movf	___awmod@dividend,w
  2752     05FC  00F2               	movwf	?___awmod
  2753     05FD                     l525:
  2754     05FD  0008               	return
  2755     05FE                     __end_of___awmod:
  2756                           
  2757                           	psect	text10
  2758     04E2                     __ptext10:	
  2759 ;; *************** function ___awdiv *****************
  2760 ;; Defined at:
  2761 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;  divisor         2    4[BANK0 ] int 
  2764 ;;  dividend        2    6[BANK0 ] int 
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;  quotient        2   10[BANK0 ] int 
  2767 ;;  sign            1    9[BANK0 ] unsigned char 
  2768 ;;  counter         1    8[BANK0 ] unsigned char 
  2769 ;; Return value:  Size  Location     Type
  2770 ;;                  2    4[BANK0 ] int 
  2771 ;; Registers used:
  2772 ;;		wreg, status,2, status,0
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2778 ;;      Params:         0       4       0       0       0
  2779 ;;      Locals:         0       4       0       0       0
  2780 ;;      Temps:          1       0       0       0       0
  2781 ;;      Totals:         1       8       0       0       0
  2782 ;;Total ram usage:        9 bytes
  2783 ;; Hardware stack levels used: 1
  2784 ;; Hardware stack levels required when called: 1
  2785 ;; This function calls:
  2786 ;;		Nothing
  2787 ;; This function is called by:
  2788 ;;		_intToString
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792     04E2                     ___awdiv:	
  2793                           ;psect for function ___awdiv
  2794                           
  2795     04E2                     l1939:	
  2796                           ;incstack = 0
  2797                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2798                           
  2799     04E2  1283               	bcf	3,5	;RP0=0, select bank0
  2800     04E3  1303               	bcf	3,6	;RP1=0, select bank0
  2801     04E4  01DC               	clrf	___awdiv@sign
  2802     04E5                     l1941:
  2803     04E5  1FD8               	btfss	___awdiv@divisor+1,7
  2804     04E6  2CE8               	goto	u1951
  2805     04E7  2CE9               	goto	u1950
  2806     04E8                     u1951:
  2807     04E8  2CF0               	goto	l1947
  2808     04E9                     u1950:
  2809     04E9                     l1943:
  2810     04E9  09D7               	comf	___awdiv@divisor,f
  2811     04EA  09D8               	comf	___awdiv@divisor+1,f
  2812     04EB  0AD7               	incf	___awdiv@divisor,f
  2813     04EC  1903               	skipnz
  2814     04ED  0AD8               	incf	___awdiv@divisor+1,f
  2815     04EE                     l1945:
  2816     04EE  01DC               	clrf	___awdiv@sign
  2817     04EF  0ADC               	incf	___awdiv@sign,f
  2818     04F0                     l1947:
  2819     04F0  1FDA               	btfss	___awdiv@dividend+1,7
  2820     04F1  2CF3               	goto	u1961
  2821     04F2  2CF4               	goto	u1960
  2822     04F3                     u1961:
  2823     04F3  2CFD               	goto	l1953
  2824     04F4                     u1960:
  2825     04F4                     l1949:
  2826     04F4  09D9               	comf	___awdiv@dividend,f
  2827     04F5  09DA               	comf	___awdiv@dividend+1,f
  2828     04F6  0AD9               	incf	___awdiv@dividend,f
  2829     04F7  1903               	skipnz
  2830     04F8  0ADA               	incf	___awdiv@dividend+1,f
  2831     04F9                     l1951:
  2832     04F9  3001               	movlw	1
  2833     04FA  00F8               	movwf	??___awdiv
  2834     04FB  0878               	movf	??___awdiv,w
  2835     04FC  06DC               	xorwf	___awdiv@sign,f
  2836     04FD                     l1953:
  2837     04FD  01DD               	clrf	___awdiv@quotient
  2838     04FE  01DE               	clrf	___awdiv@quotient+1
  2839     04FF                     l1955:
  2840     04FF  0857               	movf	___awdiv@divisor,w
  2841     0500  0458               	iorwf	___awdiv@divisor+1,w
  2842     0501  1903               	btfsc	3,2
  2843     0502  2D04               	goto	u1971
  2844     0503  2D05               	goto	u1970
  2845     0504                     u1971:
  2846     0504  2D3C               	goto	l1975
  2847     0505                     u1970:
  2848     0505                     l1957:
  2849     0505  01DB               	clrf	___awdiv@counter
  2850     0506  0ADB               	incf	___awdiv@counter,f
  2851     0507  2D13               	goto	l1963
  2852     0508                     l1959:
  2853     0508  3001               	movlw	1
  2854     0509                     u1985:
  2855     0509  1003               	clrc
  2856     050A  0DD7               	rlf	___awdiv@divisor,f
  2857     050B  0DD8               	rlf	___awdiv@divisor+1,f
  2858     050C  3EFF               	addlw	-1
  2859     050D  1D03               	skipz
  2860     050E  2D09               	goto	u1985
  2861     050F                     l1961:
  2862     050F  3001               	movlw	1
  2863     0510  00F8               	movwf	??___awdiv
  2864     0511  0878               	movf	??___awdiv,w
  2865     0512  07DB               	addwf	___awdiv@counter,f
  2866     0513                     l1963:
  2867     0513  1FD8               	btfss	___awdiv@divisor+1,7
  2868     0514  2D16               	goto	u1991
  2869     0515  2D17               	goto	u1990
  2870     0516                     u1991:
  2871     0516  2D08               	goto	l1959
  2872     0517                     u1990:
  2873     0517                     l1965:
  2874     0517  3001               	movlw	1
  2875     0518                     u2005:
  2876     0518  1003               	clrc
  2877     0519  0DDD               	rlf	___awdiv@quotient,f
  2878     051A  0DDE               	rlf	___awdiv@quotient+1,f
  2879     051B  3EFF               	addlw	-1
  2880     051C  1D03               	skipz
  2881     051D  2D18               	goto	u2005
  2882     051E  0858               	movf	___awdiv@divisor+1,w
  2883     051F  025A               	subwf	___awdiv@dividend+1,w
  2884     0520  1D03               	skipz
  2885     0521  2D24               	goto	u2015
  2886     0522  0857               	movf	___awdiv@divisor,w
  2887     0523  0259               	subwf	___awdiv@dividend,w
  2888     0524                     u2015:
  2889     0524  1C03               	skipc
  2890     0525  2D27               	goto	u2011
  2891     0526  2D28               	goto	u2010
  2892     0527                     u2011:
  2893     0527  2D2F               	goto	l1971
  2894     0528                     u2010:
  2895     0528                     l1967:
  2896     0528  0857               	movf	___awdiv@divisor,w
  2897     0529  02D9               	subwf	___awdiv@dividend,f
  2898     052A  0858               	movf	___awdiv@divisor+1,w
  2899     052B  1C03               	skipc
  2900     052C  03DA               	decf	___awdiv@dividend+1,f
  2901     052D  02DA               	subwf	___awdiv@dividend+1,f
  2902     052E                     l1969:
  2903     052E  145D               	bsf	___awdiv@quotient,0
  2904     052F                     l1971:
  2905     052F  3001               	movlw	1
  2906     0530                     u2025:
  2907     0530  1003               	clrc
  2908     0531  0CD8               	rrf	___awdiv@divisor+1,f
  2909     0532  0CD7               	rrf	___awdiv@divisor,f
  2910     0533  3EFF               	addlw	-1
  2911     0534  1D03               	skipz
  2912     0535  2D30               	goto	u2025
  2913     0536                     l1973:
  2914     0536  3001               	movlw	1
  2915     0537  02DB               	subwf	___awdiv@counter,f
  2916     0538  1D03               	btfss	3,2
  2917     0539  2D3B               	goto	u2031
  2918     053A  2D3C               	goto	u2030
  2919     053B                     u2031:
  2920     053B  2D17               	goto	l1965
  2921     053C                     u2030:
  2922     053C                     l1975:
  2923     053C  085C               	movf	___awdiv@sign,w
  2924     053D  1903               	btfsc	3,2
  2925     053E  2D40               	goto	u2041
  2926     053F  2D41               	goto	u2040
  2927     0540                     u2041:
  2928     0540  2D46               	goto	l1979
  2929     0541                     u2040:
  2930     0541                     l1977:
  2931     0541  09DD               	comf	___awdiv@quotient,f
  2932     0542  09DE               	comf	___awdiv@quotient+1,f
  2933     0543  0ADD               	incf	___awdiv@quotient,f
  2934     0544  1903               	skipnz
  2935     0545  0ADE               	incf	___awdiv@quotient+1,f
  2936     0546                     l1979:
  2937     0546  085E               	movf	___awdiv@quotient+1,w
  2938     0547  00D8               	movwf	?___awdiv+1
  2939     0548  085D               	movf	___awdiv@quotient,w
  2940     0549  00D7               	movwf	?___awdiv
  2941     054A                     l512:
  2942     054A  0008               	return
  2943     054B                     __end_of___awdiv:
  2944                           
  2945                           	psect	text11
  2946     06E7                     __ptext11:	
  2947 ;; *************** function _UART_Init *****************
  2948 ;; Defined at:
  2949 ;;		line 212 in file "main.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;		None
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;		None
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  1    wreg      void 
  2956 ;; Registers used:
  2957 ;;		wreg
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2963 ;;      Params:         0       0       0       0       0
  2964 ;;      Locals:         0       0       0       0       0
  2965 ;;      Temps:          0       0       0       0       0
  2966 ;;      Totals:         0       0       0       0       0
  2967 ;;Total ram usage:        0 bytes
  2968 ;; Hardware stack levels used: 1
  2969 ;; Hardware stack levels required when called: 1
  2970 ;; This function calls:
  2971 ;;		Nothing
  2972 ;; This function is called by:
  2973 ;;		_main
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           
  2977     06E7                     _UART_Init:	
  2978                           ;psect for function _UART_Init
  2979                           
  2980     06E7                     l1539:	
  2981                           ;incstack = 0
  2982                           ; Regs used in _UART_Init: [wreg]
  2983                           
  2984                           
  2985                           ;main.c: 214:     TRISC6 = 0;
  2986     06E7  1683               	bsf	3,5	;RP0=1, select bank1
  2987     06E8  1303               	bcf	3,6	;RP1=0, select bank1
  2988     06E9  1307               	bcf	7,6	;volatile
  2989                           
  2990                           ;main.c: 215:     TRISC7 = 1;
  2991     06EA  1787               	bsf	7,7	;volatile
  2992                           
  2993                           ;main.c: 218:     BRGH = 1;
  2994     06EB  1518               	bsf	24,2	;volatile
  2995     06EC                     l1541:
  2996                           
  2997                           ;main.c: 219:     SPBRG = 51;
  2998     06EC  3033               	movlw	51
  2999     06ED  0099               	movwf	25	;volatile
  3000     06EE                     l1543:
  3001                           
  3002                           ;main.c: 222:     SYNC = 0;
  3003     06EE  1218               	bcf	24,4	;volatile
  3004     06EF                     l1545:
  3005                           
  3006                           ;main.c: 223:     SPEN = 1;
  3007     06EF  1283               	bcf	3,5	;RP0=0, select bank0
  3008     06F0  1303               	bcf	3,6	;RP1=0, select bank0
  3009     06F1  1798               	bsf	24,7	;volatile
  3010     06F2                     l1547:
  3011                           
  3012                           ;main.c: 226:     TXEN = 1;
  3013     06F2  1683               	bsf	3,5	;RP0=1, select bank1
  3014     06F3  1303               	bcf	3,6	;RP1=0, select bank1
  3015     06F4  1698               	bsf	24,5	;volatile
  3016     06F5                     l1549:
  3017                           
  3018                           ;main.c: 227:     CREN = 1;
  3019     06F5  1283               	bcf	3,5	;RP0=0, select bank0
  3020     06F6  1303               	bcf	3,6	;RP1=0, select bank0
  3021     06F7  1618               	bsf	24,4	;volatile
  3022     06F8                     l184:
  3023     06F8  0008               	return
  3024     06F9                     __end_of_UART_Init:
  3025                           
  3026                           	psect	text12
  3027     06F9                     __ptext12:	
  3028 ;; *************** function _Timer0_Init *****************
  3029 ;; Defined at:
  3030 ;;		line 342 in file "main.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;		None
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;		None
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  1    wreg      void 
  3037 ;; Registers used:
  3038 ;;		wreg
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3044 ;;      Params:         0       0       0       0       0
  3045 ;;      Locals:         0       0       0       0       0
  3046 ;;      Temps:          0       0       0       0       0
  3047 ;;      Totals:         0       0       0       0       0
  3048 ;;Total ram usage:        0 bytes
  3049 ;; Hardware stack levels used: 1
  3050 ;; Hardware stack levels required when called: 1
  3051 ;; This function calls:
  3052 ;;		Nothing
  3053 ;; This function is called by:
  3054 ;;		_main
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058     06F9                     _Timer0_Init:	
  3059                           ;psect for function _Timer0_Init
  3060                           
  3061     06F9                     l1575:	
  3062                           ;incstack = 0
  3063                           ; Regs used in _Timer0_Init: [wreg]
  3064                           
  3065                           
  3066                           ;main.c: 344:     T0CS = 0;
  3067     06F9  1683               	bsf	3,5	;RP0=1, select bank1
  3068     06FA  1303               	bcf	3,6	;RP1=0, select bank1
  3069     06FB  1281               	bcf	1,5	;volatile
  3070                           
  3071                           ;main.c: 345:     PSA = 0;
  3072     06FC  1181               	bcf	1,3	;volatile
  3073                           
  3074                           ;main.c: 346:     PS2 = 1;
  3075     06FD  1501               	bsf	1,2	;volatile
  3076                           
  3077                           ;main.c: 347:     PS1 = 1;
  3078     06FE  1481               	bsf	1,1	;volatile
  3079                           
  3080                           ;main.c: 348:     PS0 = 1;
  3081     06FF  1401               	bsf	1,0	;volatile
  3082     0700                     l1577:
  3083                           
  3084                           ;main.c: 351:     TMR0 = 6;
  3085     0700  3006               	movlw	6
  3086     0701  1283               	bcf	3,5	;RP0=0, select bank0
  3087     0702  1303               	bcf	3,6	;RP1=0, select bank0
  3088     0703  0081               	movwf	1	;volatile
  3089     0704                     l1579:
  3090                           
  3091                           ;main.c: 352:     TMR0IF = 0;
  3092     0704  110B               	bcf	11,2	;volatile
  3093     0705                     l1581:
  3094                           
  3095                           ;main.c: 353:     TMR0IE = 1;
  3096     0705  168B               	bsf	11,5	;volatile
  3097     0706                     l1583:
  3098                           
  3099                           ;main.c: 354:     GIE = 1;
  3100     0706  178B               	bsf	11,7	;volatile
  3101     0707                     l239:
  3102     0707  0008               	return
  3103     0708                     __end_of_Timer0_Init:
  3104                           
  3105                           	psect	text13
  3106     071A                     __ptext13:	
  3107 ;; *************** function _RS485_TxEnable *****************
  3108 ;; Defined at:
  3109 ;;		line 230 in file "main.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;		None
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;		None
  3114 ;; Return value:  Size  Location     Type
  3115 ;;                  1    wreg      void 
  3116 ;; Registers used:
  3117 ;;		None
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3123 ;;      Params:         0       0       0       0       0
  3124 ;;      Locals:         0       0       0       0       0
  3125 ;;      Temps:          0       0       0       0       0
  3126 ;;      Totals:         0       0       0       0       0
  3127 ;;Total ram usage:        0 bytes
  3128 ;; Hardware stack levels used: 1
  3129 ;; Hardware stack levels required when called: 1
  3130 ;; This function calls:
  3131 ;;		Nothing
  3132 ;; This function is called by:
  3133 ;;		_main
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137     071A                     _RS485_TxEnable:	
  3138                           ;psect for function _RS485_TxEnable
  3139                           
  3140     071A                     l1585:	
  3141                           ;incstack = 0
  3142                           ; Regs used in _RS485_TxEnable: []
  3143                           
  3144                           
  3145                           ;main.c: 231:     RC0 = 1;
  3146     071A  1283               	bcf	3,5	;RP0=0, select bank0
  3147     071B  1303               	bcf	3,6	;RP1=0, select bank0
  3148     071C  1407               	bsf	7,0	;volatile
  3149                           
  3150                           ;main.c: 232:     RC1 = 0;
  3151     071D  1087               	bcf	7,1	;volatile
  3152     071E                     l187:
  3153     071E  0008               	return
  3154     071F                     __end_of_RS485_TxEnable:
  3155                           
  3156                           	psect	text14
  3157     071F                     __ptext14:	
  3158 ;; *************** function _RS485_RxEnable *****************
  3159 ;; Defined at:
  3160 ;;		line 235 in file "main.c"
  3161 ;; Parameters:    Size  Location     Type
  3162 ;;		None
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;		None
  3165 ;; Return value:  Size  Location     Type
  3166 ;;                  1    wreg      void 
  3167 ;; Registers used:
  3168 ;;		None
  3169 ;; Tracked objects:
  3170 ;;		On entry : 0/0
  3171 ;;		On exit  : 0/0
  3172 ;;		Unchanged: 0/0
  3173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3174 ;;      Params:         0       0       0       0       0
  3175 ;;      Locals:         0       0       0       0       0
  3176 ;;      Temps:          0       0       0       0       0
  3177 ;;      Totals:         0       0       0       0       0
  3178 ;;Total ram usage:        0 bytes
  3179 ;; Hardware stack levels used: 1
  3180 ;; Hardware stack levels required when called: 1
  3181 ;; This function calls:
  3182 ;;		Nothing
  3183 ;; This function is called by:
  3184 ;;		_main
  3185 ;; This function uses a non-reentrant model
  3186 ;;
  3187                           
  3188     071F                     _RS485_RxEnable:	
  3189                           ;psect for function _RS485_RxEnable
  3190                           
  3191     071F                     l1657:	
  3192                           ;incstack = 0
  3193                           ; Regs used in _RS485_RxEnable: []
  3194                           
  3195                           
  3196                           ;main.c: 236:     RC0 = 0;
  3197     071F  1283               	bcf	3,5	;RP0=0, select bank0
  3198     0720  1303               	bcf	3,6	;RP1=0, select bank0
  3199     0721  1007               	bcf	7,0	;volatile
  3200                           
  3201                           ;main.c: 237:     RC1 = 1;
  3202     0722  1487               	bsf	7,1	;volatile
  3203     0723                     l190:
  3204     0723  0008               	return
  3205     0724                     __end_of_RS485_RxEnable:
  3206                           
  3207                           	psect	text15
  3208     02EB                     __ptext15:	
  3209 ;; *************** function _KeyPadReader *****************
  3210 ;; Defined at:
  3211 ;;		line 367 in file "main.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;		None
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;		None
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  1    wreg      unsigned char 
  3218 ;; Registers used:
  3219 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3225 ;;      Params:         0       0       0       0       0
  3226 ;;      Locals:         0       0       0       0       0
  3227 ;;      Temps:          2       0       0       0       0
  3228 ;;      Totals:         2       0       0       0       0
  3229 ;;Total ram usage:        2 bytes
  3230 ;; Hardware stack levels used: 2
  3231 ;; Hardware stack levels required when called: 1
  3232 ;; This function calls:
  3233 ;;		Nothing
  3234 ;; This function is called by:
  3235 ;;		_main
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238                           
  3239     02EB                     _KeyPadReader:	
  3240                           ;psect for function _KeyPadReader
  3241                           
  3242     02EB                     l1603:	
  3243                           ;incstack = 0
  3244                           ; Regs used in _KeyPadReader: [wreg-fsr0h+status,2+status,0+pclath]
  3245                           
  3246                           
  3247                           ;main.c: 368:     TRISD |= 0x0F;
  3248     02EB  300F               	movlw	15
  3249     02EC  00F2               	movwf	??_KeyPadReader
  3250     02ED  0872               	movf	??_KeyPadReader,w
  3251     02EE  1683               	bsf	3,5	;RP0=1, select bank1
  3252     02EF  1303               	bcf	3,6	;RP1=0, select bank1
  3253     02F0  0488               	iorwf	8,f	;volatile
  3254     02F1                     l1605:
  3255                           
  3256                           ;main.c: 371:     for (colScan = 0; colScan < 3; colScan++) {
  3257     02F1  1283               	bcf	3,5	;RP0=0, select bank0
  3258     02F2  01CA               	clrf	_colScan
  3259     02F3                     l1611:
  3260                           
  3261                           ;main.c: 372:         PORTB = PORTB | 0x07;
  3262     02F3  0806               	movf	6,w	;volatile
  3263     02F4  3807               	iorlw	7
  3264     02F5  0086               	movwf	6	;volatile
  3265     02F6                     l1613:
  3266                           
  3267                           ;main.c: 373:         PORTB &= colMask[colScan];
  3268     02F6  084A               	movf	_colScan,w
  3269     02F7  3E11               	addlw	low ((_colMask-__stringbase)| (0+32768))
  3270     02F8  0084               	movwf	4
  3271     02F9  120A  118A  237A  120A  118A  	fcall	stringdir
  3272     02FE  00F2               	movwf	??_KeyPadReader
  3273     02FF  0872               	movf	??_KeyPadReader,w
  3274     0300  0586               	andwf	6,f	;volatile
  3275     0301                     l1615:
  3276                           
  3277                           ;main.c: 376:         for (rowScan = 0; rowScan < 4; rowScan++) {
  3278     0301  01C9               	clrf	_rowScan
  3279     0302                     l1621:
  3280                           
  3281                           ;main.c: 377:             if (!(PORTD & rowMask[rowScan]) && (old_btn)) {
  3282     0302  0849               	movf	_rowScan,w
  3283     0303  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  3284     0304  0084               	movwf	4
  3285     0305  120A  118A  237A  120A  118A  	fcall	stringdir
  3286     030A  0508               	andwf	8,w	;volatile
  3287     030B  1D03               	btfss	3,2
  3288     030C  2B0E               	goto	u1281
  3289     030D  2B0F               	goto	u1280
  3290     030E                     u1281:
  3291     030E  2B18               	goto	l1629
  3292     030F                     u1280:
  3293     030F                     l1623:
  3294     030F  1C6B               	btfss	_old_btn/(0+8),_old_btn& (0+7)
  3295     0310  2B12               	goto	u1291
  3296     0311  2B13               	goto	u1290
  3297     0312                     u1291:
  3298     0312  2B18               	goto	l1629
  3299     0313                     u1290:
  3300     0313                     l1625:
  3301                           
  3302                           ;main.c: 378:                 old_btn = 0;
  3303     0313  106B               	bcf	_old_btn/(0+8),_old_btn& (0+7)
  3304     0314                     l1627:
  3305                           
  3306                           ;main.c: 379:                 stato++;
  3307     0314  3001               	movlw	1
  3308     0315  00F2               	movwf	??_KeyPadReader
  3309     0316  0872               	movf	??_KeyPadReader,w
  3310     0317  07C8               	addwf	_stato,f
  3311     0318                     l1629:
  3312                           
  3313                           ;main.c: 381:             if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  3314     0318  0849               	movf	_rowScan,w
  3315     0319  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  3316     031A  0084               	movwf	4
  3317     031B  120A  118A  237A  120A  118A  	fcall	stringdir
  3318     0320  0508               	andwf	8,w	;volatile
  3319     0321  1903               	btfsc	3,2
  3320     0322  2B24               	goto	u1301
  3321     0323  2B25               	goto	u1300
  3322     0324                     u1301:
  3323     0324  2B46               	goto	l1641
  3324     0325                     u1300:
  3325     0325                     l1631:
  3326     0325  186B               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  3327     0326  2B28               	goto	u1311
  3328     0327  2B29               	goto	u1310
  3329     0328                     u1311:
  3330     0328  2B46               	goto	l1641
  3331     0329                     u1310:
  3332     0329                     l1633:
  3333                           
  3334                           ;main.c: 382:                 _delay((unsigned long)((10)*(20000000/4000.0)));
  3335     0329  3041               	movlw	65
  3336     032A  00F3               	movwf	??_KeyPadReader+1
  3337     032B  30EE               	movlw	238
  3338     032C  00F2               	movwf	??_KeyPadReader
  3339     032D                     u2717:
  3340     032D  0BF2               	decfsz	??_KeyPadReader,f
  3341     032E  2B2D               	goto	u2717
  3342     032F  0BF3               	decfsz	??_KeyPadReader+1,f
  3343     0330  2B2D               	goto	u2717
  3344     0331  0000               	nop
  3345     0332                     l1635:
  3346                           
  3347                           ;main.c: 383:                 if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  3348     0332  1283               	bcf	3,5	;RP0=0, select bank0
  3349     0333  1303               	bcf	3,6	;RP1=0, select bank0
  3350     0334  0849               	movf	_rowScan,w
  3351     0335  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  3352     0336  0084               	movwf	4
  3353     0337  120A  118A  237A  120A  118A  	fcall	stringdir
  3354     033C  0508               	andwf	8,w	;volatile
  3355     033D  1903               	btfsc	3,2
  3356     033E  2B40               	goto	u1321
  3357     033F  2B41               	goto	u1320
  3358     0340                     u1321:
  3359     0340  2B46               	goto	l1641
  3360     0341                     u1320:
  3361     0341                     l1637:
  3362     0341  186B               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  3363     0342  2B44               	goto	u1331
  3364     0343  2B45               	goto	u1330
  3365     0344                     u1331:
  3366     0344  2B46               	goto	l1641
  3367     0345                     u1330:
  3368     0345                     l1639:
  3369                           
  3370                           ;main.c: 384:                     old_btn = 1;
  3371     0345  146B               	bsf	_old_btn/(0+8),_old_btn& (0+7)
  3372     0346                     l1641:
  3373                           
  3374                           ;main.c: 387:             if (stato != old_stato) {
  3375     0346  0848               	movf	_stato,w
  3376     0347  0647               	xorwf	_old_stato,w
  3377     0348  1903               	skipnz
  3378     0349  2B4B               	goto	u1341
  3379     034A  2B4C               	goto	u1340
  3380     034B                     u1341:
  3381     034B  2B5A               	goto	l1649
  3382     034C                     u1340:
  3383     034C                     l1643:
  3384                           
  3385                           ;main.c: 388:                 keypressed = rowScan + (4 * colScan);
  3386     034C  084A               	movf	_colScan,w
  3387     034D  00F2               	movwf	??_KeyPadReader
  3388     034E  3002               	movlw	2
  3389     034F                     u1355:
  3390     034F  1003               	clrc
  3391     0350  0DF2               	rlf	??_KeyPadReader,f
  3392     0351  3EFF               	addlw	-1
  3393     0352  1D03               	skipz
  3394     0353  2B4F               	goto	u1355
  3395     0354  0849               	movf	_rowScan,w
  3396     0355  0772               	addwf	??_KeyPadReader,w
  3397     0356  00CC               	movwf	_keypressed
  3398     0357                     l1645:
  3399                           
  3400                           ;main.c: 391:                 old_stato = stato;
  3401     0357  0848               	movf	_stato,w
  3402     0358  00C7               	movwf	_old_stato
  3403     0359  2B6F               	goto	l257
  3404     035A                     l1649:
  3405                           
  3406                           ;main.c: 394:         }
  3407     035A  3001               	movlw	1
  3408     035B  00F2               	movwf	??_KeyPadReader
  3409     035C  0872               	movf	??_KeyPadReader,w
  3410     035D  07C9               	addwf	_rowScan,f
  3411     035E                     l1651:
  3412     035E  3004               	movlw	4
  3413     035F  0249               	subwf	_rowScan,w
  3414     0360  1C03               	skipc
  3415     0361  2B63               	goto	u1361
  3416     0362  2B64               	goto	u1360
  3417     0363                     u1361:
  3418     0363  2B02               	goto	l1621
  3419     0364                     u1360:
  3420     0364                     l1653:
  3421                           
  3422                           ;main.c: 395:     }
  3423     0364  3001               	movlw	1
  3424     0365  00F2               	movwf	??_KeyPadReader
  3425     0366  0872               	movf	??_KeyPadReader,w
  3426     0367  07CA               	addwf	_colScan,f
  3427     0368                     l1655:
  3428     0368  3003               	movlw	3
  3429     0369  024A               	subwf	_colScan,w
  3430     036A  1C03               	skipc
  3431     036B  2B6D               	goto	u1371
  3432     036C  2B6E               	goto	u1370
  3433     036D                     u1371:
  3434     036D  2AF3               	goto	l1611
  3435     036E                     u1370:
  3436     036E  2AF1               	goto	l1605
  3437     036F                     l257:
  3438     036F  0008               	return
  3439     0370                     __end_of_KeyPadReader:
  3440                           
  3441                           	psect	text16
  3442     06B9                     __ptext16:	
  3443 ;; *************** function _GenerateRandomNumber *****************
  3444 ;; Defined at:
  3445 ;;		line 357 in file "main.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;		None
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;  count           2    2[COMMON] unsigned int 
  3450 ;;  randomNum       1    4[COMMON] unsigned char 
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  1    wreg      unsigned char 
  3453 ;; Registers used:
  3454 ;;		wreg, status,2, status,0
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/0
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3460 ;;      Params:         0       0       0       0       0
  3461 ;;      Locals:         3       0       0       0       0
  3462 ;;      Temps:          0       0       0       0       0
  3463 ;;      Totals:         3       0       0       0       0
  3464 ;;Total ram usage:        3 bytes
  3465 ;; Hardware stack levels used: 1
  3466 ;; Hardware stack levels required when called: 1
  3467 ;; This function calls:
  3468 ;;		Nothing
  3469 ;; This function is called by:
  3470 ;;		_main
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           
  3474     06B9                     _GenerateRandomNumber:	
  3475                           ;psect for function _GenerateRandomNumber
  3476                           
  3477     06B9                     l1591:	
  3478                           ;incstack = 0
  3479                           ; Regs used in _GenerateRandomNumber: [wreg+status,2+status,0]
  3480                           
  3481                           
  3482                           ;main.c: 358:     unsigned int count = 0;
  3483     06B9  01F2               	clrf	GenerateRandomNumber@count
  3484     06BA  01F3               	clrf	GenerateRandomNumber@count+1
  3485                           
  3486                           ;main.c: 359:     while (count != 8000){
  3487     06BB  2EC2               	goto	l1595
  3488     06BC                     l1593:
  3489                           
  3490                           ;main.c: 360:         count++;
  3491     06BC  3001               	movlw	1
  3492     06BD  07F2               	addwf	GenerateRandomNumber@count,f
  3493     06BE  1803               	skipnc
  3494     06BF  0AF3               	incf	GenerateRandomNumber@count+1,f
  3495     06C0  3000               	movlw	0
  3496     06C1  07F3               	addwf	GenerateRandomNumber@count+1,f
  3497     06C2                     l1595:
  3498                           
  3499                           ;main.c: 359:     while (count != 8000){
  3500     06C2  3040               	movlw	64
  3501     06C3  0672               	xorwf	GenerateRandomNumber@count,w
  3502     06C4  301F               	movlw	31
  3503     06C5  1903               	skipnz
  3504     06C6  0673               	xorwf	GenerateRandomNumber@count+1,w
  3505     06C7  1D03               	btfss	3,2
  3506     06C8  2ECA               	goto	u1271
  3507     06C9  2ECB               	goto	u1270
  3508     06CA                     u1271:
  3509     06CA  2EBC               	goto	l1593
  3510     06CB                     u1270:
  3511     06CB                     l1597:
  3512                           
  3513                           ;main.c: 362:     unsigned char randomNum = TMR0;
  3514     06CB  1283               	bcf	3,5	;RP0=0, select bank0
  3515     06CC  1303               	bcf	3,6	;RP1=0, select bank0
  3516     06CD  0801               	movf	1,w	;volatile
  3517     06CE  00F4               	movwf	GenerateRandomNumber@randomNum
  3518     06CF                     l1599:
  3519                           
  3520                           ;main.c: 363:     TMR0IF = 0;
  3521     06CF  110B               	bcf	11,2	;volatile
  3522                           
  3523                           ;main.c: 364:     return randomNum;
  3524     06D0  0874               	movf	GenerateRandomNumber@randomNum,w
  3525     06D1                     l245:
  3526     06D1  0008               	return
  3527     06D2                     __end_of_GenerateRandomNumber:
  3528                           
  3529                           	psect	text17
  3530     0699                     __ptext17:	
  3531 ;; *************** function _ISR *****************
  3532 ;; Defined at:
  3533 ;;		line 319 in file "main.c"
  3534 ;; Parameters:    Size  Location     Type
  3535 ;;		None
  3536 ;; Auto vars:     Size  Location     Type
  3537 ;;		None
  3538 ;; Return value:  Size  Location     Type
  3539 ;;                  1    wreg      void 
  3540 ;; Registers used:
  3541 ;;		None
  3542 ;; Tracked objects:
  3543 ;;		On entry : 0/0
  3544 ;;		On exit  : 0/0
  3545 ;;		Unchanged: 0/0
  3546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3547 ;;      Params:         0       0       0       0       0
  3548 ;;      Locals:         0       0       0       0       0
  3549 ;;      Temps:          2       0       0       0       0
  3550 ;;      Totals:         2       0       0       0       0
  3551 ;;Total ram usage:        2 bytes
  3552 ;; Hardware stack levels used: 1
  3553 ;; This function calls:
  3554 ;;		Nothing
  3555 ;; This function is called by:
  3556 ;;		Interrupt level 1
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560     0699                     _ISR:	
  3561                           ;psect for function _ISR
  3562                           
  3563     0699                     i1l1377:
  3564     0699                     i1l221:	
  3565                           ;main.c: 322:     }
  3566                           
  3567                           
  3568                           ;main.c: 320:     while (!TMR0IF){
  3569     0699  1D0B               	btfss	11,2	;volatile
  3570     069A  2E9C               	goto	u94_21
  3571     069B  2E9D               	goto	u94_20
  3572     069C                     u94_21:
  3573     069C  2E99               	goto	i1l221
  3574     069D                     u94_20:
  3575     069D                     i1l223:
  3576                           
  3577                           ;main.c: 323:     TMR0IF = 0;
  3578     069D  110B               	bcf	11,2	;volatile
  3579     069E                     i1l224:	
  3580                           ;main.c: 326:     }
  3581                           
  3582                           
  3583                           ;main.c: 324:     while (!TMR0IF){
  3584     069E  1D0B               	btfss	11,2	;volatile
  3585     069F  2EA1               	goto	u95_21
  3586     06A0  2EA2               	goto	u95_20
  3587     06A1                     u95_21:
  3588     06A1  2E9E               	goto	i1l224
  3589     06A2                     u95_20:
  3590     06A2                     i1l226:
  3591                           
  3592                           ;main.c: 327:     TMR0IF = 0;
  3593     06A2  110B               	bcf	11,2	;volatile
  3594     06A3                     i1l227:	
  3595                           ;main.c: 330:     }
  3596                           
  3597                           
  3598                           ;main.c: 328:     while (!TMR0IF){
  3599     06A3  1D0B               	btfss	11,2	;volatile
  3600     06A4  2EA6               	goto	u96_21
  3601     06A5  2EA7               	goto	u96_20
  3602     06A6                     u96_21:
  3603     06A6  2EA3               	goto	i1l227
  3604     06A7                     u96_20:
  3605     06A7                     i1l229:
  3606                           
  3607                           ;main.c: 331:     TMR0IF = 0;
  3608     06A7  110B               	bcf	11,2	;volatile
  3609     06A8                     i1l230:	
  3610                           ;main.c: 334:     }
  3611                           
  3612                           
  3613                           ;main.c: 332:     while (!TMR0IF){
  3614     06A8  1D0B               	btfss	11,2	;volatile
  3615     06A9  2EAB               	goto	u97_21
  3616     06AA  2EAC               	goto	u97_20
  3617     06AB                     u97_21:
  3618     06AB  2EA8               	goto	i1l230
  3619     06AC                     u97_20:
  3620     06AC                     i1l232:
  3621                           
  3622                           ;main.c: 335:     TMR0IF = 0;
  3623     06AC  110B               	bcf	11,2	;volatile
  3624     06AD                     i1l233:	
  3625                           ;main.c: 338:     }
  3626                           
  3627                           
  3628                           ;main.c: 336:     while (!TMR0IF){
  3629     06AD  1D0B               	btfss	11,2	;volatile
  3630     06AE  2EB0               	goto	u98_21
  3631     06AF  2EB1               	goto	u98_20
  3632     06B0                     u98_21:
  3633     06B0  2EAD               	goto	i1l233
  3634     06B1                     u98_20:
  3635     06B1                     i1l235:
  3636                           
  3637                           ;main.c: 339:     TMR0IF = 0;
  3638     06B1  110B               	bcf	11,2	;volatile
  3639     06B2                     i1l236:
  3640     06B2  0871               	movf	??_ISR+1,w
  3641     06B3  008A               	movwf	10
  3642     06B4  0E70               	swapf	??_ISR,w
  3643     06B5  0083               	movwf	3
  3644     06B6  0EFE               	swapf	btemp,f
  3645     06B7  0E7E               	swapf	btemp,w
  3646     06B8  0009               	retfie
  3647     06B9                     __end_of_ISR:
  3648     007E                     btemp	set	126	;btemp
  3649     007E                     wtemp0	set	126
  3650                           
  3651                           	psect	intentry
  3652     0004                     __pintentry:	
  3653                           ;incstack = 0
  3654                           ; Regs used in _ISR: []
  3655                           
  3656     0004                     interrupt_function:
  3657     007E                     saved_w	set	btemp
  3658     0004  00FE               	movwf	btemp
  3659     0005  0E03               	swapf	3,w
  3660     0006  00F0               	movwf	??_ISR
  3661     0007  080A               	movf	10,w
  3662     0008  00F1               	movwf	??_ISR+1
  3663     0009  120A  118A  2E99   	ljmp	_ISR
  3664                           
  3665                           	psect	idloc
  3666                           
  3667                           ;Config register IDLOC0 @ 0x2000
  3668                           ;	unspecified, using default values
  3669     2000                     	org	8192
  3670     2000  3FFF               	dw	16383
  3671                           
  3672                           ;Config register IDLOC1 @ 0x2001
  3673                           ;	unspecified, using default values
  3674     2001                     	org	8193
  3675     2001  3FFF               	dw	16383
  3676                           
  3677                           ;Config register IDLOC2 @ 0x2002
  3678                           ;	unspecified, using default values
  3679     2002                     	org	8194
  3680     2002  3FFF               	dw	16383
  3681                           
  3682                           ;Config register IDLOC3 @ 0x2003
  3683                           ;	unspecified, using default values
  3684     2003                     	org	8195
  3685     2003  3FFF               	dw	16383
  3686                           
  3687                           	psect	config
  3688                           
  3689                           ;Config register CONFIG @ 0x2007
  3690                           ;	Oscillator Selection bits
  3691                           ;	FOSC = HS, HS oscillator
  3692                           ;	Watchdog Timer Enable bit
  3693                           ;	WDTE = OFF, WDT disabled
  3694                           ;	Power-up Timer Enable bit
  3695                           ;	PWRTE = OFF, PWRT disabled
  3696                           ;	Brown-out Reset Enable bit
  3697                           ;	BOREN = OFF, BOR disabled
  3698                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3699                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3700                           ;	Data EEPROM Memory Code Protection bit
  3701                           ;	CPD = OFF, Data EEPROM code protection off
  3702                           ;	Flash Program Memory Write Enable bits
  3703                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3704                           ;	In-Circuit Debugger Mode bit
  3705                           ;	DEBUG = 0x1, unprogrammed default
  3706                           ;	Flash Program Memory Code Protection bit
  3707                           ;	CP = OFF, Code protection off
  3708     2007                     	org	8199
  3709     2007  3F3A               	dw	16186

Data Sizes:
    Strings     92
    Constant    19
    Data        1
    BSS         53
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     24      77
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    intToString@str	PTR unsigned char  size(1) Largest target is 3
		 -> print_countdown(BANK0[3]), 

    lcdPrint@str	PTR unsigned char  size(2) Largest target is 15
		 -> STR_8(CODE[15]), STR_7(CODE[9]), print_countdown(BANK0[3]), STR_6(CODE[14]), 
		 -> STR_5(CODE[13]), STR_4(CODE[12]), STR_3(CODE[11]), STR_2(CODE[10]), 
		 -> STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    _main->_lcdPrint
    _initLCD->_lcdSend
    _UART_Read->_lcdPrint
    _lcdPrint->_lcdSend
    _intToString->___awdiv
    _intToString->___awmod
    _potenza->___bmul
    ___awdiv->_potenza

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_UART_Read
    _UART_Read->_intToString
    _intToString->___awdiv
    ___awdiv->_potenza

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   15520
               _GenerateRandomNumber
                       _KeyPadReader
                     _RS485_RxEnable
                     _RS485_TxEnable
                        _Timer0_Init
                          _UART_Init
                          _UART_Read
                         _UART_Write
                            _initLCD
                           _lcdPrint
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0    2222
                                              6 COMMON     2     2      0
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Read                                            3     3      0    7845
                                             21 BANK0      3     3      0
                        _intToString
                           _lcdPrint
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _lcdPrint                                             7     5      2    3162
                                              6 COMMON     4     2      2
                                              0 BANK0      3     3      0
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _lcdSend                                              4     3      1    2222
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _intToString                                          9     6      3    2461
                                             12 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                            _potenza
 ---------------------------------------------------------------------------------
 (3) _potenza                                              6     5      1     573
                                              6 COMMON     2     1      1
                                              0 BANK0      4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     226
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     448
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     805
                                              8 COMMON     1     1      0
                                              4 BANK0      8     4      4
                            _potenza (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RS485_TxEnable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RS485_RxEnable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _KeyPadReader                                         2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _GenerateRandomNumber                                 3     3      0      47
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GenerateRandomNumber
   _KeyPadReader
   _RS485_RxEnable
   _RS485_TxEnable
   _Timer0_Init
   _UART_Init
   _UART_Read
     _intToString
       ___awdiv
         _potenza (ARG)
           ___bmul
       ___awmod
       _potenza
     _lcdPrint
       _lcdSend
     _lcdSend
   _UART_Write
   _initLCD
     _lcdSend
   _lcdPrint
   _lcdSend

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     18      4D       5       96.2%
BITBANK0            50      0       1       4        1.2%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      59      12        0.0%
ABS                  0      0      59       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Jun 13 17:25:29 2023

                            pc 0002                 ___bmul@product 0074                   ___awdiv@sign 005C  
                           fsr 0004                            l200 046C                            l210 0698  
                          l203 04E1                            l207 05A4                            l216 0643  
                          l245 06D1                            l190 0723                            l239 0707  
                          l184 06F8                            l512 054A                            l264 066F  
                          l257 036F                            l273 046A                            l193 0709  
                          l187 071E                            l196 0711                            l525 05FD  
                          l385 06E6                            _GIE 005F                            _RC0 0038  
                          _RC1 0039                            _PS0 0408                            _PS1 0409  
                          _PS2 040A                            _ISR 0699                            _PSA 040B  
                          fsr0 0004                            indf 0000                   ___awmod@sign 0078  
                         ?_ISR 0070                           l2001 041B                           l2011 0463  
                         l2003 0428                           l2005 0443                           l2021 0562  
                         l2013 054B                           l2101 0068                           l2007 0459  
                         l2031 058F                           l2023 0572                           l2015 054F  
                         l2111 0086                           l2103 006E                           l2009 045D  
                         l2041 047E                           l2033 0596                           l2025 057A  
                         l2017 0558                           l2201 01AF                           l2121 00AB  
                         l2113 008C                           l2105 0074                           l2051 04A8  
                         l2043 0485                           l2035 059D                           l2027 0581  
                         l2019 055B                           l2211 01CE                           l2203 01B5  
                         l2131 00CC                           l2123 00B0                           l2115 0092  
                         l2107 007A                           l1501 05EF                           l2053 04B1  
                         l2045 048E                           l2037 046B                           l2029 0588  
                         l2221 01F4                           l2213 01D8                           l2205 01BB  
                         l2141 00ED                           l2133 00D5                           l2117 009A  
                         l2109 0080                           l1503 05F4                           l2055 04B4  
                         l2047 0492                           l2039 0470                           l2063 04C9  
                         l2231 0212                           l2223 01FA                           l2215 01E0  
                         l2207 01C1                           l2151 010B                           l2143 00F3  
                         l2135 00DB                           l2127 00C0                           l2119 00A2  
                         l1505 05F9                           l2065 04D0                           l2057 04B6  
                         l2049 04A1                           l2241 0237                           l2233 0218  
                         l2225 0200                           l2217 01E8                           l2209 01C7  
                         l2161 012E                           l2153 0111                           l2145 00F9  
                         l2137 00E1                           l2129 00C5                           l2081 002C  
                         l1611 02F3                           l1603 02EB                           l2067 04D7  
                         l2059 04C5                           l2251 0257                           l2243 023F  
                         l2227 0206                           l2219 01EE                           l2235 021E  
                         l2171 014C                           l2163 0134                           l2155 0117  
                         l2147 00FF                           l2139 00E7                           l2091 004B  
                         l2083 0031                           l1621 0302                           l1613 02F6  
                         l1605 02F1                           l1541 06EC                           l2253 025D  
                         l2245 0245                           l2261 0275                           l2237 0225  
                         l2229 020C                           l2181 016A                           l2173 0152  
                         l2165 013A                           l2149 0105                           l2157 011D  
                         l2093 0050                           l2085 0036                           l1631 0325  
                         l1623 030F                           l1615 0301                           l1543 06EE  
                         l1471 05A5                           l2263 02DA                           l2255 0263  
                         l2247 024B                           l2239 022F                           l2191 0191  
                         l2175 0158                           l2167 0140                           l2183 0170  
                         l2159 0124                           l2095 0056                           l2087 003B  
                         l2079 0025                           l1633 0329                           l1641 0346  
                         l1625 0313                           l1545 06EF                           l1481 05B5  
                         l1473 05A6                           l2265 02DD                           l2257 0269  
                         l2249 0251                           l2193 0197                           l2185 0177  
                         l2177 015E                           l2169 0146                           l2097 005C  
                         l2089 0042                           l1651 035E                           l1643 034C  
                         l1635 0332                           l1627 0314                           l1547 06F2  
                         l1539 06E7                           l1491 05CE                           l1483 05BA  
                         l1475 05AA                           l2267 02E2                           l2259 026F  
                         l2195 019D                           l2187 0181                           l2179 0164  
                         l2099 0062                           l1653 0364                           l1645 0357  
                         l1637 0341                           l1629 0318                           l1581 0705  
                         l1549 06F5                           l1493 05D2                           l1485 05C0  
                         l1477 05AF                           l1901 06E5                           l2197 01A3  
                         l2189 0189                           l1591 06B9                           l1655 0368  
                         l1639 0345                           l1583 0706                           l1575 06F9  
                         l1495 05DC                           l1487 05C3                           l1479 05B1  
                         l1911 0676                           l2199 01A9                           l1593 06BC  
                         l1649 035A                           l1657 071F                           l1585 071A  
                         l1577 0700                           l1497 05E2                           l1489 05CA  
                         l1921 068C                           l1913 0679                           l1905 0671  
                         l1595 06C2                           l1579 0704                           l1499 05E9  
                         l1931 0659                           l1923 0695                           l1915 067B  
                         l1907 0674                           l1587 0709                           l1597 06CB  
                         l1941 04E5                           l1933 065F                           l1925 0647  
                         l1917 0680                           l1909 0675                           l1589 070F  
                         l1599 06CF                           l1951 04F9                           l1943 04E9  
                         l1935 066C                           l1927 0649                           l1919 0689  
                         l1961 050F                           l1953 04FD                           l1945 04EE  
                         l1929 064C                           l1971 052F                           l1963 0513  
                         l1955 04FF                           l1947 04F0                           l1939 04E2  
                         l1891 06D3                           l1973 0536                           l1965 0517  
                         l1957 0505                           l1949 04F4                           l1893 06D4  
                         l1967 0528                           l1959 0508                           l1975 053C  
                         l1895 06D8                           l1991 03EF                           l1983 05FE  
                         l1977 0541                           l1969 052E                           l1897 06DC  
                         l1993 03F3                           l1985 0601                           l1979 0546  
                         l1899 06DE                           l1995 03F4                           l1987 061F  
                         l1997 03F8                           l1989 0625                           l1999 0419  
                         STR_1 03E7                           STR_2 03D4                           STR_3 03C9  
                         STR_4 03BD                           STR_5 03B0                           STR_6 03A2  
                         STR_7 03DE                           STR_8 0393                           _BRGH 04C2  
                         _CREN 00C4                           _T0CS 040D                           u1200 05F4  
                         u1120 05AA                           u1201 05F3                           u1121 05A9  
                         u2010 0528                           u1130 05B5                           u2011 0527  
                         u1131 05B4                           u1300 0325                           u1140 05C0  
                         u2100 0470                           u1301 0324                           u2005 0518  
                         u1141 05BF                           u2101 046F                           u1310 0329  
                         u2030 053C                           u2110 04D0                           u1311 0328  
                         u2031 053B                           u2015 0524                           u2111 04CF  
                         u1320 0341                           u2040 0541                           u1160 05D2  
                         u2200 010B                           u2120 00BF                           u1321 0340  
                         u2041 0540                           u2025 0530                           u1161 05D1  
                         u2201 010A                           u2121 00BE                           u1330 0345  
                         u1170 05DC                           u2050 060D                           u2210 0111  
                         u2130 00C5                           u1331 0344                           u1171 05DB  
                         u1155 05C4                           u2211 0110                           u2131 00C4  
                         u1340 034C                           u2060 0631                           u1260 070F  
                         u2300 015E                           u2220 0117                           u2140 00E7  
                         u1341 034B                           u1261 070E                           u2301 015D  
                         u2221 0116                           u2141 00E6                           u1270 06CB  
                         u1190 05EF                           u2070 0643                           u2310 0164  
                         u2230 011D                           u2150 00ED                           u1271 06CA  
                         u1191 05EE                           u1175 05D8                           u2071 0642  
                         u2311 0163                           u2231 011C                           u2151 00EC  
                         u1360 0364                           u1280 030F                           u2080 0419  
                         u2400 01B5                           u2320 016A                           u2240 013A  
                         u2160 00F3                           u1361 0363                           u1281 030E  
                         u1185 05E3                           u2081 0418                           u2401 01B4  
                         u2321 0169                           u2241 0139                           u2161 00F2  
                         u1370 036E                           u1290 0313                           u2090 0463  
                         u2410 01BB                           u2330 0170                           u2250 0140  
                         u2170 00F9                           u1371 036D                           u1355 034F  
                         u1291 0312                           u2091 0462                           u2411 01BA  
                         u2331 016F                           u2251 013F                           u2171 00F8  
                         u2500 020C                           u2420 01C1                           u2340 0191  
                         u2260 0146                           u2180 00FF                           u2501 020B  
                         u2421 01C0                           u2341 0190                           u2261 0145  
                         u2181 00FE                           u2510 0212                           u2430 01C7  
                         u2350 0197                           u2270 014C                           u2190 0105  
                         u2511 0211                           u2431 01C6                           u2351 0196  
                         u2271 014B                           u2191 0104                           u2600 0263  
                         u2520 0218                           u2440 01E8                           u2360 019D  
                         u2280 0152                           u2601 0262                           u2521 0217  
                         u2441 01E7                           u2361 019C                           u2281 0151  
                         u2610 0269                           u2530 021E                           u2450 01EE  
                         u2370 01A3                           u2290 0158                           u2611 0268  
                         u2531 021D                           u2451 01ED                           u2371 01A2  
                         u2291 0157                           u2620 026F                           u2540 023F  
                         u2460 01F4                           u2380 01A9                           u2621 026E  
                         u2541 023E                           u2461 01F3                           u2381 01A8  
                         u2630 0275                           u2550 0245                           u2470 01FA  
                         u2390 01AF                           u2631 0274                           u2551 0244  
                         u2471 01F9                           u2391 01AE                           u1920 06D8  
                         u2560 024B                           u2480 0200                           u1921 06D7  
                         u2561 024A                           u2481 01FF                           u1930 06E5  
                         u2570 0251                           u2490 0206                           u1931 06E4  
                         u2707 0690                           u2571 0250                           u2491 0205  
                         u1940 066C                           u2580 0257                           u2717 032D  
                         u1941 066B                           u2581 0256                           u1950 04E9  
                         u2590 025D                           u1951 04E8                           u2647 0553  
                         u2591 025C                           u1960 04F4                           u1961 04F3  
                         u1945 0668                           u2657 0566                           u1970 0505  
                         u1971 0504                           u2667 0576                           u2677 049A  
                         u1990 0517                           u1991 0516                           u2687 04BE  
                         u1985 0509                           u2697 0684                           _RCIF 0065  
               ??_KeyPadReader 0072                           _TMR0 0001                           _SPEN 00C7  
                         _TXEN 04C5                           _TXIF 0064                           _SYNC 04C4  
                         _data 0030                           _flag 0040                           _main 0025  
                         _num1 007B                           _num2 007A                           _num3 004F  
                         _keys 0380                           _num4 004E                           _num5 004D  
                         btemp 007E                           start 000C              ___bmul@multiplier 0075  
                        ??_ISR 0070                   ?_intToString 005F                          ?_main 0070  
              __end_of___awdiv 054B                __end_of___awmod 05FE                ___awdiv@divisor 0057  
                        i1l221 0699                          i1l230 06A8                          i1l223 069D  
                        i1l232 06AC                          i1l224 069E                          i1l233 06AD  
                        i1l226 06A2                          i1l235 06B1                          i1l227 06A3  
                        i1l236 06B2                          i1l229 06A7                ___awdiv@counter 005B  
                        _RCREG 001A                          _SPBRG 0099                          _PORTB 0006  
                        _PORTD 0008                          _TRISA 0085                          _TRISB 0086  
                        _TRISC 0087                          _TRISD 0088                          _TRISE 0089  
                        u94_20 069D                          u94_21 069C                          u95_20 06A2  
                        u95_21 06A1                          u96_20 06A7                          u96_21 06A6  
                        u97_20 06AC                          u97_21 06AB                          _TXREG 0019  
                        u98_20 06B1                          u98_21 06B0                __end_of_colMask 0393  
              __end_of_lcdSend 0699                    ?_UART_Write 0070                __end_of_initLCD 05A5  
                        _count 003C                          _index 003E                          _keyok 004B  
                        _stato 0048                          pclath 000A                __end_of_rowMask 0390  
              __end_of_potenza 0670                          status 0003                          wtemp0 007E  
 __end_of_GenerateRandomNumber 06D2                __initialization 000F                   __end_of_main 02EB  
                 __end_of_keys 038C                         ??_main 007A               ___awdiv@dividend 0059  
                       i1l1377 0699                         _TMR0IE 005D                         _TMR0IF 005A  
                       _TRISC6 043E                         _TRISC7 043F                  ??_Timer0_Init 0072  
             __end_of_lcdPrint 0644              __end_of_UART_Init 06F9              __end_of_UART_Read 04E2  
                       ___bmul 06D2                      ??___awdiv 0078                      ??___awmod 0076  
                       _codice 0036               ___awdiv@quotient 005D                ___awmod@divisor 0072  
         __end_of_KeyPadReader 0370                ___awmod@counter 0077                      ??_lcdSend 0073  
                    ??_initLCD 0076                         saved_w 007E                      ??_potenza 0077  
      __end_of__initialization 0021               intToString@cifre 0066            ___bmul@multiplicand 0072  
               __pcstackCOMMON 0070                   __pidataBANK0 0724            __end_of_Timer0_Init 0708  
         _GenerateRandomNumber 06B9                     __pbssBANK0 0020                     __pmaintext 0025  
                      ?___bmul 0072                     __pintentry 0004          ?_GenerateRandomNumber 0070  
                 ??_UART_Write 0072                      ?_lcdPrint 0076                     __stringtab 0370  
                 intToString@i 0067                   intToString@n 005F                   intToString@t 0065  
                  _Timer0_Init 06F9                 _RS485_RxEnable 071F                        ___awdiv 04E2  
                      ___awmod 05A5             __end_of_UART_Write 0712                 _RS485_TxEnable 071A  
                      _colMask 0390                        _colScan 004A                        _lcdSend 0670  
                      __ptext1 054B                        __ptext2 0708                        __ptext3 046B  
                      __ptext4 05FE                        __ptext5 0670                        __ptext6 03EF  
                      __ptext7 0644                        __ptext8 06D2                        __ptext9 05A5  
                      _initLCD 054B                        _old_btn 0358               ___awmod@dividend 0074  
                   _keypressed 004C                        _restart 0046                        _rowMask 038C  
                      _rowScan 0049                        _potenza 0644                     ??_lcdPrint 0053  
                      clrloop0 0713                        _stringa 0020           end_of_initialization 0021  
                 _KeyPadReader 02EB         __end_of_RS485_RxEnable 0724         __end_of_RS485_TxEnable 071F  
                    _UART_Init 06E7                      _UART_Read 046B                      _PORTEbits 0009  
               UART_Write@data 0072         ??_GenerateRandomNumber 0072                      _TRISEbits 0089  
              ?_RS485_RxEnable 0070                ?_RS485_TxEnable 0070                 __end_of___bmul 06E7  
                   ?_UART_Init 0070                     ?_UART_Read 0070                  __pbitbssBANK0 0358  
          start_initialization 000F  GenerateRandomNumber@randomNum 0074                    __end_of_ISR 06B9  
               _stringPosition 0042                 intToString@str 0061                       ??___bmul 0073  
                  __pdataBANK0 006C                  ??_intToString 0062                    __pbssCOMMON 007A  
                    ___latbits 0002                  __pcstackBANK0 0053                   ?_Timer0_Init 0070  
                     ?___awdiv 0057                       ?___awmod 0072                    ??_UART_Init 0072  
                  ??_UART_Read 0068                      __pstrings 0370                       ?_lcdSend 0072  
                     ?_initLCD 0070            __end_of_intToString 046B                      _countdown 006C  
                     ?_potenza 0076                      _randomNum 0044                      _old_stato 0047  
            interrupt_function 0004                      clear_ram0 0712                _print_countdown 0050  
                    lcdPrint@n 0078                    __stringbase 037F               ??_RS485_RxEnable 0072  
             ??_RS485_TxEnable 0072                    _intToString 03EF             __end_of__stringtab 0380  
                     __ptext10 04E2                       __ptext11 06E7                       __ptext12 06F9  
                     __ptext13 071A                       __ptext14 071F                       __ptext15 02EB  
                     __ptext16 06B9                       __ptext17 0699                       _lcdPrint 05FE  
                     _received 0045                       intlevel1 0000                      stringcode 037A  
                     potenza@b 0053                       potenza@e 0076                       potenza@i 0054  
                     potenza@n 0056                    lcdSend@dato 0075                    lcdSend@tipo 0072  
                     stringdir 037A                       stringtab 0370                     _UART_Write 0708  
    GenerateRandomNumber@count 0072                    lcdPrint@str 0076                  ?_KeyPadReader 0070  
