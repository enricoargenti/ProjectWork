

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Jun 21 16:54:53 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40     0000                     
    41                           ; Generated 22/03/2023 GMT
    42                           ; 
    43                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F877A Definitions
    73                           ; 
    74                           ; SFR Addresses
    75     0000                     	;# 
    76     0001                     	;# 
    77     0002                     	;# 
    78     0003                     	;# 
    79     0004                     	;# 
    80     0005                     	;# 
    81     0006                     	;# 
    82     0007                     	;# 
    83     0008                     	;# 
    84     0009                     	;# 
    85     000A                     	;# 
    86     000B                     	;# 
    87     000C                     	;# 
    88     000D                     	;# 
    89     000E                     	;# 
    90     000E                     	;# 
    91     000F                     	;# 
    92     0010                     	;# 
    93     0011                     	;# 
    94     0012                     	;# 
    95     0013                     	;# 
    96     0014                     	;# 
    97     0015                     	;# 
    98     0015                     	;# 
    99     0016                     	;# 
   100     0017                     	;# 
   101     0018                     	;# 
   102     0019                     	;# 
   103     001A                     	;# 
   104     001B                     	;# 
   105     001B                     	;# 
   106     001C                     	;# 
   107     001D                     	;# 
   108     001E                     	;# 
   109     001F                     	;# 
   110     0081                     	;# 
   111     0085                     	;# 
   112     0086                     	;# 
   113     0087                     	;# 
   114     0088                     	;# 
   115     0089                     	;# 
   116     008C                     	;# 
   117     008D                     	;# 
   118     008E                     	;# 
   119     0091                     	;# 
   120     0092                     	;# 
   121     0093                     	;# 
   122     0094                     	;# 
   123     0098                     	;# 
   124     0099                     	;# 
   125     009C                     	;# 
   126     009D                     	;# 
   127     009E                     	;# 
   128     009F                     	;# 
   129     010C                     	;# 
   130     010D                     	;# 
   131     010E                     	;# 
   132     010F                     	;# 
   133     018C                     	;# 
   134     018D                     	;# 
   135     0000                     	;# 
   136     0001                     	;# 
   137     0002                     	;# 
   138     0003                     	;# 
   139     0004                     	;# 
   140     0005                     	;# 
   141     0006                     	;# 
   142     0007                     	;# 
   143     0008                     	;# 
   144     0009                     	;# 
   145     000A                     	;# 
   146     000B                     	;# 
   147     000C                     	;# 
   148     000D                     	;# 
   149     000E                     	;# 
   150     000E                     	;# 
   151     000F                     	;# 
   152     0010                     	;# 
   153     0011                     	;# 
   154     0012                     	;# 
   155     0013                     	;# 
   156     0014                     	;# 
   157     0015                     	;# 
   158     0015                     	;# 
   159     0016                     	;# 
   160     0017                     	;# 
   161     0018                     	;# 
   162     0019                     	;# 
   163     001A                     	;# 
   164     001B                     	;# 
   165     001B                     	;# 
   166     001C                     	;# 
   167     001D                     	;# 
   168     001E                     	;# 
   169     001F                     	;# 
   170     0081                     	;# 
   171     0085                     	;# 
   172     0086                     	;# 
   173     0087                     	;# 
   174     0088                     	;# 
   175     0089                     	;# 
   176     008C                     	;# 
   177     008D                     	;# 
   178     008E                     	;# 
   179     0091                     	;# 
   180     0092                     	;# 
   181     0093                     	;# 
   182     0094                     	;# 
   183     0098                     	;# 
   184     0099                     	;# 
   185     009C                     	;# 
   186     009D                     	;# 
   187     009E                     	;# 
   188     009F                     	;# 
   189     010C                     	;# 
   190     010D                     	;# 
   191     010E                     	;# 
   192     010F                     	;# 
   193     018C                     	;# 
   194     018D                     	;# 
   195                           
   196                           	psect	idataCOMMON
   197     07FF                     __pidataCOMMON:
   198                           
   199                           ;initializer for _countdown
   200     07FF  343C               	retlw	60
   201                           
   202                           	psect	idataBANK0
   203     0D26                     __pidataBANK0:
   204                           
   205                           ;initializer for _id2
   206     0D26  3431               	retlw	49
   207                           
   208                           ;initializer for _id1
   209     0D27  3430               	retlw	48
   210                           
   211                           	psect	strings
   212     0706                     __pstrings:
   213     0706                     stringtab:
   214     0706                     __stringtab:
   215                           
   216                           ;	String table - string pointers are 1 byte each
   217     0706  1BFF               	btfsc	btemp+1,7
   218     0707  2F10               	ljmp	stringcode
   219     0708  1383               	bcf	3,7
   220     0709  187F               	btfsc	btemp+1,0
   221     070A  1783               	bsf	3,7
   222     070B  0800               	movf	0,w
   223     070C  0A84               	incf	4,f
   224     070D  1903               	skipnz
   225     070E  0AFF               	incf	btemp+1,f
   226     070F  0008               	return
   227     0710                     stringcode:
   228     0710                     stringdir:
   229     0710  3007               	movlw	high stringdir
   230     0711  008A               	movwf	10
   231     0712  0804               	movf	4,w
   232     0713  0A84               	incf	4,f
   233     0714  0782               	addwf	2,f
   234     0715                     __stringbase:
   235     0715  3400               	retlw	0
   236     0716                     __end_of__stringtab:
   237     0716                     _keys:
   238     0716  3423               	retlw	35
   239     0717  3437               	retlw	55
   240     0718  3434               	retlw	52
   241     0719  3431               	retlw	49
   242     071A  342A               	retlw	42
   243     071B  3438               	retlw	56
   244     071C  3435               	retlw	53
   245     071D  3432               	retlw	50
   246     071E  3430               	retlw	48
   247     071F  3439               	retlw	57
   248     0720  3436               	retlw	54
   249     0721  3433               	retlw	51
   250     0722                     __end_of_keys:
   251     0722                     _rowMask:
   252     0722  3401               	retlw	1
   253     0723  3402               	retlw	2
   254     0724  3404               	retlw	4
   255     0725  3408               	retlw	8
   256     0726                     __end_of_rowMask:
   257     0726                     _colMask:
   258     0726  34FE               	retlw	254
   259     0727  34FD               	retlw	253
   260     0728  34FB               	retlw	251
   261     0729                     __end_of_colMask:
   262     0001                     _TMR0	set	1
   263     0006                     _PORTB	set	6
   264     0008                     _PORTD	set	8
   265     0009                     _PORTEbits	set	9
   266     001A                     _RCREG	set	26
   267     0019                     _TXREG	set	25
   268     005F                     _GIE	set	95
   269     005D                     _TMR0IE	set	93
   270     005A                     _TMR0IF	set	90
   271     0065                     _RCIF	set	101
   272     0064                     _TXIF	set	100
   273     0039                     _RC1	set	57
   274     0038                     _RC0	set	56
   275     00C4                     _CREN	set	196
   276     00C7                     _SPEN	set	199
   277     0089                     _TRISEbits	set	137
   278     0099                     _SPBRG	set	153
   279     0089                     _TRISE	set	137
   280     0088                     _TRISD	set	136
   281     0087                     _TRISC	set	135
   282     0086                     _TRISB	set	134
   283     0085                     _TRISA	set	133
   284     0408                     _PS0	set	1032
   285     0409                     _PS1	set	1033
   286     040A                     _PS2	set	1034
   287     040B                     _PSA	set	1035
   288     040D                     _T0CS	set	1037
   289     04C5                     _TXEN	set	1221
   290     04C4                     _SYNC	set	1220
   291     04C2                     _BRGH	set	1218
   292     043F                     _TRISC7	set	1087
   293     043E                     _TRISC6	set	1086
   294     0729                     STR_12:
   295     0729  3443               	retlw	67	;'C'
   296     072A  346F               	retlw	111	;'o'
   297     072B  3464               	retlw	100	;'d'
   298     072C  3469               	retlw	105	;'i'
   299     072D  3463               	retlw	99	;'c'
   300     072E  3465               	retlw	101	;'e'
   301     072F  3420               	retlw	32	;' '
   302     0730  3453               	retlw	83	;'S'
   303     0731  3463               	retlw	99	;'c'
   304     0732  3461               	retlw	97	;'a'
   305     0733  3464               	retlw	100	;'d'
   306     0734  3475               	retlw	117	;'u'
   307     0735  3474               	retlw	116	;'t'
   308     0736  346F               	retlw	111	;'o'
   309     0737  3400               	retlw	0
   310     0738                     STR_6:
   311     0738  3441               	retlw	65	;'A'
   312     0739  3474               	retlw	116	;'t'
   313     073A  3474               	retlw	116	;'t'
   314     073B  3465               	retlw	101	;'e'
   315     073C  346E               	retlw	110	;'n'
   316     073D  3464               	retlw	100	;'d'
   317     073E  3465               	retlw	101	;'e'
   318     073F  3472               	retlw	114	;'r'
   319     0740  3465               	retlw	101	;'e'
   320     0741  342E               	retlw	46	;'.'
   321     0742  342E               	retlw	46	;'.'
   322     0743  342E               	retlw	46	;'.'
   323     0744  342E               	retlw	46	;'.'
   324     0745  3400               	retlw	0
   325     0746                     STR_10:
   326     0746  3454               	retlw	84	;'T'
   327     0747  3465               	retlw	101	;'e'
   328     0748  346D               	retlw	109	;'m'
   329     0749  3470               	retlw	112	;'p'
   330     074A  346F               	retlw	111	;'o'
   331     074B  3420               	retlw	32	;' '
   332     074C  3453               	retlw	83	;'S'
   333     074D  3463               	retlw	99	;'c'
   334     074E  3461               	retlw	97	;'a'
   335     074F  3464               	retlw	100	;'d'
   336     0750  3475               	retlw	117	;'u'
   337     0751  3474               	retlw	116	;'t'
   338     0752  346F               	retlw	111	;'o'
   339     0753  3400               	retlw	0
   340     0754                     STR_5:
   341     0754  3441               	retlw	65	;'A'
   342     0755  3474               	retlw	116	;'t'
   343     0756  3474               	retlw	116	;'t'
   344     0757  3465               	retlw	101	;'e'
   345     0758  346E               	retlw	110	;'n'
   346     0759  3464               	retlw	100	;'d'
   347     075A  3465               	retlw	101	;'e'
   348     075B  3472               	retlw	114	;'r'
   349     075C  3465               	retlw	101	;'e'
   350     075D  342E               	retlw	46	;'.'
   351     075E  342E               	retlw	46	;'.'
   352     075F  342E               	retlw	46	;'.'
   353     0760  3400               	retlw	0
   354     0761                     STR_9:
   355     0761  3450               	retlw	80	;'P'
   356     0762  346F               	retlw	111	;'o'
   357     0763  3472               	retlw	114	;'r'
   358     0764  3474               	retlw	116	;'t'
   359     0765  3461               	retlw	97	;'a'
   360     0766  3420               	retlw	32	;' '
   361     0767  3441               	retlw	65	;'A'
   362     0768  3470               	retlw	112	;'p'
   363     0769  3465               	retlw	101	;'e'
   364     076A  3472               	retlw	114	;'r'
   365     076B  3474               	retlw	116	;'t'
   366     076C  3461               	retlw	97	;'a'
   367     076D  3400               	retlw	0
   368     076E                     STR_4:
   369     076E  3441               	retlw	65	;'A'
   370     076F  3474               	retlw	116	;'t'
   371     0770  3474               	retlw	116	;'t'
   372     0771  3465               	retlw	101	;'e'
   373     0772  346E               	retlw	110	;'n'
   374     0773  3464               	retlw	100	;'d'
   375     0774  3465               	retlw	101	;'e'
   376     0775  3472               	retlw	114	;'r'
   377     0776  3465               	retlw	101	;'e'
   378     0777  342E               	retlw	46	;'.'
   379     0778  342E               	retlw	46	;'.'
   380     0779  3400               	retlw	0
   381     077A                     STR_3:
   382     077A  3441               	retlw	65	;'A'
   383     077B  3474               	retlw	116	;'t'
   384     077C  3474               	retlw	116	;'t'
   385     077D  3465               	retlw	101	;'e'
   386     077E  346E               	retlw	110	;'n'
   387     077F  3464               	retlw	100	;'d'
   388     0780  3465               	retlw	101	;'e'
   389     0781  3472               	retlw	114	;'r'
   390     0782  3465               	retlw	101	;'e'
   391     0783  342E               	retlw	46	;'.'
   392     0784  3400               	retlw	0
   393     0785                     STR_2:
   394     0785  3441               	retlw	65	;'A'
   395     0786  3474               	retlw	116	;'t'
   396     0787  3474               	retlw	116	;'t'
   397     0788  3465               	retlw	101	;'e'
   398     0789  346E               	retlw	110	;'n'
   399     078A  3464               	retlw	100	;'d'
   400     078B  3465               	retlw	101	;'e'
   401     078C  3472               	retlw	114	;'r'
   402     078D  3465               	retlw	101	;'e'
   403     078E  3400               	retlw	0
   404     078F                     STR_8:
   405     078F  3452               	retlw	82	;'R'
   406     0790  3469               	retlw	105	;'i'
   407     0791  3463               	retlw	99	;'c'
   408     0792  3465               	retlw	101	;'e'
   409     0793  3476               	retlw	118	;'v'
   410     0794  3475               	retlw	117	;'u'
   411     0795  3474               	retlw	116	;'t'
   412     0796  346F               	retlw	111	;'o'
   413     0797  3400               	retlw	0
   414     0798                     STR_1:
   415     0798  3450               	retlw	80	;'P'
   416     0799  3472               	retlw	114	;'r'
   417     079A  3465               	retlw	101	;'e'
   418     079B  346D               	retlw	109	;'m'
   419     079C  3469               	retlw	105	;'i'
   420     079D  3420               	retlw	32	;' '
   421     079E  342A               	retlw	42	;'*'
   422     079F  3400               	retlw	0
   423     07A0                     STR_11:
   424     07A0  344D               	retlw	77	;'M'
   425     07A1  3461               	retlw	97	;'a'
   426     07A2  346E               	retlw	110	;'n'
   427     07A3  3464               	retlw	100	;'d'
   428     07A4  3461               	retlw	97	;'a'
   429     07A5  3474               	retlw	116	;'t'
   430     07A6  346F               	retlw	111	;'o'
   431     07A7  3400               	retlw	0
   432     0785                     
   433                           	psect	cinit
   434     0013                     start_initialization:	
   435                           ; #config settings
   436                           
   437     0013                     __initialization:
   438                           
   439                           ; Initialize objects allocated to BANK0
   440     0013  120A  158A  2526  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   441     0018  00E3               	movwf	__pdataBANK0& (0+127)
   442     0019  120A  158A  2527  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   443     001E  00E4               	movwf	(__pdataBANK0+1)& (0+127)
   444                           
   445                           ; Initialize objects allocated to COMMON
   446     001F  120A  118A  27FF  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   447     0024  00F9               	movwf	__pdataCOMMON& (0+127)
   448                           
   449                           ; Clear objects allocated to BANK1
   450     0025  1383               	bcf	3,7	;select IRP bank0
   451     0026  30A0               	movlw	low __pbssBANK1
   452     0027  0084               	movwf	4
   453     0028  30B0               	movlw	low (__pbssBANK1+16)
   454     0029  120A  158A  2532  120A  118A  	fcall	clear_ram0
   455                           
   456                           ; Clear objects allocated to BANK0
   457     002E  3020               	movlw	low __pbssBANK0
   458     002F  0084               	movwf	4
   459     0030  3043               	movlw	low (__pbssBANK0+35)
   460     0031  120A  158A  2532  120A  118A  	fcall	clear_ram0
   461                           
   462                           ; Clear objects allocated to COMMON
   463     0036  01F5               	clrf	__pbssCOMMON& (0+127)
   464     0037  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   465     0038  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   466                           
   467                           ; Clear objects allocated to BITCOMMON
   468     0039  01F8               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   469     003A                     end_of_initialization:	
   470                           ;End of C runtime variable initialization code
   471                           
   472     003A                     __end_of__initialization:
   473     003A  0183               	clrf	3
   474     003B  120A  118A  283E   	ljmp	_main	;jump to C main() function
   475                           
   476                           	psect	bitbssCOMMON
   477     03C0                     __pbitbssCOMMON:
   478     03C0                     _old_btn:
   479     03C0                     	ds	1
   480                           
   481                           	psect	bssCOMMON
   482     0075                     __pbssCOMMON:
   483     0075                     _stato:
   484     0075                     	ds	1
   485     0076                     _rowScan:
   486     0076                     	ds	1
   487     0077                     _colScan:
   488     0077                     	ds	1
   489                           
   490                           	psect	dataCOMMON
   491     0079                     __pdataCOMMON:
   492     0079                     _countdown:
   493     0079                     	ds	1
   494                           
   495                           	psect	bssBANK0
   496     0020                     __pbssBANK0:
   497     0020                     _data:
   498     0020                     	ds	6
   499     0026                     _codice:
   500     0026                     	ds	6
   501     002C                     _count:
   502     002C                     	ds	2
   503     002E                     _index:
   504     002E                     	ds	2
   505     0030                     _flag:
   506     0030                     	ds	2
   507     0032                     _stringPosition:
   508     0032                     	ds	2
   509     0034                     _type:
   510     0034                     	ds	1
   511     0035                     _randomNum:
   512     0035                     	ds	1
   513     0036                     _received:
   514     0036                     	ds	1
   515     0037                     _restart:
   516     0037                     	ds	1
   517     0038                     _old_stato:
   518     0038                     	ds	1
   519     0039                     _keyok:
   520     0039                     	ds	1
   521     003A                     _keypressed:
   522     003A                     	ds	1
   523     003B                     _num5:
   524     003B                     	ds	1
   525     003C                     _num4:
   526     003C                     	ds	1
   527     003D                     _num3:
   528     003D                     	ds	1
   529     003E                     _num2:
   530     003E                     	ds	1
   531     003F                     _num1:
   532     003F                     	ds	1
   533     0040                     _print_countdown:
   534     0040                     	ds	3
   535                           
   536                           	psect	dataBANK0
   537     0063                     __pdataBANK0:
   538     0063                     _id2:
   539     0063                     	ds	1
   540     0064                     _id1:
   541     0064                     	ds	1
   542                           
   543                           	psect	bssBANK1
   544     00A0                     __pbssBANK1:
   545     00A0                     _stringa:
   546     00A0                     	ds	16
   547                           
   548                           	psect	clrtext
   549     0D32                     clear_ram0:	
   550                           ;	Called with FSR containing the base address, and
   551                           ;	W with the last address+1
   552                           
   553     0D32  0064               	clrwdt	;clear the watchdog before getting into this loop
   554     0D33                     clrloop0:
   555     0D33  0180               	clrf	0	;clear RAM location pointed to by FSR
   556     0D34  0A84               	incf	4,f	;increment pointer
   557     0D35  0604               	xorwf	4,w	;XOR with final address
   558     0D36  1903               	btfsc	3,2	;have we reached the end yet?
   559     0D37  3400               	retlw	0	;all done for this memory range, return
   560     0D38  0604               	xorwf	4,w	;XOR again to restore value
   561     0D39  2D33               	goto	clrloop0	;do the next byte
   562                           
   563                           	psect	cstackCOMMON
   564     0070                     __pcstackCOMMON:
   565     0070                     ?_UART_Init:
   566     0070                     ?_initLCD:	
   567                           ; 1 bytes @ 0x0
   568                           
   569     0070                     ?_Timer0_Init:	
   570                           ; 1 bytes @ 0x0
   571                           
   572     0070                     ?_RS485_TxEnable:	
   573                           ; 1 bytes @ 0x0
   574                           
   575     0070                     ?_UART_Write:	
   576                           ; 1 bytes @ 0x0
   577                           
   578     0070                     ?_GenerateRandomNumber:	
   579                           ; 1 bytes @ 0x0
   580                           
   581     0070                     ?_KeyPadReader:	
   582                           ; 1 bytes @ 0x0
   583                           
   584     0070                     ?_RS485_RxEnable:	
   585                           ; 1 bytes @ 0x0
   586                           
   587     0070                     ?_UART_Read1:	
   588                           ; 1 bytes @ 0x0
   589                           
   590     0070                     ?_UART_Read2:	
   591                           ; 1 bytes @ 0x0
   592                           
   593     0070                     ?_main:	
   594                           ; 1 bytes @ 0x0
   595                           
   596     0070                     ?_ISR:	
   597                           ; 1 bytes @ 0x0
   598                           
   599     0070                     ??_ISR:	
   600                           ; 1 bytes @ 0x0
   601                           
   602                           
   603                           ; 1 bytes @ 0x0
   604     0070                     	ds	5
   605                           
   606                           	psect	cstackBANK0
   607     0043                     __pcstackBANK0:
   608     0043                     ??_UART_Init:
   609     0043                     ??_Timer0_Init:	
   610                           ; 1 bytes @ 0x0
   611                           
   612     0043                     ?_lcdSend:	
   613                           ; 1 bytes @ 0x0
   614                           
   615     0043                     ??_RS485_TxEnable:	
   616                           ; 1 bytes @ 0x0
   617                           
   618     0043                     ??_UART_Write:	
   619                           ; 1 bytes @ 0x0
   620                           
   621     0043                     ??_GenerateRandomNumber:	
   622                           ; 1 bytes @ 0x0
   623                           
   624     0043                     ??_KeyPadReader:	
   625                           ; 1 bytes @ 0x0
   626                           
   627     0043                     ??_RS485_RxEnable:	
   628                           ; 1 bytes @ 0x0
   629                           
   630     0043                     ?___bmul:	
   631                           ; 1 bytes @ 0x0
   632                           
   633     0043                     ?___awmod:	
   634                           ; 1 bytes @ 0x0
   635                           
   636     0043                     UART_Write@data:	
   637                           ; 2 bytes @ 0x0
   638                           
   639     0043                     lcdSend@tipo:	
   640                           ; 1 bytes @ 0x0
   641                           
   642     0043                     GenerateRandomNumber@randomNum:	
   643                           ; 1 bytes @ 0x0
   644                           
   645     0043                     ___bmul@multiplicand:	
   646                           ; 1 bytes @ 0x0
   647                           
   648     0043                     ___awmod@divisor:	
   649                           ; 1 bytes @ 0x0
   650                           
   651                           
   652                           ; 2 bytes @ 0x0
   653     0043                     	ds	1
   654     0044                     ??_lcdSend:
   655     0044                     ??___bmul:	
   656                           ; 1 bytes @ 0x1
   657                           
   658     0044                     lcdSend@dato:	
   659                           ; 1 bytes @ 0x1
   660                           
   661     0044                     GenerateRandomNumber@count:	
   662                           ; 1 bytes @ 0x1
   663                           
   664                           
   665                           ; 2 bytes @ 0x1
   666     0044                     	ds	1
   667     0045                     ??_initLCD:
   668     0045                     ?_lcdPrint:	
   669                           ; 1 bytes @ 0x2
   670                           
   671     0045                     ___bmul@product:	
   672                           ; 1 bytes @ 0x2
   673                           
   674     0045                     lcdPrint@str:	
   675                           ; 1 bytes @ 0x2
   676                           
   677     0045                     ___awmod@dividend:	
   678                           ; 2 bytes @ 0x2
   679                           
   680                           
   681                           ; 2 bytes @ 0x2
   682     0045                     	ds	1
   683     0046                     ___bmul@multiplier:
   684                           
   685                           ; 1 bytes @ 0x3
   686     0046                     	ds	1
   687     0047                     ??_lcdPrint:
   688     0047                     ?_potenza:	
   689                           ; 1 bytes @ 0x4
   690                           
   691     0047                     ??___awmod:	
   692                           ; 1 bytes @ 0x4
   693                           
   694     0047                     potenza@e:	
   695                           ; 1 bytes @ 0x4
   696                           
   697                           
   698                           ; 1 bytes @ 0x4
   699     0047                     	ds	1
   700     0048                     ??_potenza:
   701     0048                     ___awmod@counter:	
   702                           ; 1 bytes @ 0x5
   703                           
   704                           
   705                           ; 1 bytes @ 0x5
   706     0048                     	ds	1
   707     0049                     potenza@b:
   708     0049                     ___awmod@sign:	
   709                           ; 1 bytes @ 0x6
   710                           
   711                           
   712                           ; 1 bytes @ 0x6
   713     0049                     	ds	1
   714     004A                     lcdPrint@n:
   715     004A                     potenza@i:	
   716                           ; 2 bytes @ 0x7
   717                           
   718                           
   719                           ; 2 bytes @ 0x7
   720     004A                     	ds	2
   721     004C                     potenza@n:
   722                           
   723                           ; 1 bytes @ 0x9
   724     004C                     	ds	1
   725     004D                     ?___awdiv:
   726     004D                     ___awdiv@divisor:	
   727                           ; 2 bytes @ 0xA
   728                           
   729                           
   730                           ; 2 bytes @ 0xA
   731     004D                     	ds	2
   732     004F                     ___awdiv@dividend:
   733                           
   734                           ; 2 bytes @ 0xC
   735     004F                     	ds	2
   736     0051                     ??___awdiv:
   737                           
   738                           ; 1 bytes @ 0xE
   739     0051                     	ds	1
   740     0052                     ___awdiv@counter:
   741                           
   742                           ; 1 bytes @ 0xF
   743     0052                     	ds	1
   744     0053                     ___awdiv@sign:
   745                           
   746                           ; 1 bytes @ 0x10
   747     0053                     	ds	1
   748     0054                     ___awdiv@quotient:
   749                           
   750                           ; 2 bytes @ 0x11
   751     0054                     	ds	2
   752     0056                     ?_intToString:
   753     0056                     intToString@n:	
   754                           ; 1 bytes @ 0x13
   755                           
   756                           
   757                           ; 2 bytes @ 0x13
   758     0056                     	ds	2
   759     0058                     intToString@str:
   760                           
   761                           ; 1 bytes @ 0x15
   762     0058                     	ds	1
   763     0059                     ??_intToString:
   764                           
   765                           ; 1 bytes @ 0x16
   766     0059                     	ds	3
   767     005C                     intToString@t:
   768                           
   769                           ; 1 bytes @ 0x19
   770     005C                     	ds	1
   771     005D                     intToString@cifre:
   772                           
   773                           ; 1 bytes @ 0x1A
   774     005D                     	ds	1
   775     005E                     intToString@i:
   776                           
   777                           ; 1 bytes @ 0x1B
   778     005E                     	ds	1
   779     005F                     ??_UART_Read1:
   780     005F                     ??_UART_Read2:	
   781                           ; 1 bytes @ 0x1C
   782                           
   783                           
   784                           ; 1 bytes @ 0x1C
   785     005F                     	ds	3
   786     0062                     UART_Read1@count:
   787                           
   788                           ; 1 bytes @ 0x1F
   789     0062                     	ds	1
   790     0063                     ??_main:
   791                           
   792                           	psect	maintext
   793     003E                     __pmaintext:	
   794                           ; 1 bytes @ 0x20
   795 ;;
   796 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   797 ;;
   798 ;; *************** function _main *****************
   799 ;; Defined at:
   800 ;;		line 107 in file "main.c"
   801 ;; Parameters:    Size  Location     Type
   802 ;;		None
   803 ;; Auto vars:     Size  Location     Type
   804 ;;		None
   805 ;; Return value:  Size  Location     Type
   806 ;;                  1    wreg      void 
   807 ;; Registers used:
   808 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   809 ;; Tracked objects:
   810 ;;		On entry : B00/0
   811 ;;		On exit  : 0/0
   812 ;;		Unchanged: 0/0
   813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   814 ;;      Params:         0       0       0       0       0
   815 ;;      Locals:         0       0       0       0       0
   816 ;;      Temps:          0       0       0       0       0
   817 ;;      Totals:         0       0       0       0       0
   818 ;;Total ram usage:        0 bytes
   819 ;; Hardware stack levels required when called: 6
   820 ;; This function calls:
   821 ;;		_GenerateRandomNumber
   822 ;;		_KeyPadReader
   823 ;;		_RS485_RxEnable
   824 ;;		_RS485_TxEnable
   825 ;;		_Timer0_Init
   826 ;;		_UART_Init
   827 ;;		_UART_Read1
   828 ;;		_UART_Read2
   829 ;;		_UART_Write
   830 ;;		_initLCD
   831 ;;		_lcdPrint
   832 ;;		_lcdSend
   833 ;; This function is called by:
   834 ;;		Startup code after reset
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838     003E                     _main:	
   839                           ;psect for function _main
   840                           
   841     003E                     l2897:	
   842                           ;incstack = 0
   843                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   844                           
   845                           
   846                           ;main.c: 109:     TRISA=0x00;
   847     003E  1683               	bsf	3,5	;RP0=1, select bank1
   848     003F  1303               	bcf	3,6	;RP1=0, select bank1
   849     0040  0185               	clrf	5	;volatile
   850                           
   851                           ;main.c: 110:  TRISB=0x00;
   852     0041  0186               	clrf	6	;volatile
   853                           
   854                           ;main.c: 111:  TRISC=0x00;
   855     0042  0187               	clrf	7	;volatile
   856                           
   857                           ;main.c: 112:  TRISD=0x00;
   858     0043  0188               	clrf	8	;volatile
   859                           
   860                           ;main.c: 113:     TRISE=0X00;
   861     0044  0189               	clrf	9	;volatile
   862     0045                     l2899:
   863                           
   864                           ;main.c: 114:     UART_Init();
   865     0045  120A  158A  2544  120A  118A  	fcall	_UART_Init
   866     004A                     l2901:
   867                           
   868                           ;main.c: 115:     initLCD();
   869     004A  120A  158A  2689  120A  118A  	fcall	_initLCD
   870     004F                     l2903:
   871                           
   872                           ;main.c: 116:     Timer0_Init();
   873     004F  120A  118A  27F0  120A  118A  	fcall	_Timer0_Init
   874     0054                     l2905:
   875                           
   876                           ;main.c: 118:     {;main.c: 119:         lcdSend(0x01, 0);
   877     0054  1283               	bcf	3,5	;RP0=0, select bank0
   878     0055  1303               	bcf	3,6	;RP1=0, select bank0
   879     0056  01C3               	clrf	lcdSend@tipo
   880     0057  3001               	movlw	1
   881     0058  120A  158A  2556  120A  118A  	fcall	_lcdSend
   882     005D                     l2907:
   883                           
   884                           ;main.c: 120:         lcdPrint("Premi *");
   885     005D  3083               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   886     005E  1283               	bcf	3,5	;RP0=0, select bank0
   887     005F  1303               	bcf	3,6	;RP1=0, select bank0
   888     0060  00C5               	movwf	lcdPrint@str
   889     0061  3080               	movlw	128
   890     0062  00C6               	movwf	lcdPrint@str+1
   891     0063  120A  118A  27A8  120A  118A  	fcall	_lcdPrint
   892     0068                     l2909:
   893                           
   894                           ;main.c: 121:         RS485_TxEnable();
   895     0068  120A  158A  252D  120A  118A  	fcall	_RS485_TxEnable
   896     006D                     l2911:
   897                           
   898                           ;main.c: 122:         UART_Write('P');
   899     006D  3050               	movlw	80
   900     006E  120A  158A  253A  120A  118A  	fcall	_UART_Write
   901     0073                     l2913:
   902                           
   903                           ;main.c: 123:         UART_Write('r');
   904     0073  3072               	movlw	114
   905     0074  120A  158A  253A  120A  118A  	fcall	_UART_Write
   906     0079                     l2915:
   907                           
   908                           ;main.c: 124:         UART_Write('e');
   909     0079  3065               	movlw	101
   910     007A  120A  158A  253A  120A  118A  	fcall	_UART_Write
   911     007F                     l2917:
   912                           
   913                           ;main.c: 125:         UART_Write('m');
   914     007F  306D               	movlw	109
   915     0080  120A  158A  253A  120A  118A  	fcall	_UART_Write
   916     0085                     l2919:
   917                           
   918                           ;main.c: 126:         UART_Write('i');
   919     0085  3069               	movlw	105
   920     0086  120A  158A  253A  120A  118A  	fcall	_UART_Write
   921     008B                     l2921:
   922                           
   923                           ;main.c: 127:         UART_Write(' ');
   924     008B  3020               	movlw	32
   925     008C  120A  158A  253A  120A  118A  	fcall	_UART_Write
   926     0091                     l2923:
   927                           
   928                           ;main.c: 128:         UART_Write('*');
   929     0091  302A               	movlw	42
   930     0092  120A  158A  253A  120A  118A  	fcall	_UART_Write
   931     0097                     l2925:
   932                           
   933                           ;main.c: 129:         UART_Write('\r');
   934     0097  300D               	movlw	13
   935     0098  120A  158A  253A  120A  118A  	fcall	_UART_Write
   936     009D                     l2927:
   937                           
   938                           ;main.c: 130:         UART_Write('\n');
   939     009D  300A               	movlw	10
   940     009E  120A  158A  253A  120A  118A  	fcall	_UART_Write
   941     00A3                     l2929:
   942                           
   943                           ;main.c: 131:         num1 = GenerateRandomNumber();
   944     00A3  120A  158A  256B  120A  118A  	fcall	_GenerateRandomNumber
   945     00A8  1283               	bcf	3,5	;RP0=0, select bank0
   946     00A9  1303               	bcf	3,6	;RP1=0, select bank0
   947     00AA  00BF               	movwf	_num1
   948     00AB                     l2931:
   949                           
   950                           ;main.c: 132:         num2 = GenerateRandomNumber();
   951     00AB  120A  158A  256B  120A  118A  	fcall	_GenerateRandomNumber
   952     00B0  1283               	bcf	3,5	;RP0=0, select bank0
   953     00B1  1303               	bcf	3,6	;RP1=0, select bank0
   954     00B2  00BE               	movwf	_num2
   955     00B3                     l2933:
   956                           
   957                           ;main.c: 133:         num3 = GenerateRandomNumber();
   958     00B3  120A  158A  256B  120A  118A  	fcall	_GenerateRandomNumber
   959     00B8  1283               	bcf	3,5	;RP0=0, select bank0
   960     00B9  1303               	bcf	3,6	;RP1=0, select bank0
   961     00BA  00BD               	movwf	_num3
   962     00BB                     l2935:
   963                           
   964                           ;main.c: 134:         num4 = GenerateRandomNumber();
   965     00BB  120A  158A  256B  120A  118A  	fcall	_GenerateRandomNumber
   966     00C0  1283               	bcf	3,5	;RP0=0, select bank0
   967     00C1  1303               	bcf	3,6	;RP1=0, select bank0
   968     00C2  00BC               	movwf	_num4
   969     00C3                     l2937:
   970                           
   971                           ;main.c: 135:         num5 = GenerateRandomNumber();
   972     00C3  120A  158A  256B  120A  118A  	fcall	_GenerateRandomNumber
   973     00C8  1283               	bcf	3,5	;RP0=0, select bank0
   974     00C9  1303               	bcf	3,6	;RP1=0, select bank0
   975     00CA  00BB               	movwf	_num5
   976                           
   977                           ;main.c: 136:         while (codice[0] == '\0')
   978     00CB  28E1               	goto	l2945
   979     00CC                     l2939:
   980                           
   981                           ;main.c: 137:         {;main.c: 138:             KeyPadReader();
   982     00CC  120A  158A  2773  120A  118A  	fcall	_KeyPadReader
   983     00D1                     l2941:
   984                           
   985                           ;main.c: 139:             if (keys[keypressed] == '*'){
   986     00D1  1283               	bcf	3,5	;RP0=0, select bank0
   987     00D2  1303               	bcf	3,6	;RP1=0, select bank0
   988     00D3  083A               	movf	_keypressed,w
   989     00D4  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
   990     00D5  0084               	movwf	4
   991     00D6  120A  118A  2710  120A  118A  	fcall	stringdir
   992     00DB  3A2A               	xorlw	42
   993     00DC  1D03               	skipz
   994     00DD  28DF               	goto	u3201
   995     00DE  28E0               	goto	u3200
   996     00DF                     u3201:
   997     00DF  28E1               	goto	l2945
   998     00E0                     u3200:
   999     00E0  28E6               	goto	l2947
  1000     00E1                     l2945:
  1001                           
  1002                           ;main.c: 136:         while (codice[0] == '\0')
  1003     00E1  0826               	movf	_codice,w
  1004     00E2  1903               	btfsc	3,2
  1005     00E3  28E5               	goto	u3211
  1006     00E4  28E6               	goto	u3210
  1007     00E5                     u3211:
  1008     00E5  28CC               	goto	l2939
  1009     00E6                     u3210:
  1010     00E6                     l2947:
  1011                           
  1012                           ;main.c: 143:         lcdSend(0x01, 0);
  1013     00E6  01C3               	clrf	lcdSend@tipo
  1014     00E7  3001               	movlw	1
  1015     00E8  120A  158A  2556  120A  118A  	fcall	_lcdSend
  1016     00ED                     l2949:
  1017                           
  1018                           ;main.c: 144:         lcdPrint("Attendere");
  1019     00ED  3070               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1020     00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1021     00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1022     00F0  00C5               	movwf	lcdPrint@str
  1023     00F1  3080               	movlw	128
  1024     00F2  00C6               	movwf	lcdPrint@str+1
  1025     00F3  120A  118A  27A8  120A  118A  	fcall	_lcdPrint
  1026                           
  1027                           ;main.c: 145:         while(num1 != 0x30 && num1 != 0x31 && num1 != 0x32 && num1 != 0x33
      +                           &&
  1028     00F8  2901               	goto	l2953
  1029     00F9                     l2951:
  1030                           
  1031                           ;main.c: 147:               num1 != 0x38 && num1 != 0x39){;main.c: 148:         num1 = G
      +                          enerateRandomNumber();
  1032     00F9  120A  158A  256B  120A  118A  	fcall	_GenerateRandomNumber
  1033     00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1034     00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1035     0100  00BF               	movwf	_num1
  1036     0101                     l2953:
  1037                           
  1038                           ;main.c: 145:         while(num1 != 0x30 && num1 != 0x31 && num1 != 0x32 && num1 != 0x33
      +                           &&
  1039     0101  3030               	movlw	48
  1040     0102  1283               	bcf	3,5	;RP0=0, select bank0
  1041     0103  1303               	bcf	3,6	;RP1=0, select bank0
  1042     0104  063F               	xorwf	_num1,w
  1043     0105  1903               	btfsc	3,2
  1044     0106  2908               	goto	u3221
  1045     0107  2909               	goto	u3220
  1046     0108                     u3221:
  1047     0108  293F               	goto	l2973
  1048     0109                     u3220:
  1049     0109                     l2955:
  1050     0109  3031               	movlw	49
  1051     010A  063F               	xorwf	_num1,w
  1052     010B  1903               	btfsc	3,2
  1053     010C  290E               	goto	u3231
  1054     010D  290F               	goto	u3230
  1055     010E                     u3231:
  1056     010E  293F               	goto	l2973
  1057     010F                     u3230:
  1058     010F                     l2957:
  1059     010F  3032               	movlw	50
  1060     0110  063F               	xorwf	_num1,w
  1061     0111  1903               	btfsc	3,2
  1062     0112  2914               	goto	u3241
  1063     0113  2915               	goto	u3240
  1064     0114                     u3241:
  1065     0114  293F               	goto	l2973
  1066     0115                     u3240:
  1067     0115                     l2959:
  1068     0115  3033               	movlw	51
  1069     0116  063F               	xorwf	_num1,w
  1070     0117  1903               	btfsc	3,2
  1071     0118  291A               	goto	u3251
  1072     0119  291B               	goto	u3250
  1073     011A                     u3251:
  1074     011A  293F               	goto	l2973
  1075     011B                     u3250:
  1076     011B                     l2961:
  1077     011B  3034               	movlw	52
  1078     011C  063F               	xorwf	_num1,w
  1079     011D  1903               	btfsc	3,2
  1080     011E  2920               	goto	u3261
  1081     011F  2921               	goto	u3260
  1082     0120                     u3261:
  1083     0120  293F               	goto	l2973
  1084     0121                     u3260:
  1085     0121                     l2963:
  1086     0121  3035               	movlw	53
  1087     0122  063F               	xorwf	_num1,w
  1088     0123  1903               	btfsc	3,2
  1089     0124  2926               	goto	u3271
  1090     0125  2927               	goto	u3270
  1091     0126                     u3271:
  1092     0126  293F               	goto	l2973
  1093     0127                     u3270:
  1094     0127                     l2965:
  1095     0127  3036               	movlw	54
  1096     0128  063F               	xorwf	_num1,w
  1097     0129  1903               	btfsc	3,2
  1098     012A  292C               	goto	u3281
  1099     012B  292D               	goto	u3280
  1100     012C                     u3281:
  1101     012C  293F               	goto	l2973
  1102     012D                     u3280:
  1103     012D                     l2967:
  1104     012D  3037               	movlw	55
  1105     012E  063F               	xorwf	_num1,w
  1106     012F  1903               	btfsc	3,2
  1107     0130  2932               	goto	u3291
  1108     0131  2933               	goto	u3290
  1109     0132                     u3291:
  1110     0132  293F               	goto	l2973
  1111     0133                     u3290:
  1112     0133                     l2969:
  1113     0133  3038               	movlw	56
  1114     0134  063F               	xorwf	_num1,w
  1115     0135  1903               	btfsc	3,2
  1116     0136  2938               	goto	u3301
  1117     0137  2939               	goto	u3300
  1118     0138                     u3301:
  1119     0138  293F               	goto	l2973
  1120     0139                     u3300:
  1121     0139                     l2971:
  1122     0139  3039               	movlw	57
  1123     013A  063F               	xorwf	_num1,w
  1124     013B  1D03               	btfss	3,2
  1125     013C  293E               	goto	u3311
  1126     013D  293F               	goto	u3310
  1127     013E                     u3311:
  1128     013E  28F9               	goto	l2951
  1129     013F                     u3310:
  1130     013F                     l2973:
  1131                           
  1132                           ;main.c: 150:         lcdSend(0x01, 0);
  1133     013F  01C3               	clrf	lcdSend@tipo
  1134     0140  3001               	movlw	1
  1135     0141  120A  158A  2556  120A  118A  	fcall	_lcdSend
  1136     0146                     l2975:
  1137                           
  1138                           ;main.c: 151:         lcdPrint("Attendere.");
  1139     0146  3065               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1140     0147  1283               	bcf	3,5	;RP0=0, select bank0
  1141     0148  1303               	bcf	3,6	;RP1=0, select bank0
  1142     0149  00C5               	movwf	lcdPrint@str
  1143     014A  3080               	movlw	128
  1144     014B  00C6               	movwf	lcdPrint@str+1
  1145     014C  120A  118A  27A8  120A  118A  	fcall	_lcdPrint
  1146                           
  1147                           ;main.c: 152:         while(num2 != 0x30 && num2 != 0x31 && num2 != 0x32 && num2 != 0x33
      +                           &&
  1148     0151  295A               	goto	l2979
  1149     0152                     l2977:
  1150                           
  1151                           ;main.c: 154:               num2 != 0x38 && num2 != 0x39){;main.c: 155:         num2 = G
      +                          enerateRandomNumber();
  1152     0152  120A  158A  256B  120A  118A  	fcall	_GenerateRandomNumber
  1153     0157  1283               	bcf	3,5	;RP0=0, select bank0
  1154     0158  1303               	bcf	3,6	;RP1=0, select bank0
  1155     0159  00BE               	movwf	_num2
  1156     015A                     l2979:
  1157                           
  1158                           ;main.c: 152:         while(num2 != 0x30 && num2 != 0x31 && num2 != 0x32 && num2 != 0x33
      +                           &&
  1159     015A  3030               	movlw	48
  1160     015B  1283               	bcf	3,5	;RP0=0, select bank0
  1161     015C  1303               	bcf	3,6	;RP1=0, select bank0
  1162     015D  063E               	xorwf	_num2,w
  1163     015E  1903               	btfsc	3,2
  1164     015F  2961               	goto	u3321
  1165     0160  2962               	goto	u3320
  1166     0161                     u3321:
  1167     0161  2998               	goto	l2999
  1168     0162                     u3320:
  1169     0162                     l2981:
  1170     0162  3031               	movlw	49
  1171     0163  063E               	xorwf	_num2,w
  1172     0164  1903               	btfsc	3,2
  1173     0165  2967               	goto	u3331
  1174     0166  2968               	goto	u3330
  1175     0167                     u3331:
  1176     0167  2998               	goto	l2999
  1177     0168                     u3330:
  1178     0168                     l2983:
  1179     0168  3032               	movlw	50
  1180     0169  063E               	xorwf	_num2,w
  1181     016A  1903               	btfsc	3,2
  1182     016B  296D               	goto	u3341
  1183     016C  296E               	goto	u3340
  1184     016D                     u3341:
  1185     016D  2998               	goto	l2999
  1186     016E                     u3340:
  1187     016E                     l2985:
  1188     016E  3033               	movlw	51
  1189     016F  063E               	xorwf	_num2,w
  1190     0170  1903               	btfsc	3,2
  1191     0171  2973               	goto	u3351
  1192     0172  2974               	goto	u3350
  1193     0173                     u3351:
  1194     0173  2998               	goto	l2999
  1195     0174                     u3350:
  1196     0174                     l2987:
  1197     0174  3034               	movlw	52
  1198     0175  063E               	xorwf	_num2,w
  1199     0176  1903               	btfsc	3,2
  1200     0177  2979               	goto	u3361
  1201     0178  297A               	goto	u3360
  1202     0179                     u3361:
  1203     0179  2998               	goto	l2999
  1204     017A                     u3360:
  1205     017A                     l2989:
  1206     017A  3035               	movlw	53
  1207     017B  063E               	xorwf	_num2,w
  1208     017C  1903               	btfsc	3,2
  1209     017D  297F               	goto	u3371
  1210     017E  2980               	goto	u3370
  1211     017F                     u3371:
  1212     017F  2998               	goto	l2999
  1213     0180                     u3370:
  1214     0180                     l2991:
  1215     0180  3036               	movlw	54
  1216     0181  063E               	xorwf	_num2,w
  1217     0182  1903               	btfsc	3,2
  1218     0183  2985               	goto	u3381
  1219     0184  2986               	goto	u3380
  1220     0185                     u3381:
  1221     0185  2998               	goto	l2999
  1222     0186                     u3380:
  1223     0186                     l2993:
  1224     0186  3037               	movlw	55
  1225     0187  063E               	xorwf	_num2,w
  1226     0188  1903               	btfsc	3,2
  1227     0189  298B               	goto	u3391
  1228     018A  298C               	goto	u3390
  1229     018B                     u3391:
  1230     018B  2998               	goto	l2999
  1231     018C                     u3390:
  1232     018C                     l2995:
  1233     018C  3038               	movlw	56
  1234     018D  063E               	xorwf	_num2,w
  1235     018E  1903               	btfsc	3,2
  1236     018F  2991               	goto	u3401
  1237     0190  2992               	goto	u3400
  1238     0191                     u3401:
  1239     0191  2998               	goto	l2999
  1240     0192                     u3400:
  1241     0192                     l2997:
  1242     0192  3039               	movlw	57
  1243     0193  063E               	xorwf	_num2,w
  1244     0194  1D03               	btfss	3,2
  1245     0195  2997               	goto	u3411
  1246     0196  2998               	goto	u3410
  1247     0197                     u3411:
  1248     0197  2952               	goto	l2977
  1249     0198                     u3410:
  1250     0198                     l2999:
  1251                           
  1252                           ;main.c: 157:         lcdSend(0x01, 0);
  1253     0198  01C3               	clrf	lcdSend@tipo
  1254     0199  3001               	movlw	1
  1255     019A  120A  158A  2556  120A  118A  	fcall	_lcdSend
  1256     019F                     l3001:
  1257                           
  1258                           ;main.c: 158:         lcdPrint("Attendere..");
  1259     019F  3059               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1260     01A0  1283               	bcf	3,5	;RP0=0, select bank0
  1261     01A1  1303               	bcf	3,6	;RP1=0, select bank0
  1262     01A2  00C5               	movwf	lcdPrint@str
  1263     01A3  3080               	movlw	128
  1264     01A4  00C6               	movwf	lcdPrint@str+1
  1265     01A5  120A  118A  27A8  120A  118A  	fcall	_lcdPrint
  1266                           
  1267                           ;main.c: 159:         while(num3 != 0x30 && num3 != 0x31 && num3 != 0x32 && num3 != 0x33
      +                           &&
  1268     01AA  29B3               	goto	l3005
  1269     01AB                     l3003:
  1270                           
  1271                           ;main.c: 161:               num3 != 0x38 && num3 != 0x39){;main.c: 162:         num3 = G
      +                          enerateRandomNumber();
  1272     01AB  120A  158A  256B  120A  118A  	fcall	_GenerateRandomNumber
  1273     01B0  1283               	bcf	3,5	;RP0=0, select bank0
  1274     01B1  1303               	bcf	3,6	;RP1=0, select bank0
  1275     01B2  00BD               	movwf	_num3
  1276     01B3                     l3005:
  1277                           
  1278                           ;main.c: 159:         while(num3 != 0x30 && num3 != 0x31 && num3 != 0x32 && num3 != 0x33
      +                           &&
  1279     01B3  3030               	movlw	48
  1280     01B4  1283               	bcf	3,5	;RP0=0, select bank0
  1281     01B5  1303               	bcf	3,6	;RP1=0, select bank0
  1282     01B6  063D               	xorwf	_num3,w
  1283     01B7  1903               	btfsc	3,2
  1284     01B8  29BA               	goto	u3421
  1285     01B9  29BB               	goto	u3420
  1286     01BA                     u3421:
  1287     01BA  29F1               	goto	l3025
  1288     01BB                     u3420:
  1289     01BB                     l3007:
  1290     01BB  3031               	movlw	49
  1291     01BC  063D               	xorwf	_num3,w
  1292     01BD  1903               	btfsc	3,2
  1293     01BE  29C0               	goto	u3431
  1294     01BF  29C1               	goto	u3430
  1295     01C0                     u3431:
  1296     01C0  29F1               	goto	l3025
  1297     01C1                     u3430:
  1298     01C1                     l3009:
  1299     01C1  3032               	movlw	50
  1300     01C2  063D               	xorwf	_num3,w
  1301     01C3  1903               	btfsc	3,2
  1302     01C4  29C6               	goto	u3441
  1303     01C5  29C7               	goto	u3440
  1304     01C6                     u3441:
  1305     01C6  29F1               	goto	l3025
  1306     01C7                     u3440:
  1307     01C7                     l3011:
  1308     01C7  3033               	movlw	51
  1309     01C8  063D               	xorwf	_num3,w
  1310     01C9  1903               	btfsc	3,2
  1311     01CA  29CC               	goto	u3451
  1312     01CB  29CD               	goto	u3450
  1313     01CC                     u3451:
  1314     01CC  29F1               	goto	l3025
  1315     01CD                     u3450:
  1316     01CD                     l3013:
  1317     01CD  3034               	movlw	52
  1318     01CE  063D               	xorwf	_num3,w
  1319     01CF  1903               	btfsc	3,2
  1320     01D0  29D2               	goto	u3461
  1321     01D1  29D3               	goto	u3460
  1322     01D2                     u3461:
  1323     01D2  29F1               	goto	l3025
  1324     01D3                     u3460:
  1325     01D3                     l3015:
  1326     01D3  3035               	movlw	53
  1327     01D4  063D               	xorwf	_num3,w
  1328     01D5  1903               	btfsc	3,2
  1329     01D6  29D8               	goto	u3471
  1330     01D7  29D9               	goto	u3470
  1331     01D8                     u3471:
  1332     01D8  29F1               	goto	l3025
  1333     01D9                     u3470:
  1334     01D9                     l3017:
  1335     01D9  3036               	movlw	54
  1336     01DA  063D               	xorwf	_num3,w
  1337     01DB  1903               	btfsc	3,2
  1338     01DC  29DE               	goto	u3481
  1339     01DD  29DF               	goto	u3480
  1340     01DE                     u3481:
  1341     01DE  29F1               	goto	l3025
  1342     01DF                     u3480:
  1343     01DF                     l3019:
  1344     01DF  3037               	movlw	55
  1345     01E0  063D               	xorwf	_num3,w
  1346     01E1  1903               	btfsc	3,2
  1347     01E2  29E4               	goto	u3491
  1348     01E3  29E5               	goto	u3490
  1349     01E4                     u3491:
  1350     01E4  29F1               	goto	l3025
  1351     01E5                     u3490:
  1352     01E5                     l3021:
  1353     01E5  3038               	movlw	56
  1354     01E6  063D               	xorwf	_num3,w
  1355     01E7  1903               	btfsc	3,2
  1356     01E8  29EA               	goto	u3501
  1357     01E9  29EB               	goto	u3500
  1358     01EA                     u3501:
  1359     01EA  29F1               	goto	l3025
  1360     01EB                     u3500:
  1361     01EB                     l3023:
  1362     01EB  3039               	movlw	57
  1363     01EC  063D               	xorwf	_num3,w
  1364     01ED  1D03               	btfss	3,2
  1365     01EE  29F0               	goto	u3511
  1366     01EF  29F1               	goto	u3510
  1367     01F0                     u3511:
  1368     01F0  29AB               	goto	l3003
  1369     01F1                     u3510:
  1370     01F1                     l3025:
  1371                           
  1372                           ;main.c: 164:         lcdSend(0x01, 0);
  1373     01F1  01C3               	clrf	lcdSend@tipo
  1374     01F2  3001               	movlw	1
  1375     01F3  120A  158A  2556  120A  118A  	fcall	_lcdSend
  1376     01F8                     l3027:
  1377                           
  1378                           ;main.c: 165:         lcdPrint("Attendere...");
  1379     01F8  303F               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1380     01F9  1283               	bcf	3,5	;RP0=0, select bank0
  1381     01FA  1303               	bcf	3,6	;RP1=0, select bank0
  1382     01FB  00C5               	movwf	lcdPrint@str
  1383     01FC  3080               	movlw	128
  1384     01FD  00C6               	movwf	lcdPrint@str+1
  1385     01FE  120A  118A  27A8  120A  118A  	fcall	_lcdPrint
  1386                           
  1387                           ;main.c: 166:         while(num4 != 0x30 && num4 != 0x31 && num4 != 0x32 && num4 != 0x33
      +                           &&
  1388     0203  2A0C               	goto	l3031
  1389     0204                     l3029:
  1390                           
  1391                           ;main.c: 168:               num4 != 0x38 && num4 != 0x39){;main.c: 169:         num4 = G
      +                          enerateRandomNumber();
  1392     0204  120A  158A  256B  120A  118A  	fcall	_GenerateRandomNumber
  1393     0209  1283               	bcf	3,5	;RP0=0, select bank0
  1394     020A  1303               	bcf	3,6	;RP1=0, select bank0
  1395     020B  00BC               	movwf	_num4
  1396     020C                     l3031:
  1397                           
  1398                           ;main.c: 166:         while(num4 != 0x30 && num4 != 0x31 && num4 != 0x32 && num4 != 0x33
      +                           &&
  1399     020C  3030               	movlw	48
  1400     020D  1283               	bcf	3,5	;RP0=0, select bank0
  1401     020E  1303               	bcf	3,6	;RP1=0, select bank0
  1402     020F  063C               	xorwf	_num4,w
  1403     0210  1903               	btfsc	3,2
  1404     0211  2A13               	goto	u3521
  1405     0212  2A14               	goto	u3520
  1406     0213                     u3521:
  1407     0213  2A4A               	goto	l3051
  1408     0214                     u3520:
  1409     0214                     l3033:
  1410     0214  3031               	movlw	49
  1411     0215  063C               	xorwf	_num4,w
  1412     0216  1903               	btfsc	3,2
  1413     0217  2A19               	goto	u3531
  1414     0218  2A1A               	goto	u3530
  1415     0219                     u3531:
  1416     0219  2A4A               	goto	l3051
  1417     021A                     u3530:
  1418     021A                     l3035:
  1419     021A  3032               	movlw	50
  1420     021B  063C               	xorwf	_num4,w
  1421     021C  1903               	btfsc	3,2
  1422     021D  2A1F               	goto	u3541
  1423     021E  2A20               	goto	u3540
  1424     021F                     u3541:
  1425     021F  2A4A               	goto	l3051
  1426     0220                     u3540:
  1427     0220                     l3037:
  1428     0220  3033               	movlw	51
  1429     0221  063C               	xorwf	_num4,w
  1430     0222  1903               	btfsc	3,2
  1431     0223  2A25               	goto	u3551
  1432     0224  2A26               	goto	u3550
  1433     0225                     u3551:
  1434     0225  2A4A               	goto	l3051
  1435     0226                     u3550:
  1436     0226                     l3039:
  1437     0226  3034               	movlw	52
  1438     0227  063C               	xorwf	_num4,w
  1439     0228  1903               	btfsc	3,2
  1440     0229  2A2B               	goto	u3561
  1441     022A  2A2C               	goto	u3560
  1442     022B                     u3561:
  1443     022B  2A4A               	goto	l3051
  1444     022C                     u3560:
  1445     022C                     l3041:
  1446     022C  3035               	movlw	53
  1447     022D  063C               	xorwf	_num4,w
  1448     022E  1903               	btfsc	3,2
  1449     022F  2A31               	goto	u3571
  1450     0230  2A32               	goto	u3570
  1451     0231                     u3571:
  1452     0231  2A4A               	goto	l3051
  1453     0232                     u3570:
  1454     0232                     l3043:
  1455     0232  3036               	movlw	54
  1456     0233  063C               	xorwf	_num4,w
  1457     0234  1903               	btfsc	3,2
  1458     0235  2A37               	goto	u3581
  1459     0236  2A38               	goto	u3580
  1460     0237                     u3581:
  1461     0237  2A4A               	goto	l3051
  1462     0238                     u3580:
  1463     0238                     l3045:
  1464     0238  3037               	movlw	55
  1465     0239  063C               	xorwf	_num4,w
  1466     023A  1903               	btfsc	3,2
  1467     023B  2A3D               	goto	u3591
  1468     023C  2A3E               	goto	u3590
  1469     023D                     u3591:
  1470     023D  2A4A               	goto	l3051
  1471     023E                     u3590:
  1472     023E                     l3047:
  1473     023E  3038               	movlw	56
  1474     023F  063C               	xorwf	_num4,w
  1475     0240  1903               	btfsc	3,2
  1476     0241  2A43               	goto	u3601
  1477     0242  2A44               	goto	u3600
  1478     0243                     u3601:
  1479     0243  2A4A               	goto	l3051
  1480     0244                     u3600:
  1481     0244                     l3049:
  1482     0244  3039               	movlw	57
  1483     0245  063C               	xorwf	_num4,w
  1484     0246  1D03               	btfss	3,2
  1485     0247  2A49               	goto	u3611
  1486     0248  2A4A               	goto	u3610
  1487     0249                     u3611:
  1488     0249  2A04               	goto	l3029
  1489     024A                     u3610:
  1490     024A                     l3051:
  1491                           
  1492                           ;main.c: 171:         lcdSend(0x01, 0);
  1493     024A  01C3               	clrf	lcdSend@tipo
  1494     024B  3001               	movlw	1
  1495     024C  120A  158A  2556  120A  118A  	fcall	_lcdSend
  1496     0251                     l3053:
  1497                           
  1498                           ;main.c: 172:         lcdPrint("Attendere....");
  1499     0251  3023               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1500     0252  1283               	bcf	3,5	;RP0=0, select bank0
  1501     0253  1303               	bcf	3,6	;RP1=0, select bank0
  1502     0254  00C5               	movwf	lcdPrint@str
  1503     0255  3080               	movlw	128
  1504     0256  00C6               	movwf	lcdPrint@str+1
  1505     0257  120A  118A  27A8  120A  118A  	fcall	_lcdPrint
  1506                           
  1507                           ;main.c: 173:         while(num5 != 0x30 && num5 != 0x31 && num5 != 0x32 && num5 != 0x33
      +                           &&
  1508     025C  2A65               	goto	l3057
  1509     025D                     l3055:
  1510                           
  1511                           ;main.c: 175:               num5 != 0x38 && num5 != 0x39){;main.c: 176:         num5 = G
      +                          enerateRandomNumber();
  1512     025D  120A  158A  256B  120A  118A  	fcall	_GenerateRandomNumber
  1513     0262  1283               	bcf	3,5	;RP0=0, select bank0
  1514     0263  1303               	bcf	3,6	;RP1=0, select bank0
  1515     0264  00BB               	movwf	_num5
  1516     0265                     l3057:
  1517                           
  1518                           ;main.c: 173:         while(num5 != 0x30 && num5 != 0x31 && num5 != 0x32 && num5 != 0x33
      +                           &&
  1519     0265  3030               	movlw	48
  1520     0266  1283               	bcf	3,5	;RP0=0, select bank0
  1521     0267  1303               	bcf	3,6	;RP1=0, select bank0
  1522     0268  063B               	xorwf	_num5,w
  1523     0269  1903               	btfsc	3,2
  1524     026A  2A6C               	goto	u3621
  1525     026B  2A6D               	goto	u3620
  1526     026C                     u3621:
  1527     026C  2AA3               	goto	l3077
  1528     026D                     u3620:
  1529     026D                     l3059:
  1530     026D  3031               	movlw	49
  1531     026E  063B               	xorwf	_num5,w
  1532     026F  1903               	btfsc	3,2
  1533     0270  2A72               	goto	u3631
  1534     0271  2A73               	goto	u3630
  1535     0272                     u3631:
  1536     0272  2AA3               	goto	l3077
  1537     0273                     u3630:
  1538     0273                     l3061:
  1539     0273  3032               	movlw	50
  1540     0274  063B               	xorwf	_num5,w
  1541     0275  1903               	btfsc	3,2
  1542     0276  2A78               	goto	u3641
  1543     0277  2A79               	goto	u3640
  1544     0278                     u3641:
  1545     0278  2AA3               	goto	l3077
  1546     0279                     u3640:
  1547     0279                     l3063:
  1548     0279  3033               	movlw	51
  1549     027A  063B               	xorwf	_num5,w
  1550     027B  1903               	btfsc	3,2
  1551     027C  2A7E               	goto	u3651
  1552     027D  2A7F               	goto	u3650
  1553     027E                     u3651:
  1554     027E  2AA3               	goto	l3077
  1555     027F                     u3650:
  1556     027F                     l3065:
  1557     027F  3034               	movlw	52
  1558     0280  063B               	xorwf	_num5,w
  1559     0281  1903               	btfsc	3,2
  1560     0282  2A84               	goto	u3661
  1561     0283  2A85               	goto	u3660
  1562     0284                     u3661:
  1563     0284  2AA3               	goto	l3077
  1564     0285                     u3660:
  1565     0285                     l3067:
  1566     0285  3035               	movlw	53
  1567     0286  063B               	xorwf	_num5,w
  1568     0287  1903               	btfsc	3,2
  1569     0288  2A8A               	goto	u3671
  1570     0289  2A8B               	goto	u3670
  1571     028A                     u3671:
  1572     028A  2AA3               	goto	l3077
  1573     028B                     u3670:
  1574     028B                     l3069:
  1575     028B  3036               	movlw	54
  1576     028C  063B               	xorwf	_num5,w
  1577     028D  1903               	btfsc	3,2
  1578     028E  2A90               	goto	u3681
  1579     028F  2A91               	goto	u3680
  1580     0290                     u3681:
  1581     0290  2AA3               	goto	l3077
  1582     0291                     u3680:
  1583     0291                     l3071:
  1584     0291  3037               	movlw	55
  1585     0292  063B               	xorwf	_num5,w
  1586     0293  1903               	btfsc	3,2
  1587     0294  2A96               	goto	u3691
  1588     0295  2A97               	goto	u3690
  1589     0296                     u3691:
  1590     0296  2AA3               	goto	l3077
  1591     0297                     u3690:
  1592     0297                     l3073:
  1593     0297  3038               	movlw	56
  1594     0298  063B               	xorwf	_num5,w
  1595     0299  1903               	btfsc	3,2
  1596     029A  2A9C               	goto	u3701
  1597     029B  2A9D               	goto	u3700
  1598     029C                     u3701:
  1599     029C  2AA3               	goto	l3077
  1600     029D                     u3700:
  1601     029D                     l3075:
  1602     029D  3039               	movlw	57
  1603     029E  063B               	xorwf	_num5,w
  1604     029F  1D03               	btfss	3,2
  1605     02A0  2AA2               	goto	u3711
  1606     02A1  2AA3               	goto	u3710
  1607     02A2                     u3711:
  1608     02A2  2A5D               	goto	l3055
  1609     02A3                     u3710:
  1610     02A3                     l3077:
  1611                           
  1612                           ;main.c: 178:         UART_Write(id1);
  1613     02A3  3030               	movlw	48
  1614     02A4  120A  158A  253A  120A  118A  	fcall	_UART_Write
  1615                           
  1616                           ;main.c: 179:         UART_Write(id2);
  1617     02A9  3031               	movlw	49
  1618     02AA  120A  158A  253A  120A  118A  	fcall	_UART_Write
  1619     02AF                     l3079:
  1620                           
  1621                           ;main.c: 180:         type = 0x31;
  1622     02AF  3031               	movlw	49
  1623     02B0  1283               	bcf	3,5	;RP0=0, select bank0
  1624     02B1  1303               	bcf	3,6	;RP1=0, select bank0
  1625     02B2  00B4               	movwf	_type
  1626     02B3                     l3081:
  1627                           
  1628                           ;main.c: 181:         UART_Write(type);
  1629     02B3  3031               	movlw	49
  1630     02B4  120A  158A  253A  120A  118A  	fcall	_UART_Write
  1631     02B9                     l3083:
  1632                           
  1633                           ;main.c: 182:         UART_Write(num1);
  1634     02B9  1283               	bcf	3,5	;RP0=0, select bank0
  1635     02BA  1303               	bcf	3,6	;RP1=0, select bank0
  1636     02BB  083F               	movf	_num1,w
  1637     02BC  120A  158A  253A  120A  118A  	fcall	_UART_Write
  1638     02C1                     l3085:
  1639                           
  1640                           ;main.c: 183:         UART_Write(num2);
  1641     02C1  1283               	bcf	3,5	;RP0=0, select bank0
  1642     02C2  1303               	bcf	3,6	;RP1=0, select bank0
  1643     02C3  083E               	movf	_num2,w
  1644     02C4  120A  158A  253A  120A  118A  	fcall	_UART_Write
  1645     02C9                     l3087:
  1646                           
  1647                           ;main.c: 184:         UART_Write(num3);
  1648     02C9  1283               	bcf	3,5	;RP0=0, select bank0
  1649     02CA  1303               	bcf	3,6	;RP1=0, select bank0
  1650     02CB  083D               	movf	_num3,w
  1651     02CC  120A  158A  253A  120A  118A  	fcall	_UART_Write
  1652     02D1                     l3089:
  1653                           
  1654                           ;main.c: 185:         UART_Write(num4);
  1655     02D1  1283               	bcf	3,5	;RP0=0, select bank0
  1656     02D2  1303               	bcf	3,6	;RP1=0, select bank0
  1657     02D3  083C               	movf	_num4,w
  1658     02D4  120A  158A  253A  120A  118A  	fcall	_UART_Write
  1659     02D9                     l3091:
  1660                           
  1661                           ;main.c: 186:         UART_Write(num5);
  1662     02D9  1283               	bcf	3,5	;RP0=0, select bank0
  1663     02DA  1303               	bcf	3,6	;RP1=0, select bank0
  1664     02DB  083B               	movf	_num5,w
  1665     02DC  120A  158A  253A  120A  118A  	fcall	_UART_Write
  1666     02E1                     l3093:
  1667                           
  1668                           ;main.c: 187:         UART_Write('\r');
  1669     02E1  300D               	movlw	13
  1670     02E2  120A  158A  253A  120A  118A  	fcall	_UART_Write
  1671     02E7                     l3095:
  1672                           
  1673                           ;main.c: 188:         UART_Write('\n');
  1674     02E7  300A               	movlw	10
  1675     02E8  120A  158A  253A  120A  118A  	fcall	_UART_Write
  1676     02ED                     l3097:
  1677                           
  1678                           ;main.c: 189:         lcdSend(0x01, 0);
  1679     02ED  1283               	bcf	3,5	;RP0=0, select bank0
  1680     02EE  1303               	bcf	3,6	;RP1=0, select bank0
  1681     02EF  01C3               	clrf	lcdSend@tipo
  1682     02F0  3001               	movlw	1
  1683     02F1  120A  158A  2556  120A  118A  	fcall	_lcdSend
  1684     02F6                     l3099:
  1685                           
  1686                           ;main.c: 190:         lcdSend(num1, 1);
  1687     02F6  1283               	bcf	3,5	;RP0=0, select bank0
  1688     02F7  1303               	bcf	3,6	;RP1=0, select bank0
  1689     02F8  01C3               	clrf	lcdSend@tipo
  1690     02F9  0AC3               	incf	lcdSend@tipo,f
  1691     02FA  083F               	movf	_num1,w
  1692     02FB  120A  158A  2556  120A  118A  	fcall	_lcdSend
  1693     0300                     l3101:
  1694                           
  1695                           ;main.c: 191:         lcdSend(num2, 1);
  1696     0300  1283               	bcf	3,5	;RP0=0, select bank0
  1697     0301  1303               	bcf	3,6	;RP1=0, select bank0
  1698     0302  01C3               	clrf	lcdSend@tipo
  1699     0303  0AC3               	incf	lcdSend@tipo,f
  1700     0304  083E               	movf	_num2,w
  1701     0305  120A  158A  2556  120A  118A  	fcall	_lcdSend
  1702     030A                     l3103:
  1703                           
  1704                           ;main.c: 192:         lcdSend(num3, 1);
  1705     030A  1283               	bcf	3,5	;RP0=0, select bank0
  1706     030B  1303               	bcf	3,6	;RP1=0, select bank0
  1707     030C  01C3               	clrf	lcdSend@tipo
  1708     030D  0AC3               	incf	lcdSend@tipo,f
  1709     030E  083D               	movf	_num3,w
  1710     030F  120A  158A  2556  120A  118A  	fcall	_lcdSend
  1711     0314                     l3105:
  1712                           
  1713                           ;main.c: 193:         lcdSend(num4, 1);
  1714     0314  1283               	bcf	3,5	;RP0=0, select bank0
  1715     0315  1303               	bcf	3,6	;RP1=0, select bank0
  1716     0316  01C3               	clrf	lcdSend@tipo
  1717     0317  0AC3               	incf	lcdSend@tipo,f
  1718     0318  083C               	movf	_num4,w
  1719     0319  120A  158A  2556  120A  118A  	fcall	_lcdSend
  1720     031E                     l3107:
  1721                           
  1722                           ;main.c: 194:         lcdSend(num5, 1);
  1723     031E  1283               	bcf	3,5	;RP0=0, select bank0
  1724     031F  1303               	bcf	3,6	;RP1=0, select bank0
  1725     0320  01C3               	clrf	lcdSend@tipo
  1726     0321  0AC3               	incf	lcdSend@tipo,f
  1727     0322  083B               	movf	_num5,w
  1728     0323  120A  158A  2556  120A  118A  	fcall	_lcdSend
  1729     0328                     l3109:
  1730                           
  1731                           ;main.c: 195:         keypressed = 0;
  1732     0328  1283               	bcf	3,5	;RP0=0, select bank0
  1733     0329  1303               	bcf	3,6	;RP1=0, select bank0
  1734     032A  01BA               	clrf	_keypressed
  1735     032B                     l3111:
  1736                           
  1737                           ;main.c: 196:         RS485_RxEnable();
  1738     032B  120A  158A  2528  120A  118A  	fcall	_RS485_RxEnable
  1739     0330                     l3113:
  1740                           
  1741                           ;main.c: 197:         flag = 1;
  1742     0330  3001               	movlw	1
  1743     0331  1283               	bcf	3,5	;RP0=0, select bank0
  1744     0332  1303               	bcf	3,6	;RP1=0, select bank0
  1745     0333  00B0               	movwf	_flag
  1746     0334  3000               	movlw	0
  1747     0335  00B1               	movwf	_flag+1
  1748     0336                     l3115:
  1749                           
  1750                           ;main.c: 198:         UART_Read1();
  1751     0336  120A  118A  2344  120A  118A  	fcall	_UART_Read1
  1752     033B                     l3117:
  1753                           
  1754                           ;main.c: 199:         UART_Read2();
  1755     033B  120A  118A  252A  120A  118A  	fcall	_UART_Read2
  1756     0340  2854               	goto	l2905
  1757     0341  120A  118A  2810   	ljmp	start
  1758     0344                     __end_of_main:
  1759                           
  1760                           	psect	text1
  1761     0E89                     __ptext1:	
  1762 ;; *************** function _initLCD *****************
  1763 ;; Defined at:
  1764 ;;		line 362 in file "main.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;		None
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;		None
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  1    wreg      void 
  1771 ;; Registers used:
  1772 ;;		wreg, status,2, status,0, pclath, cstack
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1778 ;;      Params:         0       0       0       0       0
  1779 ;;      Locals:         0       0       0       0       0
  1780 ;;      Temps:          0       2       0       0       0
  1781 ;;      Totals:         0       2       0       0       0
  1782 ;;Total ram usage:        2 bytes
  1783 ;; Hardware stack levels used: 1
  1784 ;; Hardware stack levels required when called: 3
  1785 ;; This function calls:
  1786 ;;		_lcdSend
  1787 ;; This function is called by:
  1788 ;;		_main
  1789 ;; This function uses a non-reentrant model
  1790 ;;
  1791                           
  1792     0E89                     _initLCD:	
  1793                           ;psect for function _initLCD
  1794                           
  1795     0E89                     l2587:	
  1796                           ;incstack = 0
  1797                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  1798                           
  1799                           
  1800                           ;main.c: 363:     PORTEbits.RE2 = 0;
  1801     0E89  1283               	bcf	3,5	;RP0=0, select bank0
  1802     0E8A  1303               	bcf	3,6	;RP1=0, select bank0
  1803     0E8B  1109               	bcf	9,2	;volatile
  1804                           
  1805                           ;main.c: 364:     PORTEbits.RE1 = 0;
  1806     0E8C  1089               	bcf	9,1	;volatile
  1807     0E8D                     l2589:
  1808                           
  1809                           ;main.c: 365:     _delay((unsigned long)((20)*(20000000/4000.0)));
  1810     0E8D  3082               	movlw	130
  1811     0E8E  1283               	bcf	3,5	;RP0=0, select bank0
  1812     0E8F  1303               	bcf	3,6	;RP1=0, select bank0
  1813     0E90  00C6               	movwf	??_initLCD+1
  1814     0E91  30DD               	movlw	221
  1815     0E92  00C5               	movwf	??_initLCD
  1816     0E93                     u3727:
  1817     0E93  0BC5               	decfsz	??_initLCD,f
  1818     0E94  2E93               	goto	u3727
  1819     0E95  0BC6               	decfsz	??_initLCD+1,f
  1820     0E96  2E93               	goto	u3727
  1821     0E97                     l2591:
  1822                           
  1823                           ;main.c: 366:     PORTEbits.RE1 = 1;
  1824     0E97  1283               	bcf	3,5	;RP0=0, select bank0
  1825     0E98  1303               	bcf	3,6	;RP1=0, select bank0
  1826     0E99  1489               	bsf	9,1	;volatile
  1827     0E9A                     l2593:
  1828                           
  1829                           ;main.c: 367:     lcdSend(0x38, 0);
  1830     0E9A  01C3               	clrf	lcdSend@tipo
  1831     0E9B  3038               	movlw	56
  1832     0E9C  120A  158A  2556  120A  158A  	fcall	_lcdSend
  1833     0EA1                     l2595:
  1834                           
  1835                           ;main.c: 368:     _delay((unsigned long)((5)*(20000000/4000.0)));
  1836     0EA1  3021               	movlw	33
  1837     0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  1838     0EA3  1303               	bcf	3,6	;RP1=0, select bank0
  1839     0EA4  00C6               	movwf	??_initLCD+1
  1840     0EA5  3075               	movlw	117
  1841     0EA6  00C5               	movwf	??_initLCD
  1842     0EA7                     u3737:
  1843     0EA7  0BC5               	decfsz	??_initLCD,f
  1844     0EA8  2EA7               	goto	u3737
  1845     0EA9  0BC6               	decfsz	??_initLCD+1,f
  1846     0EAA  2EA7               	goto	u3737
  1847     0EAB  2EAC               	nop2
  1848                           
  1849                           ;main.c: 369:     lcdSend(0x38, 0);
  1850     0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  1851     0EAD  1303               	bcf	3,6	;RP1=0, select bank0
  1852     0EAE  01C3               	clrf	lcdSend@tipo
  1853     0EAF  3038               	movlw	56
  1854     0EB0  120A  158A  2556  120A  158A  	fcall	_lcdSend
  1855     0EB5                     l2597:
  1856                           
  1857                           ;main.c: 370:     _delay((unsigned long)((1)*(20000000/4000.0)));
  1858     0EB5  3007               	movlw	7
  1859     0EB6  1283               	bcf	3,5	;RP0=0, select bank0
  1860     0EB7  1303               	bcf	3,6	;RP1=0, select bank0
  1861     0EB8  00C6               	movwf	??_initLCD+1
  1862     0EB9  307C               	movlw	124
  1863     0EBA  00C5               	movwf	??_initLCD
  1864     0EBB                     u3747:
  1865     0EBB  0BC5               	decfsz	??_initLCD,f
  1866     0EBC  2EBB               	goto	u3747
  1867     0EBD  0BC6               	decfsz	??_initLCD+1,f
  1868     0EBE  2EBB               	goto	u3747
  1869     0EBF  0000               	nop
  1870     0EC0                     l2599:
  1871                           
  1872                           ;main.c: 371:     lcdSend(0x38, 0);
  1873     0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  1874     0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  1875     0EC2  01C3               	clrf	lcdSend@tipo
  1876     0EC3  3038               	movlw	56
  1877     0EC4  120A  158A  2556  120A  158A  	fcall	_lcdSend
  1878     0EC9                     l2601:
  1879                           
  1880                           ;main.c: 372:     lcdSend(0x08, 0);
  1881     0EC9  1283               	bcf	3,5	;RP0=0, select bank0
  1882     0ECA  1303               	bcf	3,6	;RP1=0, select bank0
  1883     0ECB  01C3               	clrf	lcdSend@tipo
  1884     0ECC  3008               	movlw	8
  1885     0ECD  120A  158A  2556  120A  158A  	fcall	_lcdSend
  1886     0ED2                     l2603:
  1887                           
  1888                           ;main.c: 373:     lcdSend(0x0F, 0);
  1889     0ED2  1283               	bcf	3,5	;RP0=0, select bank0
  1890     0ED3  1303               	bcf	3,6	;RP1=0, select bank0
  1891     0ED4  01C3               	clrf	lcdSend@tipo
  1892     0ED5  300F               	movlw	15
  1893     0ED6  120A  158A  2556  120A  158A  	fcall	_lcdSend
  1894     0EDB                     l2605:
  1895                           
  1896                           ;main.c: 374:     lcdSend(0x01, 0);
  1897     0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  1898     0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  1899     0EDD  01C3               	clrf	lcdSend@tipo
  1900     0EDE  3001               	movlw	1
  1901     0EDF  120A  158A  2556  120A  158A  	fcall	_lcdSend
  1902     0EE4                     l2607:
  1903                           
  1904                           ;main.c: 375:     lcdSend(0x0C, 0);
  1905     0EE4  1283               	bcf	3,5	;RP0=0, select bank0
  1906     0EE5  1303               	bcf	3,6	;RP1=0, select bank0
  1907     0EE6  01C3               	clrf	lcdSend@tipo
  1908     0EE7  300C               	movlw	12
  1909     0EE8  120A  158A  2556  120A  158A  	fcall	_lcdSend
  1910     0EED                     l2609:
  1911                           
  1912                           ;main.c: 376:     lcdSend(0x80, 0);
  1913     0EED  1283               	bcf	3,5	;RP0=0, select bank0
  1914     0EEE  1303               	bcf	3,6	;RP1=0, select bank0
  1915     0EEF  01C3               	clrf	lcdSend@tipo
  1916     0EF0  3080               	movlw	128
  1917     0EF1  120A  158A  2556  120A  158A  	fcall	_lcdSend
  1918     0EF6                     l234:
  1919     0EF6  0008               	return
  1920     0EF7                     __end_of_initLCD:
  1921                           
  1922                           	psect	text2
  1923     052A                     __ptext2:	
  1924 ;; *************** function _UART_Read2 *****************
  1925 ;; Defined at:
  1926 ;;		line 237 in file "main.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;		None
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;		None
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  1    wreg      unsigned char 
  1933 ;; Registers used:
  1934 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1940 ;;      Params:         0       0       0       0       0
  1941 ;;      Locals:         0       0       0       0       0
  1942 ;;      Temps:          0       3       0       0       0
  1943 ;;      Totals:         0       3       0       0       0
  1944 ;;Total ram usage:        3 bytes
  1945 ;; Hardware stack levels used: 1
  1946 ;; Hardware stack levels required when called: 5
  1947 ;; This function calls:
  1948 ;;		_intToString
  1949 ;;		_lcdPrint
  1950 ;;		_lcdSend
  1951 ;; This function is called by:
  1952 ;;		_main
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956     052A                     _UART_Read2:	
  1957                           ;psect for function _UART_Read2
  1958                           
  1959     052A                     l2823:	
  1960                           ;incstack = 0
  1961                           ; Regs used in _UART_Read2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1962                           
  1963                           
  1964                           ;main.c: 238:     while (countdown != 0){
  1965     052A  2E05               	goto	l2881
  1966     052B                     l208:
  1967                           
  1968                           ;main.c: 239:         if (!RCIF){
  1969     052B  1283               	bcf	3,5	;RP0=0, select bank0
  1970     052C  1303               	bcf	3,6	;RP1=0, select bank0
  1971     052D  1A8C               	btfsc	12,5	;volatile
  1972     052E  2D30               	goto	u3141
  1973     052F  2D31               	goto	u3140
  1974     0530                     u3141:
  1975     0530  2D7C               	goto	l2841
  1976     0531                     u3140:
  1977     0531                     l2825:
  1978                           
  1979                           ;main.c: 240:             lcdSend(0x01, 0);
  1980     0531  01C3               	clrf	lcdSend@tipo
  1981     0532  3001               	movlw	1
  1982     0533  120A  158A  2556  120A  118A  	fcall	_lcdSend
  1983     0538                     l2827:
  1984                           
  1985                           ;main.c: 241:             lcdPrint("Attendere");
  1986     0538  3070               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1987     0539  1283               	bcf	3,5	;RP0=0, select bank0
  1988     053A  1303               	bcf	3,6	;RP1=0, select bank0
  1989     053B  00C5               	movwf	lcdPrint@str
  1990     053C  3080               	movlw	128
  1991     053D  00C6               	movwf	lcdPrint@str+1
  1992     053E  120A  118A  27A8  120A  118A  	fcall	_lcdPrint
  1993     0543                     l2829:
  1994                           
  1995                           ;main.c: 242:             intToString(countdown, print_countdown);
  1996     0543  0879               	movf	_countdown,w
  1997     0544  1283               	bcf	3,5	;RP0=0, select bank0
  1998     0545  1303               	bcf	3,6	;RP1=0, select bank0
  1999     0546  00DF               	movwf	??_UART_Read2
  2000     0547  01E0               	clrf	??_UART_Read2+1
  2001     0548  085F               	movf	??_UART_Read2,w
  2002     0549  00D6               	movwf	intToString@n
  2003     054A  0860               	movf	??_UART_Read2+1,w
  2004     054B  00D7               	movwf	intToString@n+1
  2005     054C  3040               	movlw	(low (_print_countdown| 0))& (0+255)
  2006     054D  00D8               	movwf	intToString@str
  2007     054E  120A  158A  26F7  120A  118A  	fcall	_intToString
  2008     0553                     l2831:
  2009                           
  2010                           ;main.c: 243:             lcdSend(0xC0, 0);
  2011     0553  1283               	bcf	3,5	;RP0=0, select bank0
  2012     0554  1303               	bcf	3,6	;RP1=0, select bank0
  2013     0555  01C3               	clrf	lcdSend@tipo
  2014     0556  30C0               	movlw	192
  2015     0557  120A  158A  2556  120A  118A  	fcall	_lcdSend
  2016     055C                     l2833:
  2017                           
  2018                           ;main.c: 244:             lcdPrint(print_countdown);
  2019     055C  3040               	movlw	(low (_print_countdown| 0))& (0+255)
  2020     055D  1283               	bcf	3,5	;RP0=0, select bank0
  2021     055E  1303               	bcf	3,6	;RP1=0, select bank0
  2022     055F  00C5               	movwf	lcdPrint@str
  2023     0560  3000               	movlw	0
  2024     0561  00C6               	movwf	lcdPrint@str+1
  2025     0562  120A  118A  27A8  120A  118A  	fcall	_lcdPrint
  2026     0567                     l2835:
  2027                           
  2028                           ;main.c: 245:             countdown --;
  2029     0567  3001               	movlw	1
  2030     0568  02F9               	subwf	_countdown,f
  2031     0569                     l2837:
  2032                           
  2033                           ;main.c: 246:             RCREG = 0x00;
  2034     0569  1283               	bcf	3,5	;RP0=0, select bank0
  2035     056A  1303               	bcf	3,6	;RP1=0, select bank0
  2036     056B  019A               	clrf	26	;volatile
  2037     056C                     l2839:
  2038                           
  2039                           ;main.c: 247:             _delay((unsigned long)((60)*(20000000/4000.0)));
  2040     056C  3002               	movlw	2
  2041     056D  1283               	bcf	3,5	;RP0=0, select bank0
  2042     056E  1303               	bcf	3,6	;RP1=0, select bank0
  2043     056F  00E1               	movwf	??_UART_Read2+2
  2044     0570  3086               	movlw	134
  2045     0571  00E0               	movwf	??_UART_Read2+1
  2046     0572  3098               	movlw	152
  2047     0573  00DF               	movwf	??_UART_Read2
  2048     0574                     u3757:
  2049     0574  0BDF               	decfsz	??_UART_Read2,f
  2050     0575  2D74               	goto	u3757
  2051     0576  0BE0               	decfsz	??_UART_Read2+1,f
  2052     0577  2D74               	goto	u3757
  2053     0578  0BE1               	decfsz	??_UART_Read2+2,f
  2054     0579  2D74               	goto	u3757
  2055     057A  0000               	nop
  2056                           
  2057                           ;main.c: 248:         }
  2058     057B  2E05               	goto	l2881
  2059     057C                     l2841:
  2060                           
  2061                           ;main.c: 250:             if(RCREG == id1){
  2062     057C  3030               	movlw	48
  2063     057D  061A               	xorwf	26,w	;volatile
  2064     057E  1D03               	btfss	3,2
  2065     057F  2D81               	goto	u3151
  2066     0580  2D82               	goto	u3150
  2067     0581                     u3151:
  2068     0581  2E05               	goto	l2881
  2069     0582                     u3150:
  2070     0582                     l2843:
  2071                           
  2072                           ;main.c: 251:                 RCIF = 0;
  2073     0582  128C               	bcf	12,5	;volatile
  2074     0583                     l2845:
  2075                           
  2076                           ;main.c: 252:                 RCREG = 0x00;
  2077     0583  019A               	clrf	26	;volatile
  2078     0584                     l212:	
  2079                           ;main.c: 253:                 while (!RCIF)
  2080                           
  2081                           
  2082                           ;main.c: 253:                 while (!RCIF)
  2083     0584  1E8C               	btfss	12,5	;volatile
  2084     0585  2D87               	goto	u3161
  2085     0586  2D88               	goto	u3160
  2086     0587                     u3161:
  2087     0587  2D84               	goto	l212
  2088     0588                     u3160:
  2089     0588                     l2847:
  2090                           
  2091                           ;main.c: 255:                 if(RCREG == id2){
  2092     0588  3031               	movlw	49
  2093     0589  061A               	xorwf	26,w	;volatile
  2094     058A  1D03               	btfss	3,2
  2095     058B  2D8D               	goto	u3171
  2096     058C  2D8E               	goto	u3170
  2097     058D                     u3171:
  2098     058D  2D2A               	goto	l2823
  2099     058E                     u3170:
  2100     058E                     l2849:
  2101                           
  2102                           ;main.c: 256:                     RCIF = 0;
  2103     058E  128C               	bcf	12,5	;volatile
  2104     058F                     l2851:
  2105                           
  2106                           ;main.c: 257:                     RCREG = 0x00;
  2107     058F  019A               	clrf	26	;volatile
  2108     0590                     l2853:
  2109                           
  2110                           ;main.c: 258:                     lcdSend(0x01, 0);
  2111     0590  01C3               	clrf	lcdSend@tipo
  2112     0591  3001               	movlw	1
  2113     0592  120A  158A  2556  120A  118A  	fcall	_lcdSend
  2114     0597                     l2855:
  2115                           
  2116                           ;main.c: 259:                     lcdPrint("Ricevuto");
  2117     0597  307A               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2118     0598  1283               	bcf	3,5	;RP0=0, select bank0
  2119     0599  1303               	bcf	3,6	;RP1=0, select bank0
  2120     059A  00C5               	movwf	lcdPrint@str
  2121     059B  3080               	movlw	128
  2122     059C  00C6               	movwf	lcdPrint@str+1
  2123     059D  120A  118A  27A8  120A  118A  	fcall	_lcdPrint
  2124     05A2                     l2857:
  2125                           
  2126                           ;main.c: 260:                     if(RCREG == 0x33){
  2127     05A2  3033               	movlw	51
  2128     05A3  1283               	bcf	3,5	;RP0=0, select bank0
  2129     05A4  1303               	bcf	3,6	;RP1=0, select bank0
  2130     05A5  061A               	xorwf	26,w	;volatile
  2131     05A6  1D03               	btfss	3,2
  2132     05A7  2DA9               	goto	u3181
  2133     05A8  2DAA               	goto	u3180
  2134     05A9                     u3181:
  2135     05A9  2DCD               	goto	l2865
  2136     05AA                     u3180:
  2137     05AA                     l2859:
  2138                           
  2139                           ;main.c: 261:                         _delay((unsigned long)((60)*(20000000/4000.0)));
  2140     05AA  3002               	movlw	2
  2141     05AB  1283               	bcf	3,5	;RP0=0, select bank0
  2142     05AC  1303               	bcf	3,6	;RP1=0, select bank0
  2143     05AD  00E1               	movwf	??_UART_Read2+2
  2144     05AE  3086               	movlw	134
  2145     05AF  00E0               	movwf	??_UART_Read2+1
  2146     05B0  3098               	movlw	152
  2147     05B1  00DF               	movwf	??_UART_Read2
  2148     05B2                     u3767:
  2149     05B2  0BDF               	decfsz	??_UART_Read2,f
  2150     05B3  2DB2               	goto	u3767
  2151     05B4  0BE0               	decfsz	??_UART_Read2+1,f
  2152     05B5  2DB2               	goto	u3767
  2153     05B6  0BE1               	decfsz	??_UART_Read2+2,f
  2154     05B7  2DB2               	goto	u3767
  2155     05B8  0000               	nop
  2156     05B9                     l2861:
  2157                           
  2158                           ;main.c: 262:                         lcdSend(0x01, 0);
  2159     05B9  1283               	bcf	3,5	;RP0=0, select bank0
  2160     05BA  1303               	bcf	3,6	;RP1=0, select bank0
  2161     05BB  01C3               	clrf	lcdSend@tipo
  2162     05BC  3001               	movlw	1
  2163     05BD  120A  158A  2556  120A  118A  	fcall	_lcdSend
  2164     05C2                     l2863:
  2165                           
  2166                           ;main.c: 263:                         lcdPrint("Porta Aperta");
  2167     05C2  304C               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2168     05C3  1283               	bcf	3,5	;RP0=0, select bank0
  2169     05C4  1303               	bcf	3,6	;RP1=0, select bank0
  2170     05C5  00C5               	movwf	lcdPrint@str
  2171     05C6  3080               	movlw	128
  2172     05C7  00C6               	movwf	lcdPrint@str+1
  2173     05C8  120A  118A  27A8  120A  118A  	fcall	_lcdPrint
  2174     05CD                     l2865:
  2175                           
  2176                           ;main.c: 265:                     RCIF = 0;
  2177     05CD  1283               	bcf	3,5	;RP0=0, select bank0
  2178     05CE  1303               	bcf	3,6	;RP1=0, select bank0
  2179     05CF  128C               	bcf	12,5	;volatile
  2180     05D0                     l2867:
  2181                           
  2182                           ;main.c: 266:                     countdown = 60;
  2183     05D0  303C               	movlw	60
  2184     05D1  00F9               	movwf	_countdown
  2185     05D2                     l2869:
  2186                           
  2187                           ;main.c: 267:                     _delay((unsigned long)((200)*(20000000/4000.0)));
  2188     05D2  3006               	movlw	6
  2189     05D3  1283               	bcf	3,5	;RP0=0, select bank0
  2190     05D4  1303               	bcf	3,6	;RP1=0, select bank0
  2191     05D5  00E1               	movwf	??_UART_Read2+2
  2192     05D6  3013               	movlw	19
  2193     05D7  00E0               	movwf	??_UART_Read2+1
  2194     05D8  30AD               	movlw	173
  2195     05D9  00DF               	movwf	??_UART_Read2
  2196     05DA                     u3777:
  2197     05DA  0BDF               	decfsz	??_UART_Read2,f
  2198     05DB  2DDA               	goto	u3777
  2199     05DC  0BE0               	decfsz	??_UART_Read2+1,f
  2200     05DD  2DDA               	goto	u3777
  2201     05DE  0BE1               	decfsz	??_UART_Read2+2,f
  2202     05DF  2DDA               	goto	u3777
  2203     05E0                     l2871:
  2204                           
  2205                           ;main.c: 268:                     lcdSend(0x01, 0);
  2206     05E0  1283               	bcf	3,5	;RP0=0, select bank0
  2207     05E1  1303               	bcf	3,6	;RP1=0, select bank0
  2208     05E2  01C3               	clrf	lcdSend@tipo
  2209     05E3  3001               	movlw	1
  2210     05E4  120A  158A  2556  120A  118A  	fcall	_lcdSend
  2211     05E9                     l2873:
  2212                           
  2213                           ;main.c: 269:                     lcdSend(RCREG, 1);
  2214     05E9  1283               	bcf	3,5	;RP0=0, select bank0
  2215     05EA  1303               	bcf	3,6	;RP1=0, select bank0
  2216     05EB  01C3               	clrf	lcdSend@tipo
  2217     05EC  0AC3               	incf	lcdSend@tipo,f
  2218     05ED  081A               	movf	26,w	;volatile
  2219     05EE  120A  158A  2556  120A  118A  	fcall	_lcdSend
  2220     05F3                     l2875:
  2221                           
  2222                           ;main.c: 270:                     _delay((unsigned long)((200)*(20000000/4000.0)));
  2223     05F3  3006               	movlw	6
  2224     05F4  1283               	bcf	3,5	;RP0=0, select bank0
  2225     05F5  1303               	bcf	3,6	;RP1=0, select bank0
  2226     05F6  00E1               	movwf	??_UART_Read2+2
  2227     05F7  3013               	movlw	19
  2228     05F8  00E0               	movwf	??_UART_Read2+1
  2229     05F9  30AD               	movlw	173
  2230     05FA  00DF               	movwf	??_UART_Read2
  2231     05FB                     u3787:
  2232     05FB  0BDF               	decfsz	??_UART_Read2,f
  2233     05FC  2DFB               	goto	u3787
  2234     05FD  0BE0               	decfsz	??_UART_Read2+1,f
  2235     05FE  2DFB               	goto	u3787
  2236     05FF  0BE1               	decfsz	??_UART_Read2+2,f
  2237     0600  2DFB               	goto	u3787
  2238     0601                     l2877:
  2239                           
  2240                           ;main.c: 271:                     return RCREG;;	Return value of _UART_Read2 is never us
      +                          ed
  2241     0601  1283               	bcf	3,5	;RP0=0, select bank0
  2242     0602  1303               	bcf	3,6	;RP1=0, select bank0
  2243     0603  081A               	movf	26,w	;volatile
  2244     0604  2E24               	goto	l217
  2245     0605                     l2881:
  2246                           
  2247                           ;main.c: 238:     while (countdown != 0){
  2248     0605  0879               	movf	_countdown,w
  2249     0606  1D03               	btfss	3,2
  2250     0607  2E09               	goto	u3191
  2251     0608  2E0A               	goto	u3190
  2252     0609                     u3191:
  2253     0609  2D2B               	goto	l208
  2254     060A                     u3190:
  2255     060A                     l2883:
  2256                           
  2257                           ;main.c: 276:     lcdSend(0x01, 0);
  2258     060A  1283               	bcf	3,5	;RP0=0, select bank0
  2259     060B  1303               	bcf	3,6	;RP1=0, select bank0
  2260     060C  01C3               	clrf	lcdSend@tipo
  2261     060D  3001               	movlw	1
  2262     060E  120A  158A  2556  120A  118A  	fcall	_lcdSend
  2263     0613                     l2885:
  2264                           
  2265                           ;main.c: 277:     lcdPrint("Tempo Scaduto");
  2266     0613  3031               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2267     0614  1283               	bcf	3,5	;RP0=0, select bank0
  2268     0615  1303               	bcf	3,6	;RP1=0, select bank0
  2269     0616  00C5               	movwf	lcdPrint@str
  2270     0617  3080               	movlw	128
  2271     0618  00C6               	movwf	lcdPrint@str+1
  2272     0619  120A  118A  27A8  120A  118A  	fcall	_lcdPrint
  2273     061E                     l2887:
  2274                           
  2275                           ;main.c: 278:     RCIF = 0;
  2276     061E  1283               	bcf	3,5	;RP0=0, select bank0
  2277     061F  1303               	bcf	3,6	;RP1=0, select bank0
  2278     0620  128C               	bcf	12,5	;volatile
  2279     0621                     l2889:
  2280                           
  2281                           ;main.c: 279:     countdown = 60;
  2282     0621  303C               	movlw	60
  2283     0622  00F9               	movwf	_countdown
  2284     0623  2DF3               	goto	l2875
  2285     0624                     l217:
  2286     0624  0008               	return
  2287     0625                     __end_of_UART_Read2:
  2288                           
  2289                           	psect	text3
  2290     0344                     __ptext3:	
  2291 ;; *************** function _UART_Read1 *****************
  2292 ;; Defined at:
  2293 ;;		line 286 in file "main.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;		None
  2296 ;; Auto vars:     Size  Location     Type
  2297 ;;  count           1   31[BANK0 ] unsigned char 
  2298 ;; Return value:  Size  Location     Type
  2299 ;;                  1    wreg      unsigned char 
  2300 ;; Registers used:
  2301 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2307 ;;      Params:         0       0       0       0       0
  2308 ;;      Locals:         0       1       0       0       0
  2309 ;;      Temps:          0       3       0       0       0
  2310 ;;      Totals:         0       4       0       0       0
  2311 ;;Total ram usage:        4 bytes
  2312 ;; Hardware stack levels used: 1
  2313 ;; Hardware stack levels required when called: 5
  2314 ;; This function calls:
  2315 ;;		_RS485_RxEnable
  2316 ;;		_RS485_TxEnable
  2317 ;;		_UART_Write
  2318 ;;		_intToString
  2319 ;;		_lcdPrint
  2320 ;;		_lcdSend
  2321 ;; This function is called by:
  2322 ;;		_main
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326     0344                     _UART_Read1:	
  2327                           ;psect for function _UART_Read1
  2328                           
  2329     0344                     l2687:	
  2330                           ;incstack = 0
  2331                           ; Regs used in _UART_Read1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2332                           
  2333                           
  2334                           ;main.c: 287:     char count = 0;
  2335     0344  1283               	bcf	3,5	;RP0=0, select bank0
  2336     0345  1303               	bcf	3,6	;RP1=0, select bank0
  2337     0346  01E2               	clrf	UART_Read1@count
  2338     0347                     l2689:
  2339                           
  2340                           ;main.c: 288:     countdown = 60;
  2341     0347  303C               	movlw	60
  2342     0348  00F9               	movwf	_countdown
  2343                           
  2344                           ;main.c: 289:     while (countdown != 0){
  2345     0349  2CFC               	goto	l2807
  2346     034A                     l2691:
  2347                           
  2348                           ;main.c: 290:         if (count != 5){
  2349     034A  3005               	movlw	5
  2350     034B  1283               	bcf	3,5	;RP0=0, select bank0
  2351     034C  1303               	bcf	3,6	;RP1=0, select bank0
  2352     034D  0662               	xorwf	UART_Read1@count,w
  2353     034E  1903               	btfsc	3,2
  2354     034F  2B51               	goto	u3021
  2355     0350  2B52               	goto	u3020
  2356     0351                     u3021:
  2357     0351  2C87               	goto	l2773
  2358     0352                     u3020:
  2359     0352                     l2693:
  2360                           
  2361                           ;main.c: 291:             if(keypressed != 0 && count == 0){
  2362     0352  083A               	movf	_keypressed,w
  2363     0353  1903               	btfsc	3,2
  2364     0354  2B56               	goto	u3031
  2365     0355  2B57               	goto	u3030
  2366     0356                     u3031:
  2367     0356  2B84               	goto	l2707
  2368     0357                     u3030:
  2369     0357                     l2695:
  2370     0357  0862               	movf	UART_Read1@count,w
  2371     0358  1D03               	btfss	3,2
  2372     0359  2B5B               	goto	u3041
  2373     035A  2B5C               	goto	u3040
  2374     035B                     u3041:
  2375     035B  2B84               	goto	l2707
  2376     035C                     u3040:
  2377     035C                     l2697:
  2378                           
  2379                           ;main.c: 292:                 lcdSend(0x01, 0);
  2380     035C  01C3               	clrf	lcdSend@tipo
  2381     035D  3001               	movlw	1
  2382     035E  120A  158A  2556  120A  118A  	fcall	_lcdSend
  2383     0363                     l2699:
  2384                           
  2385                           ;main.c: 293:                 lcdSend(keys[keypressed], 1);
  2386     0363  1283               	bcf	3,5	;RP0=0, select bank0
  2387     0364  1303               	bcf	3,6	;RP1=0, select bank0
  2388     0365  01C3               	clrf	lcdSend@tipo
  2389     0366  0AC3               	incf	lcdSend@tipo,f
  2390     0367  083A               	movf	_keypressed,w
  2391     0368  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2392     0369  0084               	movwf	4
  2393     036A  120A  118A  2710  120A  118A  	fcall	stringdir
  2394     036F  120A  158A  2556  120A  118A  	fcall	_lcdSend
  2395     0374                     l2701:
  2396                           
  2397                           ;main.c: 294:                 num1 = keys[keypressed];
  2398     0374  1283               	bcf	3,5	;RP0=0, select bank0
  2399     0375  1303               	bcf	3,6	;RP1=0, select bank0
  2400     0376  083A               	movf	_keypressed,w
  2401     0377  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2402     0378  0084               	movwf	4
  2403     0379  120A  118A  2710  120A  118A  	fcall	stringdir
  2404     037E  00BF               	movwf	_num1
  2405     037F                     l2703:
  2406                           
  2407                           ;main.c: 295:                 keypressed = 0;
  2408     037F  01BA               	clrf	_keypressed
  2409     0380                     l2705:
  2410                           
  2411                           ;main.c: 296:                 count ++;
  2412     0380  3001               	movlw	1
  2413     0381  00DF               	movwf	??_UART_Read1
  2414     0382  085F               	movf	??_UART_Read1,w
  2415     0383  07E2               	addwf	UART_Read1@count,f
  2416     0384                     l2707:
  2417                           
  2418                           ;main.c: 298:             if(keypressed != 0 && count == 1){
  2419     0384  083A               	movf	_keypressed,w
  2420     0385  1903               	btfsc	3,2
  2421     0386  2B88               	goto	u3051
  2422     0387  2B89               	goto	u3050
  2423     0388                     u3051:
  2424     0388  2BB7               	goto	l2721
  2425     0389                     u3050:
  2426     0389                     l2709:
  2427     0389  0362               	decf	UART_Read1@count,w
  2428     038A  1D03               	btfss	3,2
  2429     038B  2B8D               	goto	u3061
  2430     038C  2B8E               	goto	u3060
  2431     038D                     u3061:
  2432     038D  2BB7               	goto	l2721
  2433     038E                     u3060:
  2434     038E                     l2711:
  2435                           
  2436                           ;main.c: 299:                 lcdSend(0x80 + count, 0);
  2437     038E  01C3               	clrf	lcdSend@tipo
  2438     038F  0862               	movf	UART_Read1@count,w
  2439     0390  3E80               	addlw	128
  2440     0391  120A  158A  2556  120A  118A  	fcall	_lcdSend
  2441     0396                     l2713:
  2442                           
  2443                           ;main.c: 300:                 lcdSend(keys[keypressed], 1);
  2444     0396  1283               	bcf	3,5	;RP0=0, select bank0
  2445     0397  1303               	bcf	3,6	;RP1=0, select bank0
  2446     0398  01C3               	clrf	lcdSend@tipo
  2447     0399  0AC3               	incf	lcdSend@tipo,f
  2448     039A  083A               	movf	_keypressed,w
  2449     039B  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2450     039C  0084               	movwf	4
  2451     039D  120A  118A  2710  120A  118A  	fcall	stringdir
  2452     03A2  120A  158A  2556  120A  118A  	fcall	_lcdSend
  2453     03A7                     l2715:
  2454                           
  2455                           ;main.c: 301:                 num2 = keys[keypressed];
  2456     03A7  1283               	bcf	3,5	;RP0=0, select bank0
  2457     03A8  1303               	bcf	3,6	;RP1=0, select bank0
  2458     03A9  083A               	movf	_keypressed,w
  2459     03AA  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2460     03AB  0084               	movwf	4
  2461     03AC  120A  118A  2710  120A  118A  	fcall	stringdir
  2462     03B1  00BE               	movwf	_num2
  2463     03B2                     l2717:
  2464                           
  2465                           ;main.c: 302:                 keypressed = 0;
  2466     03B2  01BA               	clrf	_keypressed
  2467     03B3                     l2719:
  2468                           
  2469                           ;main.c: 303:                 count ++;
  2470     03B3  3001               	movlw	1
  2471     03B4  00DF               	movwf	??_UART_Read1
  2472     03B5  085F               	movf	??_UART_Read1,w
  2473     03B6  07E2               	addwf	UART_Read1@count,f
  2474     03B7                     l2721:
  2475                           
  2476                           ;main.c: 305:             if(keypressed != 0 && count == 2){
  2477     03B7  083A               	movf	_keypressed,w
  2478     03B8  1903               	btfsc	3,2
  2479     03B9  2BBB               	goto	u3071
  2480     03BA  2BBC               	goto	u3070
  2481     03BB                     u3071:
  2482     03BB  2BEB               	goto	l2735
  2483     03BC                     u3070:
  2484     03BC                     l2723:
  2485     03BC  3002               	movlw	2
  2486     03BD  0662               	xorwf	UART_Read1@count,w
  2487     03BE  1D03               	btfss	3,2
  2488     03BF  2BC1               	goto	u3081
  2489     03C0  2BC2               	goto	u3080
  2490     03C1                     u3081:
  2491     03C1  2BEB               	goto	l2735
  2492     03C2                     u3080:
  2493     03C2                     l2725:
  2494                           
  2495                           ;main.c: 306:                 lcdSend(0x80 + count, 0);
  2496     03C2  01C3               	clrf	lcdSend@tipo
  2497     03C3  0862               	movf	UART_Read1@count,w
  2498     03C4  3E80               	addlw	128
  2499     03C5  120A  158A  2556  120A  118A  	fcall	_lcdSend
  2500     03CA                     l2727:
  2501                           
  2502                           ;main.c: 307:                 lcdSend(keys[keypressed], 1);
  2503     03CA  1283               	bcf	3,5	;RP0=0, select bank0
  2504     03CB  1303               	bcf	3,6	;RP1=0, select bank0
  2505     03CC  01C3               	clrf	lcdSend@tipo
  2506     03CD  0AC3               	incf	lcdSend@tipo,f
  2507     03CE  083A               	movf	_keypressed,w
  2508     03CF  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2509     03D0  0084               	movwf	4
  2510     03D1  120A  118A  2710  120A  118A  	fcall	stringdir
  2511     03D6  120A  158A  2556  120A  118A  	fcall	_lcdSend
  2512     03DB                     l2729:
  2513                           
  2514                           ;main.c: 308:                 num3 = keys[keypressed];
  2515     03DB  1283               	bcf	3,5	;RP0=0, select bank0
  2516     03DC  1303               	bcf	3,6	;RP1=0, select bank0
  2517     03DD  083A               	movf	_keypressed,w
  2518     03DE  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2519     03DF  0084               	movwf	4
  2520     03E0  120A  118A  2710  120A  118A  	fcall	stringdir
  2521     03E5  00BD               	movwf	_num3
  2522     03E6                     l2731:
  2523                           
  2524                           ;main.c: 309:                 keypressed = 0;
  2525     03E6  01BA               	clrf	_keypressed
  2526     03E7                     l2733:
  2527                           
  2528                           ;main.c: 310:                 count ++;
  2529     03E7  3001               	movlw	1
  2530     03E8  00DF               	movwf	??_UART_Read1
  2531     03E9  085F               	movf	??_UART_Read1,w
  2532     03EA  07E2               	addwf	UART_Read1@count,f
  2533     03EB                     l2735:
  2534                           
  2535                           ;main.c: 312:             if(keypressed != 0 && count == 3){
  2536     03EB  083A               	movf	_keypressed,w
  2537     03EC  1903               	btfsc	3,2
  2538     03ED  2BEF               	goto	u3091
  2539     03EE  2BF0               	goto	u3090
  2540     03EF                     u3091:
  2541     03EF  2C1F               	goto	l2749
  2542     03F0                     u3090:
  2543     03F0                     l2737:
  2544     03F0  3003               	movlw	3
  2545     03F1  0662               	xorwf	UART_Read1@count,w
  2546     03F2  1D03               	btfss	3,2
  2547     03F3  2BF5               	goto	u3101
  2548     03F4  2BF6               	goto	u3100
  2549     03F5                     u3101:
  2550     03F5  2C1F               	goto	l2749
  2551     03F6                     u3100:
  2552     03F6                     l2739:
  2553                           
  2554                           ;main.c: 313:                 lcdSend(0x80 + count, 0);
  2555     03F6  01C3               	clrf	lcdSend@tipo
  2556     03F7  0862               	movf	UART_Read1@count,w
  2557     03F8  3E80               	addlw	128
  2558     03F9  120A  158A  2556  120A  118A  	fcall	_lcdSend
  2559     03FE                     l2741:
  2560                           
  2561                           ;main.c: 314:                 lcdSend(keys[keypressed], 1);
  2562     03FE  1283               	bcf	3,5	;RP0=0, select bank0
  2563     03FF  1303               	bcf	3,6	;RP1=0, select bank0
  2564     0400  01C3               	clrf	lcdSend@tipo
  2565     0401  0AC3               	incf	lcdSend@tipo,f
  2566     0402  083A               	movf	_keypressed,w
  2567     0403  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2568     0404  0084               	movwf	4
  2569     0405  120A  118A  2710  120A  118A  	fcall	stringdir
  2570     040A  120A  158A  2556  120A  118A  	fcall	_lcdSend
  2571     040F                     l2743:
  2572                           
  2573                           ;main.c: 315:                 num4 = keys[keypressed];
  2574     040F  1283               	bcf	3,5	;RP0=0, select bank0
  2575     0410  1303               	bcf	3,6	;RP1=0, select bank0
  2576     0411  083A               	movf	_keypressed,w
  2577     0412  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2578     0413  0084               	movwf	4
  2579     0414  120A  118A  2710  120A  118A  	fcall	stringdir
  2580     0419  00BC               	movwf	_num4
  2581     041A                     l2745:
  2582                           
  2583                           ;main.c: 316:                 keypressed = 0;
  2584     041A  01BA               	clrf	_keypressed
  2585     041B                     l2747:
  2586                           
  2587                           ;main.c: 317:                 count ++;
  2588     041B  3001               	movlw	1
  2589     041C  00DF               	movwf	??_UART_Read1
  2590     041D  085F               	movf	??_UART_Read1,w
  2591     041E  07E2               	addwf	UART_Read1@count,f
  2592     041F                     l2749:
  2593                           
  2594                           ;main.c: 319:             if(keypressed != 0 && count == 4){
  2595     041F  083A               	movf	_keypressed,w
  2596     0420  1903               	btfsc	3,2
  2597     0421  2C23               	goto	u3111
  2598     0422  2C24               	goto	u3110
  2599     0423                     u3111:
  2600     0423  2C53               	goto	l2763
  2601     0424                     u3110:
  2602     0424                     l2751:
  2603     0424  3004               	movlw	4
  2604     0425  0662               	xorwf	UART_Read1@count,w
  2605     0426  1D03               	btfss	3,2
  2606     0427  2C29               	goto	u3121
  2607     0428  2C2A               	goto	u3120
  2608     0429                     u3121:
  2609     0429  2C53               	goto	l2763
  2610     042A                     u3120:
  2611     042A                     l2753:
  2612                           
  2613                           ;main.c: 320:                 lcdSend(0x80 + count, 0);
  2614     042A  01C3               	clrf	lcdSend@tipo
  2615     042B  0862               	movf	UART_Read1@count,w
  2616     042C  3E80               	addlw	128
  2617     042D  120A  158A  2556  120A  118A  	fcall	_lcdSend
  2618     0432                     l2755:
  2619                           
  2620                           ;main.c: 321:                 lcdSend(keys[keypressed], 1);
  2621     0432  1283               	bcf	3,5	;RP0=0, select bank0
  2622     0433  1303               	bcf	3,6	;RP1=0, select bank0
  2623     0434  01C3               	clrf	lcdSend@tipo
  2624     0435  0AC3               	incf	lcdSend@tipo,f
  2625     0436  083A               	movf	_keypressed,w
  2626     0437  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2627     0438  0084               	movwf	4
  2628     0439  120A  118A  2710  120A  118A  	fcall	stringdir
  2629     043E  120A  158A  2556  120A  118A  	fcall	_lcdSend
  2630     0443                     l2757:
  2631                           
  2632                           ;main.c: 322:                 num5 = keys[keypressed];
  2633     0443  1283               	bcf	3,5	;RP0=0, select bank0
  2634     0444  1303               	bcf	3,6	;RP1=0, select bank0
  2635     0445  083A               	movf	_keypressed,w
  2636     0446  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  2637     0447  0084               	movwf	4
  2638     0448  120A  118A  2710  120A  118A  	fcall	stringdir
  2639     044D  00BB               	movwf	_num5
  2640     044E                     l2759:
  2641                           
  2642                           ;main.c: 323:                 keypressed = 0;
  2643     044E  01BA               	clrf	_keypressed
  2644     044F                     l2761:
  2645                           
  2646                           ;main.c: 324:                 count ++;
  2647     044F  3001               	movlw	1
  2648     0450  00DF               	movwf	??_UART_Read1
  2649     0451  085F               	movf	??_UART_Read1,w
  2650     0452  07E2               	addwf	UART_Read1@count,f
  2651     0453                     l2763:
  2652                           
  2653                           ;main.c: 326:             intToString(countdown, print_countdown);
  2654     0453  0879               	movf	_countdown,w
  2655     0454  00DF               	movwf	??_UART_Read1
  2656     0455  01E0               	clrf	??_UART_Read1+1
  2657     0456  085F               	movf	??_UART_Read1,w
  2658     0457  00D6               	movwf	intToString@n
  2659     0458  0860               	movf	??_UART_Read1+1,w
  2660     0459  00D7               	movwf	intToString@n+1
  2661     045A  3040               	movlw	(low (_print_countdown| 0))& (0+255)
  2662     045B  00D8               	movwf	intToString@str
  2663     045C  120A  158A  26F7  120A  118A  	fcall	_intToString
  2664     0461                     l2765:
  2665                           
  2666                           ;main.c: 327:             lcdSend(0xC0, 0);
  2667     0461  1283               	bcf	3,5	;RP0=0, select bank0
  2668     0462  1303               	bcf	3,6	;RP1=0, select bank0
  2669     0463  01C3               	clrf	lcdSend@tipo
  2670     0464  30C0               	movlw	192
  2671     0465  120A  158A  2556  120A  118A  	fcall	_lcdSend
  2672     046A                     l2767:
  2673                           
  2674                           ;main.c: 328:             lcdPrint(print_countdown);
  2675     046A  3040               	movlw	(low (_print_countdown| 0))& (0+255)
  2676     046B  1283               	bcf	3,5	;RP0=0, select bank0
  2677     046C  1303               	bcf	3,6	;RP1=0, select bank0
  2678     046D  00C5               	movwf	lcdPrint@str
  2679     046E  3000               	movlw	0
  2680     046F  00C6               	movwf	lcdPrint@str+1
  2681     0470  120A  118A  27A8  120A  118A  	fcall	_lcdPrint
  2682     0475                     l2769:
  2683                           
  2684                           ;main.c: 329:             countdown --;
  2685     0475  3001               	movlw	1
  2686     0476  02F9               	subwf	_countdown,f
  2687     0477                     l2771:
  2688                           
  2689                           ;main.c: 330:             _delay((unsigned long)((80)*(20000000/4000.0)));
  2690     0477  3003               	movlw	3
  2691     0478  1283               	bcf	3,5	;RP0=0, select bank0
  2692     0479  1303               	bcf	3,6	;RP1=0, select bank0
  2693     047A  00E1               	movwf	??_UART_Read1+2
  2694     047B  3008               	movlw	8
  2695     047C  00E0               	movwf	??_UART_Read1+1
  2696     047D  3076               	movlw	118
  2697     047E  00DF               	movwf	??_UART_Read1
  2698     047F                     u3797:
  2699     047F  0BDF               	decfsz	??_UART_Read1,f
  2700     0480  2C7F               	goto	u3797
  2701     0481  0BE0               	decfsz	??_UART_Read1+1,f
  2702     0482  2C7F               	goto	u3797
  2703     0483  0BE1               	decfsz	??_UART_Read1+2,f
  2704     0484  2C7F               	goto	u3797
  2705     0485  0000               	nop
  2706                           
  2707                           ;main.c: 331:         }
  2708     0486  2CFC               	goto	l2807
  2709     0487                     l2773:
  2710                           
  2711                           ;main.c: 333:             RS485_TxEnable();
  2712     0487  120A  158A  252D  120A  118A  	fcall	_RS485_TxEnable
  2713     048C                     l2775:
  2714                           
  2715                           ;main.c: 334:             UART_Write(id1);
  2716     048C  3030               	movlw	48
  2717     048D  120A  158A  253A  120A  118A  	fcall	_UART_Write
  2718     0492                     l2777:
  2719                           
  2720                           ;main.c: 335:             UART_Write(id2);
  2721     0492  3031               	movlw	49
  2722     0493  120A  158A  253A  120A  118A  	fcall	_UART_Write
  2723     0498                     l2779:
  2724                           
  2725                           ;main.c: 336:             UART_Write(num1);
  2726     0498  1283               	bcf	3,5	;RP0=0, select bank0
  2727     0499  1303               	bcf	3,6	;RP1=0, select bank0
  2728     049A  083F               	movf	_num1,w
  2729     049B  120A  158A  253A  120A  118A  	fcall	_UART_Write
  2730     04A0                     l2781:
  2731                           
  2732                           ;main.c: 337:             UART_Write(num2);
  2733     04A0  1283               	bcf	3,5	;RP0=0, select bank0
  2734     04A1  1303               	bcf	3,6	;RP1=0, select bank0
  2735     04A2  083E               	movf	_num2,w
  2736     04A3  120A  158A  253A  120A  118A  	fcall	_UART_Write
  2737     04A8                     l2783:
  2738                           
  2739                           ;main.c: 338:             UART_Write(num3);
  2740     04A8  1283               	bcf	3,5	;RP0=0, select bank0
  2741     04A9  1303               	bcf	3,6	;RP1=0, select bank0
  2742     04AA  083D               	movf	_num3,w
  2743     04AB  120A  158A  253A  120A  118A  	fcall	_UART_Write
  2744     04B0                     l2785:
  2745                           
  2746                           ;main.c: 339:             UART_Write(num4);
  2747     04B0  1283               	bcf	3,5	;RP0=0, select bank0
  2748     04B1  1303               	bcf	3,6	;RP1=0, select bank0
  2749     04B2  083C               	movf	_num4,w
  2750     04B3  120A  158A  253A  120A  118A  	fcall	_UART_Write
  2751     04B8                     l2787:
  2752                           
  2753                           ;main.c: 340:             UART_Write(num5);
  2754     04B8  1283               	bcf	3,5	;RP0=0, select bank0
  2755     04B9  1303               	bcf	3,6	;RP1=0, select bank0
  2756     04BA  083B               	movf	_num5,w
  2757     04BB  120A  158A  253A  120A  118A  	fcall	_UART_Write
  2758     04C0                     l2789:
  2759                           
  2760                           ;main.c: 341:             UART_Write('\r');
  2761     04C0  300D               	movlw	13
  2762     04C1  120A  158A  253A  120A  118A  	fcall	_UART_Write
  2763     04C6                     l2791:
  2764                           
  2765                           ;main.c: 342:             UART_Write('\n');
  2766     04C6  300A               	movlw	10
  2767     04C7  120A  158A  253A  120A  118A  	fcall	_UART_Write
  2768     04CC                     l2793:
  2769                           
  2770                           ;main.c: 343:             RS485_RxEnable();
  2771     04CC  120A  158A  2528  120A  118A  	fcall	_RS485_RxEnable
  2772                           
  2773                           ;main.c: 344:             lcdSend(0x01, 0);
  2774     04D1  1283               	bcf	3,5	;RP0=0, select bank0
  2775     04D2  1303               	bcf	3,6	;RP1=0, select bank0
  2776     04D3  01C3               	clrf	lcdSend@tipo
  2777     04D4  3001               	movlw	1
  2778     04D5  120A  158A  2556  120A  118A  	fcall	_lcdSend
  2779     04DA                     l2795:
  2780                           
  2781                           ;main.c: 345:             lcdPrint("Mandato");
  2782     04DA  308B               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2783     04DB  1283               	bcf	3,5	;RP0=0, select bank0
  2784     04DC  1303               	bcf	3,6	;RP1=0, select bank0
  2785     04DD  00C5               	movwf	lcdPrint@str
  2786     04DE  3080               	movlw	128
  2787     04DF  00C6               	movwf	lcdPrint@str+1
  2788     04E0  120A  118A  27A8  120A  118A  	fcall	_lcdPrint
  2789     04E5                     l2797:
  2790                           
  2791                           ;main.c: 346:             RCIF = 0;
  2792     04E5  1283               	bcf	3,5	;RP0=0, select bank0
  2793     04E6  1303               	bcf	3,6	;RP1=0, select bank0
  2794     04E7  128C               	bcf	12,5	;volatile
  2795     04E8                     l2799:
  2796                           
  2797                           ;main.c: 347:             countdown = 60;
  2798     04E8  303C               	movlw	60
  2799     04E9  00F9               	movwf	_countdown
  2800     04EA                     l2801:
  2801                           
  2802                           ;main.c: 348:             _delay((unsigned long)((100)*(20000000/4000.0)));
  2803     04EA  3003               	movlw	3
  2804     04EB  1283               	bcf	3,5	;RP0=0, select bank0
  2805     04EC  1303               	bcf	3,6	;RP1=0, select bank0
  2806     04ED  00E1               	movwf	??_UART_Read1+2
  2807     04EE  308A               	movlw	138
  2808     04EF  00E0               	movwf	??_UART_Read1+1
  2809     04F0  3055               	movlw	85
  2810     04F1  00DF               	movwf	??_UART_Read1
  2811     04F2                     u3807:
  2812     04F2  0BDF               	decfsz	??_UART_Read1,f
  2813     04F3  2CF2               	goto	u3807
  2814     04F4  0BE0               	decfsz	??_UART_Read1+1,f
  2815     04F5  2CF2               	goto	u3807
  2816     04F6  0BE1               	decfsz	??_UART_Read1+2,f
  2817     04F7  2CF2               	goto	u3807
  2818     04F8                     l2803:
  2819                           
  2820                           ;main.c: 349:             return RCREG;;	Return value of _UART_Read1 is never used
  2821     04F8  1283               	bcf	3,5	;RP0=0, select bank0
  2822     04F9  1303               	bcf	3,6	;RP1=0, select bank0
  2823     04FA  081A               	movf	26,w	;volatile
  2824     04FB  2D29               	goto	l230
  2825     04FC                     l2807:
  2826                           
  2827                           ;main.c: 289:     while (countdown != 0){
  2828     04FC  0879               	movf	_countdown,w
  2829     04FD  1D03               	btfss	3,2
  2830     04FE  2D00               	goto	u3131
  2831     04FF  2D01               	goto	u3130
  2832     0500                     u3131:
  2833     0500  2B4A               	goto	l2691
  2834     0501                     u3130:
  2835     0501                     l2809:
  2836                           
  2837                           ;main.c: 352:     lcdSend(0x01, 0);
  2838     0501  1283               	bcf	3,5	;RP0=0, select bank0
  2839     0502  1303               	bcf	3,6	;RP1=0, select bank0
  2840     0503  01C3               	clrf	lcdSend@tipo
  2841     0504  3001               	movlw	1
  2842     0505  120A  158A  2556  120A  118A  	fcall	_lcdSend
  2843     050A                     l2811:
  2844                           
  2845                           ;main.c: 353:     lcdPrint("Codice Scaduto");
  2846     050A  3014               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2847     050B  1283               	bcf	3,5	;RP0=0, select bank0
  2848     050C  1303               	bcf	3,6	;RP1=0, select bank0
  2849     050D  00C5               	movwf	lcdPrint@str
  2850     050E  3080               	movlw	128
  2851     050F  00C6               	movwf	lcdPrint@str+1
  2852     0510  120A  118A  27A8  120A  118A  	fcall	_lcdPrint
  2853     0515                     l2813:
  2854                           
  2855                           ;main.c: 354:     RCIF = 0;
  2856     0515  1283               	bcf	3,5	;RP0=0, select bank0
  2857     0516  1303               	bcf	3,6	;RP1=0, select bank0
  2858     0517  128C               	bcf	12,5	;volatile
  2859     0518                     l2815:
  2860                           
  2861                           ;main.c: 355:     countdown = 60;
  2862     0518  303C               	movlw	60
  2863     0519  00F9               	movwf	_countdown
  2864     051A                     l2817:
  2865                           
  2866                           ;main.c: 356:     _delay((unsigned long)((200)*(20000000/4000.0)));
  2867     051A  3006               	movlw	6
  2868     051B  1283               	bcf	3,5	;RP0=0, select bank0
  2869     051C  1303               	bcf	3,6	;RP1=0, select bank0
  2870     051D  00E1               	movwf	??_UART_Read1+2
  2871     051E  3013               	movlw	19
  2872     051F  00E0               	movwf	??_UART_Read1+1
  2873     0520  30AD               	movlw	173
  2874     0521  00DF               	movwf	??_UART_Read1
  2875     0522                     u3817:
  2876     0522  0BDF               	decfsz	??_UART_Read1,f
  2877     0523  2D22               	goto	u3817
  2878     0524  0BE0               	decfsz	??_UART_Read1+1,f
  2879     0525  2D22               	goto	u3817
  2880     0526  0BE1               	decfsz	??_UART_Read1+2,f
  2881     0527  2D22               	goto	u3817
  2882     0528  2CF8               	goto	l2803
  2883     0529                     l230:
  2884     0529  0008               	return
  2885     052A                     __end_of_UART_Read1:
  2886                           
  2887                           	psect	text4
  2888     07A8                     __ptext4:	
  2889 ;; *************** function _lcdPrint *****************
  2890 ;; Defined at:
  2891 ;;		line 400 in file "main.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;  str             2    2[BANK0 ] PTR unsigned char 
  2894 ;;		 -> STR_12(15), STR_11(8), STR_10(14), STR_9(13), 
  2895 ;;		 -> STR_8(9), print_countdown(3), STR_7(10), STR_6(14), 
  2896 ;;		 -> STR_5(13), STR_4(12), STR_3(11), STR_2(10), 
  2897 ;;		 -> STR_1(8), 
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;  n               2    7[BANK0 ] int 
  2900 ;; Return value:  Size  Location     Type
  2901 ;;                  1    wreg      void 
  2902 ;; Registers used:
  2903 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2904 ;; Tracked objects:
  2905 ;;		On entry : 0/0
  2906 ;;		On exit  : 0/0
  2907 ;;		Unchanged: 0/0
  2908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2909 ;;      Params:         0       2       0       0       0
  2910 ;;      Locals:         0       2       0       0       0
  2911 ;;      Temps:          0       3       0       0       0
  2912 ;;      Totals:         0       7       0       0       0
  2913 ;;Total ram usage:        7 bytes
  2914 ;; Hardware stack levels used: 1
  2915 ;; Hardware stack levels required when called: 3
  2916 ;; This function calls:
  2917 ;;		_lcdSend
  2918 ;; This function is called by:
  2919 ;;		_main
  2920 ;;		_UART_Read2
  2921 ;;		_UART_Read1
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925     07A8                     _lcdPrint:	
  2926                           ;psect for function _lcdPrint
  2927                           
  2928     07A8                     l2537:	
  2929                           ;incstack = 0
  2930                           ; Regs used in _lcdPrint: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2931                           
  2932                           
  2933                           ;main.c: 401:     int n = 0;
  2934     07A8  1283               	bcf	3,5	;RP0=0, select bank0
  2935     07A9  1303               	bcf	3,6	;RP1=0, select bank0
  2936     07AA  01CA               	clrf	lcdPrint@n
  2937     07AB  01CB               	clrf	lcdPrint@n+1
  2938                           
  2939                           ;main.c: 402:     while (str[n] != '\0') {
  2940     07AC  2FD3               	goto	l2543
  2941     07AD                     l2539:
  2942                           
  2943                           ;main.c: 403:         lcdSend(str[n++], 1);
  2944     07AD  01C3               	clrf	lcdSend@tipo
  2945     07AE  0AC3               	incf	lcdSend@tipo,f
  2946     07AF  084A               	movf	lcdPrint@n,w
  2947     07B0  0745               	addwf	lcdPrint@str,w
  2948     07B1  00C8               	movwf	??_lcdPrint+1
  2949     07B2  0846               	movf	lcdPrint@str+1,w
  2950     07B3  00C7               	movwf	??_lcdPrint
  2951     07B4  1803               	skipnc
  2952     07B5  0AC7               	incf	??_lcdPrint,f
  2953     07B6  1FCA               	btfss	lcdPrint@n,7
  2954     07B7  2FB9               	goto	u2850
  2955     07B8  03C7               	decf	??_lcdPrint,f
  2956     07B9                     u2850:
  2957     07B9  1283               	bcf	3,5	;RP0=0, select bank0
  2958     07BA  1303               	bcf	3,6	;RP1=0, select bank0
  2959     07BB  0847               	movf	??_lcdPrint,w
  2960     07BC  00C9               	movwf	??_lcdPrint+2
  2961     07BD  0849               	movf	??_lcdPrint+2,w
  2962     07BE  00FF               	movwf	btemp+1
  2963     07BF  0848               	movf	??_lcdPrint+1,w
  2964     07C0  0084               	movwf	4
  2965     07C1  120A  118A  2706  120A  118A  	fcall	stringtab
  2966     07C6  120A  158A  2556  120A  118A  	fcall	_lcdSend
  2967     07CB                     l2541:
  2968     07CB  3001               	movlw	1
  2969     07CC  1283               	bcf	3,5	;RP0=0, select bank0
  2970     07CD  1303               	bcf	3,6	;RP1=0, select bank0
  2971     07CE  07CA               	addwf	lcdPrint@n,f
  2972     07CF  1803               	skipnc
  2973     07D0  0ACB               	incf	lcdPrint@n+1,f
  2974     07D1  3000               	movlw	0
  2975     07D2  07CB               	addwf	lcdPrint@n+1,f
  2976     07D3                     l2543:
  2977                           
  2978                           ;main.c: 402:     while (str[n] != '\0') {
  2979     07D3  084A               	movf	lcdPrint@n,w
  2980     07D4  0745               	addwf	lcdPrint@str,w
  2981     07D5  00C8               	movwf	??_lcdPrint+1
  2982     07D6  0846               	movf	lcdPrint@str+1,w
  2983     07D7  00C7               	movwf	??_lcdPrint
  2984     07D8  1803               	skipnc
  2985     07D9  0AC7               	incf	??_lcdPrint,f
  2986     07DA  1FCA               	btfss	lcdPrint@n,7
  2987     07DB  2FDD               	goto	u2860
  2988     07DC  03C7               	decf	??_lcdPrint,f
  2989     07DD                     u2860:
  2990     07DD  1283               	bcf	3,5	;RP0=0, select bank0
  2991     07DE  1303               	bcf	3,6	;RP1=0, select bank0
  2992     07DF  0847               	movf	??_lcdPrint,w
  2993     07E0  00C9               	movwf	??_lcdPrint+2
  2994     07E1  0849               	movf	??_lcdPrint+2,w
  2995     07E2  00FF               	movwf	btemp+1
  2996     07E3  0848               	movf	??_lcdPrint+1,w
  2997     07E4  0084               	movwf	4
  2998     07E5  120A  118A  2706  120A  118A  	fcall	stringtab
  2999     07EA  3A00               	xorlw	0
  3000     07EB  1D03               	skipz
  3001     07EC  2FEE               	goto	u2871
  3002     07ED  2FEF               	goto	u2870
  3003     07EE                     u2871:
  3004     07EE  2FAD               	goto	l2539
  3005     07EF                     u2870:
  3006     07EF                     l243:
  3007     07EF  0008               	return
  3008     07F0                     __end_of_lcdPrint:
  3009                           
  3010                           	psect	text5
  3011     0D56                     __ptext5:	
  3012 ;; *************** function _lcdSend *****************
  3013 ;; Defined at:
  3014 ;;		line 379 in file "main.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;  dato            1    wreg     unsigned char 
  3017 ;;  tipo            1    0[BANK0 ] unsigned char 
  3018 ;; Auto vars:     Size  Location     Type
  3019 ;;  dato            1    1[BANK0 ] unsigned char 
  3020 ;; Return value:  Size  Location     Type
  3021 ;;                  1    wreg      void 
  3022 ;; Registers used:
  3023 ;;		wreg, status,2, status,0
  3024 ;; Tracked objects:
  3025 ;;		On entry : 0/0
  3026 ;;		On exit  : 0/0
  3027 ;;		Unchanged: 0/0
  3028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3029 ;;      Params:         0       1       0       0       0
  3030 ;;      Locals:         0       1       0       0       0
  3031 ;;      Temps:          0       0       0       0       0
  3032 ;;      Totals:         0       2       0       0       0
  3033 ;;Total ram usage:        2 bytes
  3034 ;; Hardware stack levels used: 1
  3035 ;; Hardware stack levels required when called: 2
  3036 ;; This function calls:
  3037 ;;		Nothing
  3038 ;; This function is called by:
  3039 ;;		_main
  3040 ;;		_UART_Read2
  3041 ;;		_UART_Read1
  3042 ;;		_initLCD
  3043 ;;		_lcdPrint
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047     0D56                     _lcdSend:	
  3048                           ;psect for function _lcdSend
  3049                           
  3050                           
  3051                           ;incstack = 0
  3052                           ; Regs used in _lcdSend: [wreg+status,2+status,0]
  3053                           ;lcdSend@dato stored from wreg
  3054     0D56  1283               	bcf	3,5	;RP0=0, select bank0
  3055     0D57  1303               	bcf	3,6	;RP1=0, select bank0
  3056     0D58  00C4               	movwf	lcdSend@dato
  3057     0D59                     l2469:
  3058                           
  3059                           ;main.c: 383:     TRISD = 0x00;
  3060     0D59  1683               	bsf	3,5	;RP0=1, select bank1
  3061     0D5A  1303               	bcf	3,6	;RP1=0, select bank1
  3062     0D5B  0188               	clrf	8	;volatile
  3063     0D5C                     l2471:
  3064                           
  3065                           ;main.c: 384:     TRISEbits.TRISE1 = 0;
  3066     0D5C  1089               	bcf	9,1	;volatile
  3067     0D5D                     l2473:
  3068                           
  3069                           ;main.c: 385:     TRISEbits.TRISE2 = 0;
  3070     0D5D  1109               	bcf	9,2	;volatile
  3071     0D5E                     l2475:
  3072                           
  3073                           ;main.c: 390:     PORTEbits.RE1 = 1;
  3074     0D5E  1283               	bcf	3,5	;RP0=0, select bank0
  3075     0D5F  1303               	bcf	3,6	;RP1=0, select bank0
  3076     0D60  1489               	bsf	9,1	;volatile
  3077     0D61                     l2477:
  3078                           
  3079                           ;main.c: 392:     PORTD = dato;
  3080     0D61  0844               	movf	lcdSend@dato,w
  3081     0D62  0088               	movwf	8	;volatile
  3082     0D63                     l2479:
  3083                           
  3084                           ;main.c: 393:     PORTEbits.RE2 = tipo;
  3085     0D63  0C43               	rrf	lcdSend@tipo,w
  3086     0D64  1C03               	skipc
  3087     0D65  1109               	bcf	9,2	;volatile
  3088     0D66  1803               	skipnc
  3089     0D67  1509               	bsf	9,2	;volatile
  3090     0D68                     l2481:
  3091                           
  3092                           ;main.c: 395:     PORTEbits.RE1 = 0;
  3093     0D68  1089               	bcf	9,1	;volatile
  3094     0D69                     l2483:
  3095                           
  3096                           ;main.c: 397:     PORTEbits.RE1 = 1;
  3097     0D69  1489               	bsf	9,1	;volatile
  3098     0D6A                     l237:
  3099     0D6A  0008               	return
  3100     0D6B                     __end_of_lcdSend:
  3101                           
  3102                           	psect	text6
  3103     0EF7                     __ptext6:	
  3104 ;; *************** function _intToString *****************
  3105 ;; Defined at:
  3106 ;;		line 614 in file "main.c"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;  n               2   19[BANK0 ] int 
  3109 ;;  str             1   21[BANK0 ] PTR unsigned char 
  3110 ;;		 -> print_countdown(3), 
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;  t               1   25[BANK0 ] unsigned char 
  3113 ;;  i               1   27[BANK0 ] unsigned char 
  3114 ;;  cifre           1   26[BANK0 ] unsigned char 
  3115 ;; Return value:  Size  Location     Type
  3116 ;;                  1    wreg      void 
  3117 ;; Registers used:
  3118 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3119 ;; Tracked objects:
  3120 ;;		On entry : 0/0
  3121 ;;		On exit  : 0/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3124 ;;      Params:         0       3       0       0       0
  3125 ;;      Locals:         0       3       0       0       0
  3126 ;;      Temps:          0       3       0       0       0
  3127 ;;      Totals:         0       9       0       0       0
  3128 ;;Total ram usage:        9 bytes
  3129 ;; Hardware stack levels used: 1
  3130 ;; Hardware stack levels required when called: 4
  3131 ;; This function calls:
  3132 ;;		___awdiv
  3133 ;;		___awmod
  3134 ;;		_potenza
  3135 ;; This function is called by:
  3136 ;;		_UART_Read2
  3137 ;;		_UART_Read1
  3138 ;; This function uses a non-reentrant model
  3139 ;;
  3140                           
  3141     0EF7                     _intToString:	
  3142                           ;psect for function _intToString
  3143                           
  3144     0EF7                     l2553:	
  3145                           ;incstack = 0
  3146                           ; Regs used in _intToString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3147                           
  3148                           
  3149                           ;main.c: 617:     char cifre = 1;
  3150     0EF7  1283               	bcf	3,5	;RP0=0, select bank0
  3151     0EF8  1303               	bcf	3,6	;RP1=0, select bank0
  3152     0EF9  01DD               	clrf	intToString@cifre
  3153     0EFA  0ADD               	incf	intToString@cifre,f
  3154     0EFB                     l2555:
  3155                           
  3156                           ;main.c: 620:     while (n / potenza(10, cifre)) cifre++;
  3157     0EFB  2F00               	goto	l2559
  3158     0EFC                     l2557:
  3159     0EFC  3001               	movlw	1
  3160     0EFD  00D9               	movwf	??_intToString
  3161     0EFE  0859               	movf	??_intToString,w
  3162     0EFF  07DD               	addwf	intToString@cifre,f
  3163     0F00                     l2559:
  3164     0F00  085D               	movf	intToString@cifre,w
  3165     0F01  00C7               	movwf	potenza@e
  3166     0F02  300A               	movlw	10
  3167     0F03  120A  158A  2599  120A  158A  	fcall	_potenza
  3168     0F08  1283               	bcf	3,5	;RP0=0, select bank0
  3169     0F09  1303               	bcf	3,6	;RP1=0, select bank0
  3170     0F0A  00D9               	movwf	??_intToString
  3171     0F0B  01DA               	clrf	??_intToString+1
  3172     0F0C  0859               	movf	??_intToString,w
  3173     0F0D  00CD               	movwf	___awdiv@divisor
  3174     0F0E  085A               	movf	??_intToString+1,w
  3175     0F0F  00CE               	movwf	___awdiv@divisor+1
  3176     0F10  0857               	movf	intToString@n+1,w
  3177     0F11  00D0               	movwf	___awdiv@dividend+1
  3178     0F12  0856               	movf	intToString@n,w
  3179     0F13  00CF               	movwf	___awdiv@dividend
  3180     0F14  120A  158A  2620  120A  158A  	fcall	___awdiv
  3181     0F19  1283               	bcf	3,5	;RP0=0, select bank0
  3182     0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  3183     0F1B  084D               	movf	?___awdiv,w
  3184     0F1C  044E               	iorwf	?___awdiv+1,w
  3185     0F1D  1D03               	btfss	3,2
  3186     0F1E  2F20               	goto	u2891
  3187     0F1F  2F21               	goto	u2890
  3188     0F20                     u2891:
  3189     0F20  2EFC               	goto	l2557
  3190     0F21                     u2890:
  3191     0F21                     l2561:
  3192                           
  3193                           ;main.c: 622:     for (i = 0; i < cifre; i++) {
  3194     0F21  01DE               	clrf	intToString@i
  3195     0F22  2F65               	goto	l2571
  3196     0F23                     l2563:
  3197                           
  3198                           ;main.c: 623:         char t = potenza(10, cifre - 1 - i);
  3199     0F23  085E               	movf	intToString@i,w
  3200     0F24  025D               	subwf	intToString@cifre,w
  3201     0F25  3EFF               	addlw	255
  3202     0F26  00C7               	movwf	potenza@e
  3203     0F27  300A               	movlw	10
  3204     0F28  120A  158A  2599  120A  158A  	fcall	_potenza
  3205     0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  3206     0F2E  1303               	bcf	3,6	;RP1=0, select bank0
  3207     0F2F  00DC               	movwf	intToString@t
  3208     0F30                     l2565:
  3209                           
  3210                           ;main.c: 624:         str[i] = '0' + (char) (n / t);
  3211     0F30  085E               	movf	intToString@i,w
  3212     0F31  0758               	addwf	intToString@str,w
  3213     0F32  00D9               	movwf	??_intToString
  3214     0F33  0859               	movf	??_intToString,w
  3215     0F34  0084               	movwf	4
  3216     0F35  085C               	movf	intToString@t,w
  3217     0F36  00DA               	movwf	??_intToString+1
  3218     0F37  01DB               	clrf	??_intToString+2
  3219     0F38  085A               	movf	??_intToString+1,w
  3220     0F39  00CD               	movwf	___awdiv@divisor
  3221     0F3A  085B               	movf	??_intToString+2,w
  3222     0F3B  00CE               	movwf	___awdiv@divisor+1
  3223     0F3C  0857               	movf	intToString@n+1,w
  3224     0F3D  00D0               	movwf	___awdiv@dividend+1
  3225     0F3E  0856               	movf	intToString@n,w
  3226     0F3F  00CF               	movwf	___awdiv@dividend
  3227     0F40  120A  158A  2620  120A  158A  	fcall	___awdiv
  3228     0F45  1283               	bcf	3,5	;RP0=0, select bank0
  3229     0F46  1303               	bcf	3,6	;RP1=0, select bank0
  3230     0F47  084D               	movf	?___awdiv,w
  3231     0F48  3E30               	addlw	48
  3232     0F49  1383               	bcf	3,7	;select IRP bank0
  3233     0F4A  0080               	movwf	0
  3234     0F4B                     l2567:
  3235                           
  3236                           ;main.c: 625:         n = n % t;
  3237     0F4B  085C               	movf	intToString@t,w
  3238     0F4C  00D9               	movwf	??_intToString
  3239     0F4D  01DA               	clrf	??_intToString+1
  3240     0F4E  0859               	movf	??_intToString,w
  3241     0F4F  00C3               	movwf	___awmod@divisor
  3242     0F50  085A               	movf	??_intToString+1,w
  3243     0F51  00C4               	movwf	___awmod@divisor+1
  3244     0F52  0857               	movf	intToString@n+1,w
  3245     0F53  00C6               	movwf	___awmod@dividend+1
  3246     0F54  0856               	movf	intToString@n,w
  3247     0F55  00C5               	movwf	___awmod@dividend
  3248     0F56  120A  158A  25C5  120A  158A  	fcall	___awmod
  3249     0F5B  1283               	bcf	3,5	;RP0=0, select bank0
  3250     0F5C  1303               	bcf	3,6	;RP1=0, select bank0
  3251     0F5D  0844               	movf	?___awmod+1,w
  3252     0F5E  00D7               	movwf	intToString@n+1
  3253     0F5F  0843               	movf	?___awmod,w
  3254     0F60  00D6               	movwf	intToString@n
  3255     0F61                     l2569:
  3256                           
  3257                           ;main.c: 626:     }
  3258     0F61  3001               	movlw	1
  3259     0F62  00D9               	movwf	??_intToString
  3260     0F63  0859               	movf	??_intToString,w
  3261     0F64  07DE               	addwf	intToString@i,f
  3262     0F65                     l2571:
  3263     0F65  085D               	movf	intToString@cifre,w
  3264     0F66  025E               	subwf	intToString@i,w
  3265     0F67  1C03               	skipc
  3266     0F68  2F6A               	goto	u2901
  3267     0F69  2F6B               	goto	u2900
  3268     0F6A                     u2901:
  3269     0F6A  2F23               	goto	l2563
  3270     0F6B                     u2900:
  3271     0F6B                     l2573:
  3272                           
  3273                           ;main.c: 628:     str[i] = '\0';
  3274     0F6B  085E               	movf	intToString@i,w
  3275     0F6C  0758               	addwf	intToString@str,w
  3276     0F6D  00D9               	movwf	??_intToString
  3277     0F6E  0859               	movf	??_intToString,w
  3278     0F6F  0084               	movwf	4
  3279     0F70  1383               	bcf	3,7	;select IRP bank0
  3280     0F71  0180               	clrf	0
  3281     0F72                     l339:
  3282     0F72  0008               	return
  3283     0F73                     __end_of_intToString:
  3284                           
  3285                           	psect	text7
  3286     0D99                     __ptext7:	
  3287 ;; *************** function _potenza *****************
  3288 ;; Defined at:
  3289 ;;		line 606 in file "main.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;  b               1    wreg     unsigned char 
  3292 ;;  e               1    4[BANK0 ] unsigned char 
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;  b               1    6[BANK0 ] unsigned char 
  3295 ;;  i               2    7[BANK0 ] int 
  3296 ;;  n               1    9[BANK0 ] unsigned char 
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  1    wreg      unsigned char 
  3299 ;; Registers used:
  3300 ;;		wreg, status,2, status,0, pclath, cstack
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3306 ;;      Params:         0       1       0       0       0
  3307 ;;      Locals:         0       4       0       0       0
  3308 ;;      Temps:          0       1       0       0       0
  3309 ;;      Totals:         0       6       0       0       0
  3310 ;;Total ram usage:        6 bytes
  3311 ;; Hardware stack levels used: 1
  3312 ;; Hardware stack levels required when called: 3
  3313 ;; This function calls:
  3314 ;;		___bmul
  3315 ;; This function is called by:
  3316 ;;		_intToString
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320     0D99                     _potenza:	
  3321                           ;psect for function _potenza
  3322                           
  3323                           
  3324                           ;incstack = 0
  3325                           ; Regs used in _potenza: [wreg+status,2+status,0+pclath+cstack]
  3326                           ;potenza@b stored from wreg
  3327     0D99  1283               	bcf	3,5	;RP0=0, select bank0
  3328     0D9A  1303               	bcf	3,6	;RP1=0, select bank0
  3329     0D9B  00C9               	movwf	potenza@b
  3330     0D9C                     l2485:
  3331                           
  3332                           ;main.c: 607:     char n = 1;
  3333     0D9C  01CC               	clrf	potenza@n
  3334     0D9D  0ACC               	incf	potenza@n,f
  3335     0D9E                     l2487:
  3336                           
  3337                           ;main.c: 608:     for (int i = 0; i < e; i++) {
  3338     0D9E  01CA               	clrf	potenza@i
  3339     0D9F  01CB               	clrf	potenza@i+1
  3340     0DA0  2DB4               	goto	l2493
  3341     0DA1                     l2489:
  3342                           
  3343                           ;main.c: 609:         n = n * b;
  3344     0DA1  1283               	bcf	3,5	;RP0=0, select bank0
  3345     0DA2  1303               	bcf	3,6	;RP1=0, select bank0
  3346     0DA3  0849               	movf	potenza@b,w
  3347     0DA4  00C3               	movwf	___bmul@multiplicand
  3348     0DA5  084C               	movf	potenza@n,w
  3349     0DA6  120A  158A  2582  120A  158A  	fcall	___bmul
  3350     0DAB  1283               	bcf	3,5	;RP0=0, select bank0
  3351     0DAC  1303               	bcf	3,6	;RP1=0, select bank0
  3352     0DAD  00CC               	movwf	potenza@n
  3353     0DAE                     l2491:
  3354                           
  3355                           ;main.c: 610:     }
  3356     0DAE  3001               	movlw	1
  3357     0DAF  07CA               	addwf	potenza@i,f
  3358     0DB0  1803               	skipnc
  3359     0DB1  0ACB               	incf	potenza@i+1,f
  3360     0DB2  3000               	movlw	0
  3361     0DB3  07CB               	addwf	potenza@i+1,f
  3362     0DB4                     l2493:
  3363     0DB4  084B               	movf	potenza@i+1,w
  3364     0DB5  3A80               	xorlw	128
  3365     0DB6  00C8               	movwf	??_potenza
  3366     0DB7  3080               	movlw	128
  3367     0DB8  0248               	subwf	??_potenza,w
  3368     0DB9  1D03               	skipz
  3369     0DBA  2DBD               	goto	u2755
  3370     0DBB  0847               	movf	potenza@e,w
  3371     0DBC  024A               	subwf	potenza@i,w
  3372     0DBD                     u2755:
  3373     0DBD  1C03               	skipc
  3374     0DBE  2DC0               	goto	u2751
  3375     0DBF  2DC1               	goto	u2750
  3376     0DC0                     u2751:
  3377     0DC0  2DA1               	goto	l2489
  3378     0DC1                     u2750:
  3379     0DC1                     l2495:
  3380                           
  3381                           ;main.c: 611:     return n;
  3382     0DC1  1283               	bcf	3,5	;RP0=0, select bank0
  3383     0DC2  1303               	bcf	3,6	;RP1=0, select bank0
  3384     0DC3  084C               	movf	potenza@n,w
  3385     0DC4                     l330:
  3386     0DC4  0008               	return
  3387     0DC5                     __end_of_potenza:
  3388                           
  3389                           	psect	text8
  3390     0D82                     __ptext8:	
  3391 ;; *************** function ___bmul *****************
  3392 ;; Defined at:
  3393 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;  multiplier      1    wreg     unsigned char 
  3396 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;  multiplier      1    3[BANK0 ] unsigned char 
  3399 ;;  product         1    2[BANK0 ] unsigned char 
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  1    wreg      unsigned char 
  3402 ;; Registers used:
  3403 ;;		wreg, status,2, status,0
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3409 ;;      Params:         0       1       0       0       0
  3410 ;;      Locals:         0       2       0       0       0
  3411 ;;      Temps:          0       1       0       0       0
  3412 ;;      Totals:         0       4       0       0       0
  3413 ;;Total ram usage:        4 bytes
  3414 ;; Hardware stack levels used: 1
  3415 ;; Hardware stack levels required when called: 2
  3416 ;; This function calls:
  3417 ;;		Nothing
  3418 ;; This function is called by:
  3419 ;;		_potenza
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423     0D82                     ___bmul:	
  3424                           ;psect for function ___bmul
  3425                           
  3426                           
  3427                           ;incstack = 0
  3428                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3429                           ;___bmul@multiplier stored from wreg
  3430     0D82  1283               	bcf	3,5	;RP0=0, select bank0
  3431     0D83  1303               	bcf	3,6	;RP1=0, select bank0
  3432     0D84  00C6               	movwf	___bmul@multiplier
  3433     0D85                     l2455:
  3434     0D85  01C5               	clrf	___bmul@product
  3435     0D86                     l2457:
  3436     0D86  1C46               	btfss	___bmul@multiplier,0
  3437     0D87  2D89               	goto	u2731
  3438     0D88  2D8A               	goto	u2730
  3439     0D89                     u2731:
  3440     0D89  2D8E               	goto	l2461
  3441     0D8A                     u2730:
  3442     0D8A                     l2459:
  3443     0D8A  0843               	movf	___bmul@multiplicand,w
  3444     0D8B  00C4               	movwf	??___bmul
  3445     0D8C  0844               	movf	??___bmul,w
  3446     0D8D  07C5               	addwf	___bmul@product,f
  3447     0D8E                     l2461:
  3448     0D8E  1003               	clrc
  3449     0D8F  0DC3               	rlf	___bmul@multiplicand,f
  3450     0D90                     l2463:
  3451     0D90  1003               	clrc
  3452     0D91  0CC6               	rrf	___bmul@multiplier,f
  3453     0D92  0846               	movf	___bmul@multiplier,w
  3454     0D93  1D03               	btfss	3,2
  3455     0D94  2D96               	goto	u2741
  3456     0D95  2D97               	goto	u2740
  3457     0D96                     u2741:
  3458     0D96  2D86               	goto	l2457
  3459     0D97                     u2740:
  3460     0D97                     l2465:
  3461     0D97  0845               	movf	___bmul@product,w
  3462     0D98                     l451:
  3463     0D98  0008               	return
  3464     0D99                     __end_of___bmul:
  3465                           
  3466                           	psect	text9
  3467     0DC5                     __ptext9:	
  3468 ;; *************** function ___awmod *****************
  3469 ;; Defined at:
  3470 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  3471 ;; Parameters:    Size  Location     Type
  3472 ;;  divisor         2    0[BANK0 ] int 
  3473 ;;  dividend        2    2[BANK0 ] int 
  3474 ;; Auto vars:     Size  Location     Type
  3475 ;;  sign            1    6[BANK0 ] unsigned char 
  3476 ;;  counter         1    5[BANK0 ] unsigned char 
  3477 ;; Return value:  Size  Location     Type
  3478 ;;                  2    0[BANK0 ] int 
  3479 ;; Registers used:
  3480 ;;		wreg, status,2, status,0
  3481 ;; Tracked objects:
  3482 ;;		On entry : 0/0
  3483 ;;		On exit  : 0/0
  3484 ;;		Unchanged: 0/0
  3485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3486 ;;      Params:         0       4       0       0       0
  3487 ;;      Locals:         0       2       0       0       0
  3488 ;;      Temps:          0       1       0       0       0
  3489 ;;      Totals:         0       7       0       0       0
  3490 ;;Total ram usage:        7 bytes
  3491 ;; Hardware stack levels used: 1
  3492 ;; Hardware stack levels required when called: 2
  3493 ;; This function calls:
  3494 ;;		Nothing
  3495 ;; This function is called by:
  3496 ;;		_intToString
  3497 ;; This function uses a non-reentrant model
  3498 ;;
  3499                           
  3500     0DC5                     ___awmod:	
  3501                           ;psect for function ___awmod
  3502                           
  3503     0DC5                     l2499:	
  3504                           ;incstack = 0
  3505                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3506                           
  3507     0DC5  1283               	bcf	3,5	;RP0=0, select bank0
  3508     0DC6  1303               	bcf	3,6	;RP1=0, select bank0
  3509     0DC7  01C9               	clrf	___awmod@sign
  3510     0DC8                     l2501:
  3511     0DC8  1FC6               	btfss	___awmod@dividend+1,7
  3512     0DC9  2DCB               	goto	u2761
  3513     0DCA  2DCC               	goto	u2760
  3514     0DCB                     u2761:
  3515     0DCB  2DD3               	goto	l2507
  3516     0DCC                     u2760:
  3517     0DCC                     l2503:
  3518     0DCC  09C5               	comf	___awmod@dividend,f
  3519     0DCD  09C6               	comf	___awmod@dividend+1,f
  3520     0DCE  0AC5               	incf	___awmod@dividend,f
  3521     0DCF  1903               	skipnz
  3522     0DD0  0AC6               	incf	___awmod@dividend+1,f
  3523     0DD1                     l2505:
  3524     0DD1  01C9               	clrf	___awmod@sign
  3525     0DD2  0AC9               	incf	___awmod@sign,f
  3526     0DD3                     l2507:
  3527     0DD3  1FC4               	btfss	___awmod@divisor+1,7
  3528     0DD4  2DD6               	goto	u2771
  3529     0DD5  2DD7               	goto	u2770
  3530     0DD6                     u2771:
  3531     0DD6  2DDC               	goto	l2511
  3532     0DD7                     u2770:
  3533     0DD7                     l2509:
  3534     0DD7  09C3               	comf	___awmod@divisor,f
  3535     0DD8  09C4               	comf	___awmod@divisor+1,f
  3536     0DD9  0AC3               	incf	___awmod@divisor,f
  3537     0DDA  1903               	skipnz
  3538     0DDB  0AC4               	incf	___awmod@divisor+1,f
  3539     0DDC                     l2511:
  3540     0DDC  0843               	movf	___awmod@divisor,w
  3541     0DDD  0444               	iorwf	___awmod@divisor+1,w
  3542     0DDE  1903               	btfsc	3,2
  3543     0DDF  2DE1               	goto	u2781
  3544     0DE0  2DE2               	goto	u2780
  3545     0DE1                     u2781:
  3546     0DE1  2E11               	goto	l2529
  3547     0DE2                     u2780:
  3548     0DE2                     l2513:
  3549     0DE2  01C8               	clrf	___awmod@counter
  3550     0DE3  0AC8               	incf	___awmod@counter,f
  3551     0DE4  2DF0               	goto	l2519
  3552     0DE5                     l2515:
  3553     0DE5  3001               	movlw	1
  3554     0DE6                     u2795:
  3555     0DE6  1003               	clrc
  3556     0DE7  0DC3               	rlf	___awmod@divisor,f
  3557     0DE8  0DC4               	rlf	___awmod@divisor+1,f
  3558     0DE9  3EFF               	addlw	-1
  3559     0DEA  1D03               	skipz
  3560     0DEB  2DE6               	goto	u2795
  3561     0DEC                     l2517:
  3562     0DEC  3001               	movlw	1
  3563     0DED  00C7               	movwf	??___awmod
  3564     0DEE  0847               	movf	??___awmod,w
  3565     0DEF  07C8               	addwf	___awmod@counter,f
  3566     0DF0                     l2519:
  3567     0DF0  1FC4               	btfss	___awmod@divisor+1,7
  3568     0DF1  2DF3               	goto	u2801
  3569     0DF2  2DF4               	goto	u2800
  3570     0DF3                     u2801:
  3571     0DF3  2DE5               	goto	l2515
  3572     0DF4                     u2800:
  3573     0DF4                     l2521:
  3574     0DF4  0844               	movf	___awmod@divisor+1,w
  3575     0DF5  0246               	subwf	___awmod@dividend+1,w
  3576     0DF6  1D03               	skipz
  3577     0DF7  2DFA               	goto	u2815
  3578     0DF8  0843               	movf	___awmod@divisor,w
  3579     0DF9  0245               	subwf	___awmod@dividend,w
  3580     0DFA                     u2815:
  3581     0DFA  1C03               	skipc
  3582     0DFB  2DFD               	goto	u2811
  3583     0DFC  2DFE               	goto	u2810
  3584     0DFD                     u2811:
  3585     0DFD  2E04               	goto	l2525
  3586     0DFE                     u2810:
  3587     0DFE                     l2523:
  3588     0DFE  0843               	movf	___awmod@divisor,w
  3589     0DFF  02C5               	subwf	___awmod@dividend,f
  3590     0E00  0844               	movf	___awmod@divisor+1,w
  3591     0E01  1C03               	skipc
  3592     0E02  03C6               	decf	___awmod@dividend+1,f
  3593     0E03  02C6               	subwf	___awmod@dividend+1,f
  3594     0E04                     l2525:
  3595     0E04  3001               	movlw	1
  3596     0E05                     u2825:
  3597     0E05  1003               	clrc
  3598     0E06  0CC4               	rrf	___awmod@divisor+1,f
  3599     0E07  0CC3               	rrf	___awmod@divisor,f
  3600     0E08  3EFF               	addlw	-1
  3601     0E09  1D03               	skipz
  3602     0E0A  2E05               	goto	u2825
  3603     0E0B                     l2527:
  3604     0E0B  3001               	movlw	1
  3605     0E0C  02C8               	subwf	___awmod@counter,f
  3606     0E0D  1D03               	btfss	3,2
  3607     0E0E  2E10               	goto	u2831
  3608     0E0F  2E11               	goto	u2830
  3609     0E10                     u2831:
  3610     0E10  2DF4               	goto	l2521
  3611     0E11                     u2830:
  3612     0E11                     l2529:
  3613     0E11  0849               	movf	___awmod@sign,w
  3614     0E12  1903               	btfsc	3,2
  3615     0E13  2E15               	goto	u2841
  3616     0E14  2E16               	goto	u2840
  3617     0E15                     u2841:
  3618     0E15  2E1B               	goto	l2533
  3619     0E16                     u2840:
  3620     0E16                     l2531:
  3621     0E16  09C5               	comf	___awmod@dividend,f
  3622     0E17  09C6               	comf	___awmod@dividend+1,f
  3623     0E18  0AC5               	incf	___awmod@dividend,f
  3624     0E19  1903               	skipnz
  3625     0E1A  0AC6               	incf	___awmod@dividend+1,f
  3626     0E1B                     l2533:
  3627     0E1B  0846               	movf	___awmod@dividend+1,w
  3628     0E1C  00C4               	movwf	?___awmod+1
  3629     0E1D  0845               	movf	___awmod@dividend,w
  3630     0E1E  00C3               	movwf	?___awmod
  3631     0E1F                     l591:
  3632     0E1F  0008               	return
  3633     0E20                     __end_of___awmod:
  3634                           
  3635                           	psect	text10
  3636     0E20                     __ptext10:	
  3637 ;; *************** function ___awdiv *****************
  3638 ;; Defined at:
  3639 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;  divisor         2   10[BANK0 ] int 
  3642 ;;  dividend        2   12[BANK0 ] int 
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;  quotient        2   17[BANK0 ] int 
  3645 ;;  sign            1   16[BANK0 ] unsigned char 
  3646 ;;  counter         1   15[BANK0 ] unsigned char 
  3647 ;; Return value:  Size  Location     Type
  3648 ;;                  2   10[BANK0 ] int 
  3649 ;; Registers used:
  3650 ;;		wreg, status,2, status,0
  3651 ;; Tracked objects:
  3652 ;;		On entry : 0/0
  3653 ;;		On exit  : 0/0
  3654 ;;		Unchanged: 0/0
  3655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3656 ;;      Params:         0       4       0       0       0
  3657 ;;      Locals:         0       4       0       0       0
  3658 ;;      Temps:          0       1       0       0       0
  3659 ;;      Totals:         0       9       0       0       0
  3660 ;;Total ram usage:        9 bytes
  3661 ;; Hardware stack levels used: 1
  3662 ;; Hardware stack levels required when called: 2
  3663 ;; This function calls:
  3664 ;;		Nothing
  3665 ;; This function is called by:
  3666 ;;		_intToString
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           
  3670     0E20                     ___awdiv:	
  3671                           ;psect for function ___awdiv
  3672                           
  3673     0E20                     l1737:	
  3674                           ;incstack = 0
  3675                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3676                           
  3677     0E20  1283               	bcf	3,5	;RP0=0, select bank0
  3678     0E21  1303               	bcf	3,6	;RP1=0, select bank0
  3679     0E22  01D3               	clrf	___awdiv@sign
  3680     0E23                     l1739:
  3681     0E23  1FCE               	btfss	___awdiv@divisor+1,7
  3682     0E24  2E26               	goto	u1401
  3683     0E25  2E27               	goto	u1400
  3684     0E26                     u1401:
  3685     0E26  2E2E               	goto	l1745
  3686     0E27                     u1400:
  3687     0E27                     l1741:
  3688     0E27  09CD               	comf	___awdiv@divisor,f
  3689     0E28  09CE               	comf	___awdiv@divisor+1,f
  3690     0E29  0ACD               	incf	___awdiv@divisor,f
  3691     0E2A  1903               	skipnz
  3692     0E2B  0ACE               	incf	___awdiv@divisor+1,f
  3693     0E2C                     l1743:
  3694     0E2C  01D3               	clrf	___awdiv@sign
  3695     0E2D  0AD3               	incf	___awdiv@sign,f
  3696     0E2E                     l1745:
  3697     0E2E  1FD0               	btfss	___awdiv@dividend+1,7
  3698     0E2F  2E31               	goto	u1411
  3699     0E30  2E32               	goto	u1410
  3700     0E31                     u1411:
  3701     0E31  2E3B               	goto	l1751
  3702     0E32                     u1410:
  3703     0E32                     l1747:
  3704     0E32  09CF               	comf	___awdiv@dividend,f
  3705     0E33  09D0               	comf	___awdiv@dividend+1,f
  3706     0E34  0ACF               	incf	___awdiv@dividend,f
  3707     0E35  1903               	skipnz
  3708     0E36  0AD0               	incf	___awdiv@dividend+1,f
  3709     0E37                     l1749:
  3710     0E37  3001               	movlw	1
  3711     0E38  00D1               	movwf	??___awdiv
  3712     0E39  0851               	movf	??___awdiv,w
  3713     0E3A  06D3               	xorwf	___awdiv@sign,f
  3714     0E3B                     l1751:
  3715     0E3B  01D4               	clrf	___awdiv@quotient
  3716     0E3C  01D5               	clrf	___awdiv@quotient+1
  3717     0E3D                     l1753:
  3718     0E3D  084D               	movf	___awdiv@divisor,w
  3719     0E3E  044E               	iorwf	___awdiv@divisor+1,w
  3720     0E3F  1903               	btfsc	3,2
  3721     0E40  2E42               	goto	u1421
  3722     0E41  2E43               	goto	u1420
  3723     0E42                     u1421:
  3724     0E42  2E7A               	goto	l1773
  3725     0E43                     u1420:
  3726     0E43                     l1755:
  3727     0E43  01D2               	clrf	___awdiv@counter
  3728     0E44  0AD2               	incf	___awdiv@counter,f
  3729     0E45  2E51               	goto	l1761
  3730     0E46                     l1757:
  3731     0E46  3001               	movlw	1
  3732     0E47                     u1435:
  3733     0E47  1003               	clrc
  3734     0E48  0DCD               	rlf	___awdiv@divisor,f
  3735     0E49  0DCE               	rlf	___awdiv@divisor+1,f
  3736     0E4A  3EFF               	addlw	-1
  3737     0E4B  1D03               	skipz
  3738     0E4C  2E47               	goto	u1435
  3739     0E4D                     l1759:
  3740     0E4D  3001               	movlw	1
  3741     0E4E  00D1               	movwf	??___awdiv
  3742     0E4F  0851               	movf	??___awdiv,w
  3743     0E50  07D2               	addwf	___awdiv@counter,f
  3744     0E51                     l1761:
  3745     0E51  1FCE               	btfss	___awdiv@divisor+1,7
  3746     0E52  2E54               	goto	u1441
  3747     0E53  2E55               	goto	u1440
  3748     0E54                     u1441:
  3749     0E54  2E46               	goto	l1757
  3750     0E55                     u1440:
  3751     0E55                     l1763:
  3752     0E55  3001               	movlw	1
  3753     0E56                     u1455:
  3754     0E56  1003               	clrc
  3755     0E57  0DD4               	rlf	___awdiv@quotient,f
  3756     0E58  0DD5               	rlf	___awdiv@quotient+1,f
  3757     0E59  3EFF               	addlw	-1
  3758     0E5A  1D03               	skipz
  3759     0E5B  2E56               	goto	u1455
  3760     0E5C  084E               	movf	___awdiv@divisor+1,w
  3761     0E5D  0250               	subwf	___awdiv@dividend+1,w
  3762     0E5E  1D03               	skipz
  3763     0E5F  2E62               	goto	u1465
  3764     0E60  084D               	movf	___awdiv@divisor,w
  3765     0E61  024F               	subwf	___awdiv@dividend,w
  3766     0E62                     u1465:
  3767     0E62  1C03               	skipc
  3768     0E63  2E65               	goto	u1461
  3769     0E64  2E66               	goto	u1460
  3770     0E65                     u1461:
  3771     0E65  2E6D               	goto	l1769
  3772     0E66                     u1460:
  3773     0E66                     l1765:
  3774     0E66  084D               	movf	___awdiv@divisor,w
  3775     0E67  02CF               	subwf	___awdiv@dividend,f
  3776     0E68  084E               	movf	___awdiv@divisor+1,w
  3777     0E69  1C03               	skipc
  3778     0E6A  03D0               	decf	___awdiv@dividend+1,f
  3779     0E6B  02D0               	subwf	___awdiv@dividend+1,f
  3780     0E6C                     l1767:
  3781     0E6C  1454               	bsf	___awdiv@quotient,0
  3782     0E6D                     l1769:
  3783     0E6D  3001               	movlw	1
  3784     0E6E                     u1475:
  3785     0E6E  1003               	clrc
  3786     0E6F  0CCE               	rrf	___awdiv@divisor+1,f
  3787     0E70  0CCD               	rrf	___awdiv@divisor,f
  3788     0E71  3EFF               	addlw	-1
  3789     0E72  1D03               	skipz
  3790     0E73  2E6E               	goto	u1475
  3791     0E74                     l1771:
  3792     0E74  3001               	movlw	1
  3793     0E75  02D2               	subwf	___awdiv@counter,f
  3794     0E76  1D03               	btfss	3,2
  3795     0E77  2E79               	goto	u1481
  3796     0E78  2E7A               	goto	u1480
  3797     0E79                     u1481:
  3798     0E79  2E55               	goto	l1763
  3799     0E7A                     u1480:
  3800     0E7A                     l1773:
  3801     0E7A  0853               	movf	___awdiv@sign,w
  3802     0E7B  1903               	btfsc	3,2
  3803     0E7C  2E7E               	goto	u1491
  3804     0E7D  2E7F               	goto	u1490
  3805     0E7E                     u1491:
  3806     0E7E  2E84               	goto	l1777
  3807     0E7F                     u1490:
  3808     0E7F                     l1775:
  3809     0E7F  09D4               	comf	___awdiv@quotient,f
  3810     0E80  09D5               	comf	___awdiv@quotient+1,f
  3811     0E81  0AD4               	incf	___awdiv@quotient,f
  3812     0E82  1903               	skipnz
  3813     0E83  0AD5               	incf	___awdiv@quotient+1,f
  3814     0E84                     l1777:
  3815     0E84  0855               	movf	___awdiv@quotient+1,w
  3816     0E85  00CE               	movwf	?___awdiv+1
  3817     0E86  0854               	movf	___awdiv@quotient,w
  3818     0E87  00CD               	movwf	?___awdiv
  3819     0E88                     l578:
  3820     0E88  0008               	return
  3821     0E89                     __end_of___awdiv:
  3822                           
  3823                           	psect	text11
  3824     0D3A                     __ptext11:	
  3825 ;; *************** function _UART_Write *****************
  3826 ;; Defined at:
  3827 ;;		line 231 in file "main.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;  data            1    wreg     unsigned char 
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;  data            1    0[BANK0 ] unsigned char 
  3832 ;; Return value:  Size  Location     Type
  3833 ;;                  1    wreg      void 
  3834 ;; Registers used:
  3835 ;;		wreg
  3836 ;; Tracked objects:
  3837 ;;		On entry : 0/0
  3838 ;;		On exit  : 0/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3841 ;;      Params:         0       0       0       0       0
  3842 ;;      Locals:         0       1       0       0       0
  3843 ;;      Temps:          0       0       0       0       0
  3844 ;;      Totals:         0       1       0       0       0
  3845 ;;Total ram usage:        1 bytes
  3846 ;; Hardware stack levels used: 1
  3847 ;; Hardware stack levels required when called: 2
  3848 ;; This function calls:
  3849 ;;		Nothing
  3850 ;; This function is called by:
  3851 ;;		_main
  3852 ;;		_UART_Read1
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           
  3856     0D3A                     _UART_Write:	
  3857                           ;psect for function _UART_Write
  3858                           
  3859                           
  3860                           ;incstack = 0
  3861                           ; Regs used in _UART_Write: [wreg]
  3862                           ;UART_Write@data stored from wreg
  3863     0D3A  1283               	bcf	3,5	;RP0=0, select bank0
  3864     0D3B  1303               	bcf	3,6	;RP1=0, select bank0
  3865     0D3C  00C3               	movwf	UART_Write@data
  3866     0D3D                     l2547:
  3867     0D3D                     l201:	
  3868                           ;main.c: 232:     while (!TXIF)
  3869                           
  3870                           
  3871                           ;main.c: 232:     while (!TXIF)
  3872     0D3D  1E0C               	btfss	12,4	;volatile
  3873     0D3E  2D40               	goto	u2881
  3874     0D3F  2D41               	goto	u2880
  3875     0D40                     u2881:
  3876     0D40  2D3D               	goto	l201
  3877     0D41                     u2880:
  3878     0D41                     l2549:
  3879                           
  3880                           ;main.c: 234:     TXREG = data;
  3881     0D41  0843               	movf	UART_Write@data,w
  3882     0D42  0099               	movwf	25	;volatile
  3883     0D43                     l204:
  3884     0D43  0008               	return
  3885     0D44                     __end_of_UART_Write:
  3886                           
  3887                           	psect	text12
  3888     0D2D                     __ptext12:	
  3889 ;; *************** function _RS485_TxEnable *****************
  3890 ;; Defined at:
  3891 ;;		line 221 in file "main.c"
  3892 ;; Parameters:    Size  Location     Type
  3893 ;;		None
  3894 ;; Auto vars:     Size  Location     Type
  3895 ;;		None
  3896 ;; Return value:  Size  Location     Type
  3897 ;;                  1    wreg      void 
  3898 ;; Registers used:
  3899 ;;		None
  3900 ;; Tracked objects:
  3901 ;;		On entry : 0/0
  3902 ;;		On exit  : 0/0
  3903 ;;		Unchanged: 0/0
  3904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3905 ;;      Params:         0       0       0       0       0
  3906 ;;      Locals:         0       0       0       0       0
  3907 ;;      Temps:          0       0       0       0       0
  3908 ;;      Totals:         0       0       0       0       0
  3909 ;;Total ram usage:        0 bytes
  3910 ;; Hardware stack levels used: 1
  3911 ;; Hardware stack levels required when called: 2
  3912 ;; This function calls:
  3913 ;;		Nothing
  3914 ;; This function is called by:
  3915 ;;		_main
  3916 ;;		_UART_Read1
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920     0D2D                     _RS485_TxEnable:	
  3921                           ;psect for function _RS485_TxEnable
  3922                           
  3923     0D2D                     l2545:	
  3924                           ;incstack = 0
  3925                           ; Regs used in _RS485_TxEnable: []
  3926                           
  3927                           
  3928                           ;main.c: 222:     RC0 = 1;
  3929     0D2D  1283               	bcf	3,5	;RP0=0, select bank0
  3930     0D2E  1303               	bcf	3,6	;RP1=0, select bank0
  3931     0D2F  1407               	bsf	7,0	;volatile
  3932                           
  3933                           ;main.c: 223:     RC1 = 0;
  3934     0D30  1087               	bcf	7,1	;volatile
  3935     0D31                     l195:
  3936     0D31  0008               	return
  3937     0D32                     __end_of_RS485_TxEnable:
  3938                           
  3939                           	psect	text13
  3940     0D28                     __ptext13:	
  3941 ;; *************** function _RS485_RxEnable *****************
  3942 ;; Defined at:
  3943 ;;		line 226 in file "main.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;		None
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;		None
  3948 ;; Return value:  Size  Location     Type
  3949 ;;                  1    wreg      void 
  3950 ;; Registers used:
  3951 ;;		None
  3952 ;; Tracked objects:
  3953 ;;		On entry : 0/0
  3954 ;;		On exit  : 0/0
  3955 ;;		Unchanged: 0/0
  3956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3957 ;;      Params:         0       0       0       0       0
  3958 ;;      Locals:         0       0       0       0       0
  3959 ;;      Temps:          0       0       0       0       0
  3960 ;;      Totals:         0       0       0       0       0
  3961 ;;Total ram usage:        0 bytes
  3962 ;; Hardware stack levels used: 1
  3963 ;; Hardware stack levels required when called: 2
  3964 ;; This function calls:
  3965 ;;		Nothing
  3966 ;; This function is called by:
  3967 ;;		_main
  3968 ;;		_UART_Read1
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972     0D28                     _RS485_RxEnable:	
  3973                           ;psect for function _RS485_RxEnable
  3974                           
  3975     0D28                     l2551:	
  3976                           ;incstack = 0
  3977                           ; Regs used in _RS485_RxEnable: []
  3978                           
  3979                           
  3980                           ;main.c: 227:     RC0 = 0;
  3981     0D28  1283               	bcf	3,5	;RP0=0, select bank0
  3982     0D29  1303               	bcf	3,6	;RP1=0, select bank0
  3983     0D2A  1007               	bcf	7,0	;volatile
  3984                           
  3985                           ;main.c: 228:     RC1 = 1;
  3986     0D2B  1487               	bsf	7,1	;volatile
  3987     0D2C                     l198:
  3988     0D2C  0008               	return
  3989     0D2D                     __end_of_RS485_RxEnable:
  3990                           
  3991                           	psect	text14
  3992     0D44                     __ptext14:	
  3993 ;; *************** function _UART_Init *****************
  3994 ;; Defined at:
  3995 ;;		line 203 in file "main.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;		None
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;		None
  4000 ;; Return value:  Size  Location     Type
  4001 ;;                  1    wreg      void 
  4002 ;; Registers used:
  4003 ;;		wreg
  4004 ;; Tracked objects:
  4005 ;;		On entry : 0/0
  4006 ;;		On exit  : 0/0
  4007 ;;		Unchanged: 0/0
  4008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4009 ;;      Params:         0       0       0       0       0
  4010 ;;      Locals:         0       0       0       0       0
  4011 ;;      Temps:          0       0       0       0       0
  4012 ;;      Totals:         0       0       0       0       0
  4013 ;;Total ram usage:        0 bytes
  4014 ;; Hardware stack levels used: 1
  4015 ;; Hardware stack levels required when called: 2
  4016 ;; This function calls:
  4017 ;;		Nothing
  4018 ;; This function is called by:
  4019 ;;		_main
  4020 ;; This function uses a non-reentrant model
  4021 ;;
  4022                           
  4023     0D44                     _UART_Init:	
  4024                           ;psect for function _UART_Init
  4025                           
  4026     0D44                     l2575:	
  4027                           ;incstack = 0
  4028                           ; Regs used in _UART_Init: [wreg]
  4029                           
  4030                           
  4031                           ;main.c: 205:     TRISC6 = 0;
  4032     0D44  1683               	bsf	3,5	;RP0=1, select bank1
  4033     0D45  1303               	bcf	3,6	;RP1=0, select bank1
  4034     0D46  1307               	bcf	7,6	;volatile
  4035                           
  4036                           ;main.c: 206:     TRISC7 = 1;
  4037     0D47  1787               	bsf	7,7	;volatile
  4038                           
  4039                           ;main.c: 209:     BRGH = 1;
  4040     0D48  1518               	bsf	24,2	;volatile
  4041     0D49                     l2577:
  4042                           
  4043                           ;main.c: 210:     SPBRG = 51;
  4044     0D49  3033               	movlw	51
  4045     0D4A  0099               	movwf	25	;volatile
  4046     0D4B                     l2579:
  4047                           
  4048                           ;main.c: 213:     SYNC = 0;
  4049     0D4B  1218               	bcf	24,4	;volatile
  4050     0D4C                     l2581:
  4051                           
  4052                           ;main.c: 214:     SPEN = 1;
  4053     0D4C  1283               	bcf	3,5	;RP0=0, select bank0
  4054     0D4D  1303               	bcf	3,6	;RP1=0, select bank0
  4055     0D4E  1798               	bsf	24,7	;volatile
  4056     0D4F                     l2583:
  4057                           
  4058                           ;main.c: 217:     TXEN = 1;
  4059     0D4F  1683               	bsf	3,5	;RP0=1, select bank1
  4060     0D50  1303               	bcf	3,6	;RP1=0, select bank1
  4061     0D51  1698               	bsf	24,5	;volatile
  4062     0D52                     l2585:
  4063                           
  4064                           ;main.c: 218:     CREN = 1;
  4065     0D52  1283               	bcf	3,5	;RP0=0, select bank0
  4066     0D53  1303               	bcf	3,6	;RP1=0, select bank0
  4067     0D54  1618               	bsf	24,4	;volatile
  4068     0D55                     l192:
  4069     0D55  0008               	return
  4070     0D56                     __end_of_UART_Init:
  4071                           
  4072                           	psect	text15
  4073     07F0                     __ptext15:	
  4074 ;; *************** function _Timer0_Init *****************
  4075 ;; Defined at:
  4076 ;;		line 499 in file "main.c"
  4077 ;; Parameters:    Size  Location     Type
  4078 ;;		None
  4079 ;; Auto vars:     Size  Location     Type
  4080 ;;		None
  4081 ;; Return value:  Size  Location     Type
  4082 ;;                  1    wreg      void 
  4083 ;; Registers used:
  4084 ;;		wreg
  4085 ;; Tracked objects:
  4086 ;;		On entry : 0/0
  4087 ;;		On exit  : 0/0
  4088 ;;		Unchanged: 0/0
  4089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4090 ;;      Params:         0       0       0       0       0
  4091 ;;      Locals:         0       0       0       0       0
  4092 ;;      Temps:          0       0       0       0       0
  4093 ;;      Totals:         0       0       0       0       0
  4094 ;;Total ram usage:        0 bytes
  4095 ;; Hardware stack levels used: 1
  4096 ;; Hardware stack levels required when called: 2
  4097 ;; This function calls:
  4098 ;;		Nothing
  4099 ;; This function is called by:
  4100 ;;		_main
  4101 ;; This function uses a non-reentrant model
  4102 ;;
  4103                           
  4104     07F0                     _Timer0_Init:	
  4105                           ;psect for function _Timer0_Init
  4106                           
  4107     07F0                     l2611:	
  4108                           ;incstack = 0
  4109                           ; Regs used in _Timer0_Init: [wreg]
  4110                           
  4111                           
  4112                           ;main.c: 501:     T0CS = 0;
  4113     07F0  1683               	bsf	3,5	;RP0=1, select bank1
  4114     07F1  1303               	bcf	3,6	;RP1=0, select bank1
  4115     07F2  1281               	bcf	1,5	;volatile
  4116                           
  4117                           ;main.c: 502:     PSA = 0;
  4118     07F3  1181               	bcf	1,3	;volatile
  4119                           
  4120                           ;main.c: 503:     PS2 = 1;
  4121     07F4  1501               	bsf	1,2	;volatile
  4122                           
  4123                           ;main.c: 504:     PS1 = 1;
  4124     07F5  1481               	bsf	1,1	;volatile
  4125                           
  4126                           ;main.c: 505:     PS0 = 1;
  4127     07F6  1401               	bsf	1,0	;volatile
  4128     07F7                     l2613:
  4129                           
  4130                           ;main.c: 508:     TMR0 = 6;
  4131     07F7  3006               	movlw	6
  4132     07F8  1283               	bcf	3,5	;RP0=0, select bank0
  4133     07F9  1303               	bcf	3,6	;RP1=0, select bank0
  4134     07FA  0081               	movwf	1	;volatile
  4135     07FB                     l2615:
  4136                           
  4137                           ;main.c: 509:     TMR0IF = 0;
  4138     07FB  110B               	bcf	11,2	;volatile
  4139     07FC                     l2617:
  4140                           
  4141                           ;main.c: 510:     TMR0IE = 1;
  4142     07FC  168B               	bsf	11,5	;volatile
  4143     07FD                     l2619:
  4144                           
  4145                           ;main.c: 511:     GIE = 1;
  4146     07FD  178B               	bsf	11,7	;volatile
  4147     07FE                     l305:
  4148     07FE  0008               	return
  4149     07FF                     __end_of_Timer0_Init:
  4150                           
  4151                           	psect	text16
  4152     0F73                     __ptext16:	
  4153 ;; *************** function _KeyPadReader *****************
  4154 ;; Defined at:
  4155 ;;		line 524 in file "main.c"
  4156 ;; Parameters:    Size  Location     Type
  4157 ;;		None
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;		None
  4160 ;; Return value:  Size  Location     Type
  4161 ;;                  1    wreg      unsigned char 
  4162 ;; Registers used:
  4163 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4169 ;;      Params:         0       0       0       0       0
  4170 ;;      Locals:         0       0       0       0       0
  4171 ;;      Temps:          0       2       0       0       0
  4172 ;;      Totals:         0       2       0       0       0
  4173 ;;Total ram usage:        2 bytes
  4174 ;; Hardware stack levels used: 2
  4175 ;; Hardware stack levels required when called: 2
  4176 ;; This function calls:
  4177 ;;		Nothing
  4178 ;; This function is called by:
  4179 ;;		_main
  4180 ;; This function uses a non-reentrant model
  4181 ;;
  4182                           
  4183     0F73                     _KeyPadReader:	
  4184                           ;psect for function _KeyPadReader
  4185                           
  4186     0F73                     l2633:	
  4187                           ;incstack = 0
  4188                           ; Regs used in _KeyPadReader: [wreg-fsr0h+status,2+status,0+pclath]
  4189                           
  4190                           
  4191                           ;main.c: 525:     TRISD |= 0x0F;
  4192     0F73  300F               	movlw	15
  4193     0F74  1283               	bcf	3,5	;RP0=0, select bank0
  4194     0F75  1303               	bcf	3,6	;RP1=0, select bank0
  4195     0F76  00C3               	movwf	??_KeyPadReader
  4196     0F77  0843               	movf	??_KeyPadReader,w
  4197     0F78  1683               	bsf	3,5	;RP0=1, select bank1
  4198     0F79  1303               	bcf	3,6	;RP1=0, select bank1
  4199     0F7A  0488               	iorwf	8,f	;volatile
  4200     0F7B                     l2635:
  4201                           
  4202                           ;main.c: 528:     for (colScan = 0; colScan < 3; colScan++) {
  4203     0F7B  01F7               	clrf	_colScan
  4204     0F7C                     l2637:
  4205     0F7C  3003               	movlw	3
  4206     0F7D  0277               	subwf	_colScan,w
  4207     0F7E  1C03               	skipc
  4208     0F7F  2F81               	goto	u2921
  4209     0F80  2F82               	goto	u2920
  4210     0F81                     u2921:
  4211     0F81  2F83               	goto	l2641
  4212     0F82                     u2920:
  4213     0F82  2F7B               	goto	l2635
  4214     0F83                     l2641:
  4215                           
  4216                           ;main.c: 529:         PORTB = PORTB | 0x07;
  4217     0F83  1283               	bcf	3,5	;RP0=0, select bank0
  4218     0F84  1303               	bcf	3,6	;RP1=0, select bank0
  4219     0F85  0806               	movf	6,w	;volatile
  4220     0F86  3807               	iorlw	7
  4221     0F87  0086               	movwf	6	;volatile
  4222     0F88                     l2643:
  4223                           
  4224                           ;main.c: 530:         PORTB &= colMask[colScan];
  4225     0F88  0877               	movf	_colScan,w
  4226     0F89  3E11               	addlw	low ((_colMask-__stringbase)| (0+32768))
  4227     0F8A  0084               	movwf	4
  4228     0F8B  120A  118A  2710  120A  158A  	fcall	stringdir
  4229     0F90  00C3               	movwf	??_KeyPadReader
  4230     0F91  0843               	movf	??_KeyPadReader,w
  4231     0F92  0586               	andwf	6,f	;volatile
  4232     0F93                     l2645:
  4233                           
  4234                           ;main.c: 533:         for (rowScan = 0; rowScan < 4; rowScan++) {
  4235     0F93  01F6               	clrf	_rowScan
  4236     0F94                     l2647:
  4237     0F94  3004               	movlw	4
  4238     0F95  0276               	subwf	_rowScan,w
  4239     0F96  1C03               	skipc
  4240     0F97  2F99               	goto	u2931
  4241     0F98  2F9A               	goto	u2930
  4242     0F99                     u2931:
  4243     0F99  2F9B               	goto	l2651
  4244     0F9A                     u2930:
  4245     0F9A  2FFA               	goto	l2683
  4246     0F9B                     l2651:
  4247                           
  4248                           ;main.c: 534:             if (!(PORTD & rowMask[rowScan]) && (old_btn)) {
  4249     0F9B  0876               	movf	_rowScan,w
  4250     0F9C  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  4251     0F9D  0084               	movwf	4
  4252     0F9E  120A  118A  2710  120A  158A  	fcall	stringdir
  4253     0FA3  0508               	andwf	8,w	;volatile
  4254     0FA4  1D03               	btfss	3,2
  4255     0FA5  2FA7               	goto	u2941
  4256     0FA6  2FA8               	goto	u2940
  4257     0FA7                     u2941:
  4258     0FA7  2FB1               	goto	l2659
  4259     0FA8                     u2940:
  4260     0FA8                     l2653:
  4261     0FA8  1C78               	btfss	_old_btn/(0+8),_old_btn& (0+7)
  4262     0FA9  2FAB               	goto	u2951
  4263     0FAA  2FAC               	goto	u2950
  4264     0FAB                     u2951:
  4265     0FAB  2FB1               	goto	l2659
  4266     0FAC                     u2950:
  4267     0FAC                     l2655:
  4268                           
  4269                           ;main.c: 535:                 old_btn = 0;
  4270     0FAC  1078               	bcf	_old_btn/(0+8),_old_btn& (0+7)
  4271     0FAD                     l2657:
  4272                           
  4273                           ;main.c: 536:                 stato++;
  4274     0FAD  3001               	movlw	1
  4275     0FAE  00C3               	movwf	??_KeyPadReader
  4276     0FAF  0843               	movf	??_KeyPadReader,w
  4277     0FB0  07F5               	addwf	_stato,f
  4278     0FB1                     l2659:
  4279                           
  4280                           ;main.c: 538:             if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  4281     0FB1  0876               	movf	_rowScan,w
  4282     0FB2  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  4283     0FB3  0084               	movwf	4
  4284     0FB4  120A  118A  2710  120A  158A  	fcall	stringdir
  4285     0FB9  0508               	andwf	8,w	;volatile
  4286     0FBA  1903               	btfsc	3,2
  4287     0FBB  2FBD               	goto	u2961
  4288     0FBC  2FBE               	goto	u2960
  4289     0FBD                     u2961:
  4290     0FBD  2FE1               	goto	l2671
  4291     0FBE                     u2960:
  4292     0FBE                     l2661:
  4293     0FBE  1878               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  4294     0FBF  2FC1               	goto	u2971
  4295     0FC0  2FC2               	goto	u2970
  4296     0FC1                     u2971:
  4297     0FC1  2FE1               	goto	l2671
  4298     0FC2                     u2970:
  4299     0FC2                     l2663:
  4300                           
  4301                           ;main.c: 539:                 _delay((unsigned long)((10)*(20000000/4000.0)));
  4302     0FC2  3041               	movlw	65
  4303     0FC3  1283               	bcf	3,5	;RP0=0, select bank0
  4304     0FC4  1303               	bcf	3,6	;RP1=0, select bank0
  4305     0FC5  00C4               	movwf	??_KeyPadReader+1
  4306     0FC6  30ED               	movlw	237
  4307     0FC7  00C3               	movwf	??_KeyPadReader
  4308     0FC8                     u3827:
  4309     0FC8  0BC3               	decfsz	??_KeyPadReader,f
  4310     0FC9  2FC8               	goto	u3827
  4311     0FCA  0BC4               	decfsz	??_KeyPadReader+1,f
  4312     0FCB  2FC8               	goto	u3827
  4313     0FCC  2FCD               	nop2
  4314     0FCD                     l2665:
  4315                           
  4316                           ;main.c: 540:                 if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  4317     0FCD  0876               	movf	_rowScan,w
  4318     0FCE  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  4319     0FCF  0084               	movwf	4
  4320     0FD0  120A  118A  2710  120A  158A  	fcall	stringdir
  4321     0FD5  1283               	bcf	3,5	;RP0=0, select bank0
  4322     0FD6  1303               	bcf	3,6	;RP1=0, select bank0
  4323     0FD7  0508               	andwf	8,w	;volatile
  4324     0FD8  1903               	btfsc	3,2
  4325     0FD9  2FDB               	goto	u2981
  4326     0FDA  2FDC               	goto	u2980
  4327     0FDB                     u2981:
  4328     0FDB  2FE1               	goto	l2671
  4329     0FDC                     u2980:
  4330     0FDC                     l2667:
  4331     0FDC  1878               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  4332     0FDD  2FDF               	goto	u2991
  4333     0FDE  2FE0               	goto	u2990
  4334     0FDF                     u2991:
  4335     0FDF  2FE1               	goto	l2671
  4336     0FE0                     u2990:
  4337     0FE0                     l2669:
  4338                           
  4339                           ;main.c: 541:                     old_btn = 1;
  4340     0FE0  1478               	bsf	_old_btn/(0+8),_old_btn& (0+7)
  4341     0FE1                     l2671:
  4342                           
  4343                           ;main.c: 544:             if (stato != old_stato) {
  4344     0FE1  0875               	movf	_stato,w
  4345     0FE2  0638               	xorwf	_old_stato,w
  4346     0FE3  1903               	skipnz
  4347     0FE4  2FE6               	goto	u3001
  4348     0FE5  2FE7               	goto	u3000
  4349     0FE6                     u3001:
  4350     0FE6  2FF5               	goto	l2679
  4351     0FE7                     u3000:
  4352     0FE7                     l2673:
  4353                           
  4354                           ;main.c: 545:                 keypressed = rowScan + (4 * colScan);
  4355     0FE7  0877               	movf	_colScan,w
  4356     0FE8  00C3               	movwf	??_KeyPadReader
  4357     0FE9  3002               	movlw	2
  4358     0FEA                     u3015:
  4359     0FEA  1003               	clrc
  4360     0FEB  0DC3               	rlf	??_KeyPadReader,f
  4361     0FEC  3EFF               	addlw	-1
  4362     0FED  1D03               	skipz
  4363     0FEE  2FEA               	goto	u3015
  4364     0FEF  0876               	movf	_rowScan,w
  4365     0FF0  0743               	addwf	??_KeyPadReader,w
  4366     0FF1  00BA               	movwf	_keypressed
  4367     0FF2                     l2675:
  4368                           
  4369                           ;main.c: 548:                 old_stato = stato;
  4370     0FF2  0875               	movf	_stato,w
  4371     0FF3  00B8               	movwf	_old_stato
  4372     0FF4  2FFF               	goto	l323
  4373     0FF5                     l2679:
  4374                           
  4375                           ;main.c: 551:         }
  4376     0FF5  3001               	movlw	1
  4377     0FF6  00C3               	movwf	??_KeyPadReader
  4378     0FF7  0843               	movf	??_KeyPadReader,w
  4379     0FF8  07F6               	addwf	_rowScan,f
  4380     0FF9  2F94               	goto	l2647
  4381     0FFA                     l2683:
  4382                           
  4383                           ;main.c: 552:     }
  4384     0FFA  3001               	movlw	1
  4385     0FFB  00C3               	movwf	??_KeyPadReader
  4386     0FFC  0843               	movf	??_KeyPadReader,w
  4387     0FFD  07F7               	addwf	_colScan,f
  4388     0FFE  2F7C               	goto	l2637
  4389     0FFF                     l323:
  4390     0FFF  0008               	return
  4391     1000                     __end_of_KeyPadReader:
  4392                           
  4393                           	psect	text17
  4394     0D6B                     __ptext17:	
  4395 ;; *************** function _GenerateRandomNumber *****************
  4396 ;; Defined at:
  4397 ;;		line 514 in file "main.c"
  4398 ;; Parameters:    Size  Location     Type
  4399 ;;		None
  4400 ;; Auto vars:     Size  Location     Type
  4401 ;;  count           2    1[BANK0 ] unsigned int 
  4402 ;;  randomNum       1    0[BANK0 ] unsigned char 
  4403 ;; Return value:  Size  Location     Type
  4404 ;;                  1    wreg      unsigned char 
  4405 ;; Registers used:
  4406 ;;		wreg, status,2, status,0
  4407 ;; Tracked objects:
  4408 ;;		On entry : 0/0
  4409 ;;		On exit  : 0/0
  4410 ;;		Unchanged: 0/0
  4411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4412 ;;      Params:         0       0       0       0       0
  4413 ;;      Locals:         0       3       0       0       0
  4414 ;;      Temps:          0       0       0       0       0
  4415 ;;      Totals:         0       3       0       0       0
  4416 ;;Total ram usage:        3 bytes
  4417 ;; Hardware stack levels used: 1
  4418 ;; Hardware stack levels required when called: 2
  4419 ;; This function calls:
  4420 ;;		Nothing
  4421 ;; This function is called by:
  4422 ;;		_main
  4423 ;; This function uses a non-reentrant model
  4424 ;;
  4425                           
  4426     0D6B                     _GenerateRandomNumber:	
  4427                           ;psect for function _GenerateRandomNumber
  4428                           
  4429     0D6B                     l2621:	
  4430                           ;incstack = 0
  4431                           ; Regs used in _GenerateRandomNumber: [wreg+status,2+status,0]
  4432                           
  4433                           
  4434                           ;main.c: 515:     unsigned int count = 0;
  4435     0D6B  1283               	bcf	3,5	;RP0=0, select bank0
  4436     0D6C  1303               	bcf	3,6	;RP1=0, select bank0
  4437     0D6D  01C4               	clrf	GenerateRandomNumber@count
  4438     0D6E  01C5               	clrf	GenerateRandomNumber@count+1
  4439                           
  4440                           ;main.c: 516:     while (count != 186){
  4441     0D6F  2D76               	goto	l2625
  4442     0D70                     l2623:
  4443                           
  4444                           ;main.c: 517:         count++;
  4445     0D70  3001               	movlw	1
  4446     0D71  07C4               	addwf	GenerateRandomNumber@count,f
  4447     0D72  1803               	skipnc
  4448     0D73  0AC5               	incf	GenerateRandomNumber@count+1,f
  4449     0D74  3000               	movlw	0
  4450     0D75  07C5               	addwf	GenerateRandomNumber@count+1,f
  4451     0D76                     l2625:
  4452                           
  4453                           ;main.c: 516:     while (count != 186){
  4454     0D76  30BA               	movlw	186
  4455     0D77  0644               	xorwf	GenerateRandomNumber@count,w
  4456     0D78  0445               	iorwf	GenerateRandomNumber@count+1,w
  4457     0D79  1D03               	btfss	3,2
  4458     0D7A  2D7C               	goto	u2911
  4459     0D7B  2D7D               	goto	u2910
  4460     0D7C                     u2911:
  4461     0D7C  2D70               	goto	l2623
  4462     0D7D                     u2910:
  4463     0D7D                     l2627:
  4464                           
  4465                           ;main.c: 519:     unsigned char randomNum = TMR0;
  4466     0D7D  0801               	movf	1,w	;volatile
  4467     0D7E  00C3               	movwf	GenerateRandomNumber@randomNum
  4468     0D7F                     l2629:
  4469                           
  4470                           ;main.c: 520:     TMR0IF = 0;
  4471     0D7F  110B               	bcf	11,2	;volatile
  4472                           
  4473                           ;main.c: 521:     return randomNum;
  4474     0D80  0843               	movf	GenerateRandomNumber@randomNum,w
  4475     0D81                     l311:
  4476     0D81  0008               	return
  4477     0D82                     __end_of_GenerateRandomNumber:
  4478                           
  4479                           	psect	text18
  4480     0625                     __ptext18:	
  4481 ;; *************** function _ISR *****************
  4482 ;; Defined at:
  4483 ;;		line 407 in file "main.c"
  4484 ;; Parameters:    Size  Location     Type
  4485 ;;		None
  4486 ;; Auto vars:     Size  Location     Type
  4487 ;;		None
  4488 ;; Return value:  Size  Location     Type
  4489 ;;                  1    wreg      void 
  4490 ;; Registers used:
  4491 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4492 ;; Tracked objects:
  4493 ;;		On entry : 0/0
  4494 ;;		On exit  : 0/0
  4495 ;;		Unchanged: 0/0
  4496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4497 ;;      Params:         0       0       0       0       0
  4498 ;;      Locals:         0       0       0       0       0
  4499 ;;      Temps:          5       0       0       0       0
  4500 ;;      Totals:         5       0       0       0       0
  4501 ;;Total ram usage:        5 bytes
  4502 ;; Hardware stack levels used: 2
  4503 ;; This function calls:
  4504 ;;		Nothing
  4505 ;; This function is called by:
  4506 ;;		Interrupt level 1
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510     0625                     _ISR:	
  4511                           ;psect for function _ISR
  4512                           
  4513     0625                     i1l2401:
  4514     0625                     i1l248:	
  4515                           ;main.c: 410:     }
  4516                           
  4517                           
  4518                           ;main.c: 408:     while (!TMR0IF){
  4519     0625  1D0B               	btfss	11,2	;volatile
  4520     0626  2E28               	goto	u246_21
  4521     0627  2E29               	goto	u246_20
  4522     0628                     u246_21:
  4523     0628  2E25               	goto	i1l248
  4524     0629                     u246_20:
  4525     0629                     i1l250:
  4526                           
  4527                           ;main.c: 411:     TMR0IF = 0;
  4528     0629  110B               	bcf	11,2	;volatile
  4529     062A                     i1l251:	
  4530                           ;main.c: 414:     }
  4531                           
  4532                           
  4533                           ;main.c: 412:     while (!TMR0IF){
  4534     062A  1D0B               	btfss	11,2	;volatile
  4535     062B  2E2D               	goto	u247_21
  4536     062C  2E2E               	goto	u247_20
  4537     062D                     u247_21:
  4538     062D  2E2A               	goto	i1l251
  4539     062E                     u247_20:
  4540     062E                     i1l253:
  4541                           
  4542                           ;main.c: 415:     TMR0IF = 0;
  4543     062E  110B               	bcf	11,2	;volatile
  4544     062F                     i1l254:	
  4545                           ;main.c: 418:     }
  4546                           
  4547                           
  4548                           ;main.c: 416:     while (!TMR0IF){
  4549     062F  1D0B               	btfss	11,2	;volatile
  4550     0630  2E32               	goto	u248_21
  4551     0631  2E33               	goto	u248_20
  4552     0632                     u248_21:
  4553     0632  2E2F               	goto	i1l254
  4554     0633                     u248_20:
  4555     0633                     i1l256:
  4556                           
  4557                           ;main.c: 419:     TMR0IF = 0;
  4558     0633  110B               	bcf	11,2	;volatile
  4559     0634                     i1l257:	
  4560                           ;main.c: 422:     }
  4561                           
  4562                           
  4563                           ;main.c: 420:     while (!TMR0IF){
  4564     0634  1D0B               	btfss	11,2	;volatile
  4565     0635  2E37               	goto	u249_21
  4566     0636  2E38               	goto	u249_20
  4567     0637                     u249_21:
  4568     0637  2E34               	goto	i1l257
  4569     0638                     u249_20:
  4570     0638                     i1l259:
  4571                           
  4572                           ;main.c: 423:     TMR0IF = 0;
  4573     0638  110B               	bcf	11,2	;volatile
  4574     0639                     i1l260:	
  4575                           ;main.c: 426:     }
  4576                           
  4577                           
  4578                           ;main.c: 424:     while (!TMR0IF){
  4579     0639  1D0B               	btfss	11,2	;volatile
  4580     063A  2E3C               	goto	u250_21
  4581     063B  2E3D               	goto	u250_20
  4582     063C                     u250_21:
  4583     063C  2E39               	goto	i1l260
  4584     063D                     u250_20:
  4585     063D                     i1l262:
  4586                           
  4587                           ;main.c: 427:     TMR0IF = 0;
  4588     063D  110B               	bcf	11,2	;volatile
  4589     063E                     i1l263:	
  4590                           ;main.c: 430:     }
  4591                           
  4592                           
  4593                           ;main.c: 428:     while (!TMR0IF){
  4594     063E  1D0B               	btfss	11,2	;volatile
  4595     063F  2E41               	goto	u251_21
  4596     0640  2E42               	goto	u251_20
  4597     0641                     u251_21:
  4598     0641  2E3E               	goto	i1l263
  4599     0642                     u251_20:
  4600     0642                     i1l265:
  4601                           
  4602                           ;main.c: 431:     TMR0IF = 0;
  4603     0642  110B               	bcf	11,2	;volatile
  4604     0643                     i1l266:	
  4605                           ;main.c: 434:     }
  4606                           
  4607                           
  4608                           ;main.c: 432:     while (!TMR0IF){
  4609     0643  1D0B               	btfss	11,2	;volatile
  4610     0644  2E46               	goto	u252_21
  4611     0645  2E47               	goto	u252_20
  4612     0646                     u252_21:
  4613     0646  2E43               	goto	i1l266
  4614     0647                     u252_20:
  4615     0647                     i1l268:
  4616                           
  4617                           ;main.c: 435:     TMR0IF = 0;
  4618     0647  110B               	bcf	11,2	;volatile
  4619     0648                     i1l269:	
  4620                           ;main.c: 438:     }
  4621                           
  4622                           
  4623                           ;main.c: 436:     while (!TMR0IF){
  4624     0648  1D0B               	btfss	11,2	;volatile
  4625     0649  2E4B               	goto	u253_21
  4626     064A  2E4C               	goto	u253_20
  4627     064B                     u253_21:
  4628     064B  2E48               	goto	i1l269
  4629     064C                     u253_20:
  4630     064C                     i1l271:
  4631                           
  4632                           ;main.c: 439:     TMR0IF = 0;
  4633     064C  110B               	bcf	11,2	;volatile
  4634     064D                     i1l272:	
  4635                           ;main.c: 442:     }
  4636                           
  4637                           
  4638                           ;main.c: 440:     while (!TMR0IF){
  4639     064D  1D0B               	btfss	11,2	;volatile
  4640     064E  2E50               	goto	u254_21
  4641     064F  2E51               	goto	u254_20
  4642     0650                     u254_21:
  4643     0650  2E4D               	goto	i1l272
  4644     0651                     u254_20:
  4645     0651                     i1l274:
  4646                           
  4647                           ;main.c: 443:     TMR0IF = 0;
  4648     0651  110B               	bcf	11,2	;volatile
  4649     0652                     i1l275:	
  4650                           ;main.c: 446:     }
  4651                           
  4652                           
  4653                           ;main.c: 444:     while (!TMR0IF){
  4654     0652  1D0B               	btfss	11,2	;volatile
  4655     0653  2E55               	goto	u255_21
  4656     0654  2E56               	goto	u255_20
  4657     0655                     u255_21:
  4658     0655  2E52               	goto	i1l275
  4659     0656                     u255_20:
  4660     0656                     i1l277:
  4661                           
  4662                           ;main.c: 447:     TMR0IF = 0;
  4663     0656  110B               	bcf	11,2	;volatile
  4664     0657                     i1l278:	
  4665                           ;main.c: 450:     }
  4666                           
  4667                           
  4668                           ;main.c: 448:     while (!TMR0IF){
  4669     0657  1D0B               	btfss	11,2	;volatile
  4670     0658  2E5A               	goto	u256_21
  4671     0659  2E5B               	goto	u256_20
  4672     065A                     u256_21:
  4673     065A  2E57               	goto	i1l278
  4674     065B                     u256_20:
  4675     065B                     i1l280:
  4676                           
  4677                           ;main.c: 451:     TMR0IF = 0;
  4678     065B  110B               	bcf	11,2	;volatile
  4679     065C                     i1l281:	
  4680                           ;main.c: 454:     }
  4681                           
  4682                           
  4683                           ;main.c: 452:     while (!TMR0IF){
  4684     065C  1D0B               	btfss	11,2	;volatile
  4685     065D  2E5F               	goto	u257_21
  4686     065E  2E60               	goto	u257_20
  4687     065F                     u257_21:
  4688     065F  2E5C               	goto	i1l281
  4689     0660                     u257_20:
  4690     0660                     i1l283:
  4691                           
  4692                           ;main.c: 455:     TMR0IF = 0;
  4693     0660  110B               	bcf	11,2	;volatile
  4694     0661                     i1l284:	
  4695                           ;main.c: 458:     }
  4696                           
  4697                           
  4698                           ;main.c: 456:     while (!TMR0IF){
  4699     0661  1D0B               	btfss	11,2	;volatile
  4700     0662  2E64               	goto	u258_21
  4701     0663  2E65               	goto	u258_20
  4702     0664                     u258_21:
  4703     0664  2E61               	goto	i1l284
  4704     0665                     u258_20:
  4705     0665                     i1l286:
  4706                           
  4707                           ;main.c: 459:     TMR0IF = 0;
  4708     0665  110B               	bcf	11,2	;volatile
  4709     0666                     i1l287:	
  4710                           ;main.c: 462:     }
  4711                           
  4712                           
  4713                           ;main.c: 460:     while (!TMR0IF){
  4714     0666  1D0B               	btfss	11,2	;volatile
  4715     0667  2E69               	goto	u259_21
  4716     0668  2E6A               	goto	u259_20
  4717     0669                     u259_21:
  4718     0669  2E66               	goto	i1l287
  4719     066A                     u259_20:
  4720     066A                     i1l289:
  4721                           
  4722                           ;main.c: 463:     TMR0IF = 0;
  4723     066A  110B               	bcf	11,2	;volatile
  4724     066B                     i1l290:	
  4725                           ;main.c: 466:     }
  4726                           
  4727                           
  4728                           ;main.c: 464:     while (!TMR0IF){
  4729     066B  1D0B               	btfss	11,2	;volatile
  4730     066C  2E6E               	goto	u260_21
  4731     066D  2E6F               	goto	u260_20
  4732     066E                     u260_21:
  4733     066E  2E6B               	goto	i1l290
  4734     066F                     u260_20:
  4735     066F                     i1l292:
  4736                           
  4737                           ;main.c: 467:     TMR0IF = 0;
  4738     066F  110B               	bcf	11,2	;volatile
  4739     0670                     i1l2403:
  4740                           
  4741                           ;main.c: 468:     if(flag == 1){
  4742     0670  1283               	bcf	3,5	;RP0=0, select bank0
  4743     0671  1303               	bcf	3,6	;RP1=0, select bank0
  4744     0672  0330               	decf	_flag,w
  4745     0673  0431               	iorwf	_flag+1,w
  4746     0674  1D03               	btfss	3,2
  4747     0675  2E77               	goto	u261_21
  4748     0676  2E78               	goto	u261_20
  4749     0677                     u261_21:
  4750     0677  2EFB               	goto	i1l302
  4751     0678                     u261_20:
  4752     0678                     i1l2405:
  4753                           
  4754                           ;main.c: 469:         TRISD |= 0x0F;
  4755     0678  300F               	movlw	15
  4756     0679  00F0               	movwf	??_ISR
  4757     067A  0870               	movf	??_ISR,w
  4758     067B  1683               	bsf	3,5	;RP0=1, select bank1
  4759     067C  1303               	bcf	3,6	;RP1=0, select bank1
  4760     067D  0488               	iorwf	8,f	;volatile
  4761     067E                     i1l2407:
  4762                           
  4763                           ;main.c: 471:         for (colScan = 0; colScan < 3; colScan++) {
  4764     067E  01F7               	clrf	_colScan
  4765     067F                     i1l2409:
  4766     067F  3003               	movlw	3
  4767     0680  0277               	subwf	_colScan,w
  4768     0681  1C03               	skipc
  4769     0682  2E84               	goto	u262_21
  4770     0683  2E85               	goto	u262_20
  4771     0684                     u262_21:
  4772     0684  2E86               	goto	i1l2413
  4773     0685                     u262_20:
  4774     0685  2EF8               	goto	i1l2453
  4775     0686                     i1l2413:
  4776                           
  4777                           ;main.c: 472:             PORTB = PORTB | 0x07;
  4778     0686  1283               	bcf	3,5	;RP0=0, select bank0
  4779     0687  0806               	movf	6,w	;volatile
  4780     0688  3807               	iorlw	7
  4781     0689  0086               	movwf	6	;volatile
  4782     068A                     i1l2415:
  4783                           
  4784                           ;main.c: 473:             PORTB &= colMask[colScan];
  4785     068A  0877               	movf	_colScan,w
  4786     068B  3E11               	addlw	low ((_colMask-__stringbase)| (0+32768))
  4787     068C  0084               	movwf	4
  4788     068D  120A  118A  2710  120A  118A  	fcall	stringdir
  4789     0692  00F0               	movwf	??_ISR
  4790     0693  0870               	movf	??_ISR,w
  4791     0694  0586               	andwf	6,f	;volatile
  4792     0695                     i1l2417:
  4793                           
  4794                           ;main.c: 476:             for (rowScan = 0; rowScan < 4; rowScan++) {
  4795     0695  01F6               	clrf	_rowScan
  4796     0696                     i1l2419:
  4797     0696  3004               	movlw	4
  4798     0697  0276               	subwf	_rowScan,w
  4799     0698  1C03               	skipc
  4800     0699  2E9B               	goto	u263_21
  4801     069A  2E9C               	goto	u263_20
  4802     069B                     u263_21:
  4803     069B  2E9D               	goto	i1l2423
  4804     069C                     u263_20:
  4805     069C  2EF3               	goto	i1l2449
  4806     069D                     i1l2423:
  4807                           
  4808                           ;main.c: 477:                 if (!(PORTD & rowMask[rowScan]) && (old_btn)) {
  4809     069D  0876               	movf	_rowScan,w
  4810     069E  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  4811     069F  0084               	movwf	4
  4812     06A0  120A  118A  2710  120A  118A  	fcall	stringdir
  4813     06A5  0508               	andwf	8,w	;volatile
  4814     06A6  1D03               	btfss	3,2
  4815     06A7  2EA9               	goto	u264_21
  4816     06A8  2EAA               	goto	u264_20
  4817     06A9                     u264_21:
  4818     06A9  2EB3               	goto	i1l2431
  4819     06AA                     u264_20:
  4820     06AA                     i1l2425:
  4821     06AA  1C78               	btfss	_old_btn/(0+8),_old_btn& (0+7)
  4822     06AB  2EAD               	goto	u265_21
  4823     06AC  2EAE               	goto	u265_20
  4824     06AD                     u265_21:
  4825     06AD  2EB3               	goto	i1l2431
  4826     06AE                     u265_20:
  4827     06AE                     i1l2427:
  4828                           
  4829                           ;main.c: 478:                     old_btn = 0;
  4830     06AE  1078               	bcf	_old_btn/(0+8),_old_btn& (0+7)
  4831     06AF                     i1l2429:
  4832                           
  4833                           ;main.c: 479:                     stato++;
  4834     06AF  3001               	movlw	1
  4835     06B0  00F0               	movwf	??_ISR
  4836     06B1  0870               	movf	??_ISR,w
  4837     06B2  07F5               	addwf	_stato,f
  4838     06B3                     i1l2431:
  4839                           
  4840                           ;main.c: 481:                 if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  4841     06B3  0876               	movf	_rowScan,w
  4842     06B4  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  4843     06B5  0084               	movwf	4
  4844     06B6  120A  118A  2710  120A  118A  	fcall	stringdir
  4845     06BB  0508               	andwf	8,w	;volatile
  4846     06BC  1903               	btfsc	3,2
  4847     06BD  2EBF               	goto	u266_21
  4848     06BE  2EC0               	goto	u266_20
  4849     06BF                     u266_21:
  4850     06BF  2ED6               	goto	i1l2441
  4851     06C0                     u266_20:
  4852     06C0                     i1l2433:
  4853     06C0  1878               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  4854     06C1  2EC3               	goto	u267_21
  4855     06C2  2EC4               	goto	u267_20
  4856     06C3                     u267_21:
  4857     06C3  2ED6               	goto	i1l2441
  4858     06C4                     u267_20:
  4859     06C4                     i1l2435:
  4860                           
  4861                           ;main.c: 483:                     if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  4862     06C4  0876               	movf	_rowScan,w
  4863     06C5  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  4864     06C6  0084               	movwf	4
  4865     06C7  120A  118A  2710  120A  118A  	fcall	stringdir
  4866     06CC  0508               	andwf	8,w	;volatile
  4867     06CD  1903               	btfsc	3,2
  4868     06CE  2ED0               	goto	u268_21
  4869     06CF  2ED1               	goto	u268_20
  4870     06D0                     u268_21:
  4871     06D0  2ED6               	goto	i1l2441
  4872     06D1                     u268_20:
  4873     06D1                     i1l2437:
  4874     06D1  1878               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  4875     06D2  2ED4               	goto	u269_21
  4876     06D3  2ED5               	goto	u269_20
  4877     06D4                     u269_21:
  4878     06D4  2ED6               	goto	i1l2441
  4879     06D5                     u269_20:
  4880     06D5                     i1l2439:
  4881                           
  4882                           ;main.c: 484:                         old_btn = 1;
  4883     06D5  1478               	bsf	_old_btn/(0+8),_old_btn& (0+7)
  4884     06D6                     i1l2441:
  4885                           
  4886                           ;main.c: 487:                 if (stato != old_stato) {
  4887     06D6  0875               	movf	_stato,w
  4888     06D7  0638               	xorwf	_old_stato,w
  4889     06D8  1903               	skipnz
  4890     06D9  2EDB               	goto	u270_21
  4891     06DA  2EDC               	goto	u270_20
  4892     06DB                     u270_21:
  4893     06DB  2EE9               	goto	i1l2447
  4894     06DC                     u270_20:
  4895     06DC                     i1l2443:
  4896                           
  4897                           ;main.c: 488:                     keypressed = rowScan + (4 * colScan);
  4898     06DC  0877               	movf	_colScan,w
  4899     06DD  00F0               	movwf	??_ISR
  4900     06DE  3002               	movlw	2
  4901     06DF                     u271_25:
  4902     06DF  1003               	clrc
  4903     06E0  0DF0               	rlf	??_ISR,f
  4904     06E1  3EFF               	addlw	-1
  4905     06E2  1D03               	skipz
  4906     06E3  2EDF               	goto	u271_25
  4907     06E4  0876               	movf	_rowScan,w
  4908     06E5  0770               	addwf	??_ISR,w
  4909     06E6  00BA               	movwf	_keypressed
  4910     06E7                     i1l2445:
  4911                           
  4912                           ;main.c: 491:                     old_stato = stato;
  4913     06E7  0875               	movf	_stato,w
  4914     06E8  00B8               	movwf	_old_stato
  4915     06E9                     i1l2447:
  4916                           
  4917                           ;main.c: 493:             }
  4918     06E9  3001               	movlw	1
  4919     06EA  00F0               	movwf	??_ISR
  4920     06EB  0870               	movf	??_ISR,w
  4921     06EC  07F6               	addwf	_rowScan,f
  4922     06ED  3004               	movlw	4
  4923     06EE  0276               	subwf	_rowScan,w
  4924     06EF  1C03               	skipc
  4925     06F0  2EF2               	goto	u272_21
  4926     06F1  2EF3               	goto	u272_20
  4927     06F2                     u272_21:
  4928     06F2  2E9D               	goto	i1l2423
  4929     06F3                     u272_20:
  4930     06F3                     i1l2449:
  4931                           
  4932                           ;main.c: 494:         }
  4933     06F3  3001               	movlw	1
  4934     06F4  00F0               	movwf	??_ISR
  4935     06F5  0870               	movf	??_ISR,w
  4936     06F6  07F7               	addwf	_colScan,f
  4937     06F7  2E7F               	goto	i1l2409
  4938     06F8                     i1l2453:
  4939                           
  4940                           ;main.c: 495:         TRISD |= 0x00;
  4941     06F8  1683               	bsf	3,5	;RP0=1, select bank1
  4942     06F9  1303               	bcf	3,6	;RP1=0, select bank1
  4943     06FA  0808               	movf	8,w	;volatile
  4944     06FB                     i1l302:
  4945     06FB  0874               	movf	??_ISR+4,w
  4946     06FC  00FF               	movwf	btemp+1
  4947     06FD  0873               	movf	??_ISR+3,w
  4948     06FE  008A               	movwf	10
  4949     06FF  0872               	movf	??_ISR+2,w
  4950     0700  0084               	movwf	4
  4951     0701  0E71               	swapf	??_ISR+1,w
  4952     0702  0083               	movwf	3
  4953     0703  0EFE               	swapf	btemp,f
  4954     0704  0E7E               	swapf	btemp,w
  4955     0705  0009               	retfie
  4956     0706                     __end_of_ISR:
  4957     007E                     btemp	set	126	;btemp
  4958     007E                     wtemp0	set	126
  4959                           
  4960                           	psect	intentry
  4961     0004                     __pintentry:	
  4962                           ;incstack = 0
  4963                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath]
  4964                           
  4965     0004                     interrupt_function:
  4966     007E                     saved_w	set	btemp
  4967     0004  00FE               	movwf	btemp
  4968     0005  0E03               	swapf	3,w
  4969     0006  00F1               	movwf	??_ISR+1
  4970     0007  0804               	movf	4,w
  4971     0008  00F2               	movwf	??_ISR+2
  4972     0009  080A               	movf	10,w
  4973     000A  00F3               	movwf	??_ISR+3
  4974     000B  087F               	movf	btemp+1,w
  4975     000C  00F4               	movwf	??_ISR+4
  4976     000D  120A  118A  2E25   	ljmp	_ISR
  4977                           
  4978                           	psect	idloc
  4979                           
  4980                           ;Config register IDLOC0 @ 0x2000
  4981                           ;	unspecified, using default values
  4982     2000                     	org	8192
  4983     2000  3FFF               	dw	16383
  4984                           
  4985                           ;Config register IDLOC1 @ 0x2001
  4986                           ;	unspecified, using default values
  4987     2001                     	org	8193
  4988     2001  3FFF               	dw	16383
  4989                           
  4990                           ;Config register IDLOC2 @ 0x2002
  4991                           ;	unspecified, using default values
  4992     2002                     	org	8194
  4993     2002  3FFF               	dw	16383
  4994                           
  4995                           ;Config register IDLOC3 @ 0x2003
  4996                           ;	unspecified, using default values
  4997     2003                     	org	8195
  4998     2003  3FFF               	dw	16383
  4999                           
  5000                           	psect	config
  5001                           
  5002                           ;Config register CONFIG @ 0x2007
  5003                           ;	Oscillator Selection bits
  5004                           ;	FOSC = HS, HS oscillator
  5005                           ;	Watchdog Timer Enable bit
  5006                           ;	WDTE = OFF, WDT disabled
  5007                           ;	Power-up Timer Enable bit
  5008                           ;	PWRTE = OFF, PWRT disabled
  5009                           ;	Brown-out Reset Enable bit
  5010                           ;	BOREN = OFF, BOR disabled
  5011                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5012                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  5013                           ;	Data EEPROM Memory Code Protection bit
  5014                           ;	CPD = OFF, Data EEPROM code protection off
  5015                           ;	Flash Program Memory Write Enable bits
  5016                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  5017                           ;	In-Circuit Debugger Mode bit
  5018                           ;	DEBUG = 0x1, unprogrammed default
  5019                           ;	Flash Program Memory Code Protection bit
  5020                           ;	CP = OFF, Code protection off
  5021     2007                     	org	8199
  5022     2007  3F3A               	dw	16186

Data Sizes:
    Strings     127
    Constant    19
    Data        3
    BSS         54
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     32      69
    BANK1            80      0      16
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    intToString@str	PTR unsigned char  size(1) Largest target is 3
		 -> print_countdown(BANK0[3]), 

    lcdPrint@str	PTR unsigned char  size(2) Largest target is 15
		 -> STR_12(CODE[15]), STR_11(CODE[8]), STR_10(CODE[14]), STR_9(CODE[13]), 
		 -> STR_8(CODE[9]), print_countdown(BANK0[3]), STR_7(CODE[10]), STR_6(CODE[14]), 
		 -> STR_5(CODE[13]), STR_4(CODE[12]), STR_3(CODE[11]), STR_2(CODE[10]), 
		 -> STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_UART_Read1
    _initLCD->_lcdSend
    _UART_Read2->_intToString
    _UART_Read1->_intToString
    _lcdPrint->_lcdSend
    _intToString->___awdiv
    _potenza->___bmul
    ___awdiv->_potenza

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   36105
               _GenerateRandomNumber
                       _KeyPadReader
                     _RS485_RxEnable
                     _RS485_TxEnable
                        _Timer0_Init
                          _UART_Init
                         _UART_Read1
                         _UART_Read2
                         _UART_Write
                            _initLCD
                           _lcdPrint
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0    3752
                                              2 BANK0      2     2      0
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _UART_Read2                                           3     3      0   11499
                                             28 BANK0      3     3      0
                        _intToString
                           _lcdPrint
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _UART_Read1                                           4     4      0   11858
                                             28 BANK0      4     4      0
                     _RS485_RxEnable
                     _RS485_TxEnable
                         _UART_Write
                        _intToString
                           _lcdPrint
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _lcdPrint                                             7     5      2    5142
                                              2 BANK0      7     5      2
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _lcdSend                                              2     1      1    3752
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _intToString                                          9     6      3    2605
                                             19 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                            _potenza
 ---------------------------------------------------------------------------------
 (3) _potenza                                              6     5      1     573
                                              4 BANK0      6     5      1
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     226
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     613
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     604
                                             10 BANK0      9     5      4
                            _potenza (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RS485_TxEnable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RS485_RxEnable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _KeyPadReader                                         2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _GenerateRandomNumber                                 3     3      0      71
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GenerateRandomNumber
   _KeyPadReader
   _RS485_RxEnable
   _RS485_TxEnable
   _Timer0_Init
   _UART_Init
   _UART_Read1
     _RS485_RxEnable
     _RS485_TxEnable
     _UART_Write
     _intToString
       ___awdiv
         _potenza (ARG)
           ___bmul
       ___awmod
       _potenza
     _lcdPrint
       _lcdSend
     _lcdSend
   _UART_Read2
     _intToString
     _lcdPrint
     _lcdSend
   _UART_Write
   _initLCD
     _lcdSend
   _lcdPrint
   _lcdSend

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      10       7       20.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     20      45       5       86.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       1       0        7.1%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5F      12        0.0%
ABS                  0      0      5F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Jun 21 16:54:53 2023

                            pc 0002                 ___bmul@product 0045                   ___awdiv@sign 0053  
                           fsr 0004                            l201 0D3D                            l204 0D43  
                          l212 0584                            l230 0529                            l311 0D81  
                          l208 052B                            l305 07FE                            l217 0624  
                          l330 0DC4                            l234 0EF6                            l323 0FFF  
                          l243 07EF                            l237 0D6A                            l192 0D55  
                          l195 0D31                            l451 0D98                            l339 0F72  
                          l198 0D2C                            l591 0E1F                            l578 0E88  
                          _GIE 005F                            _RC0 0038                            _RC1 0039  
                          _PS0 0408                            _PS1 0409                            _PS2 040A  
                          _ISR 0625                            _PSA 040B                            _id1 0064  
                          _id2 0063                            fsr0 0004                            indf 0000  
                 ___awmod@sign 0049                           ?_ISR 0070                           l3001 019F  
                         l3011 01C7                           l3003 01AB                           l3101 0300  
                         l3021 01E5                           l3013 01CD                           l3005 01B3  
                         l3111 032B                           l3103 030A                           l3031 020C  
                         l3023 01EB                           l3015 01D3                           l3007 01BB  
                         l3113 0330                           l3105 0314                           l3041 022C  
                         l3033 0214                           l3017 01D9                           l3009 01C1  
                         l3025 01F1                           l3115 0336                           l3107 031E  
                         l3043 0232                           l3035 021A                           l3051 024A  
                         l3027 01F8                           l3019 01DF                           l2501 0DC8  
                         l3117 033B                           l3109 0328                           l3061 0273  
                         l3053 0251                           l3045 0238                           l3037 0220  
                         l3029 0204                           l2511 0DDC                           l2503 0DCC  
                         l3071 0291                           l3063 0279                           l3055 025D  
                         l3047 023E                           l3039 0226                           l2521 0DF4  
                         l2513 0DE2                           l2505 0DD1                           l2601 0EC9  
                         l3081 02B3                           l3073 0297                           l3065 027F  
                         l3057 0265                           l3049 0244                           l2611 07F0  
                         l2531 0E16                           l2523 0DFE                           l2515 0DE5  
                         l2507 0DD3                           l2603 0ED2                           l3091 02D9  
                         l3083 02B9                           l3075 029D                           l3067 0285  
                         l3059 026D                           l2621 0D6B                           l2613 07F7  
                         l1741 0E27                           l2533 0E1B                           l2525 0E04  
                         l2517 0DEC                           l2509 0DD7                           l2461 0D8E  
                         l2541 07CB                           l2701 0374                           l2605 0EDB  
                         l3093 02E1                           l3085 02C1                           l3069 028B  
                         l3077 02A3                           l2623 0D70                           l2615 07FB  
                         l2551 0D28                           l1751 0E3B                           l1743 0E2C  
                         l2527 0E0B                           l2519 0DF0                           l2463 0D90  
                         l2455 0D85                           l2471 0D5C                           l2543 07D3  
                         l2711 038E                           l2703 037F                           l2607 0EE4  
                         l3095 02E7                           l3087 02C9                           l3079 02AF  
                         l2625 0D76                           l2641 0F83                           l2633 0F73  
                         l2617 07FC                           l2545 0D2D                           l1761 0E51  
                         l1753 0E3D                           l1745 0E2E                           l1737 0E20  
                         l2529 0E11                           l2465 0D97                           l2457 0D86  
                         l2561 0F21                           l2553 0EF7                           l2481 0D68  
                         l2473 0D5D                           l2537 07A8                           l2801 04EA  
                         l2713 0396                           l2721 03B7                           l2705 0380  
                         l2609 0EED                           l3097 02ED                           l3089 02D1  
                         l2627 0D7D                           l2651 0F9B                           l2643 0F88  
                         l2635 0F7B                           l2619 07FD                           l2547 0D3D  
                         l1771 0E74                           l1763 0E55                           l1755 0E43  
                         l1747 0E32                           l1739 0E23                           l2459 0D8A  
                         l2491 0DAE                           l2563 0F23                           l2571 0F65  
                         l2555 0EFB                           l2483 0D69                           l2475 0D5E  
                         l2539 07AD                           l2811 050A                           l2803 04F8  
                         l2731 03E6                           l2723 03BC                           l2715 03A7  
                         l2707 0384                           l3099 02F6                           l2629 0D7F  
                         l2661 0FBE                           l2653 0FA8                           l2645 0F93  
                         l2637 0F7C                           l2581 0D4C                           l2549 0D41  
                         l1765 0E66                           l1757 0E46                           l1773 0E7A  
                         l1749 0E37                           l2493 0DB4                           l2485 0D9C  
                         l2573 0F6B                           l2565 0F30                           l2557 0EFC  
                         l2477 0D61                           l2469 0D59                           l2813 0515  
                         l2741 03FE                           l2733 03E7                           l2725 03C2  
                         l2717 03B2                           l2709 0389                           l2901 004A  
                         l2663 0FC2                           l2671 0FE1                           l2655 0FAC  
                         l2647 0F94                           l2583 0D4F                           l2575 0D44  
                         l1775 0E7F                           l1767 0E6C                           l1759 0E4D  
                         l2495 0DC1                           l2487 0D9E                           l2567 0F4B  
                         l2559 0F00                           l2479 0D63                           l2815 0518  
                         l2751 0424                           l2743 040F                           l2727 03CA  
                         l2735 03EB                           l2719 03B3                           l2807 04FC  
                         l2831 0553                           l2823 052A                           l2591 0E97  
                         l2911 006D                           l2903 004F                           l2673 0FE7  
                         l2665 0FCD                           l2657 0FAD                           l2585 0D52  
                         l2577 0D49                           l1777 0E84                           l1769 0E6D  
                         l2489 0DA1                           l2569 0F61                           l2817 051A  
                         l2809 0501                           l2761 044F                           l2753 042A  
                         l2745 041A                           l2737 03F0                           l2729 03DB  
                         l2833 055C                           l2825 0531                           l2841 057C  
                         l2593 0E9A                           l2921 008B                           l2913 0073  
                         l2905 0054                           l2675 0FF2                           l2667 0FDC  
                         l2659 0FB1                           l2683 0FFA                           l2579 0D4B  
                         l2499 0DC5                           l2771 0477                           l2755 0432  
                         l2763 0453                           l2747 041B                           l2739 03F6  
                         l2691 034A                           l2851 058F                           l2843 0582  
                         l2835 0567                           l2827 0538                           l2595 0EA1  
                         l2587 0E89                           l2931 00AB                           l2923 0091  
                         l2915 0079                           l2907 005D                           l2669 0FE0  
                         l2781 04A0                           l2765 0461                           l2757 0443  
                         l2749 041F                           l2693 0352                           l2773 0487  
                         l2861 05B9                           l2853 0590                           l2845 0583  
                         l2837 0569                           l2829 0543                           l2597 0EB5  
                         l2589 0E8D                           l2941 00D1                           l2933 00B3  
                         l2925 0097                           l2917 007F                           l2909 0068  
                         l2679 0FF5                           l2791 04C6                           l2783 04A8  
                         l2775 048C                           l2767 046A                           l2759 044E  
                         l2695 0357                           l2687 0344                           l2871 05E0  
                         l2863 05C2                           l2855 0597                           l2847 0588  
                         l2839 056C                           l2599 0EC0                           l2951 00F9  
                         l2935 00BB                           l2927 009D                           l2919 0085  
                         l2793 04CC                           l2785 04B0                           l2777 0492  
                         l2769 0475                           l2697 035C                           l2689 0347  
                         l2873 05E9                           l2865 05CD                           l2857 05A2  
                         l2849 058E                           l2881 0605                           l2961 011B  
                         l2953 0101                           l2945 00E1                           l2937 00C3  
                         l2929 00A3                           l2795 04DA                           l2787 04B8  
                         l2779 0498                           l2699 0363                           l2883 060A  
                         l2875 05F3                           l2867 05D0                           l2859 05AA  
                         l2971 0139                           l2963 0121                           l2955 0109  
                         l2947 00E6                           l2939 00CC                           l2797 04E5  
                         l2789 04C0                           l2885 0613                           l2877 0601  
                         l2869 05D2                           l2981 0162                           l2965 0127  
                         l2957 010F                           l2973 013F                           l2949 00ED  
                         l2799 04E8                           l2887 061E                           l2991 0180  
                         l2983 0168                           l2975 0146                           l2967 012D  
                         l2959 0115                           l2889 0621                           l2993 0186  
                         l2985 016E                           l2977 0152                           l2969 0133  
                         l2897 003E                           l2995 018C                           l2987 0174  
                         l2979 015A                           l2899 0045                           l2997 0192  
                         l2989 017A                           l2999 0198                           STR_1 0798  
                         STR_2 0785                           STR_3 077A                           STR_4 076E  
                         STR_5 0754                           STR_6 0738                           STR_7 0785  
                         STR_8 078F                           STR_9 0761                           _BRGH 04C2  
                         _CREN 00C4                           _T0CS 040D                           u3000 0FE7  
                         u1400 0E27                           u3001 0FE6                           u1401 0E26  
                         u1410 0E32                           u1411 0E31                           u1420 0E43  
                         u3100 03F6                           u3020 0352                           u1421 0E42  
                         u3101 03F5                           u3021 0351                           u3110 0424  
                         u3030 0357                           u3015 0FEA                           u3111 0423  
                         u3031 0356                           u1440 0E55                           u3120 042A  
                         u3040 035C                           u3200 00E0                           u1441 0E54  
                         u3121 0429                           u3041 035B                           u3201 00DF  
                         u3130 0501                           u3050 0389                           u3210 00E6  
                         u1435 0E47                           u3131 0500                           u3051 0388  
                         u3211 00E5                           u1460 0E66                           u3060 038E  
                         u3140 0531                           u3300 0139                           u3220 0109  
                         u1461 0E65                           u3061 038D                           u3141 0530  
                         u3301 0138                           u3221 0108                           u3070 03BC  
                         u3150 0582                           u3310 013F                           u3230 010F  
                         u1455 0E56                           u3071 03BB                           u3151 0581  
                         u3311 013E                           u3231 010E                           u1480 0E7A  
                         u3080 03C2                           u3160 0588                           u3400 0192  
                         u3320 0162                           u3240 0115                           u1481 0E79  
                         u1465 0E62                           u3081 03C1                           u3161 0587  
                         u3401 0191                           u3321 0161                           u3241 0114  
                         u1490 0E7F                           u3090 03F0                           u3170 058E  
                         u3410 0198                           u3330 0168                           u3250 011B  
                         u1491 0E7E                           u1475 0E6E                           u3091 03EF  
                         u3171 058D                           u3411 0197                           u3331 0167  
                         u3251 011A                           u3180 05AA                           u3500 01EB  
                         u3420 01BB                           u3340 016E                           u3260 0121  
                         u3181 05A9                           u3501 01EA                           u3421 01BA  
                         u3341 016D                           u3261 0120                           u3190 060A  
                         u3510 01F1                           u3430 01C1                           u3350 0174  
                         u3270 0127                           u3191 0609                           u3511 01F0  
                         u3431 01C0                           u3351 0173                           u3271 0126  
                         u2800 0DF4                           u3600 0244                           u3520 0214  
                         u3440 01C7                           u3360 017A                           u3280 012D  
                         u2801 0DF3                           u3601 0243                           u3521 0213  
                         u3441 01C6                           u3361 0179                           u3281 012C  
                         u2810 0DFE                           u2730 0D8A                           u3610 024A  
                         u3530 021A                           u3450 01CD                           u3370 0180  
                         u3290 0133                           u2811 0DFD                           u2731 0D89  
                         u3611 0249                           u3531 0219                           u3451 01CC  
                         u3371 017F                           u3291 0132                           u2740 0D97  
                         u2900 0F6B                           u3700 029D                           u3620 026D  
                         u3540 0220                           u3460 01D3                           u3380 0186  
                         u2741 0D96                           u2901 0F6A                           u3701 029C  
                         u3621 026C                           u3541 021F                           u3461 01D2  
                         u3381 0185                           u2910 0D7D                           u2830 0E11  
                         u2750 0DC1                           u3710 02A3                           u3630 0273  
                         u3550 0226                           u3470 01D9                           u3390 018C  
                         u2911 0D7C                           u2831 0E10                           u2815 0DFA  
                         u2751 0DC0                           u3711 02A2                           u3631 0272  
                         u3551 0225                           u3471 01D8                           u3391 018B  
                         u2920 0F82                           u2840 0E16                           u2760 0DCC  
                         u3640 0279                           u3560 022C                           u3480 01DF  
                         u2921 0F81                           u2841 0E15                           u2825 0E05  
                         u2761 0DCB                           u3641 0278                           u3561 022B  
                         u3481 01DE                           u2930 0F9A                           u2770 0DD7  
                         u2850 07B9                           u3650 027F                           u3570 0232  
                         u3490 01E5                           u2931 0F99                           u2771 0DD6  
                         u2755 0DBD                           u3651 027E                           u3571 0231  
                         u3491 01E4                           u2940 0FA8                           u2780 0DE2  
                         u2860 07DD                           u3660 0285                           u3580 0238  
                         u2941 0FA7                           u2781 0DE1                           u3661 0284  
                         u3581 0237                           u2950 0FAC                           u2870 07EF  
                         u3670 028B                           u3590 023E                           u2951 0FAB  
                         u2871 07EE                           u3807 04F2                           u3727 0E93  
                         u3671 028A                           u3591 023D                           u2960 0FBE  
                         u2880 0D41                           u3680 0291                           u2961 0FBD  
                         u2881 0D40                           u3817 0522                           u3737 0EA7  
                         u3681 0290                           u2970 0FC2                           u2890 0F21  
                         u3690 0297                           u3827 0FC8                           u2971 0FC1  
                         u2795 0DE6                           u2891 0F20                           u3747 0EBB  
                         u3691 0296                           u2980 0FDC                           _RCIF 0065  
                         u2981 0FDB                           u3757 0574                           u2990 0FE0  
                         u2991 0FDF                           u3767 05B2                           u3777 05DA  
                         u3787 05FB                           u3797 047F                 ??_KeyPadReader 0043  
                         _TMR0 0001                           _SPEN 00C7                           _TXEN 04C5  
                         _TXIF 0064                           _SYNC 04C4                           _data 0020  
                         _flag 0030                           _main 003E                           _num1 003F  
                         _num2 003E                           _num3 003D                           _keys 0716  
                         _num4 003C                           _num5 003B                           btemp 007E  
                         _type 0034                           start 0010              ___bmul@multiplier 0046  
                        ??_ISR 0070                   ?_intToString 0056                          ?_main 0070  
              __end_of___awdiv 0E89                          STR_10 0746                          STR_11 07A0  
                        STR_12 0729                __end_of___awmod 0E20                ___awdiv@divisor 004D  
                        i1l302 06FB                          i1l250 0629                          i1l251 062A  
                        i1l260 0639                          i1l253 062E                          i1l262 063D  
                        i1l254 062F                          i1l271 064C                          i1l263 063E  
                        i1l280 065B                          i1l272 064D                          i1l256 0633  
                        i1l248 0625                          i1l281 065C                          i1l265 0642  
                        i1l257 0634                          i1l290 066B                          i1l274 0651  
                        i1l266 0643                          i1l283 0660                          i1l275 0652  
                        i1l259 0638                          i1l292 066F                          i1l284 0661  
                        i1l268 0647                          i1l277 0656                          i1l269 0648  
                        i1l286 0665                          i1l278 0657                          i1l287 0666  
                        i1l289 066A                ___awdiv@counter 0052                          _RCREG 001A  
                        _SPBRG 0099                          _PORTB 0006                          _PORTD 0008  
                        _TRISA 0085                          _TRISB 0086                          _TRISC 0087  
                        _TRISD 0088                          _TRISE 0089                          _TXREG 0019  
                  ?_UART_Read1 0070                    ?_UART_Read2 0070                __end_of_colMask 0729  
              __end_of_lcdSend 0D6B                    ?_UART_Write 0070                __end_of_initLCD 0EF7  
                        _count 002C                          _index 002E                          _keyok 0039  
                        _stato 0075                 __pbitbssCOMMON 03C0                          pclath 000A  
              __end_of_rowMask 0726                __end_of_potenza 0DC5                          status 0003  
                        wtemp0 007E   __end_of_GenerateRandomNumber 0D82                __initialization 0013  
                 __end_of_main 0344                   __end_of_keys 0722                         ??_main 0063  
             ___awdiv@dividend 004F                         i1l2401 0625                         i1l2403 0670  
                       i1l2413 0686                         i1l2405 0678                         i1l2431 06B3  
                       i1l2423 069D                         i1l2415 068A                         i1l2407 067E  
                       i1l2433 06C0                         i1l2441 06D6                         i1l2425 06AA  
                       i1l2417 0695                         i1l2409 067F                         i1l2443 06DC  
                       i1l2435 06C4                         i1l2427 06AE                         i1l2419 0696  
                       i1l2445 06E7                         i1l2437 06D1                         i1l2429 06AF  
                       i1l2453 06F8                         i1l2447 06E9                         i1l2439 06D5  
                       i1l2449 06F3                         u250_20 063D                         u250_21 063C  
                       u251_20 0642                         u251_21 0641                         u260_20 066F  
                       u252_20 0647                         u260_21 066E                         u252_21 0646  
                       u261_20 0678                         u253_20 064C                         u261_21 0677  
                       u253_21 064B                         u270_20 06DC                         u262_20 0685  
                       u254_20 0651                         u246_20 0629                         u270_21 06DB  
                       u262_21 0684                         u254_21 0650                         u246_21 0628  
                       u263_20 069C                         u255_20 0656                         u247_20 062E  
                       u263_21 069B                         u255_21 0655                         u247_21 062D  
                       u271_25 06DF                         u272_20 06F3                         u264_20 06AA  
                       u256_20 065B                         u248_20 0633                         u272_21 06F2  
                       u264_21 06A9                         u256_21 065A                         u248_21 0632  
                       u265_20 06AE                         u257_20 0660                         u249_20 0638  
                       u265_21 06AD                         u257_21 065F                         u249_21 0637  
                       u266_20 06C0                         u258_20 0665                         u266_21 06BF  
                       u258_21 0664                         u267_20 06C4                         u259_20 066A  
                       u267_21 06C3                         u259_21 0669                         u268_20 06D1  
                       u268_21 06D0                         u269_20 06D5                         u269_21 06D4  
                       _TMR0IE 005D                         _TMR0IF 005A                         _TRISC6 043E  
                       _TRISC7 043F                  ??_Timer0_Init 0043               __end_of_lcdPrint 07F0  
            __end_of_UART_Init 0D56                         ___bmul 0D82                      ??___awdiv 0051  
                    ??___awmod 0047                         _codice 0026               ___awdiv@quotient 0054  
              ___awmod@divisor 0043           __end_of_KeyPadReader 1000                ___awmod@counter 0048  
                    ??_lcdSend 0044                      ??_initLCD 0045                   __pdataCOMMON 0079  
                       saved_w 007E                      ??_potenza 0048        __end_of__initialization 003A  
             intToString@cifre 005D            ___bmul@multiplicand 0043                 __pcstackCOMMON 0070  
                 __pidataBANK0 0D26            __end_of_Timer0_Init 07FF           _GenerateRandomNumber 0D6B  
                   __pbssBANK0 0020                     __pbssBANK1 00A0                     __pmaintext 003E  
                      ?___bmul 0043                     __pintentry 0004                   ??_UART_Read1 005F  
                 ??_UART_Read2 005F          ?_GenerateRandomNumber 0070                   ??_UART_Write 0043  
                    ?_lcdPrint 0045                     __stringtab 0706                   intToString@i 005E  
                 intToString@n 0056                   intToString@t 005C                    _Timer0_Init 07F0  
           __end_of_UART_Read1 052A             __end_of_UART_Read2 0625                 _RS485_RxEnable 0D28  
                      ___awdiv 0E20                        ___awmod 0DC5             __end_of_UART_Write 0D44  
               _RS485_TxEnable 0D2D                        _colMask 0726                        _colScan 0077  
                      _lcdSend 0D56                        __ptext1 0E89                        __ptext2 052A  
                      __ptext3 0344                        __ptext4 07A8                        __ptext5 0D56  
                      __ptext6 0EF7                        __ptext7 0D99                        __ptext8 0D82  
                      __ptext9 0DC5                        _initLCD 0E89                        _old_btn 03C0  
             ___awmod@dividend 0045                     _keypressed 003A                        _restart 0037  
                      _rowMask 0722                        _rowScan 0076                        _potenza 0D99  
                   ??_lcdPrint 0047                        clrloop0 0D33                        _stringa 00A0  
         end_of_initialization 003A                   _KeyPadReader 0F73         __end_of_RS485_RxEnable 0D2D  
       __end_of_RS485_TxEnable 0D32                      _UART_Init 0D44                      _PORTEbits 0009  
               UART_Write@data 0043         ??_GenerateRandomNumber 0043                      _TRISEbits 0089  
              ?_RS485_RxEnable 0070                ?_RS485_TxEnable 0070                 __end_of___bmul 0D99  
                   ?_UART_Init 0070                  __pidataCOMMON 07FF            start_initialization 0013  
GenerateRandomNumber@randomNum 0043                    __end_of_ISR 0706                 _stringPosition 0032  
               intToString@str 0058                       ??___bmul 0044                    __pdataBANK0 0063  
                ??_intToString 0059                    __pbssCOMMON 0075                      ___latbits 0002  
                __pcstackBANK0 0043                UART_Read1@count 0062                   ?_Timer0_Init 0070  
                     ?___awdiv 004D                       ?___awmod 0043                    ??_UART_Init 0043  
                    __pstrings 0706                       ?_lcdSend 0043                       ?_initLCD 0070  
          __end_of_intToString 0F73                      _countdown 0079                       ?_potenza 0047  
                    _randomNum 0035                      _old_stato 0038              interrupt_function 0004  
                    clear_ram0 0D32                _print_countdown 0040                      lcdPrint@n 004A  
                  __stringbase 0715               ??_RS485_RxEnable 0043               ??_RS485_TxEnable 0043  
                  _intToString 0EF7             __end_of__stringtab 0716                       __ptext10 0E20  
                     __ptext11 0D3A                       __ptext12 0D2D                       __ptext13 0D28  
                     __ptext14 0D44                       __ptext15 07F0                       __ptext16 0F73  
                     __ptext17 0D6B                       __ptext18 0625                       _lcdPrint 07A8  
                     _received 0036                       intlevel1 0000                      stringcode 0710  
                     potenza@b 0049                       potenza@e 0047                       potenza@i 004A  
                     potenza@n 004C                    lcdSend@dato 0044                    lcdSend@tipo 0043  
                   _UART_Read1 0344                     _UART_Read2 052A                       stringdir 0710  
                     stringtab 0706                     _UART_Write 0D3A      GenerateRandomNumber@count 0044  
                  lcdPrint@str 0045                  ?_KeyPadReader 0070  
