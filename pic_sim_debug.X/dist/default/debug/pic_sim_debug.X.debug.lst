

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Jun 19 16:24:09 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37     0000                     
    38                           ; Generated 22/03/2023 GMT
    39                           ; 
    40                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F877A Definitions
    70                           ; 
    71                           ; SFR Addresses
    72     0000                     	;# 
    73     0001                     	;# 
    74     0002                     	;# 
    75     0003                     	;# 
    76     0004                     	;# 
    77     0005                     	;# 
    78     0006                     	;# 
    79     0007                     	;# 
    80     0008                     	;# 
    81     0009                     	;# 
    82     000A                     	;# 
    83     000B                     	;# 
    84     000C                     	;# 
    85     000D                     	;# 
    86     000E                     	;# 
    87     000E                     	;# 
    88     000F                     	;# 
    89     0010                     	;# 
    90     0011                     	;# 
    91     0012                     	;# 
    92     0013                     	;# 
    93     0014                     	;# 
    94     0015                     	;# 
    95     0015                     	;# 
    96     0016                     	;# 
    97     0017                     	;# 
    98     0018                     	;# 
    99     0019                     	;# 
   100     001A                     	;# 
   101     001B                     	;# 
   102     001B                     	;# 
   103     001C                     	;# 
   104     001D                     	;# 
   105     001E                     	;# 
   106     001F                     	;# 
   107     0081                     	;# 
   108     0085                     	;# 
   109     0086                     	;# 
   110     0087                     	;# 
   111     0088                     	;# 
   112     0089                     	;# 
   113     008C                     	;# 
   114     008D                     	;# 
   115     008E                     	;# 
   116     0091                     	;# 
   117     0092                     	;# 
   118     0093                     	;# 
   119     0094                     	;# 
   120     0098                     	;# 
   121     0099                     	;# 
   122     009C                     	;# 
   123     009D                     	;# 
   124     009E                     	;# 
   125     009F                     	;# 
   126     010C                     	;# 
   127     010D                     	;# 
   128     010E                     	;# 
   129     010F                     	;# 
   130     018C                     	;# 
   131     018D                     	;# 
   132     0000                     	;# 
   133     0001                     	;# 
   134     0002                     	;# 
   135     0003                     	;# 
   136     0004                     	;# 
   137     0005                     	;# 
   138     0006                     	;# 
   139     0007                     	;# 
   140     0008                     	;# 
   141     0009                     	;# 
   142     000A                     	;# 
   143     000B                     	;# 
   144     000C                     	;# 
   145     000D                     	;# 
   146     000E                     	;# 
   147     000E                     	;# 
   148     000F                     	;# 
   149     0010                     	;# 
   150     0011                     	;# 
   151     0012                     	;# 
   152     0013                     	;# 
   153     0014                     	;# 
   154     0015                     	;# 
   155     0015                     	;# 
   156     0016                     	;# 
   157     0017                     	;# 
   158     0018                     	;# 
   159     0019                     	;# 
   160     001A                     	;# 
   161     001B                     	;# 
   162     001B                     	;# 
   163     001C                     	;# 
   164     001D                     	;# 
   165     001E                     	;# 
   166     001F                     	;# 
   167     0081                     	;# 
   168     0085                     	;# 
   169     0086                     	;# 
   170     0087                     	;# 
   171     0088                     	;# 
   172     0089                     	;# 
   173     008C                     	;# 
   174     008D                     	;# 
   175     008E                     	;# 
   176     0091                     	;# 
   177     0092                     	;# 
   178     0093                     	;# 
   179     0094                     	;# 
   180     0098                     	;# 
   181     0099                     	;# 
   182     009C                     	;# 
   183     009D                     	;# 
   184     009E                     	;# 
   185     009F                     	;# 
   186     010C                     	;# 
   187     010D                     	;# 
   188     010E                     	;# 
   189     010F                     	;# 
   190     018C                     	;# 
   191     018D                     	;# 
   192                           
   193                           	psect	idataBANK0
   194     04FD                     __pidataBANK0:
   195                           
   196                           ;initializer for _countdown
   197     04FD  343C               	retlw	60
   198                           
   199                           	psect	strings
   200     0500                     __pstrings:
   201     0500                     stringtab:
   202     0500                     __stringtab:
   203                           
   204                           ;	String table - string pointers are 1 byte each
   205     0500  1BFF               	btfsc	btemp+1,7
   206     0501  2D0A               	ljmp	stringcode
   207     0502  1383               	bcf	3,7
   208     0503  187F               	btfsc	btemp+1,0
   209     0504  1783               	bsf	3,7
   210     0505  0800               	movf	0,w
   211     0506  0A84               	incf	4,f
   212     0507  1903               	skipnz
   213     0508  0AFF               	incf	btemp+1,f
   214     0509  0008               	return
   215     050A                     stringcode:
   216     050A                     stringdir:
   217     050A  3005               	movlw	high stringdir
   218     050B  008A               	movwf	10
   219     050C  0804               	movf	4,w
   220     050D  0A84               	incf	4,f
   221     050E  0782               	addwf	2,f
   222     050F                     __stringbase:
   223     050F  3400               	retlw	0
   224     0510                     __end_of__stringtab:
   225     0510                     _keys:
   226     0510  3423               	retlw	35
   227     0511  3437               	retlw	55
   228     0512  3434               	retlw	52
   229     0513  3431               	retlw	49
   230     0514  342A               	retlw	42
   231     0515  3438               	retlw	56
   232     0516  3435               	retlw	53
   233     0517  3432               	retlw	50
   234     0518  3430               	retlw	48
   235     0519  3439               	retlw	57
   236     051A  3436               	retlw	54
   237     051B  3433               	retlw	51
   238     051C                     __end_of_keys:
   239     051C                     _rowMask:
   240     051C  3401               	retlw	1
   241     051D  3402               	retlw	2
   242     051E  3404               	retlw	4
   243     051F  3408               	retlw	8
   244     0520                     __end_of_rowMask:
   245     0520                     _colMask:
   246     0520  34FE               	retlw	254
   247     0521  34FD               	retlw	253
   248     0522  34FB               	retlw	251
   249     0523                     __end_of_colMask:
   250     0001                     _TMR0	set	1
   251     0006                     _PORTB	set	6
   252     0008                     _PORTD	set	8
   253     0009                     _PORTEbits	set	9
   254     001A                     _RCREG	set	26
   255     0019                     _TXREG	set	25
   256     005F                     _GIE	set	95
   257     005D                     _TMR0IE	set	93
   258     005A                     _TMR0IF	set	90
   259     0065                     _RCIF	set	101
   260     0064                     _TXIF	set	100
   261     0039                     _RC1	set	57
   262     0038                     _RC0	set	56
   263     00C4                     _CREN	set	196
   264     00C7                     _SPEN	set	199
   265     0089                     _TRISEbits	set	137
   266     0099                     _SPBRG	set	153
   267     0089                     _TRISE	set	137
   268     0088                     _TRISD	set	136
   269     0087                     _TRISC	set	135
   270     0086                     _TRISB	set	134
   271     0085                     _TRISA	set	133
   272     0408                     _PS0	set	1032
   273     0409                     _PS1	set	1033
   274     040A                     _PS2	set	1034
   275     040B                     _PSA	set	1035
   276     040D                     _T0CS	set	1037
   277     04C5                     _TXEN	set	1221
   278     04C4                     _SYNC	set	1220
   279     04C2                     _BRGH	set	1218
   280     043F                     _TRISC7	set	1087
   281     043E                     _TRISC6	set	1086
   282     0523                     STR_8:
   283     0523  3443               	retlw	67	;'C'
   284     0524  346F               	retlw	111	;'o'
   285     0525  3464               	retlw	100	;'d'
   286     0526  3469               	retlw	105	;'i'
   287     0527  3463               	retlw	99	;'c'
   288     0528  3465               	retlw	101	;'e'
   289     0529  3420               	retlw	32	;' '
   290     052A  3453               	retlw	83	;'S'
   291     052B  3463               	retlw	99	;'c'
   292     052C  3461               	retlw	97	;'a'
   293     052D  3464               	retlw	100	;'d'
   294     052E  3475               	retlw	117	;'u'
   295     052F  3474               	retlw	116	;'t'
   296     0530  346F               	retlw	111	;'o'
   297     0531  3400               	retlw	0
   298     0532                     STR_6:
   299     0532  3441               	retlw	65	;'A'
   300     0533  3474               	retlw	116	;'t'
   301     0534  3474               	retlw	116	;'t'
   302     0535  3465               	retlw	101	;'e'
   303     0536  346E               	retlw	110	;'n'
   304     0537  3464               	retlw	100	;'d'
   305     0538  3465               	retlw	101	;'e'
   306     0539  3472               	retlw	114	;'r'
   307     053A  3465               	retlw	101	;'e'
   308     053B  342E               	retlw	46	;'.'
   309     053C  342E               	retlw	46	;'.'
   310     053D  342E               	retlw	46	;'.'
   311     053E  342E               	retlw	46	;'.'
   312     053F  3400               	retlw	0
   313     0540                     STR_5:
   314     0540  3441               	retlw	65	;'A'
   315     0541  3474               	retlw	116	;'t'
   316     0542  3474               	retlw	116	;'t'
   317     0543  3465               	retlw	101	;'e'
   318     0544  346E               	retlw	110	;'n'
   319     0545  3464               	retlw	100	;'d'
   320     0546  3465               	retlw	101	;'e'
   321     0547  3472               	retlw	114	;'r'
   322     0548  3465               	retlw	101	;'e'
   323     0549  342E               	retlw	46	;'.'
   324     054A  342E               	retlw	46	;'.'
   325     054B  342E               	retlw	46	;'.'
   326     054C  3400               	retlw	0
   327     054D                     STR_4:
   328     054D  3441               	retlw	65	;'A'
   329     054E  3474               	retlw	116	;'t'
   330     054F  3474               	retlw	116	;'t'
   331     0550  3465               	retlw	101	;'e'
   332     0551  346E               	retlw	110	;'n'
   333     0552  3464               	retlw	100	;'d'
   334     0553  3465               	retlw	101	;'e'
   335     0554  3472               	retlw	114	;'r'
   336     0555  3465               	retlw	101	;'e'
   337     0556  342E               	retlw	46	;'.'
   338     0557  342E               	retlw	46	;'.'
   339     0558  3400               	retlw	0
   340     0559                     STR_3:
   341     0559  3441               	retlw	65	;'A'
   342     055A  3474               	retlw	116	;'t'
   343     055B  3474               	retlw	116	;'t'
   344     055C  3465               	retlw	101	;'e'
   345     055D  346E               	retlw	110	;'n'
   346     055E  3464               	retlw	100	;'d'
   347     055F  3465               	retlw	101	;'e'
   348     0560  3472               	retlw	114	;'r'
   349     0561  3465               	retlw	101	;'e'
   350     0562  342E               	retlw	46	;'.'
   351     0563  3400               	retlw	0
   352     0564                     STR_2:
   353     0564  3441               	retlw	65	;'A'
   354     0565  3474               	retlw	116	;'t'
   355     0566  3474               	retlw	116	;'t'
   356     0567  3465               	retlw	101	;'e'
   357     0568  346E               	retlw	110	;'n'
   358     0569  3464               	retlw	100	;'d'
   359     056A  3465               	retlw	101	;'e'
   360     056B  3472               	retlw	114	;'r'
   361     056C  3465               	retlw	101	;'e'
   362     056D  3400               	retlw	0
   363     056E                     STR_7:
   364     056E  3452               	retlw	82	;'R'
   365     056F  3469               	retlw	105	;'i'
   366     0570  3463               	retlw	99	;'c'
   367     0571  3465               	retlw	101	;'e'
   368     0572  3476               	retlw	118	;'v'
   369     0573  3475               	retlw	117	;'u'
   370     0574  3474               	retlw	116	;'t'
   371     0575  346F               	retlw	111	;'o'
   372     0576  3400               	retlw	0
   373     0577                     STR_1:
   374     0577  3450               	retlw	80	;'P'
   375     0578  3472               	retlw	114	;'r'
   376     0579  3465               	retlw	101	;'e'
   377     057A  346D               	retlw	109	;'m'
   378     057B  3469               	retlw	105	;'i'
   379     057C  3420               	retlw	32	;' '
   380     057D  342A               	retlw	42	;'*'
   381     057E  3400               	retlw	0
   382                           
   383                           	psect	cinit
   384     0013                     start_initialization:	
   385                           ; #config settings
   386                           
   387     0013                     __initialization:
   388                           
   389                           ; Initialize objects allocated to BANK0
   390     0013  120A  118A  24FD  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   391     0018  00ED               	movwf	__pdataBANK0& (0+127)
   392                           
   393                           ; Clear objects allocated to BANK0
   394     0019  1383               	bcf	3,7	;select IRP bank0
   395     001A  3020               	movlw	low __pbssBANK0
   396     001B  0084               	movwf	4
   397     001C  3051               	movlw	low (__pbssBANK0+49)
   398     001D  120A  118A  27F8  120A  118A  	fcall	clear_ram0
   399                           
   400                           ; Clear objects allocated to COMMON
   401     0022  01F5               	clrf	__pbssCOMMON& (0+127)
   402     0023  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   403     0024  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   404     0025  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   405                           
   406                           ; Clear objects allocated to BITCOMMON
   407     0026  01F9               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   408     0027                     end_of_initialization:	
   409                           ;End of C runtime variable initialization code
   410                           
   411     0027                     __end_of__initialization:
   412     0027  0183               	clrf	3
   413     0028  120A  118A  282B   	ljmp	_main	;jump to C main() function
   414                           
   415                           	psect	bitbssCOMMON
   416     03C8                     __pbitbssCOMMON:
   417     03C8                     _old_btn:
   418     03C8                     	ds	1
   419                           
   420                           	psect	bssCOMMON
   421     0075                     __pbssCOMMON:
   422     0075                     _num4:
   423     0075                     	ds	1
   424     0076                     _num3:
   425     0076                     	ds	1
   426     0077                     _num2:
   427     0077                     	ds	1
   428     0078                     _num1:
   429     0078                     	ds	1
   430                           
   431                           	psect	bssBANK0
   432     0020                     __pbssBANK0:
   433     0020                     _stringa:
   434     0020                     	ds	16
   435     0030                     _data:
   436     0030                     	ds	6
   437     0036                     _codice:
   438     0036                     	ds	6
   439     003C                     _count:
   440     003C                     	ds	2
   441     003E                     _index:
   442     003E                     	ds	2
   443     0040                     _flag:
   444     0040                     	ds	2
   445     0042                     _stringPosition:
   446     0042                     	ds	2
   447     0044                     _randomNum:
   448     0044                     	ds	1
   449     0045                     _received:
   450     0045                     	ds	1
   451     0046                     _restart:
   452     0046                     	ds	1
   453     0047                     _old_stato:
   454     0047                     	ds	1
   455     0048                     _stato:
   456     0048                     	ds	1
   457     0049                     _rowScan:
   458     0049                     	ds	1
   459     004A                     _colScan:
   460     004A                     	ds	1
   461     004B                     _keyok:
   462     004B                     	ds	1
   463     004C                     _keypressed:
   464     004C                     	ds	1
   465     004D                     _num5:
   466     004D                     	ds	1
   467     004E                     _print_countdown:
   468     004E                     	ds	3
   469                           
   470                           	psect	dataBANK0
   471     006D                     __pdataBANK0:
   472     006D                     _countdown:
   473     006D                     	ds	1
   474                           
   475                           	psect	clrtext
   476     07F8                     clear_ram0:	
   477                           ;	Called with FSR containing the base address, and
   478                           ;	W with the last address+1
   479                           
   480     07F8  0064               	clrwdt	;clear the watchdog before getting into this loop
   481     07F9                     clrloop0:
   482     07F9  0180               	clrf	0	;clear RAM location pointed to by FSR
   483     07FA  0A84               	incf	4,f	;increment pointer
   484     07FB  0604               	xorwf	4,w	;XOR with final address
   485     07FC  1903               	btfsc	3,2	;have we reached the end yet?
   486     07FD  3400               	retlw	0	;all done for this memory range, return
   487     07FE  0604               	xorwf	4,w	;XOR again to restore value
   488     07FF  2FF9               	goto	clrloop0	;do the next byte
   489                           
   490                           	psect	cstackBANK1
   491     00A0                     __pcstackBANK1:
   492     00A0                     ??_UART_Read:
   493                           
   494                           ; 1 bytes @ 0x0
   495     00A0                     	ds	3
   496                           
   497                           	psect	cstackCOMMON
   498     0070                     __pcstackCOMMON:
   499     0070                     ?_UART_Init:
   500     0070                     ?_initLCD:	
   501                           ; 1 bytes @ 0x0
   502                           
   503     0070                     ?_Timer0_Init:	
   504                           ; 1 bytes @ 0x0
   505                           
   506     0070                     ?_RS485_TxEnable:	
   507                           ; 1 bytes @ 0x0
   508                           
   509     0070                     ?_UART_Write:	
   510                           ; 1 bytes @ 0x0
   511                           
   512     0070                     ?_GenerateRandomNumber:	
   513                           ; 1 bytes @ 0x0
   514                           
   515     0070                     ?_KeyPadReader:	
   516                           ; 1 bytes @ 0x0
   517                           
   518     0070                     ?_RS485_RxEnable:	
   519                           ; 1 bytes @ 0x0
   520                           
   521     0070                     ?_UART_Read:	
   522                           ; 1 bytes @ 0x0
   523                           
   524     0070                     ?_main:	
   525                           ; 1 bytes @ 0x0
   526                           
   527     0070                     ?_ISR:	
   528                           ; 1 bytes @ 0x0
   529                           
   530     0070                     ??_ISR:	
   531                           ; 1 bytes @ 0x0
   532                           
   533                           
   534                           ; 1 bytes @ 0x0
   535     0070                     	ds	5
   536                           
   537                           	psect	cstackBANK0
   538     0051                     __pcstackBANK0:
   539     0051                     ??_UART_Init:
   540     0051                     ??_Timer0_Init:	
   541                           ; 1 bytes @ 0x0
   542                           
   543     0051                     ?_lcdSend:	
   544                           ; 1 bytes @ 0x0
   545                           
   546     0051                     ??_RS485_TxEnable:	
   547                           ; 1 bytes @ 0x0
   548                           
   549     0051                     ??_UART_Write:	
   550                           ; 1 bytes @ 0x0
   551                           
   552     0051                     ??_GenerateRandomNumber:	
   553                           ; 1 bytes @ 0x0
   554                           
   555     0051                     ??_KeyPadReader:	
   556                           ; 1 bytes @ 0x0
   557                           
   558     0051                     ??_RS485_RxEnable:	
   559                           ; 1 bytes @ 0x0
   560                           
   561     0051                     ?___bmul:	
   562                           ; 1 bytes @ 0x0
   563                           
   564     0051                     ?___awmod:	
   565                           ; 1 bytes @ 0x0
   566                           
   567     0051                     UART_Write@data:	
   568                           ; 2 bytes @ 0x0
   569                           
   570     0051                     lcdSend@tipo:	
   571                           ; 1 bytes @ 0x0
   572                           
   573     0051                     GenerateRandomNumber@randomNum:	
   574                           ; 1 bytes @ 0x0
   575                           
   576     0051                     ___bmul@multiplicand:	
   577                           ; 1 bytes @ 0x0
   578                           
   579     0051                     ___awmod@divisor:	
   580                           ; 1 bytes @ 0x0
   581                           
   582                           
   583                           ; 2 bytes @ 0x0
   584     0051                     	ds	1
   585     0052                     ??_lcdSend:
   586     0052                     ??___bmul:	
   587                           ; 1 bytes @ 0x1
   588                           
   589     0052                     lcdSend@dato:	
   590                           ; 1 bytes @ 0x1
   591                           
   592     0052                     GenerateRandomNumber@count:	
   593                           ; 1 bytes @ 0x1
   594                           
   595                           
   596                           ; 2 bytes @ 0x1
   597     0052                     	ds	1
   598     0053                     ??_initLCD:
   599     0053                     ?_lcdPrint:	
   600                           ; 1 bytes @ 0x2
   601                           
   602     0053                     ___bmul@product:	
   603                           ; 1 bytes @ 0x2
   604                           
   605     0053                     lcdPrint@str:	
   606                           ; 1 bytes @ 0x2
   607                           
   608     0053                     ___awmod@dividend:	
   609                           ; 2 bytes @ 0x2
   610                           
   611                           
   612                           ; 2 bytes @ 0x2
   613     0053                     	ds	1
   614     0054                     ___bmul@multiplier:
   615                           
   616                           ; 1 bytes @ 0x3
   617     0054                     	ds	1
   618     0055                     ??_lcdPrint:
   619     0055                     ?_potenza:	
   620                           ; 1 bytes @ 0x4
   621                           
   622     0055                     ??___awmod:	
   623                           ; 1 bytes @ 0x4
   624                           
   625     0055                     potenza@e:	
   626                           ; 1 bytes @ 0x4
   627                           
   628                           
   629                           ; 1 bytes @ 0x4
   630     0055                     	ds	1
   631     0056                     ??_potenza:
   632     0056                     ___awmod@counter:	
   633                           ; 1 bytes @ 0x5
   634                           
   635                           
   636                           ; 1 bytes @ 0x5
   637     0056                     	ds	1
   638     0057                     potenza@b:
   639     0057                     ___awmod@sign:	
   640                           ; 1 bytes @ 0x6
   641                           
   642                           
   643                           ; 1 bytes @ 0x6
   644     0057                     	ds	1
   645     0058                     lcdPrint@n:
   646     0058                     potenza@i:	
   647                           ; 2 bytes @ 0x7
   648                           
   649                           
   650                           ; 2 bytes @ 0x7
   651     0058                     	ds	2
   652     005A                     potenza@n:
   653                           
   654                           ; 1 bytes @ 0x9
   655     005A                     	ds	1
   656     005B                     ?___awdiv:
   657     005B                     ___awdiv@divisor:	
   658                           ; 2 bytes @ 0xA
   659                           
   660                           
   661                           ; 2 bytes @ 0xA
   662     005B                     	ds	2
   663     005D                     ___awdiv@dividend:
   664                           
   665                           ; 2 bytes @ 0xC
   666     005D                     	ds	2
   667     005F                     ??___awdiv:
   668                           
   669                           ; 1 bytes @ 0xE
   670     005F                     	ds	1
   671     0060                     ___awdiv@counter:
   672                           
   673                           ; 1 bytes @ 0xF
   674     0060                     	ds	1
   675     0061                     ___awdiv@sign:
   676                           
   677                           ; 1 bytes @ 0x10
   678     0061                     	ds	1
   679     0062                     ___awdiv@quotient:
   680                           
   681                           ; 2 bytes @ 0x11
   682     0062                     	ds	2
   683     0064                     ?_intToString:
   684     0064                     intToString@n:	
   685                           ; 1 bytes @ 0x13
   686                           
   687                           
   688                           ; 2 bytes @ 0x13
   689     0064                     	ds	2
   690     0066                     intToString@str:
   691                           
   692                           ; 1 bytes @ 0x15
   693     0066                     	ds	1
   694     0067                     ??_intToString:
   695                           
   696                           ; 1 bytes @ 0x16
   697     0067                     	ds	3
   698     006A                     intToString@t:
   699                           
   700                           ; 1 bytes @ 0x19
   701     006A                     	ds	1
   702     006B                     intToString@cifre:
   703                           
   704                           ; 1 bytes @ 0x1A
   705     006B                     	ds	1
   706     006C                     intToString@i:
   707                           
   708                           ; 1 bytes @ 0x1B
   709     006C                     	ds	1
   710     006D                     ??_main:
   711                           
   712                           	psect	maintext
   713     002B                     __pmaintext:	
   714                           ; 1 bytes @ 0x1C
   715 ;;
   716 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   717 ;;
   718 ;; *************** function _main *****************
   719 ;; Defined at:
   720 ;;		line 103 in file "main.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;		None
   723 ;; Auto vars:     Size  Location     Type
   724 ;;		None
   725 ;; Return value:  Size  Location     Type
   726 ;;                  1    wreg      void 
   727 ;; Registers used:
   728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   729 ;; Tracked objects:
   730 ;;		On entry : B00/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   734 ;;      Params:         0       0       0       0       0
   735 ;;      Locals:         0       0       0       0       0
   736 ;;      Temps:          0       0       0       0       0
   737 ;;      Totals:         0       0       0       0       0
   738 ;;Total ram usage:        0 bytes
   739 ;; Hardware stack levels required when called: 6
   740 ;; This function calls:
   741 ;;		_GenerateRandomNumber
   742 ;;		_KeyPadReader
   743 ;;		_RS485_RxEnable
   744 ;;		_RS485_TxEnable
   745 ;;		_Timer0_Init
   746 ;;		_UART_Init
   747 ;;		_UART_Read
   748 ;;		_UART_Write
   749 ;;		_initLCD
   750 ;;		_lcdPrint
   751 ;;		_lcdSend
   752 ;; This function is called by:
   753 ;;		Startup code after reset
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757     002B                     _main:	
   758                           ;psect for function _main
   759                           
   760     002B                     l2295:	
   761                           ;incstack = 0
   762                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   763                           
   764                           
   765                           ;main.c: 105:     TRISA=0x00;
   766     002B  1683               	bsf	3,5	;RP0=1, select bank1
   767     002C  1303               	bcf	3,6	;RP1=0, select bank1
   768     002D  0185               	clrf	5	;volatile
   769                           
   770                           ;main.c: 106:  TRISB=0x00;
   771     002E  0186               	clrf	6	;volatile
   772                           
   773                           ;main.c: 107:  TRISC=0x00;
   774     002F  0187               	clrf	7	;volatile
   775                           
   776                           ;main.c: 108:  TRISD=0x00;
   777     0030  0188               	clrf	8	;volatile
   778                           
   779                           ;main.c: 109:     TRISE=0X00;
   780     0031  0189               	clrf	9	;volatile
   781     0032                     l2297:
   782                           
   783                           ;main.c: 110:     UART_Init();
   784     0032  120A  118A  27E6  120A  118A  	fcall	_UART_Init
   785     0037                     l2299:
   786                           
   787                           ;main.c: 111:     initLCD();
   788     0037  120A  118A  25FB  120A  118A  	fcall	_initLCD
   789     003C                     l2301:
   790                           
   791                           ;main.c: 112:     Timer0_Init();
   792     003C  120A  118A  24DA  120A  118A  	fcall	_Timer0_Init
   793     0041                     l2303:
   794                           
   795                           ;main.c: 114:     {;main.c: 115:         lcdSend(0x01, 0);
   796     0041  1283               	bcf	3,5	;RP0=0, select bank0
   797     0042  1303               	bcf	3,6	;RP1=0, select bank0
   798     0043  01D1               	clrf	lcdSend@tipo
   799     0044  3001               	movlw	1
   800     0045  120A  118A  27D1  120A  118A  	fcall	_lcdSend
   801     004A                     l2305:
   802                           
   803                           ;main.c: 116:         lcdPrint("Premi *");
   804     004A  3068               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   805     004B  1283               	bcf	3,5	;RP0=0, select bank0
   806     004C  1303               	bcf	3,6	;RP1=0, select bank0
   807     004D  00D3               	movwf	lcdPrint@str
   808     004E  3080               	movlw	128
   809     004F  00D4               	movwf	lcdPrint@str+1
   810     0050  120A  118A  272D  120A  118A  	fcall	_lcdPrint
   811     0055                     l2307:
   812                           
   813                           ;main.c: 117:         RS485_TxEnable();
   814     0055  120A  118A  24F3  120A  118A  	fcall	_RS485_TxEnable
   815     005A                     l2309:
   816                           
   817                           ;main.c: 118:         UART_Write('P');
   818     005A  3050               	movlw	80
   819     005B  120A  118A  24E9  120A  118A  	fcall	_UART_Write
   820     0060                     l2311:
   821                           
   822                           ;main.c: 119:         UART_Write('r');
   823     0060  3072               	movlw	114
   824     0061  120A  118A  24E9  120A  118A  	fcall	_UART_Write
   825     0066                     l2313:
   826                           
   827                           ;main.c: 120:         UART_Write('e');
   828     0066  3065               	movlw	101
   829     0067  120A  118A  24E9  120A  118A  	fcall	_UART_Write
   830     006C                     l2315:
   831                           
   832                           ;main.c: 121:         UART_Write('m');
   833     006C  306D               	movlw	109
   834     006D  120A  118A  24E9  120A  118A  	fcall	_UART_Write
   835     0072                     l2317:
   836                           
   837                           ;main.c: 122:         UART_Write('i');
   838     0072  3069               	movlw	105
   839     0073  120A  118A  24E9  120A  118A  	fcall	_UART_Write
   840     0078                     l2319:
   841                           
   842                           ;main.c: 123:         UART_Write(' ');
   843     0078  3020               	movlw	32
   844     0079  120A  118A  24E9  120A  118A  	fcall	_UART_Write
   845     007E                     l2321:
   846                           
   847                           ;main.c: 124:         UART_Write('*');
   848     007E  302A               	movlw	42
   849     007F  120A  118A  24E9  120A  118A  	fcall	_UART_Write
   850     0084                     l2323:
   851                           
   852                           ;main.c: 125:         UART_Write('\r');
   853     0084  300D               	movlw	13
   854     0085  120A  118A  24E9  120A  118A  	fcall	_UART_Write
   855     008A                     l2325:
   856                           
   857                           ;main.c: 126:         UART_Write('\n');
   858     008A  300A               	movlw	10
   859     008B  120A  118A  24E9  120A  118A  	fcall	_UART_Write
   860     0090                     l2327:
   861                           
   862                           ;main.c: 128:         num1 = GenerateRandomNumber();
   863     0090  120A  118A  27A1  120A  118A  	fcall	_GenerateRandomNumber
   864     0095  00F8               	movwf	_num1
   865     0096                     l2329:
   866                           
   867                           ;main.c: 130:         num2 = GenerateRandomNumber();
   868     0096  120A  118A  27A1  120A  118A  	fcall	_GenerateRandomNumber
   869     009B  00F7               	movwf	_num2
   870     009C                     l2331:
   871                           
   872                           ;main.c: 132:         num3 = GenerateRandomNumber();
   873     009C  120A  118A  27A1  120A  118A  	fcall	_GenerateRandomNumber
   874     00A1  00F6               	movwf	_num3
   875     00A2                     l2333:
   876                           
   877                           ;main.c: 134:         num4 = GenerateRandomNumber();
   878     00A2  120A  118A  27A1  120A  118A  	fcall	_GenerateRandomNumber
   879     00A7  00F5               	movwf	_num4
   880     00A8                     l2335:
   881                           
   882                           ;main.c: 136:         num5 = GenerateRandomNumber();
   883     00A8  120A  118A  27A1  120A  118A  	fcall	_GenerateRandomNumber
   884     00AD  1283               	bcf	3,5	;RP0=0, select bank0
   885     00AE  1303               	bcf	3,6	;RP1=0, select bank0
   886     00AF  00CD               	movwf	_num5
   887                           
   888                           ;main.c: 138:         while (codice[0] == '\0')
   889     00B0  28C6               	goto	l2343
   890     00B1                     l2337:
   891                           
   892                           ;main.c: 139:         {;main.c: 140:             KeyPadReader();
   893     00B1  120A  118A  244E  120A  118A  	fcall	_KeyPadReader
   894     00B6                     l2339:
   895                           
   896                           ;main.c: 141:             if (keys[keypressed] == '*'){
   897     00B6  1283               	bcf	3,5	;RP0=0, select bank0
   898     00B7  1303               	bcf	3,6	;RP1=0, select bank0
   899     00B8  084C               	movf	_keypressed,w
   900     00B9  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
   901     00BA  0084               	movwf	4
   902     00BB  120A  118A  250A  120A  118A  	fcall	stringdir
   903     00C0  3A2A               	xorlw	42
   904     00C1  1D03               	skipz
   905     00C2  28C4               	goto	u2551
   906     00C3  28C5               	goto	u2550
   907     00C4                     u2551:
   908     00C4  28C6               	goto	l2343
   909     00C5                     u2550:
   910     00C5  28CB               	goto	l2345
   911     00C6                     l2343:
   912                           
   913                           ;main.c: 138:         while (codice[0] == '\0')
   914     00C6  0836               	movf	_codice,w
   915     00C7  1903               	btfsc	3,2
   916     00C8  28CA               	goto	u2561
   917     00C9  28CB               	goto	u2560
   918     00CA                     u2561:
   919     00CA  28B1               	goto	l2337
   920     00CB                     u2560:
   921     00CB                     l2345:
   922                           
   923                           ;main.c: 147:             lcdSend(0x01, 0);
   924     00CB  01D1               	clrf	lcdSend@tipo
   925     00CC  3001               	movlw	1
   926     00CD  120A  118A  27D1  120A  118A  	fcall	_lcdSend
   927     00D2                     l2347:
   928                           
   929                           ;main.c: 148:             lcdPrint("Attendere");
   930     00D2  3055               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   931     00D3  1283               	bcf	3,5	;RP0=0, select bank0
   932     00D4  1303               	bcf	3,6	;RP1=0, select bank0
   933     00D5  00D3               	movwf	lcdPrint@str
   934     00D6  3080               	movlw	128
   935     00D7  00D4               	movwf	lcdPrint@str+1
   936     00D8  120A  118A  272D  120A  118A  	fcall	_lcdPrint
   937     00DD                     l2349:
   938                           
   939                           ;main.c: 149:             RS485_TxEnable();
   940     00DD  120A  118A  24F3  120A  118A  	fcall	_RS485_TxEnable
   941                           
   942                           ;main.c: 150:             while(num1 != 0x30 && num1 != 0x31 && num1 != 0x32 && num1 != 
      +                          0x33 &&
   943     00E2  28E9               	goto	l2353
   944     00E3                     l2351:
   945                           
   946                           ;main.c: 152:                   num1 != 0x38 && num1 != 0x39){;main.c: 153:             
      +                          num1 = GenerateRandomNumber();
   947     00E3  120A  118A  27A1  120A  118A  	fcall	_GenerateRandomNumber
   948     00E8  00F8               	movwf	_num1
   949     00E9                     l2353:
   950                           
   951                           ;main.c: 150:             while(num1 != 0x30 && num1 != 0x31 && num1 != 0x32 && num1 != 
      +                          0x33 &&
   952     00E9  3030               	movlw	48
   953     00EA  0678               	xorwf	_num1,w
   954     00EB  1903               	btfsc	3,2
   955     00EC  28EE               	goto	u2571
   956     00ED  28EF               	goto	u2570
   957     00EE                     u2571:
   958     00EE  2925               	goto	l2373
   959     00EF                     u2570:
   960     00EF                     l2355:
   961     00EF  3031               	movlw	49
   962     00F0  0678               	xorwf	_num1,w
   963     00F1  1903               	btfsc	3,2
   964     00F2  28F4               	goto	u2581
   965     00F3  28F5               	goto	u2580
   966     00F4                     u2581:
   967     00F4  2925               	goto	l2373
   968     00F5                     u2580:
   969     00F5                     l2357:
   970     00F5  3032               	movlw	50
   971     00F6  0678               	xorwf	_num1,w
   972     00F7  1903               	btfsc	3,2
   973     00F8  28FA               	goto	u2591
   974     00F9  28FB               	goto	u2590
   975     00FA                     u2591:
   976     00FA  2925               	goto	l2373
   977     00FB                     u2590:
   978     00FB                     l2359:
   979     00FB  3033               	movlw	51
   980     00FC  0678               	xorwf	_num1,w
   981     00FD  1903               	btfsc	3,2
   982     00FE  2900               	goto	u2601
   983     00FF  2901               	goto	u2600
   984     0100                     u2601:
   985     0100  2925               	goto	l2373
   986     0101                     u2600:
   987     0101                     l2361:
   988     0101  3034               	movlw	52
   989     0102  0678               	xorwf	_num1,w
   990     0103  1903               	btfsc	3,2
   991     0104  2906               	goto	u2611
   992     0105  2907               	goto	u2610
   993     0106                     u2611:
   994     0106  2925               	goto	l2373
   995     0107                     u2610:
   996     0107                     l2363:
   997     0107  3035               	movlw	53
   998     0108  0678               	xorwf	_num1,w
   999     0109  1903               	btfsc	3,2
  1000     010A  290C               	goto	u2621
  1001     010B  290D               	goto	u2620
  1002     010C                     u2621:
  1003     010C  2925               	goto	l2373
  1004     010D                     u2620:
  1005     010D                     l2365:
  1006     010D  3036               	movlw	54
  1007     010E  0678               	xorwf	_num1,w
  1008     010F  1903               	btfsc	3,2
  1009     0110  2912               	goto	u2631
  1010     0111  2913               	goto	u2630
  1011     0112                     u2631:
  1012     0112  2925               	goto	l2373
  1013     0113                     u2630:
  1014     0113                     l2367:
  1015     0113  3037               	movlw	55
  1016     0114  0678               	xorwf	_num1,w
  1017     0115  1903               	btfsc	3,2
  1018     0116  2918               	goto	u2641
  1019     0117  2919               	goto	u2640
  1020     0118                     u2641:
  1021     0118  2925               	goto	l2373
  1022     0119                     u2640:
  1023     0119                     l2369:
  1024     0119  3038               	movlw	56
  1025     011A  0678               	xorwf	_num1,w
  1026     011B  1903               	btfsc	3,2
  1027     011C  291E               	goto	u2651
  1028     011D  291F               	goto	u2650
  1029     011E                     u2651:
  1030     011E  2925               	goto	l2373
  1031     011F                     u2650:
  1032     011F                     l2371:
  1033     011F  3039               	movlw	57
  1034     0120  0678               	xorwf	_num1,w
  1035     0121  1D03               	btfss	3,2
  1036     0122  2924               	goto	u2661
  1037     0123  2925               	goto	u2660
  1038     0124                     u2661:
  1039     0124  28E3               	goto	l2351
  1040     0125                     u2660:
  1041     0125                     l2373:
  1042                           
  1043                           ;main.c: 157:             lcdSend(0x01, 0);
  1044     0125  1283               	bcf	3,5	;RP0=0, select bank0
  1045     0126  1303               	bcf	3,6	;RP1=0, select bank0
  1046     0127  01D1               	clrf	lcdSend@tipo
  1047     0128  3001               	movlw	1
  1048     0129  120A  118A  27D1  120A  118A  	fcall	_lcdSend
  1049     012E                     l2375:
  1050                           
  1051                           ;main.c: 158:             lcdPrint("Attendere.");
  1052     012E  304A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1053     012F  1283               	bcf	3,5	;RP0=0, select bank0
  1054     0130  1303               	bcf	3,6	;RP1=0, select bank0
  1055     0131  00D3               	movwf	lcdPrint@str
  1056     0132  3080               	movlw	128
  1057     0133  00D4               	movwf	lcdPrint@str+1
  1058     0134  120A  118A  272D  120A  118A  	fcall	_lcdPrint
  1059                           
  1060                           ;main.c: 159:             while(num2 != 0x30 && num2 != 0x31 && num2 != 0x32 && num2 != 
      +                          0x33 &&
  1061     0139  2940               	goto	l2379
  1062     013A                     l2377:
  1063                           
  1064                           ;main.c: 161:                   num2 != 0x38 && num2 != 0x39){;main.c: 162:             
      +                          num2 = GenerateRandomNumber();
  1065     013A  120A  118A  27A1  120A  118A  	fcall	_GenerateRandomNumber
  1066     013F  00F7               	movwf	_num2
  1067     0140                     l2379:
  1068                           
  1069                           ;main.c: 159:             while(num2 != 0x30 && num2 != 0x31 && num2 != 0x32 && num2 != 
      +                          0x33 &&
  1070     0140  3030               	movlw	48
  1071     0141  0677               	xorwf	_num2,w
  1072     0142  1903               	btfsc	3,2
  1073     0143  2945               	goto	u2671
  1074     0144  2946               	goto	u2670
  1075     0145                     u2671:
  1076     0145  297C               	goto	l2399
  1077     0146                     u2670:
  1078     0146                     l2381:
  1079     0146  3031               	movlw	49
  1080     0147  0677               	xorwf	_num2,w
  1081     0148  1903               	btfsc	3,2
  1082     0149  294B               	goto	u2681
  1083     014A  294C               	goto	u2680
  1084     014B                     u2681:
  1085     014B  297C               	goto	l2399
  1086     014C                     u2680:
  1087     014C                     l2383:
  1088     014C  3032               	movlw	50
  1089     014D  0677               	xorwf	_num2,w
  1090     014E  1903               	btfsc	3,2
  1091     014F  2951               	goto	u2691
  1092     0150  2952               	goto	u2690
  1093     0151                     u2691:
  1094     0151  297C               	goto	l2399
  1095     0152                     u2690:
  1096     0152                     l2385:
  1097     0152  3033               	movlw	51
  1098     0153  0677               	xorwf	_num2,w
  1099     0154  1903               	btfsc	3,2
  1100     0155  2957               	goto	u2701
  1101     0156  2958               	goto	u2700
  1102     0157                     u2701:
  1103     0157  297C               	goto	l2399
  1104     0158                     u2700:
  1105     0158                     l2387:
  1106     0158  3034               	movlw	52
  1107     0159  0677               	xorwf	_num2,w
  1108     015A  1903               	btfsc	3,2
  1109     015B  295D               	goto	u2711
  1110     015C  295E               	goto	u2710
  1111     015D                     u2711:
  1112     015D  297C               	goto	l2399
  1113     015E                     u2710:
  1114     015E                     l2389:
  1115     015E  3035               	movlw	53
  1116     015F  0677               	xorwf	_num2,w
  1117     0160  1903               	btfsc	3,2
  1118     0161  2963               	goto	u2721
  1119     0162  2964               	goto	u2720
  1120     0163                     u2721:
  1121     0163  297C               	goto	l2399
  1122     0164                     u2720:
  1123     0164                     l2391:
  1124     0164  3036               	movlw	54
  1125     0165  0677               	xorwf	_num2,w
  1126     0166  1903               	btfsc	3,2
  1127     0167  2969               	goto	u2731
  1128     0168  296A               	goto	u2730
  1129     0169                     u2731:
  1130     0169  297C               	goto	l2399
  1131     016A                     u2730:
  1132     016A                     l2393:
  1133     016A  3037               	movlw	55
  1134     016B  0677               	xorwf	_num2,w
  1135     016C  1903               	btfsc	3,2
  1136     016D  296F               	goto	u2741
  1137     016E  2970               	goto	u2740
  1138     016F                     u2741:
  1139     016F  297C               	goto	l2399
  1140     0170                     u2740:
  1141     0170                     l2395:
  1142     0170  3038               	movlw	56
  1143     0171  0677               	xorwf	_num2,w
  1144     0172  1903               	btfsc	3,2
  1145     0173  2975               	goto	u2751
  1146     0174  2976               	goto	u2750
  1147     0175                     u2751:
  1148     0175  297C               	goto	l2399
  1149     0176                     u2750:
  1150     0176                     l2397:
  1151     0176  3039               	movlw	57
  1152     0177  0677               	xorwf	_num2,w
  1153     0178  1D03               	btfss	3,2
  1154     0179  297B               	goto	u2761
  1155     017A  297C               	goto	u2760
  1156     017B                     u2761:
  1157     017B  293A               	goto	l2377
  1158     017C                     u2760:
  1159     017C                     l2399:
  1160                           
  1161                           ;main.c: 166:             lcdSend(0x01, 0);
  1162     017C  1283               	bcf	3,5	;RP0=0, select bank0
  1163     017D  1303               	bcf	3,6	;RP1=0, select bank0
  1164     017E  01D1               	clrf	lcdSend@tipo
  1165     017F  3001               	movlw	1
  1166     0180  120A  118A  27D1  120A  118A  	fcall	_lcdSend
  1167     0185                     l2401:
  1168                           
  1169                           ;main.c: 167:             lcdPrint("Attendere..");
  1170     0185  303E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1171     0186  1283               	bcf	3,5	;RP0=0, select bank0
  1172     0187  1303               	bcf	3,6	;RP1=0, select bank0
  1173     0188  00D3               	movwf	lcdPrint@str
  1174     0189  3080               	movlw	128
  1175     018A  00D4               	movwf	lcdPrint@str+1
  1176     018B  120A  118A  272D  120A  118A  	fcall	_lcdPrint
  1177                           
  1178                           ;main.c: 168:             while(num3 != 0x30 && num3 != 0x31 && num3 != 0x32 && num3 != 
      +                          0x33 &&
  1179     0190  2997               	goto	l2405
  1180     0191                     l2403:
  1181                           
  1182                           ;main.c: 170:                   num3 != 0x38 && num3 != 0x39){;main.c: 171:             
      +                          num3 = GenerateRandomNumber();
  1183     0191  120A  118A  27A1  120A  118A  	fcall	_GenerateRandomNumber
  1184     0196  00F6               	movwf	_num3
  1185     0197                     l2405:
  1186                           
  1187                           ;main.c: 168:             while(num3 != 0x30 && num3 != 0x31 && num3 != 0x32 && num3 != 
      +                          0x33 &&
  1188     0197  3030               	movlw	48
  1189     0198  0676               	xorwf	_num3,w
  1190     0199  1903               	btfsc	3,2
  1191     019A  299C               	goto	u2771
  1192     019B  299D               	goto	u2770
  1193     019C                     u2771:
  1194     019C  29D3               	goto	l2425
  1195     019D                     u2770:
  1196     019D                     l2407:
  1197     019D  3031               	movlw	49
  1198     019E  0676               	xorwf	_num3,w
  1199     019F  1903               	btfsc	3,2
  1200     01A0  29A2               	goto	u2781
  1201     01A1  29A3               	goto	u2780
  1202     01A2                     u2781:
  1203     01A2  29D3               	goto	l2425
  1204     01A3                     u2780:
  1205     01A3                     l2409:
  1206     01A3  3032               	movlw	50
  1207     01A4  0676               	xorwf	_num3,w
  1208     01A5  1903               	btfsc	3,2
  1209     01A6  29A8               	goto	u2791
  1210     01A7  29A9               	goto	u2790
  1211     01A8                     u2791:
  1212     01A8  29D3               	goto	l2425
  1213     01A9                     u2790:
  1214     01A9                     l2411:
  1215     01A9  3033               	movlw	51
  1216     01AA  0676               	xorwf	_num3,w
  1217     01AB  1903               	btfsc	3,2
  1218     01AC  29AE               	goto	u2801
  1219     01AD  29AF               	goto	u2800
  1220     01AE                     u2801:
  1221     01AE  29D3               	goto	l2425
  1222     01AF                     u2800:
  1223     01AF                     l2413:
  1224     01AF  3034               	movlw	52
  1225     01B0  0676               	xorwf	_num3,w
  1226     01B1  1903               	btfsc	3,2
  1227     01B2  29B4               	goto	u2811
  1228     01B3  29B5               	goto	u2810
  1229     01B4                     u2811:
  1230     01B4  29D3               	goto	l2425
  1231     01B5                     u2810:
  1232     01B5                     l2415:
  1233     01B5  3035               	movlw	53
  1234     01B6  0676               	xorwf	_num3,w
  1235     01B7  1903               	btfsc	3,2
  1236     01B8  29BA               	goto	u2821
  1237     01B9  29BB               	goto	u2820
  1238     01BA                     u2821:
  1239     01BA  29D3               	goto	l2425
  1240     01BB                     u2820:
  1241     01BB                     l2417:
  1242     01BB  3036               	movlw	54
  1243     01BC  0676               	xorwf	_num3,w
  1244     01BD  1903               	btfsc	3,2
  1245     01BE  29C0               	goto	u2831
  1246     01BF  29C1               	goto	u2830
  1247     01C0                     u2831:
  1248     01C0  29D3               	goto	l2425
  1249     01C1                     u2830:
  1250     01C1                     l2419:
  1251     01C1  3037               	movlw	55
  1252     01C2  0676               	xorwf	_num3,w
  1253     01C3  1903               	btfsc	3,2
  1254     01C4  29C6               	goto	u2841
  1255     01C5  29C7               	goto	u2840
  1256     01C6                     u2841:
  1257     01C6  29D3               	goto	l2425
  1258     01C7                     u2840:
  1259     01C7                     l2421:
  1260     01C7  3038               	movlw	56
  1261     01C8  0676               	xorwf	_num3,w
  1262     01C9  1903               	btfsc	3,2
  1263     01CA  29CC               	goto	u2851
  1264     01CB  29CD               	goto	u2850
  1265     01CC                     u2851:
  1266     01CC  29D3               	goto	l2425
  1267     01CD                     u2850:
  1268     01CD                     l2423:
  1269     01CD  3039               	movlw	57
  1270     01CE  0676               	xorwf	_num3,w
  1271     01CF  1D03               	btfss	3,2
  1272     01D0  29D2               	goto	u2861
  1273     01D1  29D3               	goto	u2860
  1274     01D2                     u2861:
  1275     01D2  2991               	goto	l2403
  1276     01D3                     u2860:
  1277     01D3                     l2425:
  1278                           
  1279                           ;main.c: 175:             lcdSend(0x01, 0);
  1280     01D3  1283               	bcf	3,5	;RP0=0, select bank0
  1281     01D4  1303               	bcf	3,6	;RP1=0, select bank0
  1282     01D5  01D1               	clrf	lcdSend@tipo
  1283     01D6  3001               	movlw	1
  1284     01D7  120A  118A  27D1  120A  118A  	fcall	_lcdSend
  1285     01DC                     l2427:
  1286                           
  1287                           ;main.c: 176:             lcdPrint("Attendere...");
  1288     01DC  3031               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1289     01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1290     01DE  1303               	bcf	3,6	;RP1=0, select bank0
  1291     01DF  00D3               	movwf	lcdPrint@str
  1292     01E0  3080               	movlw	128
  1293     01E1  00D4               	movwf	lcdPrint@str+1
  1294     01E2  120A  118A  272D  120A  118A  	fcall	_lcdPrint
  1295                           
  1296                           ;main.c: 177:             while(num4 != 0x30 && num4 != 0x31 && num4 != 0x32 && num4 != 
      +                          0x33 &&
  1297     01E7  29EE               	goto	l2431
  1298     01E8                     l2429:
  1299                           
  1300                           ;main.c: 179:                   num4 != 0x38 && num4 != 0x39){;main.c: 180:             
      +                          num4 = GenerateRandomNumber();
  1301     01E8  120A  118A  27A1  120A  118A  	fcall	_GenerateRandomNumber
  1302     01ED  00F5               	movwf	_num4
  1303     01EE                     l2431:
  1304                           
  1305                           ;main.c: 177:             while(num4 != 0x30 && num4 != 0x31 && num4 != 0x32 && num4 != 
      +                          0x33 &&
  1306     01EE  3030               	movlw	48
  1307     01EF  0675               	xorwf	_num4,w
  1308     01F0  1903               	btfsc	3,2
  1309     01F1  29F3               	goto	u2871
  1310     01F2  29F4               	goto	u2870
  1311     01F3                     u2871:
  1312     01F3  2A2A               	goto	l2451
  1313     01F4                     u2870:
  1314     01F4                     l2433:
  1315     01F4  3031               	movlw	49
  1316     01F5  0675               	xorwf	_num4,w
  1317     01F6  1903               	btfsc	3,2
  1318     01F7  29F9               	goto	u2881
  1319     01F8  29FA               	goto	u2880
  1320     01F9                     u2881:
  1321     01F9  2A2A               	goto	l2451
  1322     01FA                     u2880:
  1323     01FA                     l2435:
  1324     01FA  3032               	movlw	50
  1325     01FB  0675               	xorwf	_num4,w
  1326     01FC  1903               	btfsc	3,2
  1327     01FD  29FF               	goto	u2891
  1328     01FE  2A00               	goto	u2890
  1329     01FF                     u2891:
  1330     01FF  2A2A               	goto	l2451
  1331     0200                     u2890:
  1332     0200                     l2437:
  1333     0200  3033               	movlw	51
  1334     0201  0675               	xorwf	_num4,w
  1335     0202  1903               	btfsc	3,2
  1336     0203  2A05               	goto	u2901
  1337     0204  2A06               	goto	u2900
  1338     0205                     u2901:
  1339     0205  2A2A               	goto	l2451
  1340     0206                     u2900:
  1341     0206                     l2439:
  1342     0206  3034               	movlw	52
  1343     0207  0675               	xorwf	_num4,w
  1344     0208  1903               	btfsc	3,2
  1345     0209  2A0B               	goto	u2911
  1346     020A  2A0C               	goto	u2910
  1347     020B                     u2911:
  1348     020B  2A2A               	goto	l2451
  1349     020C                     u2910:
  1350     020C                     l2441:
  1351     020C  3035               	movlw	53
  1352     020D  0675               	xorwf	_num4,w
  1353     020E  1903               	btfsc	3,2
  1354     020F  2A11               	goto	u2921
  1355     0210  2A12               	goto	u2920
  1356     0211                     u2921:
  1357     0211  2A2A               	goto	l2451
  1358     0212                     u2920:
  1359     0212                     l2443:
  1360     0212  3036               	movlw	54
  1361     0213  0675               	xorwf	_num4,w
  1362     0214  1903               	btfsc	3,2
  1363     0215  2A17               	goto	u2931
  1364     0216  2A18               	goto	u2930
  1365     0217                     u2931:
  1366     0217  2A2A               	goto	l2451
  1367     0218                     u2930:
  1368     0218                     l2445:
  1369     0218  3037               	movlw	55
  1370     0219  0675               	xorwf	_num4,w
  1371     021A  1903               	btfsc	3,2
  1372     021B  2A1D               	goto	u2941
  1373     021C  2A1E               	goto	u2940
  1374     021D                     u2941:
  1375     021D  2A2A               	goto	l2451
  1376     021E                     u2940:
  1377     021E                     l2447:
  1378     021E  3038               	movlw	56
  1379     021F  0675               	xorwf	_num4,w
  1380     0220  1903               	btfsc	3,2
  1381     0221  2A23               	goto	u2951
  1382     0222  2A24               	goto	u2950
  1383     0223                     u2951:
  1384     0223  2A2A               	goto	l2451
  1385     0224                     u2950:
  1386     0224                     l2449:
  1387     0224  3039               	movlw	57
  1388     0225  0675               	xorwf	_num4,w
  1389     0226  1D03               	btfss	3,2
  1390     0227  2A29               	goto	u2961
  1391     0228  2A2A               	goto	u2960
  1392     0229                     u2961:
  1393     0229  29E8               	goto	l2429
  1394     022A                     u2960:
  1395     022A                     l2451:
  1396                           
  1397                           ;main.c: 184:             lcdSend(0x01, 0);
  1398     022A  1283               	bcf	3,5	;RP0=0, select bank0
  1399     022B  1303               	bcf	3,6	;RP1=0, select bank0
  1400     022C  01D1               	clrf	lcdSend@tipo
  1401     022D  3001               	movlw	1
  1402     022E  120A  118A  27D1  120A  118A  	fcall	_lcdSend
  1403     0233                     l2453:
  1404                           
  1405                           ;main.c: 185:             lcdPrint("Attendere....");
  1406     0233  3023               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1407     0234  1283               	bcf	3,5	;RP0=0, select bank0
  1408     0235  1303               	bcf	3,6	;RP1=0, select bank0
  1409     0236  00D3               	movwf	lcdPrint@str
  1410     0237  3080               	movlw	128
  1411     0238  00D4               	movwf	lcdPrint@str+1
  1412     0239  120A  118A  272D  120A  118A  	fcall	_lcdPrint
  1413                           
  1414                           ;main.c: 186:             while(num5 != 0x30 && num5 != 0x31 && num5 != 0x32 && num5 != 
      +                          0x33 &&
  1415     023E  2A47               	goto	l2457
  1416     023F                     l2455:
  1417                           
  1418                           ;main.c: 188:                   num5 != 0x38 && num5 != 0x39){;main.c: 189:             
      +                          num5 = GenerateRandomNumber();
  1419     023F  120A  118A  27A1  120A  118A  	fcall	_GenerateRandomNumber
  1420     0244  1283               	bcf	3,5	;RP0=0, select bank0
  1421     0245  1303               	bcf	3,6	;RP1=0, select bank0
  1422     0246  00CD               	movwf	_num5
  1423     0247                     l2457:
  1424                           
  1425                           ;main.c: 186:             while(num5 != 0x30 && num5 != 0x31 && num5 != 0x32 && num5 != 
      +                          0x33 &&
  1426     0247  3030               	movlw	48
  1427     0248  1283               	bcf	3,5	;RP0=0, select bank0
  1428     0249  1303               	bcf	3,6	;RP1=0, select bank0
  1429     024A  064D               	xorwf	_num5,w
  1430     024B  1903               	btfsc	3,2
  1431     024C  2A4E               	goto	u2971
  1432     024D  2A4F               	goto	u2970
  1433     024E                     u2971:
  1434     024E  2A85               	goto	l2477
  1435     024F                     u2970:
  1436     024F                     l2459:
  1437     024F  3031               	movlw	49
  1438     0250  064D               	xorwf	_num5,w
  1439     0251  1903               	btfsc	3,2
  1440     0252  2A54               	goto	u2981
  1441     0253  2A55               	goto	u2980
  1442     0254                     u2981:
  1443     0254  2A85               	goto	l2477
  1444     0255                     u2980:
  1445     0255                     l2461:
  1446     0255  3032               	movlw	50
  1447     0256  064D               	xorwf	_num5,w
  1448     0257  1903               	btfsc	3,2
  1449     0258  2A5A               	goto	u2991
  1450     0259  2A5B               	goto	u2990
  1451     025A                     u2991:
  1452     025A  2A85               	goto	l2477
  1453     025B                     u2990:
  1454     025B                     l2463:
  1455     025B  3033               	movlw	51
  1456     025C  064D               	xorwf	_num5,w
  1457     025D  1903               	btfsc	3,2
  1458     025E  2A60               	goto	u3001
  1459     025F  2A61               	goto	u3000
  1460     0260                     u3001:
  1461     0260  2A85               	goto	l2477
  1462     0261                     u3000:
  1463     0261                     l2465:
  1464     0261  3034               	movlw	52
  1465     0262  064D               	xorwf	_num5,w
  1466     0263  1903               	btfsc	3,2
  1467     0264  2A66               	goto	u3011
  1468     0265  2A67               	goto	u3010
  1469     0266                     u3011:
  1470     0266  2A85               	goto	l2477
  1471     0267                     u3010:
  1472     0267                     l2467:
  1473     0267  3035               	movlw	53
  1474     0268  064D               	xorwf	_num5,w
  1475     0269  1903               	btfsc	3,2
  1476     026A  2A6C               	goto	u3021
  1477     026B  2A6D               	goto	u3020
  1478     026C                     u3021:
  1479     026C  2A85               	goto	l2477
  1480     026D                     u3020:
  1481     026D                     l2469:
  1482     026D  3036               	movlw	54
  1483     026E  064D               	xorwf	_num5,w
  1484     026F  1903               	btfsc	3,2
  1485     0270  2A72               	goto	u3031
  1486     0271  2A73               	goto	u3030
  1487     0272                     u3031:
  1488     0272  2A85               	goto	l2477
  1489     0273                     u3030:
  1490     0273                     l2471:
  1491     0273  3037               	movlw	55
  1492     0274  064D               	xorwf	_num5,w
  1493     0275  1903               	btfsc	3,2
  1494     0276  2A78               	goto	u3041
  1495     0277  2A79               	goto	u3040
  1496     0278                     u3041:
  1497     0278  2A85               	goto	l2477
  1498     0279                     u3040:
  1499     0279                     l2473:
  1500     0279  3038               	movlw	56
  1501     027A  064D               	xorwf	_num5,w
  1502     027B  1903               	btfsc	3,2
  1503     027C  2A7E               	goto	u3051
  1504     027D  2A7F               	goto	u3050
  1505     027E                     u3051:
  1506     027E  2A85               	goto	l2477
  1507     027F                     u3050:
  1508     027F                     l2475:
  1509     027F  3039               	movlw	57
  1510     0280  064D               	xorwf	_num5,w
  1511     0281  1D03               	btfss	3,2
  1512     0282  2A84               	goto	u3061
  1513     0283  2A85               	goto	u3060
  1514     0284                     u3061:
  1515     0284  2A3F               	goto	l2455
  1516     0285                     u3060:
  1517     0285                     l2477:
  1518                           
  1519                           ;main.c: 192:             UART_Write(num1);
  1520     0285  0878               	movf	_num1,w
  1521     0286  120A  118A  24E9  120A  118A  	fcall	_UART_Write
  1522                           
  1523                           ;main.c: 193:             UART_Write(num2);
  1524     028B  0877               	movf	_num2,w
  1525     028C  120A  118A  24E9  120A  118A  	fcall	_UART_Write
  1526                           
  1527                           ;main.c: 194:             UART_Write(num3);
  1528     0291  0876               	movf	_num3,w
  1529     0292  120A  118A  24E9  120A  118A  	fcall	_UART_Write
  1530                           
  1531                           ;main.c: 195:             UART_Write(num4);
  1532     0297  0875               	movf	_num4,w
  1533     0298  120A  118A  24E9  120A  118A  	fcall	_UART_Write
  1534                           
  1535                           ;main.c: 196:             UART_Write(num5);
  1536     029D  1283               	bcf	3,5	;RP0=0, select bank0
  1537     029E  1303               	bcf	3,6	;RP1=0, select bank0
  1538     029F  084D               	movf	_num5,w
  1539     02A0  120A  118A  24E9  120A  118A  	fcall	_UART_Write
  1540                           
  1541                           ;main.c: 197:             UART_Write('\r');
  1542     02A5  300D               	movlw	13
  1543     02A6  120A  118A  24E9  120A  118A  	fcall	_UART_Write
  1544                           
  1545                           ;main.c: 198:             UART_Write('\n');
  1546     02AB  300A               	movlw	10
  1547     02AC  120A  118A  24E9  120A  118A  	fcall	_UART_Write
  1548                           
  1549                           ;main.c: 199:             lcdSend(0x01, 0);
  1550     02B1  1283               	bcf	3,5	;RP0=0, select bank0
  1551     02B2  1303               	bcf	3,6	;RP1=0, select bank0
  1552     02B3  01D1               	clrf	lcdSend@tipo
  1553     02B4  3001               	movlw	1
  1554     02B5  120A  118A  27D1  120A  118A  	fcall	_lcdSend
  1555                           
  1556                           ;main.c: 200:             lcdSend(num1, 1);
  1557     02BA  1283               	bcf	3,5	;RP0=0, select bank0
  1558     02BB  1303               	bcf	3,6	;RP1=0, select bank0
  1559     02BC  01D1               	clrf	lcdSend@tipo
  1560     02BD  0AD1               	incf	lcdSend@tipo,f
  1561     02BE  0878               	movf	_num1,w
  1562     02BF  120A  118A  27D1  120A  118A  	fcall	_lcdSend
  1563                           
  1564                           ;main.c: 201:             lcdSend(num2, 1);
  1565     02C4  1283               	bcf	3,5	;RP0=0, select bank0
  1566     02C5  1303               	bcf	3,6	;RP1=0, select bank0
  1567     02C6  01D1               	clrf	lcdSend@tipo
  1568     02C7  0AD1               	incf	lcdSend@tipo,f
  1569     02C8  0877               	movf	_num2,w
  1570     02C9  120A  118A  27D1  120A  118A  	fcall	_lcdSend
  1571                           
  1572                           ;main.c: 202:             lcdSend(num3, 1);
  1573     02CE  1283               	bcf	3,5	;RP0=0, select bank0
  1574     02CF  1303               	bcf	3,6	;RP1=0, select bank0
  1575     02D0  01D1               	clrf	lcdSend@tipo
  1576     02D1  0AD1               	incf	lcdSend@tipo,f
  1577     02D2  0876               	movf	_num3,w
  1578     02D3  120A  118A  27D1  120A  118A  	fcall	_lcdSend
  1579                           
  1580                           ;main.c: 203:             lcdSend(num4, 1);
  1581     02D8  1283               	bcf	3,5	;RP0=0, select bank0
  1582     02D9  1303               	bcf	3,6	;RP1=0, select bank0
  1583     02DA  01D1               	clrf	lcdSend@tipo
  1584     02DB  0AD1               	incf	lcdSend@tipo,f
  1585     02DC  0875               	movf	_num4,w
  1586     02DD  120A  118A  27D1  120A  118A  	fcall	_lcdSend
  1587                           
  1588                           ;main.c: 204:             lcdSend(num5, 1);
  1589     02E2  1283               	bcf	3,5	;RP0=0, select bank0
  1590     02E3  1303               	bcf	3,6	;RP1=0, select bank0
  1591     02E4  01D1               	clrf	lcdSend@tipo
  1592     02E5  0AD1               	incf	lcdSend@tipo,f
  1593     02E6  084D               	movf	_num5,w
  1594     02E7  120A  118A  27D1  120A  118A  	fcall	_lcdSend
  1595     02EC                     l2479:
  1596                           
  1597                           ;main.c: 205:             keypressed = 0;
  1598     02EC  1283               	bcf	3,5	;RP0=0, select bank0
  1599     02ED  1303               	bcf	3,6	;RP1=0, select bank0
  1600     02EE  01CC               	clrf	_keypressed
  1601     02EF                     l2481:
  1602                           
  1603                           ;main.c: 206:             RS485_RxEnable();
  1604     02EF  120A  118A  24F8  120A  118A  	fcall	_RS485_RxEnable
  1605     02F4                     l2483:
  1606                           
  1607                           ;main.c: 207:             flag = 1;
  1608     02F4  3001               	movlw	1
  1609     02F5  1283               	bcf	3,5	;RP0=0, select bank0
  1610     02F6  1303               	bcf	3,6	;RP1=0, select bank0
  1611     02F7  00C0               	movwf	_flag
  1612     02F8  3000               	movlw	0
  1613     02F9  00C1               	movwf	_flag+1
  1614     02FA                     l2485:
  1615                           
  1616                           ;main.c: 208:             UART_Read();
  1617     02FA  120A  118A  23B3  120A  118A  	fcall	_UART_Read
  1618     02FF  2841               	goto	l2303
  1619     0300  120A  118A  2810   	ljmp	start
  1620     0303                     __end_of_main:
  1621                           
  1622                           	psect	text1
  1623     05FB                     __ptext1:	
  1624 ;; *************** function _initLCD *****************
  1625 ;; Defined at:
  1626 ;;		line 281 in file "main.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;		None
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;		None
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  1    wreg      void 
  1633 ;; Registers used:
  1634 ;;		wreg, status,2, status,0, pclath, cstack
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1640 ;;      Params:         0       0       0       0       0
  1641 ;;      Locals:         0       0       0       0       0
  1642 ;;      Temps:          0       2       0       0       0
  1643 ;;      Totals:         0       2       0       0       0
  1644 ;;Total ram usage:        2 bytes
  1645 ;; Hardware stack levels used: 1
  1646 ;; Hardware stack levels required when called: 3
  1647 ;; This function calls:
  1648 ;;		_lcdSend
  1649 ;; This function is called by:
  1650 ;;		_main
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654     05FB                     _initLCD:	
  1655                           ;psect for function _initLCD
  1656                           
  1657     05FB                     l2139:	
  1658                           ;incstack = 0
  1659                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  1660                           
  1661                           
  1662                           ;main.c: 282:     PORTEbits.RE2 = 0;
  1663     05FB  1283               	bcf	3,5	;RP0=0, select bank0
  1664     05FC  1303               	bcf	3,6	;RP1=0, select bank0
  1665     05FD  1109               	bcf	9,2	;volatile
  1666                           
  1667                           ;main.c: 283:     PORTEbits.RE1 = 0;
  1668     05FE  1089               	bcf	9,1	;volatile
  1669     05FF                     l2141:
  1670                           
  1671                           ;main.c: 284:     _delay((unsigned long)((20)*(20000000/4000.0)));
  1672     05FF  3082               	movlw	130
  1673     0600  1283               	bcf	3,5	;RP0=0, select bank0
  1674     0601  1303               	bcf	3,6	;RP1=0, select bank0
  1675     0602  00D4               	movwf	??_initLCD+1
  1676     0603  30DD               	movlw	221
  1677     0604  00D3               	movwf	??_initLCD
  1678     0605                     u3077:
  1679     0605  0BD3               	decfsz	??_initLCD,f
  1680     0606  2E05               	goto	u3077
  1681     0607  0BD4               	decfsz	??_initLCD+1,f
  1682     0608  2E05               	goto	u3077
  1683     0609                     l2143:
  1684                           
  1685                           ;main.c: 285:     PORTEbits.RE1 = 1;
  1686     0609  1283               	bcf	3,5	;RP0=0, select bank0
  1687     060A  1303               	bcf	3,6	;RP1=0, select bank0
  1688     060B  1489               	bsf	9,1	;volatile
  1689     060C                     l2145:
  1690                           
  1691                           ;main.c: 286:     lcdSend(0x38, 0);
  1692     060C  01D1               	clrf	lcdSend@tipo
  1693     060D  3038               	movlw	56
  1694     060E  120A  118A  27D1  120A  118A  	fcall	_lcdSend
  1695     0613                     l2147:
  1696                           
  1697                           ;main.c: 287:     _delay((unsigned long)((5)*(20000000/4000.0)));
  1698     0613  3021               	movlw	33
  1699     0614  1283               	bcf	3,5	;RP0=0, select bank0
  1700     0615  1303               	bcf	3,6	;RP1=0, select bank0
  1701     0616  00D4               	movwf	??_initLCD+1
  1702     0617  3075               	movlw	117
  1703     0618  00D3               	movwf	??_initLCD
  1704     0619                     u3087:
  1705     0619  0BD3               	decfsz	??_initLCD,f
  1706     061A  2E19               	goto	u3087
  1707     061B  0BD4               	decfsz	??_initLCD+1,f
  1708     061C  2E19               	goto	u3087
  1709     061D  2E1E               	nop2
  1710                           
  1711                           ;main.c: 288:     lcdSend(0x38, 0);
  1712     061E  1283               	bcf	3,5	;RP0=0, select bank0
  1713     061F  1303               	bcf	3,6	;RP1=0, select bank0
  1714     0620  01D1               	clrf	lcdSend@tipo
  1715     0621  3038               	movlw	56
  1716     0622  120A  118A  27D1  120A  118A  	fcall	_lcdSend
  1717     0627                     l2149:
  1718                           
  1719                           ;main.c: 289:     _delay((unsigned long)((1)*(20000000/4000.0)));
  1720     0627  3007               	movlw	7
  1721     0628  1283               	bcf	3,5	;RP0=0, select bank0
  1722     0629  1303               	bcf	3,6	;RP1=0, select bank0
  1723     062A  00D4               	movwf	??_initLCD+1
  1724     062B  307C               	movlw	124
  1725     062C  00D3               	movwf	??_initLCD
  1726     062D                     u3097:
  1727     062D  0BD3               	decfsz	??_initLCD,f
  1728     062E  2E2D               	goto	u3097
  1729     062F  0BD4               	decfsz	??_initLCD+1,f
  1730     0630  2E2D               	goto	u3097
  1731     0631  0000               	nop
  1732     0632                     l2151:
  1733                           
  1734                           ;main.c: 290:     lcdSend(0x38, 0);
  1735     0632  1283               	bcf	3,5	;RP0=0, select bank0
  1736     0633  1303               	bcf	3,6	;RP1=0, select bank0
  1737     0634  01D1               	clrf	lcdSend@tipo
  1738     0635  3038               	movlw	56
  1739     0636  120A  118A  27D1  120A  118A  	fcall	_lcdSend
  1740     063B                     l2153:
  1741                           
  1742                           ;main.c: 291:     lcdSend(0x08, 0);
  1743     063B  1283               	bcf	3,5	;RP0=0, select bank0
  1744     063C  1303               	bcf	3,6	;RP1=0, select bank0
  1745     063D  01D1               	clrf	lcdSend@tipo
  1746     063E  3008               	movlw	8
  1747     063F  120A  118A  27D1  120A  118A  	fcall	_lcdSend
  1748     0644                     l2155:
  1749                           
  1750                           ;main.c: 292:     lcdSend(0x0F, 0);
  1751     0644  1283               	bcf	3,5	;RP0=0, select bank0
  1752     0645  1303               	bcf	3,6	;RP1=0, select bank0
  1753     0646  01D1               	clrf	lcdSend@tipo
  1754     0647  300F               	movlw	15
  1755     0648  120A  118A  27D1  120A  118A  	fcall	_lcdSend
  1756     064D                     l2157:
  1757                           
  1758                           ;main.c: 293:     lcdSend(0x01, 0);
  1759     064D  1283               	bcf	3,5	;RP0=0, select bank0
  1760     064E  1303               	bcf	3,6	;RP1=0, select bank0
  1761     064F  01D1               	clrf	lcdSend@tipo
  1762     0650  3001               	movlw	1
  1763     0651  120A  118A  27D1  120A  118A  	fcall	_lcdSend
  1764     0656                     l2159:
  1765                           
  1766                           ;main.c: 294:     lcdSend(0x0C, 0);
  1767     0656  1283               	bcf	3,5	;RP0=0, select bank0
  1768     0657  1303               	bcf	3,6	;RP1=0, select bank0
  1769     0658  01D1               	clrf	lcdSend@tipo
  1770     0659  300C               	movlw	12
  1771     065A  120A  118A  27D1  120A  118A  	fcall	_lcdSend
  1772     065F                     l2161:
  1773                           
  1774                           ;main.c: 295:     lcdSend(0x80, 0);
  1775     065F  1283               	bcf	3,5	;RP0=0, select bank0
  1776     0660  1303               	bcf	3,6	;RP1=0, select bank0
  1777     0661  01D1               	clrf	lcdSend@tipo
  1778     0662  3080               	movlw	128
  1779     0663  120A  118A  27D1  120A  118A  	fcall	_lcdSend
  1780     0668                     l208:
  1781     0668  0008               	return
  1782     0669                     __end_of_initLCD:
  1783                           
  1784                           	psect	text2
  1785     04E9                     __ptext2:	
  1786 ;; *************** function _UART_Write *****************
  1787 ;; Defined at:
  1788 ;;		line 241 in file "main.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;  data            1    wreg     unsigned char 
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;  data            1    0[BANK0 ] unsigned char 
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  1    wreg      void 
  1795 ;; Registers used:
  1796 ;;		wreg
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1802 ;;      Params:         0       0       0       0       0
  1803 ;;      Locals:         0       1       0       0       0
  1804 ;;      Temps:          0       0       0       0       0
  1805 ;;      Totals:         0       1       0       0       0
  1806 ;;Total ram usage:        1 bytes
  1807 ;; Hardware stack levels used: 1
  1808 ;; Hardware stack levels required when called: 2
  1809 ;; This function calls:
  1810 ;;		Nothing
  1811 ;; This function is called by:
  1812 ;;		_main
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816     04E9                     _UART_Write:	
  1817                           ;psect for function _UART_Write
  1818                           
  1819                           
  1820                           ;incstack = 0
  1821                           ; Regs used in _UART_Write: [wreg]
  1822                           ;UART_Write@data stored from wreg
  1823     04E9  1283               	bcf	3,5	;RP0=0, select bank0
  1824     04EA  1303               	bcf	3,6	;RP1=0, select bank0
  1825     04EB  00D1               	movwf	UART_Write@data
  1826     04EC                     l2175:
  1827     04EC                     l193:	
  1828                           ;main.c: 242:     while (!TXIF)
  1829                           
  1830                           
  1831                           ;main.c: 242:     while (!TXIF)
  1832     04EC  1E0C               	btfss	12,4	;volatile
  1833     04ED  2CEF               	goto	u2401
  1834     04EE  2CF0               	goto	u2400
  1835     04EF                     u2401:
  1836     04EF  2CEC               	goto	l193
  1837     04F0                     u2400:
  1838     04F0                     l2177:
  1839                           
  1840                           ;main.c: 244:     TXREG = data;
  1841     04F0  0851               	movf	UART_Write@data,w
  1842     04F1  0099               	movwf	25	;volatile
  1843     04F2                     l196:
  1844     04F2  0008               	return
  1845     04F3                     __end_of_UART_Write:
  1846                           
  1847                           	psect	text3
  1848     03B3                     __ptext3:	
  1849 ;; *************** function _UART_Read *****************
  1850 ;; Defined at:
  1851 ;;		line 247 in file "main.c"
  1852 ;; Parameters:    Size  Location     Type
  1853 ;;		None
  1854 ;; Auto vars:     Size  Location     Type
  1855 ;;		None
  1856 ;; Return value:  Size  Location     Type
  1857 ;;                  1    wreg      unsigned char 
  1858 ;; Registers used:
  1859 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1860 ;; Tracked objects:
  1861 ;;		On entry : 0/0
  1862 ;;		On exit  : 0/0
  1863 ;;		Unchanged: 0/0
  1864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1865 ;;      Params:         0       0       0       0       0
  1866 ;;      Locals:         0       0       0       0       0
  1867 ;;      Temps:          0       0       3       0       0
  1868 ;;      Totals:         0       0       3       0       0
  1869 ;;Total ram usage:        3 bytes
  1870 ;; Hardware stack levels used: 1
  1871 ;; Hardware stack levels required when called: 5
  1872 ;; This function calls:
  1873 ;;		_intToString
  1874 ;;		_lcdPrint
  1875 ;;		_lcdSend
  1876 ;; This function is called by:
  1877 ;;		_main
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881     03B3                     _UART_Read:	
  1882                           ;psect for function _UART_Read
  1883                           
  1884     03B3                     l2247:	
  1885                           ;incstack = 0
  1886                           ; Regs used in _UART_Read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1887                           
  1888                           
  1889                           ;main.c: 248:     countdown = 60;
  1890     03B3  303C               	movlw	60
  1891     03B4  1283               	bcf	3,5	;RP0=0, select bank0
  1892     03B5  1303               	bcf	3,6	;RP1=0, select bank0
  1893     03B6  00ED               	movwf	_countdown
  1894                           
  1895                           ;main.c: 249:     while (countdown != 0){
  1896     03B7  2C35               	goto	l2279
  1897     03B8                     l200:
  1898                           
  1899                           ;main.c: 250:         if (!RCIF){
  1900     03B8  1A8C               	btfsc	12,5	;volatile
  1901     03B9  2BBB               	goto	u2521
  1902     03BA  2BBC               	goto	u2520
  1903     03BB                     u2521:
  1904     03BB  2C0B               	goto	l2265
  1905     03BC                     u2520:
  1906     03BC                     l2249:
  1907                           
  1908                           ;main.c: 251:             if(keypressed != 0){
  1909     03BC  084C               	movf	_keypressed,w
  1910     03BD  1903               	btfsc	3,2
  1911     03BE  2BC0               	goto	u2531
  1912     03BF  2BC1               	goto	u2530
  1913     03C0                     u2531:
  1914     03C0  2BDC               	goto	l2257
  1915     03C1                     u2530:
  1916     03C1                     l2251:
  1917                           
  1918                           ;main.c: 252:                 lcdSend(0x01, 0);
  1919     03C1  01D1               	clrf	lcdSend@tipo
  1920     03C2  3001               	movlw	1
  1921     03C3  120A  118A  27D1  120A  118A  	fcall	_lcdSend
  1922     03C8                     l2253:
  1923                           
  1924                           ;main.c: 253:                 lcdSend(keys[keypressed], 1);
  1925     03C8  1283               	bcf	3,5	;RP0=0, select bank0
  1926     03C9  1303               	bcf	3,6	;RP1=0, select bank0
  1927     03CA  01D1               	clrf	lcdSend@tipo
  1928     03CB  0AD1               	incf	lcdSend@tipo,f
  1929     03CC  084C               	movf	_keypressed,w
  1930     03CD  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  1931     03CE  0084               	movwf	4
  1932     03CF  120A  118A  250A  120A  118A  	fcall	stringdir
  1933     03D4  120A  118A  27D1  120A  118A  	fcall	_lcdSend
  1934     03D9                     l2255:
  1935                           
  1936                           ;main.c: 254:                 keypressed = 0;
  1937     03D9  1283               	bcf	3,5	;RP0=0, select bank0
  1938     03DA  1303               	bcf	3,6	;RP1=0, select bank0
  1939     03DB  01CC               	clrf	_keypressed
  1940     03DC                     l2257:
  1941                           
  1942                           ;main.c: 256:             intToString(countdown, print_countdown);
  1943     03DC  086D               	movf	_countdown,w
  1944     03DD  1683               	bsf	3,5	;RP0=1, select bank1
  1945     03DE  1303               	bcf	3,6	;RP1=0, select bank1
  1946     03DF  00A0               	movwf	??_UART_Read^(0+128)
  1947     03E0  01A1               	clrf	(??_UART_Read^(0+128)+1)
  1948     03E1  0820               	movf	??_UART_Read^(0+128),w
  1949     03E2  1283               	bcf	3,5	;RP0=0, select bank0
  1950     03E3  1303               	bcf	3,6	;RP1=0, select bank0
  1951     03E4  00E4               	movwf	intToString@n
  1952     03E5  1683               	bsf	3,5	;RP0=1, select bank1
  1953     03E6  1303               	bcf	3,6	;RP1=0, select bank1
  1954     03E7  0821               	movf	(??_UART_Read+1)^(0+128),w
  1955     03E8  1283               	bcf	3,5	;RP0=0, select bank0
  1956     03E9  1303               	bcf	3,6	;RP1=0, select bank0
  1957     03EA  00E5               	movwf	intToString@n+1
  1958     03EB  304E               	movlw	(low (_print_countdown| 0))& (0+255)
  1959     03EC  00E6               	movwf	intToString@str
  1960     03ED  120A  118A  257F  120A  118A  	fcall	_intToString
  1961     03F2                     l2259:
  1962                           
  1963                           ;main.c: 257:             lcdSend(0xC0, 0);
  1964     03F2  1283               	bcf	3,5	;RP0=0, select bank0
  1965     03F3  1303               	bcf	3,6	;RP1=0, select bank0
  1966     03F4  01D1               	clrf	lcdSend@tipo
  1967     03F5  30C0               	movlw	192
  1968     03F6  120A  118A  27D1  120A  118A  	fcall	_lcdSend
  1969     03FB                     l2261:
  1970                           
  1971                           ;main.c: 258:             lcdPrint(print_countdown);
  1972     03FB  304E               	movlw	(low (_print_countdown| 0))& (0+255)
  1973     03FC  1283               	bcf	3,5	;RP0=0, select bank0
  1974     03FD  1303               	bcf	3,6	;RP1=0, select bank0
  1975     03FE  00D3               	movwf	lcdPrint@str
  1976     03FF  3000               	movlw	0
  1977     0400  00D4               	movwf	lcdPrint@str+1
  1978     0401  120A  118A  272D  120A  118A  	fcall	_lcdPrint
  1979     0406                     l2263:
  1980                           
  1981                           ;main.c: 259:             countdown --;
  1982     0406  3001               	movlw	1
  1983     0407  1283               	bcf	3,5	;RP0=0, select bank0
  1984     0408  1303               	bcf	3,6	;RP1=0, select bank0
  1985     0409  02ED               	subwf	_countdown,f
  1986                           
  1987                           ;main.c: 261:         }
  1988     040A  2C35               	goto	l2279
  1989     040B                     l2265:
  1990                           
  1991                           ;main.c: 263:             lcdSend(0x01, 0);
  1992     040B  01D1               	clrf	lcdSend@tipo
  1993     040C  3001               	movlw	1
  1994     040D  120A  118A  27D1  120A  118A  	fcall	_lcdSend
  1995     0412                     l2267:
  1996                           
  1997                           ;main.c: 264:             lcdPrint("Ricevuto");
  1998     0412  305F               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1999     0413  1283               	bcf	3,5	;RP0=0, select bank0
  2000     0414  1303               	bcf	3,6	;RP1=0, select bank0
  2001     0415  00D3               	movwf	lcdPrint@str
  2002     0416  3080               	movlw	128
  2003     0417  00D4               	movwf	lcdPrint@str+1
  2004     0418  120A  118A  272D  120A  118A  	fcall	_lcdPrint
  2005     041D                     l2269:
  2006                           
  2007                           ;main.c: 265:             RCIF = 0;
  2008     041D  1283               	bcf	3,5	;RP0=0, select bank0
  2009     041E  1303               	bcf	3,6	;RP1=0, select bank0
  2010     041F  128C               	bcf	12,5	;volatile
  2011     0420                     l2271:
  2012                           
  2013                           ;main.c: 266:             countdown = 60;
  2014     0420  303C               	movlw	60
  2015     0421  00ED               	movwf	_countdown
  2016     0422                     l2273:
  2017                           
  2018                           ;main.c: 267:             _delay((unsigned long)((1000)*(20000000/4000.0)));
  2019     0422  301A               	movlw	26
  2020     0423  1683               	bsf	3,5	;RP0=1, select bank1
  2021     0424  1303               	bcf	3,6	;RP1=0, select bank1
  2022     0425  00A2               	movwf	(??_UART_Read^(0+128)+2)
  2023     0426  305E               	movlw	94
  2024     0427  00A1               	movwf	(??_UART_Read^(0+128)+1)
  2025     0428  306D               	movlw	109
  2026     0429  00A0               	movwf	??_UART_Read^(0+128)
  2027     042A                     u3107:
  2028     042A  0BA0               	decfsz	??_UART_Read^(0+128),f
  2029     042B  2C2A               	goto	u3107
  2030     042C  0BA1               	decfsz	(??_UART_Read^(0+128)+1),f
  2031     042D  2C2A               	goto	u3107
  2032     042E  0BA2               	decfsz	(??_UART_Read^(0+128)+2),f
  2033     042F  2C2A               	goto	u3107
  2034     0430  2C31               	nop2
  2035     0431                     l2275:
  2036                           
  2037                           ;main.c: 268:             return RCREG;;	Return value of _UART_Read is never used
  2038     0431  1283               	bcf	3,5	;RP0=0, select bank0
  2039     0432  1303               	bcf	3,6	;RP1=0, select bank0
  2040     0433  081A               	movf	26,w	;volatile
  2041     0434  2C4D               	goto	l204
  2042     0435                     l2279:
  2043                           
  2044                           ;main.c: 249:     while (countdown != 0){
  2045     0435  086D               	movf	_countdown,w
  2046     0436  1D03               	btfss	3,2
  2047     0437  2C39               	goto	u2541
  2048     0438  2C3A               	goto	u2540
  2049     0439                     u2541:
  2050     0439  2BB8               	goto	l200
  2051     043A                     u2540:
  2052     043A                     l2281:
  2053                           
  2054                           ;main.c: 271:     lcdSend(0x01, 0);
  2055     043A  01D1               	clrf	lcdSend@tipo
  2056     043B  3001               	movlw	1
  2057     043C  120A  118A  27D1  120A  118A  	fcall	_lcdSend
  2058     0441                     l2283:
  2059                           
  2060                           ;main.c: 272:     lcdPrint("Codice Scaduto");
  2061     0441  3014               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2062     0442  1283               	bcf	3,5	;RP0=0, select bank0
  2063     0443  1303               	bcf	3,6	;RP1=0, select bank0
  2064     0444  00D3               	movwf	lcdPrint@str
  2065     0445  3080               	movlw	128
  2066     0446  00D4               	movwf	lcdPrint@str+1
  2067     0447  120A  118A  272D  120A  118A  	fcall	_lcdPrint
  2068     044C  2C1D               	goto	l2269
  2069     044D                     l204:
  2070     044D  0008               	return
  2071     044E                     __end_of_UART_Read:
  2072                           
  2073                           	psect	text4
  2074     072D                     __ptext4:	
  2075 ;; *************** function _lcdPrint *****************
  2076 ;; Defined at:
  2077 ;;		line 319 in file "main.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;  str             2    2[BANK0 ] PTR unsigned char 
  2080 ;;		 -> STR_8(15), STR_7(9), print_countdown(3), STR_6(14), 
  2081 ;;		 -> STR_5(13), STR_4(12), STR_3(11), STR_2(10), 
  2082 ;;		 -> STR_1(8), 
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;  n               2    7[BANK0 ] int 
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  1    wreg      void 
  2087 ;; Registers used:
  2088 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2094 ;;      Params:         0       2       0       0       0
  2095 ;;      Locals:         0       2       0       0       0
  2096 ;;      Temps:          0       3       0       0       0
  2097 ;;      Totals:         0       7       0       0       0
  2098 ;;Total ram usage:        7 bytes
  2099 ;; Hardware stack levels used: 1
  2100 ;; Hardware stack levels required when called: 3
  2101 ;; This function calls:
  2102 ;;		_lcdSend
  2103 ;; This function is called by:
  2104 ;;		_main
  2105 ;;		_UART_Read
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109     072D                     _lcdPrint:	
  2110                           ;psect for function _lcdPrint
  2111                           
  2112     072D                     l2097:	
  2113                           ;incstack = 0
  2114                           ; Regs used in _lcdPrint: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2115                           
  2116                           
  2117                           ;main.c: 320:     int n = 0;
  2118     072D  1283               	bcf	3,5	;RP0=0, select bank0
  2119     072E  1303               	bcf	3,6	;RP1=0, select bank0
  2120     072F  01D8               	clrf	lcdPrint@n
  2121     0730  01D9               	clrf	lcdPrint@n+1
  2122                           
  2123                           ;main.c: 321:     while (str[n] != '\0') {
  2124     0731  2F58               	goto	l2103
  2125     0732                     l2099:
  2126                           
  2127                           ;main.c: 322:         lcdSend(str[n++], 1);
  2128     0732  01D1               	clrf	lcdSend@tipo
  2129     0733  0AD1               	incf	lcdSend@tipo,f
  2130     0734  0858               	movf	lcdPrint@n,w
  2131     0735  0753               	addwf	lcdPrint@str,w
  2132     0736  00D6               	movwf	??_lcdPrint+1
  2133     0737  0854               	movf	lcdPrint@str+1,w
  2134     0738  00D5               	movwf	??_lcdPrint
  2135     0739  1803               	skipnc
  2136     073A  0AD5               	incf	??_lcdPrint,f
  2137     073B  1FD8               	btfss	lcdPrint@n,7
  2138     073C  2F3E               	goto	u2350
  2139     073D  03D5               	decf	??_lcdPrint,f
  2140     073E                     u2350:
  2141     073E  1283               	bcf	3,5	;RP0=0, select bank0
  2142     073F  1303               	bcf	3,6	;RP1=0, select bank0
  2143     0740  0855               	movf	??_lcdPrint,w
  2144     0741  00D7               	movwf	??_lcdPrint+2
  2145     0742  0857               	movf	??_lcdPrint+2,w
  2146     0743  00FF               	movwf	btemp+1
  2147     0744  0856               	movf	??_lcdPrint+1,w
  2148     0745  0084               	movwf	4
  2149     0746  120A  118A  2500  120A  118A  	fcall	stringtab
  2150     074B  120A  118A  27D1  120A  118A  	fcall	_lcdSend
  2151     0750                     l2101:
  2152     0750  3001               	movlw	1
  2153     0751  1283               	bcf	3,5	;RP0=0, select bank0
  2154     0752  1303               	bcf	3,6	;RP1=0, select bank0
  2155     0753  07D8               	addwf	lcdPrint@n,f
  2156     0754  1803               	skipnc
  2157     0755  0AD9               	incf	lcdPrint@n+1,f
  2158     0756  3000               	movlw	0
  2159     0757  07D9               	addwf	lcdPrint@n+1,f
  2160     0758                     l2103:
  2161                           
  2162                           ;main.c: 321:     while (str[n] != '\0') {
  2163     0758  0858               	movf	lcdPrint@n,w
  2164     0759  0753               	addwf	lcdPrint@str,w
  2165     075A  00D6               	movwf	??_lcdPrint+1
  2166     075B  0854               	movf	lcdPrint@str+1,w
  2167     075C  00D5               	movwf	??_lcdPrint
  2168     075D  1803               	skipnc
  2169     075E  0AD5               	incf	??_lcdPrint,f
  2170     075F  1FD8               	btfss	lcdPrint@n,7
  2171     0760  2F62               	goto	u2360
  2172     0761  03D5               	decf	??_lcdPrint,f
  2173     0762                     u2360:
  2174     0762  1283               	bcf	3,5	;RP0=0, select bank0
  2175     0763  1303               	bcf	3,6	;RP1=0, select bank0
  2176     0764  0855               	movf	??_lcdPrint,w
  2177     0765  00D7               	movwf	??_lcdPrint+2
  2178     0766  0857               	movf	??_lcdPrint+2,w
  2179     0767  00FF               	movwf	btemp+1
  2180     0768  0856               	movf	??_lcdPrint+1,w
  2181     0769  0084               	movwf	4
  2182     076A  120A  118A  2500  120A  118A  	fcall	stringtab
  2183     076F  3A00               	xorlw	0
  2184     0770  1D03               	skipz
  2185     0771  2F73               	goto	u2371
  2186     0772  2F74               	goto	u2370
  2187     0773                     u2371:
  2188     0773  2F32               	goto	l2099
  2189     0774                     u2370:
  2190     0774                     l217:
  2191     0774  0008               	return
  2192     0775                     __end_of_lcdPrint:
  2193                           
  2194                           	psect	text5
  2195     07D1                     __ptext5:	
  2196 ;; *************** function _lcdSend *****************
  2197 ;; Defined at:
  2198 ;;		line 298 in file "main.c"
  2199 ;; Parameters:    Size  Location     Type
  2200 ;;  dato            1    wreg     unsigned char 
  2201 ;;  tipo            1    0[BANK0 ] unsigned char 
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;  dato            1    1[BANK0 ] unsigned char 
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  1    wreg      void 
  2206 ;; Registers used:
  2207 ;;		wreg, status,2, status,0
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2213 ;;      Params:         0       1       0       0       0
  2214 ;;      Locals:         0       1       0       0       0
  2215 ;;      Temps:          0       0       0       0       0
  2216 ;;      Totals:         0       2       0       0       0
  2217 ;;Total ram usage:        2 bytes
  2218 ;; Hardware stack levels used: 1
  2219 ;; Hardware stack levels required when called: 2
  2220 ;; This function calls:
  2221 ;;		Nothing
  2222 ;; This function is called by:
  2223 ;;		_main
  2224 ;;		_UART_Read
  2225 ;;		_initLCD
  2226 ;;		_lcdPrint
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230     07D1                     _lcdSend:	
  2231                           ;psect for function _lcdSend
  2232                           
  2233                           
  2234                           ;incstack = 0
  2235                           ; Regs used in _lcdSend: [wreg+status,2+status,0]
  2236                           ;lcdSend@dato stored from wreg
  2237     07D1  1283               	bcf	3,5	;RP0=0, select bank0
  2238     07D2  1303               	bcf	3,6	;RP1=0, select bank0
  2239     07D3  00D2               	movwf	lcdSend@dato
  2240     07D4                     l2029:
  2241                           
  2242                           ;main.c: 302:     TRISD = 0x00;
  2243     07D4  1683               	bsf	3,5	;RP0=1, select bank1
  2244     07D5  1303               	bcf	3,6	;RP1=0, select bank1
  2245     07D6  0188               	clrf	8	;volatile
  2246     07D7                     l2031:
  2247                           
  2248                           ;main.c: 303:     TRISEbits.TRISE1 = 0;
  2249     07D7  1089               	bcf	9,1	;volatile
  2250     07D8                     l2033:
  2251                           
  2252                           ;main.c: 304:     TRISEbits.TRISE2 = 0;
  2253     07D8  1109               	bcf	9,2	;volatile
  2254     07D9                     l2035:
  2255                           
  2256                           ;main.c: 309:     PORTEbits.RE1 = 1;
  2257     07D9  1283               	bcf	3,5	;RP0=0, select bank0
  2258     07DA  1303               	bcf	3,6	;RP1=0, select bank0
  2259     07DB  1489               	bsf	9,1	;volatile
  2260     07DC                     l2037:
  2261                           
  2262                           ;main.c: 311:     PORTD = dato;
  2263     07DC  0852               	movf	lcdSend@dato,w
  2264     07DD  0088               	movwf	8	;volatile
  2265     07DE                     l2039:
  2266                           
  2267                           ;main.c: 312:     PORTEbits.RE2 = tipo;
  2268     07DE  0C51               	rrf	lcdSend@tipo,w
  2269     07DF  1C03               	skipc
  2270     07E0  1109               	bcf	9,2	;volatile
  2271     07E1  1803               	skipnc
  2272     07E2  1509               	bsf	9,2	;volatile
  2273     07E3                     l2041:
  2274                           
  2275                           ;main.c: 314:     PORTEbits.RE1 = 0;
  2276     07E3  1089               	bcf	9,1	;volatile
  2277     07E4                     l2043:
  2278                           
  2279                           ;main.c: 316:     PORTEbits.RE1 = 1;
  2280     07E4  1489               	bsf	9,1	;volatile
  2281     07E5                     l211:
  2282     07E5  0008               	return
  2283     07E6                     __end_of_lcdSend:
  2284                           
  2285                           	psect	text6
  2286     057F                     __ptext6:	
  2287 ;; *************** function _intToString *****************
  2288 ;; Defined at:
  2289 ;;		line 493 in file "main.c"
  2290 ;; Parameters:    Size  Location     Type
  2291 ;;  n               2   19[BANK0 ] int 
  2292 ;;  str             1   21[BANK0 ] PTR unsigned char 
  2293 ;;		 -> print_countdown(3), 
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;  t               1   25[BANK0 ] unsigned char 
  2296 ;;  i               1   27[BANK0 ] unsigned char 
  2297 ;;  cifre           1   26[BANK0 ] unsigned char 
  2298 ;; Return value:  Size  Location     Type
  2299 ;;                  1    wreg      void 
  2300 ;; Registers used:
  2301 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2307 ;;      Params:         0       3       0       0       0
  2308 ;;      Locals:         0       3       0       0       0
  2309 ;;      Temps:          0       3       0       0       0
  2310 ;;      Totals:         0       9       0       0       0
  2311 ;;Total ram usage:        9 bytes
  2312 ;; Hardware stack levels used: 1
  2313 ;; Hardware stack levels required when called: 4
  2314 ;; This function calls:
  2315 ;;		___awdiv
  2316 ;;		___awmod
  2317 ;;		_potenza
  2318 ;; This function is called by:
  2319 ;;		_UART_Read
  2320 ;; This function uses a non-reentrant model
  2321 ;;
  2322                           
  2323     057F                     _intToString:	
  2324                           ;psect for function _intToString
  2325                           
  2326     057F                     l2105:	
  2327                           ;incstack = 0
  2328                           ; Regs used in _intToString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2329                           
  2330                           
  2331                           ;main.c: 496:     char cifre = 1;
  2332     057F  1283               	bcf	3,5	;RP0=0, select bank0
  2333     0580  1303               	bcf	3,6	;RP1=0, select bank0
  2334     0581  01EB               	clrf	intToString@cifre
  2335     0582  0AEB               	incf	intToString@cifre,f
  2336     0583                     l2107:
  2337                           
  2338                           ;main.c: 499:     while (n / potenza(10, cifre)) cifre++;
  2339     0583  2D88               	goto	l2111
  2340     0584                     l2109:
  2341     0584  3001               	movlw	1
  2342     0585  00E7               	movwf	??_intToString
  2343     0586  0867               	movf	??_intToString,w
  2344     0587  07EB               	addwf	intToString@cifre,f
  2345     0588                     l2111:
  2346     0588  086B               	movf	intToString@cifre,w
  2347     0589  00D5               	movwf	potenza@e
  2348     058A  300A               	movlw	10
  2349     058B  120A  118A  2775  120A  118A  	fcall	_potenza
  2350     0590  1283               	bcf	3,5	;RP0=0, select bank0
  2351     0591  1303               	bcf	3,6	;RP1=0, select bank0
  2352     0592  00E7               	movwf	??_intToString
  2353     0593  01E8               	clrf	??_intToString+1
  2354     0594  0867               	movf	??_intToString,w
  2355     0595  00DB               	movwf	___awdiv@divisor
  2356     0596  0868               	movf	??_intToString+1,w
  2357     0597  00DC               	movwf	___awdiv@divisor+1
  2358     0598  0865               	movf	intToString@n+1,w
  2359     0599  00DE               	movwf	___awdiv@dividend+1
  2360     059A  0864               	movf	intToString@n,w
  2361     059B  00DD               	movwf	___awdiv@dividend
  2362     059C  120A  118A  2669  120A  118A  	fcall	___awdiv
  2363     05A1  1283               	bcf	3,5	;RP0=0, select bank0
  2364     05A2  1303               	bcf	3,6	;RP1=0, select bank0
  2365     05A3  085B               	movf	?___awdiv,w
  2366     05A4  045C               	iorwf	?___awdiv+1,w
  2367     05A5  1D03               	btfss	3,2
  2368     05A6  2DA8               	goto	u2381
  2369     05A7  2DA9               	goto	u2380
  2370     05A8                     u2381:
  2371     05A8  2D84               	goto	l2109
  2372     05A9                     u2380:
  2373     05A9                     l2113:
  2374                           
  2375                           ;main.c: 501:     for (i = 0; i < cifre; i++) {
  2376     05A9  01EC               	clrf	intToString@i
  2377     05AA  2DED               	goto	l2123
  2378     05AB                     l2115:
  2379                           
  2380                           ;main.c: 502:         char t = potenza(10, cifre - 1 - i);
  2381     05AB  086C               	movf	intToString@i,w
  2382     05AC  026B               	subwf	intToString@cifre,w
  2383     05AD  3EFF               	addlw	255
  2384     05AE  00D5               	movwf	potenza@e
  2385     05AF  300A               	movlw	10
  2386     05B0  120A  118A  2775  120A  118A  	fcall	_potenza
  2387     05B5  1283               	bcf	3,5	;RP0=0, select bank0
  2388     05B6  1303               	bcf	3,6	;RP1=0, select bank0
  2389     05B7  00EA               	movwf	intToString@t
  2390     05B8                     l2117:
  2391                           
  2392                           ;main.c: 503:         str[i] = '0' + (char) (n / t);
  2393     05B8  086C               	movf	intToString@i,w
  2394     05B9  0766               	addwf	intToString@str,w
  2395     05BA  00E7               	movwf	??_intToString
  2396     05BB  0867               	movf	??_intToString,w
  2397     05BC  0084               	movwf	4
  2398     05BD  086A               	movf	intToString@t,w
  2399     05BE  00E8               	movwf	??_intToString+1
  2400     05BF  01E9               	clrf	??_intToString+2
  2401     05C0  0868               	movf	??_intToString+1,w
  2402     05C1  00DB               	movwf	___awdiv@divisor
  2403     05C2  0869               	movf	??_intToString+2,w
  2404     05C3  00DC               	movwf	___awdiv@divisor+1
  2405     05C4  0865               	movf	intToString@n+1,w
  2406     05C5  00DE               	movwf	___awdiv@dividend+1
  2407     05C6  0864               	movf	intToString@n,w
  2408     05C7  00DD               	movwf	___awdiv@dividend
  2409     05C8  120A  118A  2669  120A  118A  	fcall	___awdiv
  2410     05CD  1283               	bcf	3,5	;RP0=0, select bank0
  2411     05CE  1303               	bcf	3,6	;RP1=0, select bank0
  2412     05CF  085B               	movf	?___awdiv,w
  2413     05D0  3E30               	addlw	48
  2414     05D1  1383               	bcf	3,7	;select IRP bank0
  2415     05D2  0080               	movwf	0
  2416     05D3                     l2119:
  2417                           
  2418                           ;main.c: 504:         n = n % t;
  2419     05D3  086A               	movf	intToString@t,w
  2420     05D4  00E7               	movwf	??_intToString
  2421     05D5  01E8               	clrf	??_intToString+1
  2422     05D6  0867               	movf	??_intToString,w
  2423     05D7  00D1               	movwf	___awmod@divisor
  2424     05D8  0868               	movf	??_intToString+1,w
  2425     05D9  00D2               	movwf	___awmod@divisor+1
  2426     05DA  0865               	movf	intToString@n+1,w
  2427     05DB  00D4               	movwf	___awmod@dividend+1
  2428     05DC  0864               	movf	intToString@n,w
  2429     05DD  00D3               	movwf	___awmod@dividend
  2430     05DE  120A  118A  26D2  120A  118A  	fcall	___awmod
  2431     05E3  1283               	bcf	3,5	;RP0=0, select bank0
  2432     05E4  1303               	bcf	3,6	;RP1=0, select bank0
  2433     05E5  0852               	movf	?___awmod+1,w
  2434     05E6  00E5               	movwf	intToString@n+1
  2435     05E7  0851               	movf	?___awmod,w
  2436     05E8  00E4               	movwf	intToString@n
  2437     05E9                     l2121:
  2438                           
  2439                           ;main.c: 505:     }
  2440     05E9  3001               	movlw	1
  2441     05EA  00E7               	movwf	??_intToString
  2442     05EB  0867               	movf	??_intToString,w
  2443     05EC  07EC               	addwf	intToString@i,f
  2444     05ED                     l2123:
  2445     05ED  086B               	movf	intToString@cifre,w
  2446     05EE  026C               	subwf	intToString@i,w
  2447     05EF  1C03               	skipc
  2448     05F0  2DF2               	goto	u2391
  2449     05F1  2DF3               	goto	u2390
  2450     05F2                     u2391:
  2451     05F2  2DAB               	goto	l2115
  2452     05F3                     u2390:
  2453     05F3                     l2125:
  2454                           
  2455                           ;main.c: 507:     str[i] = '\0';
  2456     05F3  086C               	movf	intToString@i,w
  2457     05F4  0766               	addwf	intToString@str,w
  2458     05F5  00E7               	movwf	??_intToString
  2459     05F6  0867               	movf	??_intToString,w
  2460     05F7  0084               	movwf	4
  2461     05F8  1383               	bcf	3,7	;select IRP bank0
  2462     05F9  0180               	clrf	0
  2463     05FA                     l283:
  2464     05FA  0008               	return
  2465     05FB                     __end_of_intToString:
  2466                           
  2467                           	psect	text7
  2468     0775                     __ptext7:	
  2469 ;; *************** function _potenza *****************
  2470 ;; Defined at:
  2471 ;;		line 485 in file "main.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;  b               1    wreg     unsigned char 
  2474 ;;  e               1    4[BANK0 ] unsigned char 
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;  b               1    6[BANK0 ] unsigned char 
  2477 ;;  i               2    7[BANK0 ] int 
  2478 ;;  n               1    9[BANK0 ] unsigned char 
  2479 ;; Return value:  Size  Location     Type
  2480 ;;                  1    wreg      unsigned char 
  2481 ;; Registers used:
  2482 ;;		wreg, status,2, status,0, pclath, cstack
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2488 ;;      Params:         0       1       0       0       0
  2489 ;;      Locals:         0       4       0       0       0
  2490 ;;      Temps:          0       1       0       0       0
  2491 ;;      Totals:         0       6       0       0       0
  2492 ;;Total ram usage:        6 bytes
  2493 ;; Hardware stack levels used: 1
  2494 ;; Hardware stack levels required when called: 3
  2495 ;; This function calls:
  2496 ;;		___bmul
  2497 ;; This function is called by:
  2498 ;;		_intToString
  2499 ;; This function uses a non-reentrant model
  2500 ;;
  2501                           
  2502     0775                     _potenza:	
  2503                           ;psect for function _potenza
  2504                           
  2505                           
  2506                           ;incstack = 0
  2507                           ; Regs used in _potenza: [wreg+status,2+status,0+pclath+cstack]
  2508                           ;potenza@b stored from wreg
  2509     0775  1283               	bcf	3,5	;RP0=0, select bank0
  2510     0776  1303               	bcf	3,6	;RP1=0, select bank0
  2511     0777  00D7               	movwf	potenza@b
  2512     0778                     l2045:
  2513                           
  2514                           ;main.c: 486:     char n = 1;
  2515     0778  01DA               	clrf	potenza@n
  2516     0779  0ADA               	incf	potenza@n,f
  2517     077A                     l2047:
  2518                           
  2519                           ;main.c: 487:     for (int i = 0; i < e; i++) {
  2520     077A  01D8               	clrf	potenza@i
  2521     077B  01D9               	clrf	potenza@i+1
  2522     077C  2F90               	goto	l2053
  2523     077D                     l2049:
  2524                           
  2525                           ;main.c: 488:         n = n * b;
  2526     077D  1283               	bcf	3,5	;RP0=0, select bank0
  2527     077E  1303               	bcf	3,6	;RP1=0, select bank0
  2528     077F  0857               	movf	potenza@b,w
  2529     0780  00D1               	movwf	___bmul@multiplicand
  2530     0781  085A               	movf	potenza@n,w
  2531     0782  120A  118A  27BA  120A  118A  	fcall	___bmul
  2532     0787  1283               	bcf	3,5	;RP0=0, select bank0
  2533     0788  1303               	bcf	3,6	;RP1=0, select bank0
  2534     0789  00DA               	movwf	potenza@n
  2535     078A                     l2051:
  2536                           
  2537                           ;main.c: 489:     }
  2538     078A  3001               	movlw	1
  2539     078B  07D8               	addwf	potenza@i,f
  2540     078C  1803               	skipnc
  2541     078D  0AD9               	incf	potenza@i+1,f
  2542     078E  3000               	movlw	0
  2543     078F  07D9               	addwf	potenza@i+1,f
  2544     0790                     l2053:
  2545     0790  0859               	movf	potenza@i+1,w
  2546     0791  3A80               	xorlw	128
  2547     0792  00D6               	movwf	??_potenza
  2548     0793  3080               	movlw	128
  2549     0794  0256               	subwf	??_potenza,w
  2550     0795  1D03               	skipz
  2551     0796  2F99               	goto	u2255
  2552     0797  0855               	movf	potenza@e,w
  2553     0798  0258               	subwf	potenza@i,w
  2554     0799                     u2255:
  2555     0799  1C03               	skipc
  2556     079A  2F9C               	goto	u2251
  2557     079B  2F9D               	goto	u2250
  2558     079C                     u2251:
  2559     079C  2F7D               	goto	l2049
  2560     079D                     u2250:
  2561     079D                     l2055:
  2562                           
  2563                           ;main.c: 490:     return n;
  2564     079D  1283               	bcf	3,5	;RP0=0, select bank0
  2565     079E  1303               	bcf	3,6	;RP1=0, select bank0
  2566     079F  085A               	movf	potenza@n,w
  2567     07A0                     l274:
  2568     07A0  0008               	return
  2569     07A1                     __end_of_potenza:
  2570                           
  2571                           	psect	text8
  2572     07BA                     __ptext8:	
  2573 ;; *************** function ___bmul *****************
  2574 ;; Defined at:
  2575 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;  multiplier      1    wreg     unsigned char 
  2578 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;  multiplier      1    3[BANK0 ] unsigned char 
  2581 ;;  product         1    2[BANK0 ] unsigned char 
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  1    wreg      unsigned char 
  2584 ;; Registers used:
  2585 ;;		wreg, status,2, status,0
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2591 ;;      Params:         0       1       0       0       0
  2592 ;;      Locals:         0       2       0       0       0
  2593 ;;      Temps:          0       1       0       0       0
  2594 ;;      Totals:         0       4       0       0       0
  2595 ;;Total ram usage:        4 bytes
  2596 ;; Hardware stack levels used: 1
  2597 ;; Hardware stack levels required when called: 2
  2598 ;; This function calls:
  2599 ;;		Nothing
  2600 ;; This function is called by:
  2601 ;;		_potenza
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605     07BA                     ___bmul:	
  2606                           ;psect for function ___bmul
  2607                           
  2608                           
  2609                           ;incstack = 0
  2610                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2611                           ;___bmul@multiplier stored from wreg
  2612     07BA  1283               	bcf	3,5	;RP0=0, select bank0
  2613     07BB  1303               	bcf	3,6	;RP1=0, select bank0
  2614     07BC  00D4               	movwf	___bmul@multiplier
  2615     07BD                     l2015:
  2616     07BD  01D3               	clrf	___bmul@product
  2617     07BE                     l2017:
  2618     07BE  1C54               	btfss	___bmul@multiplier,0
  2619     07BF  2FC1               	goto	u2231
  2620     07C0  2FC2               	goto	u2230
  2621     07C1                     u2231:
  2622     07C1  2FC6               	goto	l2021
  2623     07C2                     u2230:
  2624     07C2                     l2019:
  2625     07C2  0851               	movf	___bmul@multiplicand,w
  2626     07C3  00D2               	movwf	??___bmul
  2627     07C4  0852               	movf	??___bmul,w
  2628     07C5  07D3               	addwf	___bmul@product,f
  2629     07C6                     l2021:
  2630     07C6  1003               	clrc
  2631     07C7  0DD1               	rlf	___bmul@multiplicand,f
  2632     07C8                     l2023:
  2633     07C8  1003               	clrc
  2634     07C9  0CD4               	rrf	___bmul@multiplier,f
  2635     07CA  0854               	movf	___bmul@multiplier,w
  2636     07CB  1D03               	btfss	3,2
  2637     07CC  2FCE               	goto	u2241
  2638     07CD  2FCF               	goto	u2240
  2639     07CE                     u2241:
  2640     07CE  2FBE               	goto	l2017
  2641     07CF                     u2240:
  2642     07CF                     l2025:
  2643     07CF  0853               	movf	___bmul@product,w
  2644     07D0                     l395:
  2645     07D0  0008               	return
  2646     07D1                     __end_of___bmul:
  2647                           
  2648                           	psect	text9
  2649     06D2                     __ptext9:	
  2650 ;; *************** function ___awmod *****************
  2651 ;; Defined at:
  2652 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;  divisor         2    0[BANK0 ] int 
  2655 ;;  dividend        2    2[BANK0 ] int 
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;  sign            1    6[BANK0 ] unsigned char 
  2658 ;;  counter         1    5[BANK0 ] unsigned char 
  2659 ;; Return value:  Size  Location     Type
  2660 ;;                  2    0[BANK0 ] int 
  2661 ;; Registers used:
  2662 ;;		wreg, status,2, status,0
  2663 ;; Tracked objects:
  2664 ;;		On entry : 0/0
  2665 ;;		On exit  : 0/0
  2666 ;;		Unchanged: 0/0
  2667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2668 ;;      Params:         0       4       0       0       0
  2669 ;;      Locals:         0       2       0       0       0
  2670 ;;      Temps:          0       1       0       0       0
  2671 ;;      Totals:         0       7       0       0       0
  2672 ;;Total ram usage:        7 bytes
  2673 ;; Hardware stack levels used: 1
  2674 ;; Hardware stack levels required when called: 2
  2675 ;; This function calls:
  2676 ;;		Nothing
  2677 ;; This function is called by:
  2678 ;;		_intToString
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682     06D2                     ___awmod:	
  2683                           ;psect for function ___awmod
  2684                           
  2685     06D2                     l2059:	
  2686                           ;incstack = 0
  2687                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2688                           
  2689     06D2  1283               	bcf	3,5	;RP0=0, select bank0
  2690     06D3  1303               	bcf	3,6	;RP1=0, select bank0
  2691     06D4  01D7               	clrf	___awmod@sign
  2692     06D5                     l2061:
  2693     06D5  1FD4               	btfss	___awmod@dividend+1,7
  2694     06D6  2ED8               	goto	u2261
  2695     06D7  2ED9               	goto	u2260
  2696     06D8                     u2261:
  2697     06D8  2EE0               	goto	l2067
  2698     06D9                     u2260:
  2699     06D9                     l2063:
  2700     06D9  09D3               	comf	___awmod@dividend,f
  2701     06DA  09D4               	comf	___awmod@dividend+1,f
  2702     06DB  0AD3               	incf	___awmod@dividend,f
  2703     06DC  1903               	skipnz
  2704     06DD  0AD4               	incf	___awmod@dividend+1,f
  2705     06DE                     l2065:
  2706     06DE  01D7               	clrf	___awmod@sign
  2707     06DF  0AD7               	incf	___awmod@sign,f
  2708     06E0                     l2067:
  2709     06E0  1FD2               	btfss	___awmod@divisor+1,7
  2710     06E1  2EE3               	goto	u2271
  2711     06E2  2EE4               	goto	u2270
  2712     06E3                     u2271:
  2713     06E3  2EE9               	goto	l2071
  2714     06E4                     u2270:
  2715     06E4                     l2069:
  2716     06E4  09D1               	comf	___awmod@divisor,f
  2717     06E5  09D2               	comf	___awmod@divisor+1,f
  2718     06E6  0AD1               	incf	___awmod@divisor,f
  2719     06E7  1903               	skipnz
  2720     06E8  0AD2               	incf	___awmod@divisor+1,f
  2721     06E9                     l2071:
  2722     06E9  0851               	movf	___awmod@divisor,w
  2723     06EA  0452               	iorwf	___awmod@divisor+1,w
  2724     06EB  1903               	btfsc	3,2
  2725     06EC  2EEE               	goto	u2281
  2726     06ED  2EEF               	goto	u2280
  2727     06EE                     u2281:
  2728     06EE  2F1E               	goto	l2089
  2729     06EF                     u2280:
  2730     06EF                     l2073:
  2731     06EF  01D6               	clrf	___awmod@counter
  2732     06F0  0AD6               	incf	___awmod@counter,f
  2733     06F1  2EFD               	goto	l2079
  2734     06F2                     l2075:
  2735     06F2  3001               	movlw	1
  2736     06F3                     u2295:
  2737     06F3  1003               	clrc
  2738     06F4  0DD1               	rlf	___awmod@divisor,f
  2739     06F5  0DD2               	rlf	___awmod@divisor+1,f
  2740     06F6  3EFF               	addlw	-1
  2741     06F7  1D03               	skipz
  2742     06F8  2EF3               	goto	u2295
  2743     06F9                     l2077:
  2744     06F9  3001               	movlw	1
  2745     06FA  00D5               	movwf	??___awmod
  2746     06FB  0855               	movf	??___awmod,w
  2747     06FC  07D6               	addwf	___awmod@counter,f
  2748     06FD                     l2079:
  2749     06FD  1FD2               	btfss	___awmod@divisor+1,7
  2750     06FE  2F00               	goto	u2301
  2751     06FF  2F01               	goto	u2300
  2752     0700                     u2301:
  2753     0700  2EF2               	goto	l2075
  2754     0701                     u2300:
  2755     0701                     l2081:
  2756     0701  0852               	movf	___awmod@divisor+1,w
  2757     0702  0254               	subwf	___awmod@dividend+1,w
  2758     0703  1D03               	skipz
  2759     0704  2F07               	goto	u2315
  2760     0705  0851               	movf	___awmod@divisor,w
  2761     0706  0253               	subwf	___awmod@dividend,w
  2762     0707                     u2315:
  2763     0707  1C03               	skipc
  2764     0708  2F0A               	goto	u2311
  2765     0709  2F0B               	goto	u2310
  2766     070A                     u2311:
  2767     070A  2F11               	goto	l2085
  2768     070B                     u2310:
  2769     070B                     l2083:
  2770     070B  0851               	movf	___awmod@divisor,w
  2771     070C  02D3               	subwf	___awmod@dividend,f
  2772     070D  0852               	movf	___awmod@divisor+1,w
  2773     070E  1C03               	skipc
  2774     070F  03D4               	decf	___awmod@dividend+1,f
  2775     0710  02D4               	subwf	___awmod@dividend+1,f
  2776     0711                     l2085:
  2777     0711  3001               	movlw	1
  2778     0712                     u2325:
  2779     0712  1003               	clrc
  2780     0713  0CD2               	rrf	___awmod@divisor+1,f
  2781     0714  0CD1               	rrf	___awmod@divisor,f
  2782     0715  3EFF               	addlw	-1
  2783     0716  1D03               	skipz
  2784     0717  2F12               	goto	u2325
  2785     0718                     l2087:
  2786     0718  3001               	movlw	1
  2787     0719  02D6               	subwf	___awmod@counter,f
  2788     071A  1D03               	btfss	3,2
  2789     071B  2F1D               	goto	u2331
  2790     071C  2F1E               	goto	u2330
  2791     071D                     u2331:
  2792     071D  2F01               	goto	l2081
  2793     071E                     u2330:
  2794     071E                     l2089:
  2795     071E  0857               	movf	___awmod@sign,w
  2796     071F  1903               	btfsc	3,2
  2797     0720  2F22               	goto	u2341
  2798     0721  2F23               	goto	u2340
  2799     0722                     u2341:
  2800     0722  2F28               	goto	l2093
  2801     0723                     u2340:
  2802     0723                     l2091:
  2803     0723  09D3               	comf	___awmod@dividend,f
  2804     0724  09D4               	comf	___awmod@dividend+1,f
  2805     0725  0AD3               	incf	___awmod@dividend,f
  2806     0726  1903               	skipnz
  2807     0727  0AD4               	incf	___awmod@dividend+1,f
  2808     0728                     l2093:
  2809     0728  0854               	movf	___awmod@dividend+1,w
  2810     0729  00D2               	movwf	?___awmod+1
  2811     072A  0853               	movf	___awmod@dividend,w
  2812     072B  00D1               	movwf	?___awmod
  2813     072C                     l535:
  2814     072C  0008               	return
  2815     072D                     __end_of___awmod:
  2816                           
  2817                           	psect	text10
  2818     0669                     __ptext10:	
  2819 ;; *************** function ___awdiv *****************
  2820 ;; Defined at:
  2821 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;  divisor         2   10[BANK0 ] int 
  2824 ;;  dividend        2   12[BANK0 ] int 
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;  quotient        2   17[BANK0 ] int 
  2827 ;;  sign            1   16[BANK0 ] unsigned char 
  2828 ;;  counter         1   15[BANK0 ] unsigned char 
  2829 ;; Return value:  Size  Location     Type
  2830 ;;                  2   10[BANK0 ] int 
  2831 ;; Registers used:
  2832 ;;		wreg, status,2, status,0
  2833 ;; Tracked objects:
  2834 ;;		On entry : 0/0
  2835 ;;		On exit  : 0/0
  2836 ;;		Unchanged: 0/0
  2837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2838 ;;      Params:         0       4       0       0       0
  2839 ;;      Locals:         0       4       0       0       0
  2840 ;;      Temps:          0       1       0       0       0
  2841 ;;      Totals:         0       9       0       0       0
  2842 ;;Total ram usage:        9 bytes
  2843 ;; Hardware stack levels used: 1
  2844 ;; Hardware stack levels required when called: 2
  2845 ;; This function calls:
  2846 ;;		Nothing
  2847 ;; This function is called by:
  2848 ;;		_intToString
  2849 ;; This function uses a non-reentrant model
  2850 ;;
  2851                           
  2852     0669                     ___awdiv:	
  2853                           ;psect for function ___awdiv
  2854                           
  2855     0669                     l1489:	
  2856                           ;incstack = 0
  2857                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2858                           
  2859     0669  1283               	bcf	3,5	;RP0=0, select bank0
  2860     066A  1303               	bcf	3,6	;RP1=0, select bank0
  2861     066B  01E1               	clrf	___awdiv@sign
  2862     066C                     l1491:
  2863     066C  1FDC               	btfss	___awdiv@divisor+1,7
  2864     066D  2E6F               	goto	u1151
  2865     066E  2E70               	goto	u1150
  2866     066F                     u1151:
  2867     066F  2E77               	goto	l1497
  2868     0670                     u1150:
  2869     0670                     l1493:
  2870     0670  09DB               	comf	___awdiv@divisor,f
  2871     0671  09DC               	comf	___awdiv@divisor+1,f
  2872     0672  0ADB               	incf	___awdiv@divisor,f
  2873     0673  1903               	skipnz
  2874     0674  0ADC               	incf	___awdiv@divisor+1,f
  2875     0675                     l1495:
  2876     0675  01E1               	clrf	___awdiv@sign
  2877     0676  0AE1               	incf	___awdiv@sign,f
  2878     0677                     l1497:
  2879     0677  1FDE               	btfss	___awdiv@dividend+1,7
  2880     0678  2E7A               	goto	u1161
  2881     0679  2E7B               	goto	u1160
  2882     067A                     u1161:
  2883     067A  2E84               	goto	l1503
  2884     067B                     u1160:
  2885     067B                     l1499:
  2886     067B  09DD               	comf	___awdiv@dividend,f
  2887     067C  09DE               	comf	___awdiv@dividend+1,f
  2888     067D  0ADD               	incf	___awdiv@dividend,f
  2889     067E  1903               	skipnz
  2890     067F  0ADE               	incf	___awdiv@dividend+1,f
  2891     0680                     l1501:
  2892     0680  3001               	movlw	1
  2893     0681  00DF               	movwf	??___awdiv
  2894     0682  085F               	movf	??___awdiv,w
  2895     0683  06E1               	xorwf	___awdiv@sign,f
  2896     0684                     l1503:
  2897     0684  01E2               	clrf	___awdiv@quotient
  2898     0685  01E3               	clrf	___awdiv@quotient+1
  2899     0686                     l1505:
  2900     0686  085B               	movf	___awdiv@divisor,w
  2901     0687  045C               	iorwf	___awdiv@divisor+1,w
  2902     0688  1903               	btfsc	3,2
  2903     0689  2E8B               	goto	u1171
  2904     068A  2E8C               	goto	u1170
  2905     068B                     u1171:
  2906     068B  2EC3               	goto	l1525
  2907     068C                     u1170:
  2908     068C                     l1507:
  2909     068C  01E0               	clrf	___awdiv@counter
  2910     068D  0AE0               	incf	___awdiv@counter,f
  2911     068E  2E9A               	goto	l1513
  2912     068F                     l1509:
  2913     068F  3001               	movlw	1
  2914     0690                     u1185:
  2915     0690  1003               	clrc
  2916     0691  0DDB               	rlf	___awdiv@divisor,f
  2917     0692  0DDC               	rlf	___awdiv@divisor+1,f
  2918     0693  3EFF               	addlw	-1
  2919     0694  1D03               	skipz
  2920     0695  2E90               	goto	u1185
  2921     0696                     l1511:
  2922     0696  3001               	movlw	1
  2923     0697  00DF               	movwf	??___awdiv
  2924     0698  085F               	movf	??___awdiv,w
  2925     0699  07E0               	addwf	___awdiv@counter,f
  2926     069A                     l1513:
  2927     069A  1FDC               	btfss	___awdiv@divisor+1,7
  2928     069B  2E9D               	goto	u1191
  2929     069C  2E9E               	goto	u1190
  2930     069D                     u1191:
  2931     069D  2E8F               	goto	l1509
  2932     069E                     u1190:
  2933     069E                     l1515:
  2934     069E  3001               	movlw	1
  2935     069F                     u1205:
  2936     069F  1003               	clrc
  2937     06A0  0DE2               	rlf	___awdiv@quotient,f
  2938     06A1  0DE3               	rlf	___awdiv@quotient+1,f
  2939     06A2  3EFF               	addlw	-1
  2940     06A3  1D03               	skipz
  2941     06A4  2E9F               	goto	u1205
  2942     06A5  085C               	movf	___awdiv@divisor+1,w
  2943     06A6  025E               	subwf	___awdiv@dividend+1,w
  2944     06A7  1D03               	skipz
  2945     06A8  2EAB               	goto	u1215
  2946     06A9  085B               	movf	___awdiv@divisor,w
  2947     06AA  025D               	subwf	___awdiv@dividend,w
  2948     06AB                     u1215:
  2949     06AB  1C03               	skipc
  2950     06AC  2EAE               	goto	u1211
  2951     06AD  2EAF               	goto	u1210
  2952     06AE                     u1211:
  2953     06AE  2EB6               	goto	l1521
  2954     06AF                     u1210:
  2955     06AF                     l1517:
  2956     06AF  085B               	movf	___awdiv@divisor,w
  2957     06B0  02DD               	subwf	___awdiv@dividend,f
  2958     06B1  085C               	movf	___awdiv@divisor+1,w
  2959     06B2  1C03               	skipc
  2960     06B3  03DE               	decf	___awdiv@dividend+1,f
  2961     06B4  02DE               	subwf	___awdiv@dividend+1,f
  2962     06B5                     l1519:
  2963     06B5  1462               	bsf	___awdiv@quotient,0
  2964     06B6                     l1521:
  2965     06B6  3001               	movlw	1
  2966     06B7                     u1225:
  2967     06B7  1003               	clrc
  2968     06B8  0CDC               	rrf	___awdiv@divisor+1,f
  2969     06B9  0CDB               	rrf	___awdiv@divisor,f
  2970     06BA  3EFF               	addlw	-1
  2971     06BB  1D03               	skipz
  2972     06BC  2EB7               	goto	u1225
  2973     06BD                     l1523:
  2974     06BD  3001               	movlw	1
  2975     06BE  02E0               	subwf	___awdiv@counter,f
  2976     06BF  1D03               	btfss	3,2
  2977     06C0  2EC2               	goto	u1231
  2978     06C1  2EC3               	goto	u1230
  2979     06C2                     u1231:
  2980     06C2  2E9E               	goto	l1515
  2981     06C3                     u1230:
  2982     06C3                     l1525:
  2983     06C3  0861               	movf	___awdiv@sign,w
  2984     06C4  1903               	btfsc	3,2
  2985     06C5  2EC7               	goto	u1241
  2986     06C6  2EC8               	goto	u1240
  2987     06C7                     u1241:
  2988     06C7  2ECD               	goto	l1529
  2989     06C8                     u1240:
  2990     06C8                     l1527:
  2991     06C8  09E2               	comf	___awdiv@quotient,f
  2992     06C9  09E3               	comf	___awdiv@quotient+1,f
  2993     06CA  0AE2               	incf	___awdiv@quotient,f
  2994     06CB  1903               	skipnz
  2995     06CC  0AE3               	incf	___awdiv@quotient+1,f
  2996     06CD                     l1529:
  2997     06CD  0863               	movf	___awdiv@quotient+1,w
  2998     06CE  00DC               	movwf	?___awdiv+1
  2999     06CF  0862               	movf	___awdiv@quotient,w
  3000     06D0  00DB               	movwf	?___awdiv
  3001     06D1                     l522:
  3002     06D1  0008               	return
  3003     06D2                     __end_of___awdiv:
  3004                           
  3005                           	psect	text11
  3006     07E6                     __ptext11:	
  3007 ;; *************** function _UART_Init *****************
  3008 ;; Defined at:
  3009 ;;		line 213 in file "main.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;		None
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;		None
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  1    wreg      void 
  3016 ;; Registers used:
  3017 ;;		wreg
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3023 ;;      Params:         0       0       0       0       0
  3024 ;;      Locals:         0       0       0       0       0
  3025 ;;      Temps:          0       0       0       0       0
  3026 ;;      Totals:         0       0       0       0       0
  3027 ;;Total ram usage:        0 bytes
  3028 ;; Hardware stack levels used: 1
  3029 ;; Hardware stack levels required when called: 2
  3030 ;; This function calls:
  3031 ;;		Nothing
  3032 ;; This function is called by:
  3033 ;;		_main
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037     07E6                     _UART_Init:	
  3038                           ;psect for function _UART_Init
  3039                           
  3040     07E6                     l2127:	
  3041                           ;incstack = 0
  3042                           ; Regs used in _UART_Init: [wreg]
  3043                           
  3044                           
  3045                           ;main.c: 215:     TRISC6 = 0;
  3046     07E6  1683               	bsf	3,5	;RP0=1, select bank1
  3047     07E7  1303               	bcf	3,6	;RP1=0, select bank1
  3048     07E8  1307               	bcf	7,6	;volatile
  3049                           
  3050                           ;main.c: 216:     TRISC7 = 1;
  3051     07E9  1787               	bsf	7,7	;volatile
  3052                           
  3053                           ;main.c: 219:     BRGH = 1;
  3054     07EA  1518               	bsf	24,2	;volatile
  3055     07EB                     l2129:
  3056                           
  3057                           ;main.c: 220:     SPBRG = 51;
  3058     07EB  3033               	movlw	51
  3059     07EC  0099               	movwf	25	;volatile
  3060     07ED                     l2131:
  3061                           
  3062                           ;main.c: 223:     SYNC = 0;
  3063     07ED  1218               	bcf	24,4	;volatile
  3064     07EE                     l2133:
  3065                           
  3066                           ;main.c: 224:     SPEN = 1;
  3067     07EE  1283               	bcf	3,5	;RP0=0, select bank0
  3068     07EF  1303               	bcf	3,6	;RP1=0, select bank0
  3069     07F0  1798               	bsf	24,7	;volatile
  3070     07F1                     l2135:
  3071                           
  3072                           ;main.c: 227:     TXEN = 1;
  3073     07F1  1683               	bsf	3,5	;RP0=1, select bank1
  3074     07F2  1303               	bcf	3,6	;RP1=0, select bank1
  3075     07F3  1698               	bsf	24,5	;volatile
  3076     07F4                     l2137:
  3077                           
  3078                           ;main.c: 228:     CREN = 1;
  3079     07F4  1283               	bcf	3,5	;RP0=0, select bank0
  3080     07F5  1303               	bcf	3,6	;RP1=0, select bank0
  3081     07F6  1618               	bsf	24,4	;volatile
  3082     07F7                     l184:
  3083     07F7  0008               	return
  3084     07F8                     __end_of_UART_Init:
  3085                           
  3086                           	psect	text12
  3087     04DA                     __ptext12:	
  3088 ;; *************** function _Timer0_Init *****************
  3089 ;; Defined at:
  3090 ;;		line 378 in file "main.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;		None
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;		None
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  1    wreg      void 
  3097 ;; Registers used:
  3098 ;;		wreg
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3104 ;;      Params:         0       0       0       0       0
  3105 ;;      Locals:         0       0       0       0       0
  3106 ;;      Temps:          0       0       0       0       0
  3107 ;;      Totals:         0       0       0       0       0
  3108 ;;Total ram usage:        0 bytes
  3109 ;; Hardware stack levels used: 1
  3110 ;; Hardware stack levels required when called: 2
  3111 ;; This function calls:
  3112 ;;		Nothing
  3113 ;; This function is called by:
  3114 ;;		_main
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118     04DA                     _Timer0_Init:	
  3119                           ;psect for function _Timer0_Init
  3120                           
  3121     04DA                     l2163:	
  3122                           ;incstack = 0
  3123                           ; Regs used in _Timer0_Init: [wreg]
  3124                           
  3125                           
  3126                           ;main.c: 380:     T0CS = 0;
  3127     04DA  1683               	bsf	3,5	;RP0=1, select bank1
  3128     04DB  1303               	bcf	3,6	;RP1=0, select bank1
  3129     04DC  1281               	bcf	1,5	;volatile
  3130                           
  3131                           ;main.c: 381:     PSA = 0;
  3132     04DD  1181               	bcf	1,3	;volatile
  3133                           
  3134                           ;main.c: 382:     PS2 = 1;
  3135     04DE  1501               	bsf	1,2	;volatile
  3136                           
  3137                           ;main.c: 383:     PS1 = 1;
  3138     04DF  1481               	bsf	1,1	;volatile
  3139                           
  3140                           ;main.c: 384:     PS0 = 1;
  3141     04E0  1401               	bsf	1,0	;volatile
  3142     04E1                     l2165:
  3143                           
  3144                           ;main.c: 387:     TMR0 = 6;
  3145     04E1  3006               	movlw	6
  3146     04E2  1283               	bcf	3,5	;RP0=0, select bank0
  3147     04E3  1303               	bcf	3,6	;RP1=0, select bank0
  3148     04E4  0081               	movwf	1	;volatile
  3149     04E5                     l2167:
  3150                           
  3151                           ;main.c: 388:     TMR0IF = 0;
  3152     04E5  110B               	bcf	11,2	;volatile
  3153     04E6                     l2169:
  3154                           
  3155                           ;main.c: 389:     TMR0IE = 1;
  3156     04E6  168B               	bsf	11,5	;volatile
  3157     04E7                     l2171:
  3158                           
  3159                           ;main.c: 390:     GIE = 1;
  3160     04E7  178B               	bsf	11,7	;volatile
  3161     04E8                     l249:
  3162     04E8  0008               	return
  3163     04E9                     __end_of_Timer0_Init:
  3164                           
  3165                           	psect	text13
  3166     04F3                     __ptext13:	
  3167 ;; *************** function _RS485_TxEnable *****************
  3168 ;; Defined at:
  3169 ;;		line 231 in file "main.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;		None
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;		None
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  1    wreg      void 
  3176 ;; Registers used:
  3177 ;;		None
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3183 ;;      Params:         0       0       0       0       0
  3184 ;;      Locals:         0       0       0       0       0
  3185 ;;      Temps:          0       0       0       0       0
  3186 ;;      Totals:         0       0       0       0       0
  3187 ;;Total ram usage:        0 bytes
  3188 ;; Hardware stack levels used: 1
  3189 ;; Hardware stack levels required when called: 2
  3190 ;; This function calls:
  3191 ;;		Nothing
  3192 ;; This function is called by:
  3193 ;;		_main
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197     04F3                     _RS485_TxEnable:	
  3198                           ;psect for function _RS485_TxEnable
  3199                           
  3200     04F3                     l2173:	
  3201                           ;incstack = 0
  3202                           ; Regs used in _RS485_TxEnable: []
  3203                           
  3204                           
  3205                           ;main.c: 232:     RC0 = 1;
  3206     04F3  1283               	bcf	3,5	;RP0=0, select bank0
  3207     04F4  1303               	bcf	3,6	;RP1=0, select bank0
  3208     04F5  1407               	bsf	7,0	;volatile
  3209                           
  3210                           ;main.c: 233:     RC1 = 0;
  3211     04F6  1087               	bcf	7,1	;volatile
  3212     04F7                     l187:
  3213     04F7  0008               	return
  3214     04F8                     __end_of_RS485_TxEnable:
  3215                           
  3216                           	psect	text14
  3217     04F8                     __ptext14:	
  3218 ;; *************** function _RS485_RxEnable *****************
  3219 ;; Defined at:
  3220 ;;		line 236 in file "main.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;		None
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;		None
  3225 ;; Return value:  Size  Location     Type
  3226 ;;                  1    wreg      void 
  3227 ;; Registers used:
  3228 ;;		None
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3234 ;;      Params:         0       0       0       0       0
  3235 ;;      Locals:         0       0       0       0       0
  3236 ;;      Temps:          0       0       0       0       0
  3237 ;;      Totals:         0       0       0       0       0
  3238 ;;Total ram usage:        0 bytes
  3239 ;; Hardware stack levels used: 1
  3240 ;; Hardware stack levels required when called: 2
  3241 ;; This function calls:
  3242 ;;		Nothing
  3243 ;; This function is called by:
  3244 ;;		_main
  3245 ;; This function uses a non-reentrant model
  3246 ;;
  3247                           
  3248     04F8                     _RS485_RxEnable:	
  3249                           ;psect for function _RS485_RxEnable
  3250                           
  3251     04F8                     l2245:	
  3252                           ;incstack = 0
  3253                           ; Regs used in _RS485_RxEnable: []
  3254                           
  3255                           
  3256                           ;main.c: 237:     RC0 = 0;
  3257     04F8  1283               	bcf	3,5	;RP0=0, select bank0
  3258     04F9  1303               	bcf	3,6	;RP1=0, select bank0
  3259     04FA  1007               	bcf	7,0	;volatile
  3260                           
  3261                           ;main.c: 238:     RC1 = 1;
  3262     04FB  1487               	bsf	7,1	;volatile
  3263     04FC                     l190:
  3264     04FC  0008               	return
  3265     04FD                     __end_of_RS485_RxEnable:
  3266                           
  3267                           	psect	text15
  3268     044E                     __ptext15:	
  3269 ;; *************** function _KeyPadReader *****************
  3270 ;; Defined at:
  3271 ;;		line 403 in file "main.c"
  3272 ;; Parameters:    Size  Location     Type
  3273 ;;		None
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;		None
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  1    wreg      unsigned char 
  3278 ;; Registers used:
  3279 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3285 ;;      Params:         0       0       0       0       0
  3286 ;;      Locals:         0       0       0       0       0
  3287 ;;      Temps:          0       2       0       0       0
  3288 ;;      Totals:         0       2       0       0       0
  3289 ;;Total ram usage:        2 bytes
  3290 ;; Hardware stack levels used: 2
  3291 ;; Hardware stack levels required when called: 2
  3292 ;; This function calls:
  3293 ;;		Nothing
  3294 ;; This function is called by:
  3295 ;;		_main
  3296 ;; This function uses a non-reentrant model
  3297 ;;
  3298                           
  3299     044E                     _KeyPadReader:	
  3300                           ;psect for function _KeyPadReader
  3301                           
  3302     044E                     l2191:	
  3303                           ;incstack = 0
  3304                           ; Regs used in _KeyPadReader: [wreg-fsr0h+status,2+status,0+pclath]
  3305                           
  3306                           
  3307                           ;main.c: 404:     TRISD |= 0x0F;
  3308     044E  300F               	movlw	15
  3309     044F  1283               	bcf	3,5	;RP0=0, select bank0
  3310     0450  1303               	bcf	3,6	;RP1=0, select bank0
  3311     0451  00D1               	movwf	??_KeyPadReader
  3312     0452  0851               	movf	??_KeyPadReader,w
  3313     0453  1683               	bsf	3,5	;RP0=1, select bank1
  3314     0454  1303               	bcf	3,6	;RP1=0, select bank1
  3315     0455  0488               	iorwf	8,f	;volatile
  3316     0456                     l2193:
  3317                           
  3318                           ;main.c: 407:     for (colScan = 0; colScan < 3; colScan++) {
  3319     0456  1283               	bcf	3,5	;RP0=0, select bank0
  3320     0457  01CA               	clrf	_colScan
  3321     0458                     l2195:
  3322     0458  3003               	movlw	3
  3323     0459  024A               	subwf	_colScan,w
  3324     045A  1C03               	skipc
  3325     045B  2C5D               	goto	u2421
  3326     045C  2C5E               	goto	u2420
  3327     045D                     u2421:
  3328     045D  2C5F               	goto	l2199
  3329     045E                     u2420:
  3330     045E  2C56               	goto	l2193
  3331     045F                     l2199:
  3332                           
  3333                           ;main.c: 408:         PORTB = PORTB | 0x07;
  3334     045F  0806               	movf	6,w	;volatile
  3335     0460  3807               	iorlw	7
  3336     0461  0086               	movwf	6	;volatile
  3337     0462                     l2201:
  3338                           
  3339                           ;main.c: 409:         PORTB &= colMask[colScan];
  3340     0462  084A               	movf	_colScan,w
  3341     0463  3E11               	addlw	low ((_colMask-__stringbase)| (0+32768))
  3342     0464  0084               	movwf	4
  3343     0465  120A  118A  250A  120A  118A  	fcall	stringdir
  3344     046A  00D1               	movwf	??_KeyPadReader
  3345     046B  0851               	movf	??_KeyPadReader,w
  3346     046C  0586               	andwf	6,f	;volatile
  3347     046D                     l2203:
  3348                           
  3349                           ;main.c: 412:         for (rowScan = 0; rowScan < 4; rowScan++) {
  3350     046D  01C9               	clrf	_rowScan
  3351     046E                     l2205:
  3352     046E  3004               	movlw	4
  3353     046F  0249               	subwf	_rowScan,w
  3354     0470  1C03               	skipc
  3355     0471  2C73               	goto	u2431
  3356     0472  2C74               	goto	u2430
  3357     0473                     u2431:
  3358     0473  2C75               	goto	l2209
  3359     0474                     u2430:
  3360     0474  2CD4               	goto	l2241
  3361     0475                     l2209:
  3362                           
  3363                           ;main.c: 413:             if (!(PORTD & rowMask[rowScan]) && (old_btn)) {
  3364     0475  0849               	movf	_rowScan,w
  3365     0476  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  3366     0477  0084               	movwf	4
  3367     0478  120A  118A  250A  120A  118A  	fcall	stringdir
  3368     047D  0508               	andwf	8,w	;volatile
  3369     047E  1D03               	btfss	3,2
  3370     047F  2C81               	goto	u2441
  3371     0480  2C82               	goto	u2440
  3372     0481                     u2441:
  3373     0481  2C8B               	goto	l2217
  3374     0482                     u2440:
  3375     0482                     l2211:
  3376     0482  1C79               	btfss	_old_btn/(0+8),_old_btn& (0+7)
  3377     0483  2C85               	goto	u2451
  3378     0484  2C86               	goto	u2450
  3379     0485                     u2451:
  3380     0485  2C8B               	goto	l2217
  3381     0486                     u2450:
  3382     0486                     l2213:
  3383                           
  3384                           ;main.c: 414:                 old_btn = 0;
  3385     0486  1079               	bcf	_old_btn/(0+8),_old_btn& (0+7)
  3386     0487                     l2215:
  3387                           
  3388                           ;main.c: 415:                 stato++;
  3389     0487  3001               	movlw	1
  3390     0488  00D1               	movwf	??_KeyPadReader
  3391     0489  0851               	movf	??_KeyPadReader,w
  3392     048A  07C8               	addwf	_stato,f
  3393     048B                     l2217:
  3394                           
  3395                           ;main.c: 417:             if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  3396     048B  0849               	movf	_rowScan,w
  3397     048C  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  3398     048D  0084               	movwf	4
  3399     048E  120A  118A  250A  120A  118A  	fcall	stringdir
  3400     0493  0508               	andwf	8,w	;volatile
  3401     0494  1903               	btfsc	3,2
  3402     0495  2C97               	goto	u2461
  3403     0496  2C98               	goto	u2460
  3404     0497                     u2461:
  3405     0497  2CBB               	goto	l2229
  3406     0498                     u2460:
  3407     0498                     l2219:
  3408     0498  1879               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  3409     0499  2C9B               	goto	u2471
  3410     049A  2C9C               	goto	u2470
  3411     049B                     u2471:
  3412     049B  2CBB               	goto	l2229
  3413     049C                     u2470:
  3414     049C                     l2221:
  3415                           
  3416                           ;main.c: 418:                 _delay((unsigned long)((10)*(20000000/4000.0)));
  3417     049C  3041               	movlw	65
  3418     049D  1283               	bcf	3,5	;RP0=0, select bank0
  3419     049E  1303               	bcf	3,6	;RP1=0, select bank0
  3420     049F  00D2               	movwf	??_KeyPadReader+1
  3421     04A0  30ED               	movlw	237
  3422     04A1  00D1               	movwf	??_KeyPadReader
  3423     04A2                     u3117:
  3424     04A2  0BD1               	decfsz	??_KeyPadReader,f
  3425     04A3  2CA2               	goto	u3117
  3426     04A4  0BD2               	decfsz	??_KeyPadReader+1,f
  3427     04A5  2CA2               	goto	u3117
  3428     04A6  2CA7               	nop2
  3429     04A7                     l2223:
  3430                           
  3431                           ;main.c: 419:                 if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  3432     04A7  1283               	bcf	3,5	;RP0=0, select bank0
  3433     04A8  1303               	bcf	3,6	;RP1=0, select bank0
  3434     04A9  0849               	movf	_rowScan,w
  3435     04AA  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  3436     04AB  0084               	movwf	4
  3437     04AC  120A  118A  250A  120A  118A  	fcall	stringdir
  3438     04B1  0508               	andwf	8,w	;volatile
  3439     04B2  1903               	btfsc	3,2
  3440     04B3  2CB5               	goto	u2481
  3441     04B4  2CB6               	goto	u2480
  3442     04B5                     u2481:
  3443     04B5  2CBB               	goto	l2229
  3444     04B6                     u2480:
  3445     04B6                     l2225:
  3446     04B6  1879               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  3447     04B7  2CB9               	goto	u2491
  3448     04B8  2CBA               	goto	u2490
  3449     04B9                     u2491:
  3450     04B9  2CBB               	goto	l2229
  3451     04BA                     u2490:
  3452     04BA                     l2227:
  3453                           
  3454                           ;main.c: 420:                     old_btn = 1;
  3455     04BA  1479               	bsf	_old_btn/(0+8),_old_btn& (0+7)
  3456     04BB                     l2229:
  3457                           
  3458                           ;main.c: 423:             if (stato != old_stato) {
  3459     04BB  0848               	movf	_stato,w
  3460     04BC  0647               	xorwf	_old_stato,w
  3461     04BD  1903               	skipnz
  3462     04BE  2CC0               	goto	u2501
  3463     04BF  2CC1               	goto	u2500
  3464     04C0                     u2501:
  3465     04C0  2CCF               	goto	l2237
  3466     04C1                     u2500:
  3467     04C1                     l2231:
  3468                           
  3469                           ;main.c: 424:                 keypressed = rowScan + (4 * colScan);
  3470     04C1  084A               	movf	_colScan,w
  3471     04C2  00D1               	movwf	??_KeyPadReader
  3472     04C3  3002               	movlw	2
  3473     04C4                     u2515:
  3474     04C4  1003               	clrc
  3475     04C5  0DD1               	rlf	??_KeyPadReader,f
  3476     04C6  3EFF               	addlw	-1
  3477     04C7  1D03               	skipz
  3478     04C8  2CC4               	goto	u2515
  3479     04C9  0849               	movf	_rowScan,w
  3480     04CA  0751               	addwf	??_KeyPadReader,w
  3481     04CB  00CC               	movwf	_keypressed
  3482     04CC                     l2233:
  3483                           
  3484                           ;main.c: 427:                 old_stato = stato;
  3485     04CC  0848               	movf	_stato,w
  3486     04CD  00C7               	movwf	_old_stato
  3487     04CE  2CD9               	goto	l267
  3488     04CF                     l2237:
  3489                           
  3490                           ;main.c: 430:         }
  3491     04CF  3001               	movlw	1
  3492     04D0  00D1               	movwf	??_KeyPadReader
  3493     04D1  0851               	movf	??_KeyPadReader,w
  3494     04D2  07C9               	addwf	_rowScan,f
  3495     04D3  2C6E               	goto	l2205
  3496     04D4                     l2241:
  3497                           
  3498                           ;main.c: 431:     }
  3499     04D4  3001               	movlw	1
  3500     04D5  00D1               	movwf	??_KeyPadReader
  3501     04D6  0851               	movf	??_KeyPadReader,w
  3502     04D7  07CA               	addwf	_colScan,f
  3503     04D8  2C58               	goto	l2195
  3504     04D9                     l267:
  3505     04D9  0008               	return
  3506     04DA                     __end_of_KeyPadReader:
  3507                           
  3508                           	psect	text16
  3509     07A1                     __ptext16:	
  3510 ;; *************** function _GenerateRandomNumber *****************
  3511 ;; Defined at:
  3512 ;;		line 393 in file "main.c"
  3513 ;; Parameters:    Size  Location     Type
  3514 ;;		None
  3515 ;; Auto vars:     Size  Location     Type
  3516 ;;  count           2    1[BANK0 ] unsigned int 
  3517 ;;  randomNum       1    0[BANK0 ] unsigned char 
  3518 ;; Return value:  Size  Location     Type
  3519 ;;                  1    wreg      unsigned char 
  3520 ;; Registers used:
  3521 ;;		wreg, status,2, status,0
  3522 ;; Tracked objects:
  3523 ;;		On entry : 0/0
  3524 ;;		On exit  : 0/0
  3525 ;;		Unchanged: 0/0
  3526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3527 ;;      Params:         0       0       0       0       0
  3528 ;;      Locals:         0       3       0       0       0
  3529 ;;      Temps:          0       0       0       0       0
  3530 ;;      Totals:         0       3       0       0       0
  3531 ;;Total ram usage:        3 bytes
  3532 ;; Hardware stack levels used: 1
  3533 ;; Hardware stack levels required when called: 2
  3534 ;; This function calls:
  3535 ;;		Nothing
  3536 ;; This function is called by:
  3537 ;;		_main
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540                           
  3541     07A1                     _GenerateRandomNumber:	
  3542                           ;psect for function _GenerateRandomNumber
  3543                           
  3544     07A1                     l2179:	
  3545                           ;incstack = 0
  3546                           ; Regs used in _GenerateRandomNumber: [wreg+status,2+status,0]
  3547                           
  3548                           
  3549                           ;main.c: 394:     unsigned int count = 0;
  3550     07A1  1283               	bcf	3,5	;RP0=0, select bank0
  3551     07A2  1303               	bcf	3,6	;RP1=0, select bank0
  3552     07A3  01D2               	clrf	GenerateRandomNumber@count
  3553     07A4  01D3               	clrf	GenerateRandomNumber@count+1
  3554                           
  3555                           ;main.c: 395:     while (count != 8000){
  3556     07A5  2FAC               	goto	l2183
  3557     07A6                     l2181:
  3558                           
  3559                           ;main.c: 396:         count++;
  3560     07A6  3001               	movlw	1
  3561     07A7  07D2               	addwf	GenerateRandomNumber@count,f
  3562     07A8  1803               	skipnc
  3563     07A9  0AD3               	incf	GenerateRandomNumber@count+1,f
  3564     07AA  3000               	movlw	0
  3565     07AB  07D3               	addwf	GenerateRandomNumber@count+1,f
  3566     07AC                     l2183:
  3567                           
  3568                           ;main.c: 395:     while (count != 8000){
  3569     07AC  3040               	movlw	64
  3570     07AD  0652               	xorwf	GenerateRandomNumber@count,w
  3571     07AE  301F               	movlw	31
  3572     07AF  1903               	skipnz
  3573     07B0  0653               	xorwf	GenerateRandomNumber@count+1,w
  3574     07B1  1D03               	btfss	3,2
  3575     07B2  2FB4               	goto	u2411
  3576     07B3  2FB5               	goto	u2410
  3577     07B4                     u2411:
  3578     07B4  2FA6               	goto	l2181
  3579     07B5                     u2410:
  3580     07B5                     l2185:
  3581                           
  3582                           ;main.c: 398:     unsigned char randomNum = TMR0;
  3583     07B5  0801               	movf	1,w	;volatile
  3584     07B6  00D1               	movwf	GenerateRandomNumber@randomNum
  3585     07B7                     l2187:
  3586                           
  3587                           ;main.c: 399:     TMR0IF = 0;
  3588     07B7  110B               	bcf	11,2	;volatile
  3589                           
  3590                           ;main.c: 400:     return randomNum;
  3591     07B8  0851               	movf	GenerateRandomNumber@randomNum,w
  3592     07B9                     l255:
  3593     07B9  0008               	return
  3594     07BA                     __end_of_GenerateRandomNumber:
  3595                           
  3596                           	psect	text17
  3597     0303                     __ptext17:	
  3598 ;; *************** function _ISR *****************
  3599 ;; Defined at:
  3600 ;;		line 326 in file "main.c"
  3601 ;; Parameters:    Size  Location     Type
  3602 ;;		None
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;		None
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  1    wreg      void 
  3607 ;; Registers used:
  3608 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3614 ;;      Params:         0       0       0       0       0
  3615 ;;      Locals:         0       0       0       0       0
  3616 ;;      Temps:          5       0       0       0       0
  3617 ;;      Totals:         5       0       0       0       0
  3618 ;;Total ram usage:        5 bytes
  3619 ;; Hardware stack levels used: 2
  3620 ;; This function calls:
  3621 ;;		Nothing
  3622 ;; This function is called by:
  3623 ;;		Interrupt level 1
  3624 ;; This function uses a non-reentrant model
  3625 ;;
  3626                           
  3627     0303                     _ISR:	
  3628                           ;psect for function _ISR
  3629                           
  3630     0303                     i1l1961:
  3631     0303                     i1l222:	
  3632                           ;main.c: 329:     }
  3633                           
  3634                           
  3635                           ;main.c: 327:     while (!TMR0IF){
  3636     0303  1D0B               	btfss	11,2	;volatile
  3637     0304  2B06               	goto	u206_21
  3638     0305  2B07               	goto	u206_20
  3639     0306                     u206_21:
  3640     0306  2B03               	goto	i1l222
  3641     0307                     u206_20:
  3642     0307                     i1l224:
  3643                           
  3644                           ;main.c: 330:     TMR0IF = 0;
  3645     0307  110B               	bcf	11,2	;volatile
  3646     0308                     i1l225:	
  3647                           ;main.c: 333:     }
  3648                           
  3649                           
  3650                           ;main.c: 331:     while (!TMR0IF){
  3651     0308  1D0B               	btfss	11,2	;volatile
  3652     0309  2B0B               	goto	u207_21
  3653     030A  2B0C               	goto	u207_20
  3654     030B                     u207_21:
  3655     030B  2B08               	goto	i1l225
  3656     030C                     u207_20:
  3657     030C                     i1l227:
  3658                           
  3659                           ;main.c: 334:     TMR0IF = 0;
  3660     030C  110B               	bcf	11,2	;volatile
  3661     030D                     i1l228:	
  3662                           ;main.c: 337:     }
  3663                           
  3664                           
  3665                           ;main.c: 335:     while (!TMR0IF){
  3666     030D  1D0B               	btfss	11,2	;volatile
  3667     030E  2B10               	goto	u208_21
  3668     030F  2B11               	goto	u208_20
  3669     0310                     u208_21:
  3670     0310  2B0D               	goto	i1l228
  3671     0311                     u208_20:
  3672     0311                     i1l230:
  3673                           
  3674                           ;main.c: 338:     TMR0IF = 0;
  3675     0311  110B               	bcf	11,2	;volatile
  3676     0312                     i1l231:	
  3677                           ;main.c: 341:     }
  3678                           
  3679                           
  3680                           ;main.c: 339:     while (!TMR0IF){
  3681     0312  1D0B               	btfss	11,2	;volatile
  3682     0313  2B15               	goto	u209_21
  3683     0314  2B16               	goto	u209_20
  3684     0315                     u209_21:
  3685     0315  2B12               	goto	i1l231
  3686     0316                     u209_20:
  3687     0316                     i1l233:
  3688                           
  3689                           ;main.c: 342:     TMR0IF = 0;
  3690     0316  110B               	bcf	11,2	;volatile
  3691     0317                     i1l234:	
  3692                           ;main.c: 345:     }
  3693                           
  3694                           
  3695                           ;main.c: 343:     while (!TMR0IF){
  3696     0317  1D0B               	btfss	11,2	;volatile
  3697     0318  2B1A               	goto	u210_21
  3698     0319  2B1B               	goto	u210_20
  3699     031A                     u210_21:
  3700     031A  2B17               	goto	i1l234
  3701     031B                     u210_20:
  3702     031B                     i1l236:
  3703                           
  3704                           ;main.c: 346:     TMR0IF = 0;
  3705     031B  110B               	bcf	11,2	;volatile
  3706     031C                     i1l1963:
  3707                           
  3708                           ;main.c: 347:     if(flag == 1){
  3709     031C  1283               	bcf	3,5	;RP0=0, select bank0
  3710     031D  1303               	bcf	3,6	;RP1=0, select bank0
  3711     031E  0340               	decf	_flag,w
  3712     031F  0441               	iorwf	_flag+1,w
  3713     0320  1D03               	btfss	3,2
  3714     0321  2B23               	goto	u211_21
  3715     0322  2B24               	goto	u211_20
  3716     0323                     u211_21:
  3717     0323  2BA8               	goto	i1l246
  3718     0324                     u211_20:
  3719     0324                     i1l1965:
  3720                           
  3721                           ;main.c: 348:         TRISD |= 0x0F;
  3722     0324  300F               	movlw	15
  3723     0325  00F0               	movwf	??_ISR
  3724     0326  0870               	movf	??_ISR,w
  3725     0327  1683               	bsf	3,5	;RP0=1, select bank1
  3726     0328  1303               	bcf	3,6	;RP1=0, select bank1
  3727     0329  0488               	iorwf	8,f	;volatile
  3728     032A                     i1l1967:
  3729                           
  3730                           ;main.c: 350:         for (colScan = 0; colScan < 3; colScan++) {
  3731     032A  1283               	bcf	3,5	;RP0=0, select bank0
  3732     032B  1303               	bcf	3,6	;RP1=0, select bank0
  3733     032C  01CA               	clrf	_colScan
  3734     032D                     i1l1969:
  3735     032D  3003               	movlw	3
  3736     032E  024A               	subwf	_colScan,w
  3737     032F  1C03               	skipc
  3738     0330  2B32               	goto	u212_21
  3739     0331  2B33               	goto	u212_20
  3740     0332                     u212_21:
  3741     0332  2B34               	goto	i1l1973
  3742     0333                     u212_20:
  3743     0333  2BA5               	goto	i1l2013
  3744     0334                     i1l1973:
  3745                           
  3746                           ;main.c: 351:             PORTB = PORTB | 0x07;
  3747     0334  0806               	movf	6,w	;volatile
  3748     0335  3807               	iorlw	7
  3749     0336  0086               	movwf	6	;volatile
  3750     0337                     i1l1975:
  3751                           
  3752                           ;main.c: 352:             PORTB &= colMask[colScan];
  3753     0337  084A               	movf	_colScan,w
  3754     0338  3E11               	addlw	low ((_colMask-__stringbase)| (0+32768))
  3755     0339  0084               	movwf	4
  3756     033A  120A  118A  250A  120A  118A  	fcall	stringdir
  3757     033F  00F0               	movwf	??_ISR
  3758     0340  0870               	movf	??_ISR,w
  3759     0341  0586               	andwf	6,f	;volatile
  3760     0342                     i1l1977:
  3761                           
  3762                           ;main.c: 355:             for (rowScan = 0; rowScan < 4; rowScan++) {
  3763     0342  01C9               	clrf	_rowScan
  3764     0343                     i1l1979:
  3765     0343  3004               	movlw	4
  3766     0344  0249               	subwf	_rowScan,w
  3767     0345  1C03               	skipc
  3768     0346  2B48               	goto	u213_21
  3769     0347  2B49               	goto	u213_20
  3770     0348                     u213_21:
  3771     0348  2B4A               	goto	i1l1983
  3772     0349                     u213_20:
  3773     0349  2BA0               	goto	i1l2009
  3774     034A                     i1l1983:
  3775                           
  3776                           ;main.c: 356:                 if (!(PORTD & rowMask[rowScan]) && (old_btn)) {
  3777     034A  0849               	movf	_rowScan,w
  3778     034B  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  3779     034C  0084               	movwf	4
  3780     034D  120A  118A  250A  120A  118A  	fcall	stringdir
  3781     0352  0508               	andwf	8,w	;volatile
  3782     0353  1D03               	btfss	3,2
  3783     0354  2B56               	goto	u214_21
  3784     0355  2B57               	goto	u214_20
  3785     0356                     u214_21:
  3786     0356  2B60               	goto	i1l1991
  3787     0357                     u214_20:
  3788     0357                     i1l1985:
  3789     0357  1C79               	btfss	_old_btn/(0+8),_old_btn& (0+7)
  3790     0358  2B5A               	goto	u215_21
  3791     0359  2B5B               	goto	u215_20
  3792     035A                     u215_21:
  3793     035A  2B60               	goto	i1l1991
  3794     035B                     u215_20:
  3795     035B                     i1l1987:
  3796                           
  3797                           ;main.c: 357:                     old_btn = 0;
  3798     035B  1079               	bcf	_old_btn/(0+8),_old_btn& (0+7)
  3799     035C                     i1l1989:
  3800                           
  3801                           ;main.c: 358:                     stato++;
  3802     035C  3001               	movlw	1
  3803     035D  00F0               	movwf	??_ISR
  3804     035E  0870               	movf	??_ISR,w
  3805     035F  07C8               	addwf	_stato,f
  3806     0360                     i1l1991:
  3807                           
  3808                           ;main.c: 360:                 if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  3809     0360  0849               	movf	_rowScan,w
  3810     0361  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  3811     0362  0084               	movwf	4
  3812     0363  120A  118A  250A  120A  118A  	fcall	stringdir
  3813     0368  0508               	andwf	8,w	;volatile
  3814     0369  1903               	btfsc	3,2
  3815     036A  2B6C               	goto	u216_21
  3816     036B  2B6D               	goto	u216_20
  3817     036C                     u216_21:
  3818     036C  2B83               	goto	i1l2001
  3819     036D                     u216_20:
  3820     036D                     i1l1993:
  3821     036D  1879               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  3822     036E  2B70               	goto	u217_21
  3823     036F  2B71               	goto	u217_20
  3824     0370                     u217_21:
  3825     0370  2B83               	goto	i1l2001
  3826     0371                     u217_20:
  3827     0371                     i1l1995:
  3828                           
  3829                           ;main.c: 362:                     if ((PORTD & rowMask[rowScan]) && (!old_btn)) {
  3830     0371  0849               	movf	_rowScan,w
  3831     0372  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  3832     0373  0084               	movwf	4
  3833     0374  120A  118A  250A  120A  118A  	fcall	stringdir
  3834     0379  0508               	andwf	8,w	;volatile
  3835     037A  1903               	btfsc	3,2
  3836     037B  2B7D               	goto	u218_21
  3837     037C  2B7E               	goto	u218_20
  3838     037D                     u218_21:
  3839     037D  2B83               	goto	i1l2001
  3840     037E                     u218_20:
  3841     037E                     i1l1997:
  3842     037E  1879               	btfsc	_old_btn/(0+8),_old_btn& (0+7)
  3843     037F  2B81               	goto	u219_21
  3844     0380  2B82               	goto	u219_20
  3845     0381                     u219_21:
  3846     0381  2B83               	goto	i1l2001
  3847     0382                     u219_20:
  3848     0382                     i1l1999:
  3849                           
  3850                           ;main.c: 363:                         old_btn = 1;
  3851     0382  1479               	bsf	_old_btn/(0+8),_old_btn& (0+7)
  3852     0383                     i1l2001:
  3853                           
  3854                           ;main.c: 366:                 if (stato != old_stato) {
  3855     0383  0848               	movf	_stato,w
  3856     0384  0647               	xorwf	_old_stato,w
  3857     0385  1903               	skipnz
  3858     0386  2B88               	goto	u220_21
  3859     0387  2B89               	goto	u220_20
  3860     0388                     u220_21:
  3861     0388  2B96               	goto	i1l2007
  3862     0389                     u220_20:
  3863     0389                     i1l2003:
  3864                           
  3865                           ;main.c: 367:                     keypressed = rowScan + (4 * colScan);
  3866     0389  084A               	movf	_colScan,w
  3867     038A  00F0               	movwf	??_ISR
  3868     038B  3002               	movlw	2
  3869     038C                     u221_25:
  3870     038C  1003               	clrc
  3871     038D  0DF0               	rlf	??_ISR,f
  3872     038E  3EFF               	addlw	-1
  3873     038F  1D03               	skipz
  3874     0390  2B8C               	goto	u221_25
  3875     0391  0849               	movf	_rowScan,w
  3876     0392  0770               	addwf	??_ISR,w
  3877     0393  00CC               	movwf	_keypressed
  3878     0394                     i1l2005:
  3879                           
  3880                           ;main.c: 370:                     old_stato = stato;
  3881     0394  0848               	movf	_stato,w
  3882     0395  00C7               	movwf	_old_stato
  3883     0396                     i1l2007:
  3884                           
  3885                           ;main.c: 372:             }
  3886     0396  3001               	movlw	1
  3887     0397  00F0               	movwf	??_ISR
  3888     0398  0870               	movf	??_ISR,w
  3889     0399  07C9               	addwf	_rowScan,f
  3890     039A  3004               	movlw	4
  3891     039B  0249               	subwf	_rowScan,w
  3892     039C  1C03               	skipc
  3893     039D  2B9F               	goto	u222_21
  3894     039E  2BA0               	goto	u222_20
  3895     039F                     u222_21:
  3896     039F  2B4A               	goto	i1l1983
  3897     03A0                     u222_20:
  3898     03A0                     i1l2009:
  3899                           
  3900                           ;main.c: 373:         }
  3901     03A0  3001               	movlw	1
  3902     03A1  00F0               	movwf	??_ISR
  3903     03A2  0870               	movf	??_ISR,w
  3904     03A3  07CA               	addwf	_colScan,f
  3905     03A4  2B2D               	goto	i1l1969
  3906     03A5                     i1l2013:
  3907                           
  3908                           ;main.c: 374:         TRISD |= 0x00;
  3909     03A5  1683               	bsf	3,5	;RP0=1, select bank1
  3910     03A6  1303               	bcf	3,6	;RP1=0, select bank1
  3911     03A7  0808               	movf	8,w	;volatile
  3912     03A8                     i1l246:
  3913     03A8  0874               	movf	??_ISR+4,w
  3914     03A9  00FF               	movwf	btemp+1
  3915     03AA  0873               	movf	??_ISR+3,w
  3916     03AB  008A               	movwf	10
  3917     03AC  0872               	movf	??_ISR+2,w
  3918     03AD  0084               	movwf	4
  3919     03AE  0E71               	swapf	??_ISR+1,w
  3920     03AF  0083               	movwf	3
  3921     03B0  0EFE               	swapf	btemp,f
  3922     03B1  0E7E               	swapf	btemp,w
  3923     03B2  0009               	retfie
  3924     03B3                     __end_of_ISR:
  3925     007E                     btemp	set	126	;btemp
  3926     007E                     wtemp0	set	126
  3927                           
  3928                           	psect	intentry
  3929     0004                     __pintentry:	
  3930                           ;incstack = 0
  3931                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath]
  3932                           
  3933     0004                     interrupt_function:
  3934     007E                     saved_w	set	btemp
  3935     0004  00FE               	movwf	btemp
  3936     0005  0E03               	swapf	3,w
  3937     0006  00F1               	movwf	??_ISR+1
  3938     0007  0804               	movf	4,w
  3939     0008  00F2               	movwf	??_ISR+2
  3940     0009  080A               	movf	10,w
  3941     000A  00F3               	movwf	??_ISR+3
  3942     000B  087F               	movf	btemp+1,w
  3943     000C  00F4               	movwf	??_ISR+4
  3944     000D  120A  118A  2B03   	ljmp	_ISR
  3945                           
  3946                           	psect	idloc
  3947                           
  3948                           ;Config register IDLOC0 @ 0x2000
  3949                           ;	unspecified, using default values
  3950     2000                     	org	8192
  3951     2000  3FFF               	dw	16383
  3952                           
  3953                           ;Config register IDLOC1 @ 0x2001
  3954                           ;	unspecified, using default values
  3955     2001                     	org	8193
  3956     2001  3FFF               	dw	16383
  3957                           
  3958                           ;Config register IDLOC2 @ 0x2002
  3959                           ;	unspecified, using default values
  3960     2002                     	org	8194
  3961     2002  3FFF               	dw	16383
  3962                           
  3963                           ;Config register IDLOC3 @ 0x2003
  3964                           ;	unspecified, using default values
  3965     2003                     	org	8195
  3966     2003  3FFF               	dw	16383
  3967                           
  3968                           	psect	config
  3969                           
  3970                           ;Config register CONFIG @ 0x2007
  3971                           ;	Oscillator Selection bits
  3972                           ;	FOSC = HS, HS oscillator
  3973                           ;	Watchdog Timer Enable bit
  3974                           ;	WDTE = OFF, WDT disabled
  3975                           ;	Power-up Timer Enable bit
  3976                           ;	PWRTE = OFF, PWRT disabled
  3977                           ;	Brown-out Reset Enable bit
  3978                           ;	BOREN = OFF, BOR disabled
  3979                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3980                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3981                           ;	Data EEPROM Memory Code Protection bit
  3982                           ;	CPD = OFF, Data EEPROM code protection off
  3983                           ;	Flash Program Memory Write Enable bits
  3984                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3985                           ;	In-Circuit Debugger Mode bit
  3986                           ;	DEBUG = 0x1, unprogrammed default
  3987                           ;	Flash Program Memory Code Protection bit
  3988                           ;	CP = OFF, Code protection off
  3989     2007                     	org	8199
  3990     2007  3F3A               	dw	16186

Data Sizes:
    Strings     92
    Constant    19
    Data        1
    BSS         53
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     28      78
    BANK1            80      3       3
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    intToString@str	PTR unsigned char  size(1) Largest target is 3
		 -> print_countdown(BANK0[3]), 

    lcdPrint@str	PTR unsigned char  size(2) Largest target is 15
		 -> STR_8(CODE[15]), STR_7(CODE[9]), print_countdown(BANK0[3]), STR_6(CODE[14]), 
		 -> STR_5(CODE[13]), STR_4(CODE[12]), STR_3(CODE[11]), STR_2(CODE[10]), 
		 -> STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _initLCD->_lcdSend
    _UART_Read->_intToString
    _lcdPrint->_lcdSend
    _intToString->___awdiv
    _potenza->___bmul
    ___awdiv->_potenza

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_UART_Read

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   16417
               _GenerateRandomNumber
                       _KeyPadReader
                     _RS485_RxEnable
                     _RS485_TxEnable
                        _Timer0_Init
                          _UART_Init
                          _UART_Read
                         _UART_Write
                            _initLCD
                           _lcdPrint
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0    2402
                                              2 BANK0      2     2      0
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Read                                            3     3      0    8169
                                              0 BANK1      3     3      0
                        _intToString
                           _lcdPrint
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _lcdPrint                                             7     5      2    3342
                                              2 BANK0      7     5      2
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _lcdSend                                              2     1      1    2402
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _intToString                                          9     6      3    2425
                                             19 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                            _potenza
 ---------------------------------------------------------------------------------
 (3) _potenza                                              6     5      1     573
                                              4 BANK0      6     5      1
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     226
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     613
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     604
                                             10 BANK0      9     5      4
                            _potenza (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RS485_TxEnable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RS485_RxEnable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _KeyPadReader                                         2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _GenerateRandomNumber                                 3     3      0      71
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GenerateRandomNumber
   _KeyPadReader
   _RS485_RxEnable
   _RS485_TxEnable
   _Timer0_Init
   _UART_Init
   _UART_Read
     _intToString
       ___awdiv
         _potenza (ARG)
           ___bmul
       ___awmod
       _potenza
     _lcdPrint
       _lcdSend
     _lcdSend
   _UART_Write
   _initLCD
     _lcdSend
   _lcdPrint
   _lcdSend

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      3       3       7        3.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1C      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       1       0        7.1%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5B      12        0.0%
ABS                  0      0      5B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Jun 19 16:24:09 2023

                            pc 0002                 ___bmul@product 0053                   ___awdiv@sign 0061  
                           fsr 0004                            l200 03B8                            l211 07E5  
                          l204 044D                            l208 0668                            l217 0774  
                          l190 04FC                            l255 07B9                            l184 07F7  
                          l249 04E8                            l193 04EC                            l522 06D1  
                          l274 07A0                            l267 04D9                            l187 04F7  
                          l283 05FA                            l196 04F2                            l535 072C  
                          l395 07D0                            _GIE 005F                            _RC0 0038  
                          _RC1 0039                            _PS0 0408                            _PS1 0409  
                          _PS2 040A                            _ISR 0303                            _PSA 040B  
                          fsr0 0004                            indf 0000                   ___awmod@sign 0057  
                         ?_ISR 0070                           l2021 07C6                           l2101 0750  
                         l2023 07C8                           l2015 07BD                           l2111 0588  
                         l2031 07D7                           l2103 0758                           l2201 0462  
                         l2025 07CF                           l2017 07BE                           l2121 05E9  
                         l2113 05A9                           l2105 057F                           l2041 07E3  
                         l2033 07D8                           l2211 0482                           l2203 046D  
                         l2131 07ED                           l2019 07C2                           l2051 078A  
                         l2115 05AB                           l2123 05ED                           l2107 0583  
                         l2043 07E4                           l2035 07D9                           l2221 049C  
                         l2213 0486                           l2205 046E                           l2133 07EE  
                         l1501 0680                           l2061 06D5                           l2053 0790  
                         l2045 0778                           l2125 05F3                           l2117 05B8  
                         l2109 0584                           l2037 07DC                           l2029 07D4  
                         l2141 05FF                           l2301 003C                           l2231 04C1  
                         l2223 04A7                           l2215 0487                           l2135 07F1  
                         l2127 07E6                           l1511 0696                           l1503 0684  
                         l2071 06E9                           l2063 06D9                           l2055 079D  
                         l2047 077A                           l2119 05D3                           l2039 07DE  
                         l2151 0632                           l2143 0609                           l2311 0060  
                         l2303 0041                           l2233 04CC                           l2225 04B6  
                         l2217 048B                           l2241 04D4                           l2209 0475  
                         l2137 07F4                           l2129 07EB                           l1521 06B6  
                         l1513 069A                           l1505 0686                           l2081 0701  
                         l2073 06EF                           l2065 06DE                           l2049 077D  
                         l2161 065F                           l2153 063B                           l2145 060C  
                         l2401 0185                           l2321 007E                           l2313 0066  
                         l2305 004A                           l2227 04BA                           l2219 0498  
                         l2171 04E7                           l2163 04DA                           l1523 06BD  
                         l1515 069E                           l1507 068C                           l2091 0723  
                         l2083 070B                           l2075 06F2                           l2067 06E0  
                         l2059 06D2                           l2251 03C1                           l2155 0644  
                         l2147 0613                           l2139 05FB                           l2411 01A9  
                         l2403 0191                           l2331 009C                           l2323 0084  
                         l2315 006C                           l2307 0055                           l2181 07A6  
                         l2237 04CF                           l2229 04BB                           l2245 04F8  
                         l2173 04F3                           l2165 04E1                           l1517 06AF  
                         l1509 068F                           l1525 06C3                           l2093 0728  
                         l2085 0711                           l2077 06F9                           l2069 06E4  
                         l2261 03FB                           l2253 03C8                           l2157 064D  
                         l2149 0627                           l2421 01C7                           l2413 01AF  
                         l2405 0197                           l2333 00A2                           l2325 008A  
                         l2317 0072                           l2309 005A                           l2183 07AC  
                         l2191 044E                           l2167 04E5                           l1527 06C8  
                         l1519 06B5                           l2087 0718                           l2079 06FD  
                         l2271 0420                           l2263 0406                           l2255 03D9  
                         l2247 03B3                           l2175 04EC                           l2159 0656  
                         l2431 01EE                           l2423 01CD                           l2415 01B5  
                         l2407 019D                           l2351 00E3                           l2343 00C6  
                         l2335 00A8                           l2327 0090                           l2319 0078  
                         l2185 07B5                           l2193 0456                           l2169 04E6  
                         l1529 06CD                           l2089 071E                           l2097 072D  
                         l2281 043A                           l2273 0422                           l2257 03DC  
                         l2249 03BC                           l2265 040B                           l2177 04F0  
                         l2441 020C                           l2433 01F4                           l2417 01BB  
                         l2409 01A3                           l2425 01D3                           l2361 0101  
                         l2353 00E9                           l2345 00CB                           l2337 00B1  
                         l2329 0096                           l2187 07B7                           l2179 07A1  
                         l2195 0458                           l1491 066C                           l2099 0732  
                         l2283 0441                           l2275 0431                           l2267 0412  
                         l2259 03F2                           l2443 0212                           l2435 01FA  
                         l2451 022A                           l2427 01DC                           l2419 01C1  
                         l2371 011F                           l2363 0107                           l2355 00EF  
                         l2347 00D2                           l2339 00B6                           l1493 0670  
                         l2269 041D                           l2461 0255                           l2453 0233  
                         l2445 0218                           l2437 0200                           l2429 01E8  
                         l2381 0146                           l2365 010D                           l2357 00F5  
                         l2373 0125                           l2349 00DD                           l2199 045F  
                         l1495 0675                           l2279 0435                           l2471 0273  
                         l2463 025B                           l2455 023F                           l2447 021E  
                         l2439 0206                           l2391 0164                           l2383 014C  
                         l2375 012E                           l2367 0113                           l2359 00FB  
                         l2295 002B                           l1497 0677                           l1489 0669  
                         l2481 02EF                           l2473 0279                           l2465 0261  
                         l2457 0247                           l2449 0224                           l2393 016A  
                         l2385 0152                           l2377 013A                           l2369 0119  
                         l2297 0032                           l1499 067B                           l2483 02F4  
                         l2475 027F                           l2467 0267                           l2459 024F  
                         l2395 0170                           l2387 0158                           l2379 0140  
                         l2299 0037                           l2485 02FA                           l2469 026D  
                         l2477 0285                           l2397 0176                           l2389 015E  
                         l2479 02EC                           l2399 017C                           STR_1 0577  
                         STR_2 0564                           STR_3 0559                           STR_4 054D  
                         STR_5 0540                           STR_6 0532                           STR_7 056E  
                         STR_8 0523                           _BRGH 04C2                           _CREN 00C4  
                         _T0CS 040D                           u1210 06AF                           u1211 06AE  
                         u1205 069F                           u1230 06C3                           u1150 0670  
                         u1231 06C2                           u1215 06AB                           u1151 066F  
                         u1240 06C8                           u1160 067B                           u3000 0261  
                         u1241 06C7                           u1225 06B7                           u1161 067A  
                         u3001 0260                           u1170 068C                           u3010 0267  
                         u1171 068B                           u3011 0266                           u2300 0701  
                         u3020 026D                           u2301 0700                           u3021 026C  
                         u1190 069E                           u2310 070B                           u2230 07C2  
                         u3030 0273                           u1191 069D                           u2311 070A  
                         u2231 07C1                           u3031 0272                           u2240 07CF  
                         u2400 04F0                           u3040 0279                           u1185 0690  
                         u2241 07CE                           u2401 04EF                           u3041 0278  
                         u2410 07B5                           u2330 071E                           u2250 079D  
                         u3050 027F                           u2411 07B4                           u2331 071D  
                         u2315 0707                           u2251 079C                           u3107 042A  
                         u3051 027E                           u2500 04C1                           u2420 045E  
                         u2340 0723                           u2260 06D9                           u3060 0285  
                         u2501 04C0                           u3117 04A2                           u2421 045D  
                         u2341 0722                           u2325 0712                           u2261 06D8  
                         u3061 0284                           u2430 0474                           u2270 06E4  
                         u2350 073E                           u2431 0473                           u2271 06E3  
                         u2255 0799                           u2440 0482                           u2280 06EF  
                         u2360 0762                           u2520 03BC                           u2600 0101  
                         u2441 0481                           u2281 06EE                           u2521 03BB  
                         u2601 0100                           u2450 0486                           u2370 0774  
                         u2530 03C1                           u2610 0107                           u2515 04C4  
                         u2451 0485                           u2371 0773                           u2531 03C0  
                         u2611 0106                           u2460 0498                           u2380 05A9  
                         u2540 043A                           u2700 0158                           u2620 010D  
                         u2461 0497                           u2381 05A8                           u2541 0439  
                         u3077 0605                           u2701 0157                           u2621 010C  
                         u2470 049C                           u2390 05F3                           u2710 015E  
                         u2630 0113                           u2550 00C5                           u2471 049B  
                         u2295 06F3                           u2391 05F2                           u3087 0619  
                         u2711 015D                           u2631 0112                           u2551 00C4  
                         u2480 04B6                           u2800 01AF                           u2720 0164  
                         u2640 0119                           u2560 00CB                           u2481 04B5  
                         u3097 062D                           u2801 01AE                           u2721 0163  
                         u2641 0118                           u2561 00CA                           u2490 04BA  
                         u2810 01B5                           u2730 016A                           u2650 011F  
                         u2570 00EF                           u2491 04B9                           u2811 01B4  
                         u2731 0169                           u2651 011E                           u2571 00EE  
                         u2900 0206                           u2820 01BB                           u2740 0170  
                         u2660 0125                           u2580 00F5                           u2901 0205  
                         u2821 01BA                           u2741 016F                           u2661 0124  
                         u2581 00F4                           u2910 020C                           u2830 01C1  
                         u2750 0176                           u2670 0146                           u2590 00FB  
                         u2911 020B                           u2831 01C0                           u2751 0175  
                         u2671 0145                           u2591 00FA                           u2920 0212  
                         u2840 01C7                           u2760 017C                           u2680 014C  
                         u2921 0211                           u2841 01C6                           u2761 017B  
                         u2681 014B                           u2930 0218                           u2850 01CD  
                         u2770 019D                           u2690 0152                           u2931 0217  
                         u2851 01CC                           u2771 019C                           u2691 0151  
                         u2940 021E                           u2860 01D3                           u2780 01A3  
                         u2941 021D                           u2861 01D2                           u2781 01A2  
                         u2950 0224                           u2870 01F4                           u2790 01A9  
                         u2951 0223                           u2871 01F3                           u2791 01A8  
                         u2960 022A                           u2880 01FA                           u2961 0229  
                         u2881 01F9                           u2970 024F                           u2890 0200  
                         u2971 024E                           u2891 01FF                           u2980 0255  
                         _RCIF 0065                           u2981 0254                           u2990 025B  
                         u2991 025A                 ??_KeyPadReader 0051                           _TMR0 0001  
                         _SPEN 00C7                           _TXEN 04C5                           _TXIF 0064  
                         _SYNC 04C4                           _data 0030                           _flag 0040  
                         _main 002B                           _num1 0078                           _num2 0077  
                         _num3 0076                           _keys 0510                           _num4 0075  
                         _num5 004D                           btemp 007E                           start 0010  
            ___bmul@multiplier 0054                          ??_ISR 0070                   ?_intToString 0064  
                        ?_main 0070                __end_of___awdiv 06D2                __end_of___awmod 072D  
              ___awdiv@divisor 005B                          i1l230 0311                          i1l222 0303  
                        i1l231 0312                          i1l224 0307                          i1l233 0316  
                        i1l225 0308                          i1l234 0317                          i1l227 030C  
                        i1l236 031B                          i1l228 030D                          i1l246 03A8  
              ___awdiv@counter 0060                          _RCREG 001A                          _SPBRG 0099  
                        _PORTB 0006                          _PORTD 0008                          _TRISA 0085  
                        _TRISB 0086                          _TRISC 0087                          _TRISD 0088  
                        _TRISE 0089                          _TXREG 0019                __end_of_colMask 0523  
              __end_of_lcdSend 07E6                    ?_UART_Write 0070                __end_of_initLCD 0669  
                        _count 003C                          _index 003E                          _keyok 004B  
                        _stato 0048                 __pbitbssCOMMON 03C8                          pclath 000A  
              __end_of_rowMask 0520                __end_of_potenza 07A1                          status 0003  
                        wtemp0 007E   __end_of_GenerateRandomNumber 07BA                __initialization 0013  
                 __end_of_main 0303                   __end_of_keys 051C                         ??_main 006D  
             ___awdiv@dividend 005D                         i1l2001 0383                         i1l2003 0389  
                       i1l2005 0394                         i1l2013 03A5                         i1l2007 0396  
                       i1l2009 03A0                         u210_20 031B                         u210_21 031A  
                       u211_20 0324                         u211_21 0323                         i1l1961 0303  
                       i1l1963 031C                         i1l1973 0334                         i1l1965 0324  
                       i1l1991 0360                         i1l1983 034A                         i1l1975 0337  
                       i1l1967 032A                         u220_20 0389                         u212_20 0333  
                       u220_21 0388                         i1l1993 036D                         i1l1985 0357  
                       i1l1977 0342                         u212_21 0332                         i1l1969 032D  
                       i1l1995 0371                         i1l1987 035B                         i1l1979 0343  
                       i1l1997 037E                         i1l1989 035C                         i1l1999 0382  
                       u213_20 0349                         u213_21 0348                         u221_25 038C  
                       u222_20 03A0                         u214_20 0357                         u206_20 0307  
                       u222_21 039F                         u214_21 0356                         u206_21 0306  
                       u215_20 035B                         u207_20 030C                         u215_21 035A  
                       u207_21 030B                         u216_20 036D                         u208_20 0311  
                       u216_21 036C                         u208_21 0310                         u217_20 0371  
                       u209_20 0316                         u217_21 0370                         u209_21 0315  
                       u218_20 037E                         u218_21 037D                         u219_20 0382  
                       u219_21 0381                         _TMR0IE 005D                         _TMR0IF 005A  
                       _TRISC6 043E                         _TRISC7 043F                  ??_Timer0_Init 0051  
             __end_of_lcdPrint 0775              __end_of_UART_Init 07F8              __end_of_UART_Read 044E  
                       ___bmul 07BA                      ??___awdiv 005F                      ??___awmod 0055  
                       _codice 0036               ___awdiv@quotient 0062                ___awmod@divisor 0051  
         __end_of_KeyPadReader 04DA                ___awmod@counter 0056                      ??_lcdSend 0052  
                    ??_initLCD 0053                         saved_w 007E                      ??_potenza 0056  
      __end_of__initialization 0027               intToString@cifre 006B            ___bmul@multiplicand 0051  
               __pcstackCOMMON 0070                   __pidataBANK0 04FD            __end_of_Timer0_Init 04E9  
         _GenerateRandomNumber 07A1                     __pbssBANK0 0020                     __pmaintext 002B  
                      ?___bmul 0051                     __pintentry 0004          ?_GenerateRandomNumber 0070  
                 ??_UART_Write 0051                      ?_lcdPrint 0053                     __stringtab 0500  
                 intToString@i 006C                   intToString@n 0064                   intToString@t 006A  
                  _Timer0_Init 04DA                 _RS485_RxEnable 04F8                        ___awdiv 0669  
                      ___awmod 06D2             __end_of_UART_Write 04F3                 _RS485_TxEnable 04F3  
                      _colMask 0520                        _colScan 004A                        _lcdSend 07D1  
                      __ptext1 05FB                        __ptext2 04E9                        __ptext3 03B3  
                      __ptext4 072D                        __ptext5 07D1                        __ptext6 057F  
                      __ptext7 0775                        __ptext8 07BA                        __ptext9 06D2  
                      _initLCD 05FB                        _old_btn 03C8               ___awmod@dividend 0053  
                   _keypressed 004C                        _restart 0046                        _rowMask 051C  
                      _rowScan 0049                        _potenza 0775                     ??_lcdPrint 0055  
                      clrloop0 07F9                        _stringa 0020           end_of_initialization 0027  
                 _KeyPadReader 044E         __end_of_RS485_RxEnable 04FD         __end_of_RS485_TxEnable 04F8  
                    _UART_Init 07E6                      _UART_Read 03B3                      _PORTEbits 0009  
               UART_Write@data 0051         ??_GenerateRandomNumber 0051                      _TRISEbits 0089  
              ?_RS485_RxEnable 0070                ?_RS485_TxEnable 0070                 __end_of___bmul 07D1  
                   ?_UART_Init 0070                     ?_UART_Read 0070            start_initialization 0013  
GenerateRandomNumber@randomNum 0051                    __end_of_ISR 03B3                 _stringPosition 0042  
               intToString@str 0066                       ??___bmul 0052                    __pdataBANK0 006D  
                ??_intToString 0067                    __pbssCOMMON 0075                      ___latbits 0002  
                __pcstackBANK0 0051                  __pcstackBANK1 00A0                   ?_Timer0_Init 0070  
                     ?___awdiv 005B                       ?___awmod 0051                    ??_UART_Init 0051  
                  ??_UART_Read 00A0                      __pstrings 0500                       ?_lcdSend 0051  
                     ?_initLCD 0070            __end_of_intToString 05FB                      _countdown 006D  
                     ?_potenza 0055                      _randomNum 0044                      _old_stato 0047  
            interrupt_function 0004                      clear_ram0 07F8                _print_countdown 004E  
                    lcdPrint@n 0058                    __stringbase 050F               ??_RS485_RxEnable 0051  
             ??_RS485_TxEnable 0051                    _intToString 057F             __end_of__stringtab 0510  
                     __ptext10 0669                       __ptext11 07E6                       __ptext12 04DA  
                     __ptext13 04F3                       __ptext14 04F8                       __ptext15 044E  
                     __ptext16 07A1                       __ptext17 0303                       _lcdPrint 072D  
                     _received 0045                       intlevel1 0000                      stringcode 050A  
                     potenza@b 0057                       potenza@e 0055                       potenza@i 0058  
                     potenza@n 005A                    lcdSend@dato 0052                    lcdSend@tipo 0051  
                     stringdir 050A                       stringtab 0500                     _UART_Write 04E9  
    GenerateRandomNumber@count 0052                    lcdPrint@str 0053                  ?_KeyPadReader 0070  
